!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACCESS_PROCESS_OPTIMIZATION	swap/kprobe/swap_kprobes_deps.c	571;"	d	file:
ACCT_TIMEOUT	acct.c	73;"	d	file:
ACTUAL_NR_IRQS	irq/proc.c	411;"	d	file:
AID_SDCARD_R	groups.c	272;"	d	file:
AID_SDCARD_RW	groups.c	269;"	d	file:
ALARM_ID_MAX	time/time_history.c	18;"	d	file:
ALARM_LOG_MAX	time/time_history.c	12;"	d	file:
ALARM_LOG_MAX	time/time_history.c	15;"	d	file:
ALARM_TYPE	time/alarmtimer.c	/^enum ALARM_TYPE {$/;"	g	file:
AND	swap/energy/Makefile	/^AND := &$/;"	m
APP_INFO_FILE	swap/webprobe/webprobe_debugfs.c	/^static const char APP_INFO_FILE[] =		"app_info";$/;"	v	file:
APP_TYPE	swap/parser/msg_parser.h	/^enum APP_TYPE {$/;"	g
ARCH_MIN_MMSTRUCT_ALIGN	fork.c	1784;"	d	file:
ARCH_MIN_TASKALIGN	fork.c	272;"	d	file:
ARCH_SHF_SMALL	module.c	71;"	d	file:
ARM_INSN_MATCH	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	555;"	d
ARM_INSN_REG_CLEAR_MR	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	593;"	d
ARM_INSN_REG_MR	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	587;"	d
ARM_INSN_REG_RD	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	569;"	d
ARM_INSN_REG_RM	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	581;"	d
ARM_INSN_REG_RN	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	563;"	d
ARM_INSN_REG_RS	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	575;"	d
ARM_INSN_REG_SET_MR	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	590;"	d
ARM_INSN_REG_SET_RD	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	572;"	d
ARM_INSN_REG_SET_RM	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	584;"	d
ARM_INSN_REG_SET_RN	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	566;"	d
ARM_INSN_REG_SET_RS	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	578;"	d
ASSIGN_FETCH_FUNC	trace/trace_probe.c	383;"	d	file:
ASSIGN_FETCH_TYPE	trace/trace_probe.c	404;"	d	file:
ASYNC_COOKIE_MAX	async.c	65;"	d	file:
AT_COMMON_EXEC	swap/parser/msg_parser.h	/^	AT_COMMON_EXEC		= 0x03,     \/**< Common application. *\/$/;"	e	enum:APP_TYPE
AT_PID	swap/parser/msg_parser.h	/^	AT_PID			= 0x02,         \/**< App with specified PID. *\/$/;"	e	enum:APP_TYPE
AT_TIZEN_NATIVE_APP	swap/parser/msg_parser.h	/^	AT_TIZEN_NATIVE_APP	= 0x01,     \/**< Tizen native application. *\/$/;"	e	enum:APP_TYPE
AT_TIZEN_WEB_APP	swap/parser/msg_parser.h	/^	AT_TIZEN_WEB_APP	= 0x04      \/**< Tizen web application. *\/$/;"	e	enum:APP_TYPE
AUDITSC_FAILURE	auditsc.c	77;"	d	file:
AUDITSC_INVALID	auditsc.c	75;"	d	file:
AUDITSC_SUCCESS	auditsc.c	76;"	d	file:
AUDIT_AUX_IPCPERM	auditsc.c	93;"	d	file:
AUDIT_AUX_PIDS	auditsc.c	96;"	d	file:
AUDIT_BACKLOG_WAIT_TIME	audit.c	106;"	d	file:
AUDIT_BUFSIZ	audit.c	150;"	d	file:
AUDIT_BUILD_CONTEXT	audit.h	/^	AUDIT_BUILD_CONTEXT,	\/* Create the per-task audit_context,$/;"	e	enum:audit_state
AUDIT_DEBUG	audit.h	31;"	d
AUDIT_DISABLED	audit.c	72;"	d	file:
AUDIT_DISABLED	audit.h	/^	AUDIT_DISABLED,		\/* Do not create per-task audit_context.$/;"	e	enum:audit_state
AUDIT_FS_WATCH	audit_watch.c	66;"	d	file:
AUDIT_INITIALIZED	audit.c	74;"	d	file:
AUDIT_INODE_BUCKETS	audit.h	223;"	d
AUDIT_LOCKED	audit.c	79;"	d	file:
AUDIT_MAXFREE	audit.c	154;"	d	file:
AUDIT_NAMES	audit.h	36;"	d
AUDIT_NAME_FULL	audit.h	232;"	d
AUDIT_OFF	audit.c	77;"	d	file:
AUDIT_ON	audit.c	78;"	d	file:
AUDIT_RECORD_CONTEXT	audit.h	/^	AUDIT_RECORD_CONTEXT	\/* Create the per-task audit_context,$/;"	e	enum:audit_state
AUDIT_UNINITIALIZED	audit.c	73;"	d	file:
BLK_TC_RAHEAD	trace/blktrace.c	179;"	d	file:
BLK_TRACE_DEVICE_ATTR	trace/blktrace.c	1529;"	d	file:
BM_BITS_PER_BLOCK	power/snapshot.c	254;"	d	file:
BM_END_OF_MAP	power/snapshot.c	252;"	d	file:
BPF_DATA	seccomp.c	85;"	d	file:
BP_INSN_SIZE	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	48;"	d
BREAKPOINT_INSTRUCTION	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	49;"	d
BREAKPOINT_INSTRUCTION	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	52;"	d
BREAKPOINT_INSTRUCTION	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	45;"	d
BUFFER_ALLOC	swap/buffer/swap_buffer_module.c	/^	BUFFER_ALLOC = 1,               \/**< 001 - memory allocated. *\/$/;"	e	enum:_swap_buffer_status_mask	file:
BUFFER_FREE	swap/buffer/swap_buffer_module.c	/^	BUFFER_FREE = 0,                \/**< 000 - memory free. *\/$/;"	e	enum:_swap_buffer_status_mask	file:
BUFFER_PAUSE	swap/buffer/swap_buffer_module.c	/^	BUFFER_PAUSE = 2,               \/**< 010 - buffer overflow. *\/$/;"	e	enum:_swap_buffer_status_mask	file:
BUFFER_WORK	swap/buffer/swap_buffer_module.c	/^	BUFFER_WORK = 4                 \/**< @brief 100 - buffer work. *\/$/;"	e	enum:_swap_buffer_status_mask	file:
BUFSZ	sysctl_binary.c	40;"	d	file:
BUF_MAX_DATA_SIZE	trace/ring_buffer.c	417;"	d	file:
BUF_PAGE_HDR_SIZE	trace/ring_buffer.c	166;"	d	file:
BUF_PAGE_SIZE	trace/ring_buffer.c	414;"	d	file:
BUF_THREAD_ID_SIZE	debug/gdbstub.c	405;"	d	file:
BUILD_LOCK_OPS	spinlock.c	46;"	d	file:
BUSY_WORKER_HASH_ORDER	workqueue.c	/^	BUSY_WORKER_HASH_ORDER	= 6,		\/* 64 pointers *\/$/;"	e	enum:__anon24	file:
BYTES_TO_BITS	trace/trace_probe.c	646;"	d	file:
CAP_BSET	kmod.c	57;"	d	file:
CAP_PI	kmod.c	58;"	d	file:
CCVERSION	debug/kdb/Makefile	/^CCVERSION	:= $(shell $(CC) -v 2>&1 | sed -ne '$$p')$/;"	m
CFLAGS_REMOVE_cgroup-debug.o	Makefile	/^CFLAGS_REMOVE_cgroup-debug.o = -pg$/;"	m
CFLAGS_REMOVE_clock.o	sched/Makefile	/^CFLAGS_REMOVE_clock.o = -pg$/;"	m
CFLAGS_REMOVE_core.o	events/Makefile	/^CFLAGS_REMOVE_core.o = -pg$/;"	m
CFLAGS_REMOVE_irq_work.o	Makefile	/^CFLAGS_REMOVE_irq_work.o = -pg$/;"	m
CFLAGS_REMOVE_lockdep.o	Makefile	/^CFLAGS_REMOVE_lockdep.o = -pg$/;"	m
CFLAGS_REMOVE_lockdep_proc.o	Makefile	/^CFLAGS_REMOVE_lockdep_proc.o = -pg$/;"	m
CFLAGS_REMOVE_mutex-debug.o	Makefile	/^CFLAGS_REMOVE_mutex-debug.o = -pg$/;"	m
CFLAGS_REMOVE_rtmutex-debug.o	Makefile	/^CFLAGS_REMOVE_rtmutex-debug.o = -pg$/;"	m
CFLAGS_core.o	sched/Makefile	/^CFLAGS_core.o := $(PROFILING) -fno-omit-frame-pointer$/;"	m
CFLAGS_trace_events_filter.o	trace/Makefile	/^CFLAGS_trace_events_filter.o := -I$(src)$/;"	m
CFLAGS_trace_selftest_dynamic.o	trace/Makefile	/^CFLAGS_trace_selftest_dynamic.o = -pg$/;"	m
CGROUP_FILE_GENERIC_PREFIX	cgroup.c	4018;"	d	file:
CGROUP_FILE_PROCS	cgroup.c	/^	CGROUP_FILE_PROCS,$/;"	e	enum:cgroup_filetype	file:
CGROUP_FILE_TASKS	cgroup.c	/^	CGROUP_FILE_TASKS,$/;"	e	enum:cgroup_filetype	file:
CGROUP_FREEZER_ONLINE	cgroup_freezer.c	/^	CGROUP_FREEZER_ONLINE	= (1 << 0), \/* freezer is fully online *\/$/;"	e	enum:freezer_state_flags	file:
CGROUP_FREEZING	cgroup_freezer.c	/^	CGROUP_FREEZING		= CGROUP_FREEZING_SELF | CGROUP_FREEZING_PARENT,$/;"	e	enum:freezer_state_flags	file:
CGROUP_FREEZING_PARENT	cgroup_freezer.c	/^	CGROUP_FREEZING_PARENT	= (1 << 2), \/* the parent freezer is freezing *\/$/;"	e	enum:freezer_state_flags	file:
CGROUP_FREEZING_SELF	cgroup_freezer.c	/^	CGROUP_FREEZING_SELF	= (1 << 1), \/* this freezer is freezing *\/$/;"	e	enum:freezer_state_flags	file:
CGROUP_FROZEN	cgroup_freezer.c	/^	CGROUP_FROZEN		= (1 << 3), \/* this and its descendants frozen *\/$/;"	e	enum:freezer_state_flags	file:
CGROUP_LOCAL_BUFFER_SIZE	cgroup.c	2304;"	d	file:
CHAINHASH_BITS	lockdep.c	301;"	d	file:
CHAINHASH_SIZE	lockdep.c	302;"	d	file:
CHECK_FETCH_FUNCS	trace/trace_probe.c	103;"	d	file:
CLASSHASH_BITS	lockdep.c	290;"	d	file:
CLASSHASH_SIZE	lockdep.c	291;"	d	file:
CMD_BUFLEN	debug/kdb/kdb_io.c	29;"	d	file:
CMD_BUFLEN	debug/kdb/kdb_main.c	768;"	d	file:
CN_DAEMON_GROUP	swap/driver/us_interaction_msg.h	35;"	d
CN_SWAP_IDX	swap/driver/us_interaction_msg.h	33;"	d
CN_SWAP_VAL	swap/driver/us_interaction_msg.h	34;"	d
COMMA	swap/energy/Makefile	/^COMMA := ,$/;"	m
COMMON_RP_NR	swap/kprobe/swap_kprobes.c	802;"	d	file:
COMMON_URP_NR	swap/uprobe/swap_uprobes.c	442;"	d	file:
COMPAT_SYSCALL_DEFINE1	sys.c	/^COMPAT_SYSCALL_DEFINE1(sysinfo, struct compat_sysinfo __user *, info)$/;"	f
COMPAT_SYSCALL_DEFINE1	sysctl_binary.c	/^COMPAT_SYSCALL_DEFINE1(sysctl, struct compat_sysctl_args __user *, args)$/;"	f
COMPAT_SYSCALL_DEFINE2	compat.c	/^COMPAT_SYSCALL_DEFINE2(getitimer, int, which,$/;"	f
COMPAT_SYSCALL_DEFINE2	compat.c	/^COMPAT_SYSCALL_DEFINE2(sched_rr_get_interval,$/;"	f
COMPAT_SYSCALL_DEFINE2	futex_compat.c	/^COMPAT_SYSCALL_DEFINE2(set_robust_list,$/;"	f
COMPAT_SYSCALL_DEFINE2	signal.c	/^COMPAT_SYSCALL_DEFINE2(rt_sigpending, compat_sigset_t __user *, uset,$/;"	f
COMPAT_SYSCALL_DEFINE2	signal.c	/^COMPAT_SYSCALL_DEFINE2(rt_sigsuspend, compat_sigset_t __user *, unewset, compat_size_t, sigsetsize)$/;"	f
COMPAT_SYSCALL_DEFINE2	signal.c	/^COMPAT_SYSCALL_DEFINE2(sigaltstack,$/;"	f
COMPAT_SYSCALL_DEFINE2	sys.c	/^COMPAT_SYSCALL_DEFINE2(getrusage, int, who, struct compat_rusage __user *, ru)$/;"	f
COMPAT_SYSCALL_DEFINE3	compat.c	/^COMPAT_SYSCALL_DEFINE3(setitimer, int, which,$/;"	f
COMPAT_SYSCALL_DEFINE3	compat.c	/^COMPAT_SYSCALL_DEFINE3(sigprocmask, int, how,$/;"	f
COMPAT_SYSCALL_DEFINE3	futex_compat.c	/^COMPAT_SYSCALL_DEFINE3(get_robust_list, int, pid,$/;"	f
COMPAT_SYSCALL_DEFINE3	signal.c	/^COMPAT_SYSCALL_DEFINE3(rt_sigqueueinfo,$/;"	f
COMPAT_SYSCALL_DEFINE3	signal.c	/^COMPAT_SYSCALL_DEFINE3(sigaction, int, sig,$/;"	f
COMPAT_SYSCALL_DEFINE4	compat.c	/^COMPAT_SYSCALL_DEFINE4(rt_sigtimedwait, compat_sigset_t __user *, uthese,$/;"	f
COMPAT_SYSCALL_DEFINE4	compat.c	/^COMPAT_SYSCALL_DEFINE4(wait4,$/;"	f
COMPAT_SYSCALL_DEFINE4	signal.c	/^COMPAT_SYSCALL_DEFINE4(rt_sigaction, int, sig,$/;"	f
COMPAT_SYSCALL_DEFINE4	signal.c	/^COMPAT_SYSCALL_DEFINE4(rt_sigprocmask, int, how, compat_sigset_t __user *, nset,$/;"	f
COMPAT_SYSCALL_DEFINE4	signal.c	/^COMPAT_SYSCALL_DEFINE4(rt_tgsigqueueinfo,$/;"	f
COMPAT_SYSCALL_DEFINE5	compat.c	/^COMPAT_SYSCALL_DEFINE5(waitid,$/;"	f
COMPAT_SYSCALL_DEFINE6	futex_compat.c	/^COMPAT_SYSCALL_DEFINE6(futex, u32 __user *, uaddr, int, op, u32, val,$/;"	f
CONFIG_PANIC_TIMEOUT	panic.c	39;"	d	file:
CPUACCT_STAT_NSTATS	sched/cpuacct.c	/^	CPUACCT_STAT_NSTATS,$/;"	e	enum:cpuacct_stat_index	file:
CPUACCT_STAT_SYSTEM	sched/cpuacct.c	/^	CPUACCT_STAT_SYSTEM,	\/* ... kernel mode *\/$/;"	e	enum:cpuacct_stat_index	file:
CPUACCT_STAT_USER	sched/cpuacct.c	/^	CPUACCT_STAT_USER,	\/* ... user mode *\/$/;"	e	enum:cpuacct_stat_index	file:
CPUPRI_IDLE	sched/cpupri.h	9;"	d
CPUPRI_INVALID	sched/cpupri.h	8;"	d
CPUPRI_NORMAL	sched/cpupri.h	10;"	d
CPUPRI_NR_PRIORITIES	sched/cpupri.h	6;"	d
CPUSET_NODELIST_LEN	cpuset.c	2551;"	d	file:
CPU_DONT_CARE	taskstats.c	/^	CPU_DONT_CARE$/;"	e	enum:actions	file:
CPU_LOAD_IDX_MAX	sched/sched.h	406;"	d
CQ_MASK	lockdep.c	884;"	d	file:
CREATE_COOLDOWN	workqueue.c	/^	CREATE_COOLDOWN		= HZ,		\/* time to breath after fail *\/$/;"	e	enum:__anon24	file:
CREATE_FEATURE	swap/ks_features/features_data.c	289;"	d	file:
CREATE_RP	swap/ks_features/ks_features.c	64;"	d	file:
CREATE_TRACE_POINTS	fork.c	84;"	d	file:
CREATE_TRACE_POINTS	lockdep.c	53;"	d	file:
CREATE_TRACE_POINTS	module.c	67;"	d	file:
CREATE_TRACE_POINTS	printk.c	55;"	d	file:
CREATE_TRACE_POINTS	rcupdate.c	51;"	d	file:
CREATE_TRACE_POINTS	sched/core.c	93;"	d	file:
CREATE_TRACE_POINTS	signal.c	36;"	d	file:
CREATE_TRACE_POINTS	smp.c	15;"	d	file:
CREATE_TRACE_POINTS	softirq.c	29;"	d	file:
CREATE_TRACE_POINTS	timer.c	52;"	d	file:
CREATE_TRACE_POINTS	trace/gpu-traces.c	19;"	d	file:
CREATE_TRACE_POINTS	trace/power-traces.c	13;"	d	file:
CREATE_TRACE_POINTS	trace/rpm-traces.c	14;"	d	file:
CREATE_TRACE_POINTS	trace/trace_events_filter.c	2121;"	d	file:
CREATE_TRACE_POINTS	workqueue.c	340;"	d	file:
CSD_FLAG_LOCK	smp.c	/^	CSD_FLAG_LOCK		= 0x01,$/;"	e	enum:__anon9	file:
CSS_DEACT_BIAS	cgroup.c	67;"	d	file:
CSS_ID_MAX	cgroup.c	137;"	d	file:
CSS_SET_HASH_BITS	cgroup.c	363;"	d	file:
CS_CPU_EXCLUSIVE	cpuset.c	/^	CS_CPU_EXCLUSIVE,$/;"	e	enum:__anon11	file:
CS_MEMORY_MIGRATE	cpuset.c	/^	CS_MEMORY_MIGRATE,$/;"	e	enum:__anon11	file:
CS_MEM_EXCLUSIVE	cpuset.c	/^	CS_MEM_EXCLUSIVE,$/;"	e	enum:__anon11	file:
CS_MEM_HARDWALL	cpuset.c	/^	CS_MEM_HARDWALL,$/;"	e	enum:__anon11	file:
CS_ONLINE	cpuset.c	/^	CS_ONLINE,$/;"	e	enum:__anon11	file:
CS_SCHED_LOAD_BALANCE	cpuset.c	/^	CS_SCHED_LOAD_BALANCE,$/;"	e	enum:__anon11	file:
CS_SPREAD_PAGE	cpuset.c	/^	CS_SPREAD_PAGE,$/;"	e	enum:__anon11	file:
CS_SPREAD_SLAB	cpuset.c	/^	CS_SPREAD_SLAB,$/;"	e	enum:__anon11	file:
CTL_DIR	sysctl_binary.c	33;"	d	file:
CTL_DNADR	sysctl_binary.c	38;"	d	file:
CTL_INT	sysctl_binary.c	35;"	d	file:
CTL_STR	sysctl_binary.c	34;"	d	file:
CTL_ULONG	sysctl_binary.c	36;"	d	file:
CTL_UUID	sysctl_binary.c	37;"	d	file:
CTRL_N	debug/kdb/kdb_main.c	1057;"	d	file:
CTRL_P	debug/kdb/kdb_main.c	1056;"	d	file:
C_A_D	sys.c	/^int C_A_D = 1;$/;"	v
DAEMON	debug/kdb/kdb_support.c	559;"	d	file:
DATAOF_TRACE_ENTRY	trace/trace_uprobe.c	40;"	d	file:
DATA_CNT	trace/trace_events_filter.c	2196;"	d	file:
DATA_REC	trace/trace_events_filter.c	2124;"	d	file:
DATA_REC	trace/trace_events_filter.c	2191;"	d	file:
DBG_PASS_EVENT	debug/debug_core.h	59;"	d
DBG_SWITCH_CPU_EVENT	debug/debug_core.h	61;"	d
DBPRINTF	swap/kprobe/swap_kdebug.h	39;"	d
DBPRINTF	swap/kprobe/swap_kdebug.h	48;"	d
DCPU_IS_SLAVE	debug/debug_core.h	34;"	d
DCPU_NEXT_MASTER	debug/debug_core.h	33;"	d
DCPU_SSTEP	debug/debug_core.h	35;"	d
DCPU_WANT_MASTER	debug/debug_core.h	32;"	d
DEBUG	power/process.c	9;"	d	file:
DEBUG	trace/trace_mmiotrace.c	7;"	d	file:
DEBUG_ACCESS	power/userwakelock.c	/^	DEBUG_ACCESS	= BIT(3),$/;"	e	enum:__anon32	file:
DEBUG_ERROR	power/userwakelock.c	/^	DEBUG_ERROR	= BIT(1),$/;"	e	enum:__anon32	file:
DEBUG_EXIT_SUSPEND	power/wakelock.c	/^	DEBUG_EXIT_SUSPEND = 1U << 0,$/;"	e	enum:__anon28	file:
DEBUG_EXPIRE	power/wakelock.c	/^	DEBUG_EXPIRE = 1U << 3,$/;"	e	enum:__anon28	file:
DEBUG_FAILURE	power/userwakelock.c	/^	DEBUG_FAILURE	= BIT(0),$/;"	e	enum:__anon32	file:
DEBUG_LOOKUP	power/userwakelock.c	/^	DEBUG_LOOKUP	= BIT(4),$/;"	e	enum:__anon32	file:
DEBUG_NEW	power/userwakelock.c	/^	DEBUG_NEW	= BIT(2),$/;"	e	enum:__anon32	file:
DEBUG_PRINT_HASH_TABLE	swap/uprobe/swap_uprobes.c	60;"	d	file:
DEBUG_SHIFT	trace/ring_buffer.c	669;"	d	file:
DEBUG_SUSPEND	power/earlysuspend.c	/^	DEBUG_SUSPEND = 1U << 2,$/;"	e	enum:__anon29	file:
DEBUG_SUSPEND	power/wakelock.c	/^	DEBUG_SUSPEND = 1U << 2,$/;"	e	enum:__anon28	file:
DEBUG_USER_STATE	power/earlysuspend.c	/^	DEBUG_USER_STATE = 1U << 0,$/;"	e	enum:__anon29	file:
DEBUG_VERBOSE	power/earlysuspend.c	/^	DEBUG_VERBOSE = 1U << 3,$/;"	e	enum:__anon29	file:
DEBUG_WAKEUP	power/wakelock.c	/^	DEBUG_WAKEUP = 1U << 1,$/;"	e	enum:__anon28	file:
DEBUG_WAKE_LOCK	power/wakelock.c	/^	DEBUG_WAKE_LOCK = 1U << 4,$/;"	e	enum:__anon28	file:
DECLARE_HANDLER	swap/ks_features/file_ops.c	50;"	d	file:
DECLARE_MOD_CB_DEP	swap/kprobe/swap_kprobes_deps.h	67;"	d
DECLARE_MOD_DEP_WRAPPER	swap/kprobe/swap_kprobes_deps.h	72;"	d
DECLARE_MOD_FUNC_DEP	swap/kprobe/swap_kprobes_deps.h	66;"	d
DECLARE_NODE_PTR_FOR_HLIST	swap/kprobe/swap_kprobes_deps.h	42;"	d
DECLARE_SAFE_FUNC	swap/nsp/nsp.c	433;"	d	file:
DECLARE_SAFE_FUNC0	swap/nsp/nsp.c	448;"	d	file:
DECLARE_SAFE_FUNC1	swap/nsp/nsp.c	449;"	d	file:
DECLARE_SAFE_FUNC2	swap/nsp/nsp.c	450;"	d	file:
DECLARE_SAFE_FUNC3	swap/nsp/nsp.c	451;"	d	file:
DECLARE_TASKLET	backtracetest.c	/^static DECLARE_TASKLET(backtrace_tasklet, &backtrace_test_irq_callback, 0);$/;"	v	file:
DEFAULT_CONSOLE_LOGLEVEL	printk.c	67;"	d	file:
DEFAULT_CPU_TIME_MAX_PERCENT	events/core.c	171;"	d	file:
DEFAULT_FETCH_TYPE	trace/trace_probe.c	380;"	d	file:
DEFAULT_FETCH_TYPE_STR	trace/trace_probe.c	381;"	d	file:
DEFAULT_MAX_SAMPLE_RATE	events/core.c	169;"	d	file:
DEFAULT_MESSAGE_LOGLEVEL	printk.c	63;"	d	file:
DEFAULT_SAMPLE_PERIOD_NS	events/core.c	170;"	d	file:
DEFAULT_SLOTS_COUNT	swap/preload/preload_control.c	15;"	d	file:
DEFAULT_SLOTS_COUNT	swap/preload/preload_control.c	297;"	d	file:
DEFAULT_SLOTS_STEP	swap/preload/preload_control.c	16;"	d	file:
DEFAULT_SLOTS_STEP	swap/preload/preload_control.c	296;"	d	file:
DEFAULT_SYS_FILTER_MESSAGE	trace/trace_events_filter.c	30;"	d	file:
DEFINE_BASIC_FETCH_FUNCS	trace/trace_probe.c	/^DEFINE_BASIC_FETCH_FUNCS(symbol)$/;"	f
DEFINE_BASIC_FETCH_FUNCS	trace/trace_probe.c	97;"	d	file:
DEFINE_BASIC_PRINT_TYPE_FUNC	trace/trace_probe.c	43;"	d	file:
DEFINE_COMPARISON_PRED	trace/trace_events_filter.c	139;"	d	file:
DEFINE_EQUALITY_PRED	trace/trace_events_filter.c	166;"	d	file:
DEFINE_FETCH_bitfield	trace/trace_probe.c	331;"	d	file:
DEFINE_FETCH_deref	trace/trace_probe.c	290;"	d	file:
DEFINE_FETCH_memory	trace/trace_probe.c	148;"	d	file:
DEFINE_FETCH_reg	trace/trace_probe.c	113;"	d	file:
DEFINE_FETCH_retval	trace/trace_probe.c	137;"	d	file:
DEFINE_FETCH_stack	trace/trace_probe.c	125;"	d	file:
DEFINE_FETCH_symbol	trace/trace_probe.c	270;"	d	file:
DEFINE_FIELD	trace/trace_probe.h	53;"	d
DEFINE_FIELD	trace/trace_probe.h	54;"	d
DEFINE_MAP	swap/ks_features/ks_map.h	25;"	d
DEFINE_OUTPUT_COPY	events/internal.h	84;"	d
DEFINE_RATIONAL	swap/energy/rational_debugfs.h	45;"	d
DEFINE_RCU_RANDOM	rcutorture.c	322;"	d	file:
DEFINE_TM_STAT	swap/energy/tm_stat.h	46;"	d
DEFINITION_LCD_ARRAY	swap/energy/Makefile	/^DEFINITION_LCD_ARRAY := DEFINITION_LCD_ARRAY=\\$/;"	m
DEFINITION_LCD_FUNC	swap/energy/Makefile	/^DEFINITION_LCD_FUNC := DEFINITION_LCD_FUNC=\\$/;"	m
DEGRADE_SHIFT	sched/core.c	2537;"	d	file:
DEQUEUE_SLEEP	sched/sched.h	976;"	d
DEREGISTER	taskstats.c	/^	DEREGISTER,$/;"	e	enum:actions	file:
DID_EXECUTE	swap/webprobe/webprobe_prof.h	/^	DID_EXECUTE = 3$/;"	e	enum:web_prof_addr_t
DID_EXECUTE_FILE	swap/webprobe/webprobe_debugfs.c	/^static const char DID_EXECUTE_FILE[] =		"did_execute";$/;"	v	file:
DIRECT_ADDR	swap/fbiprobe/fbiprobe.c	59;"	d	file:
DISABLE_BRANCH_PROFILING	lockdep.c	28;"	d	file:
DISABLE_EVENT_STR	trace/trace_events.c	2013;"	d	file:
DURATION_FILL_END	trace/trace_functions_graph.c	/^	DURATION_FILL_END   = -3,$/;"	e	enum:__anon72	file:
DURATION_FILL_FULL	trace/trace_functions_graph.c	/^	DURATION_FILL_FULL  = -1,$/;"	e	enum:__anon72	file:
DURATION_FILL_START	trace/trace_functions_graph.c	/^	DURATION_FILL_START = -2,$/;"	e	enum:__anon72	file:
DYNTICK_TASK_EXIT_IDLE	rcu.h	55;"	d
DYNTICK_TASK_FLAG	rcu.h	53;"	d
DYNTICK_TASK_MASK	rcu.h	54;"	d
DYNTICK_TASK_NEST_MASK	rcu.h	52;"	d
DYNTICK_TASK_NEST_VALUE	rcu.h	51;"	d
DYNTICK_TASK_NEST_WIDTH	rcu.h	50;"	d
DYN_FTRACE_TEST_NAME	trace/trace.h	661;"	d
DYN_FTRACE_TEST_NAME	trace/trace_selftest_dynamic.c	/^int DYN_FTRACE_TEST_NAME(void)$/;"	f
DYN_FTRACE_TEST_NAME2	trace/trace.h	663;"	d
DYN_FTRACE_TEST_NAME2	trace/trace_selftest_dynamic.c	/^int DYN_FTRACE_TEST_NAME2(void)$/;"	f
EARLY_SUSPEND_CONSOLE	power/consoleearlysuspend.c	23;"	d	file:
EMPTY_HASH	trace/ftrace.c	1165;"	d	file:
ENABLED_FILE	swap/webprobe/webprobe_debugfs.c	/^static const char ENABLED_FILE[] =		"enabled";$/;"	v	file:
ENABLE_EVENT_STR	trace/trace_events.c	2012;"	d	file:
ENANOSLEEP_NOTSUP	posix-timers.c	82;"	d	file:
ENANOSLEEP_NOTSUP	posix-timers.c	84;"	d	file:
ENQUEUE_HEAD	sched/sched.h	969;"	d
ENQUEUE_WAKEUP	sched/sched.h	968;"	d
ENQUEUE_WAKING	sched/sched.h	971;"	d
ENQUEUE_WAKING	sched/sched.h	973;"	d
ENTRIES_PER_PAGE	trace/ftrace.c	1185;"	d	file:
ENTRY_SIZE	trace/ftrace.c	1184;"	d	file:
ENTRY_SIZE	trace/trace_event_perf.c	269;"	d	file:
ENTRY_SIZE	trace/trace_event_perf.c	287;"	d	file:
EREG	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	60;"	d
ERROR	swap/preload/preload_pd.h	/^	ERROR$/;"	e	enum:preload_state_t
ESCAPE_DELAY	debug/kdb/kdb_io.c	54;"	d	file:
ESCAPE_UDELAY	debug/kdb/kdb_io.c	53;"	d	file:
EVENT_ALL	events/core.c	/^	EVENT_ALL = EVENT_FLEXIBLE | EVENT_PINNED,$/;"	e	enum:event_type_t	file:
EVENT_BUF_SIZE	trace/trace_events.c	546;"	d	file:
EVENT_DROPPED	trace/ring_buffer_benchmark.c	/^	EVENT_DROPPED,$/;"	e	enum:event_status	file:
EVENT_FLEXIBLE	events/core.c	/^	EVENT_FLEXIBLE = 0x1,$/;"	e	enum:event_type_t	file:
EVENT_FOUND	trace/ring_buffer_benchmark.c	/^	EVENT_FOUND,$/;"	e	enum:event_status	file:
EVENT_HASHSIZE	trace/trace_output.c	15;"	d	file:
EVENT_PINNED	events/core.c	/^	EVENT_PINNED = 0x2,$/;"	e	enum:event_type_t	file:
EXPSIZE	acct.c	349;"	d	file:
EXPSIZE2	acct.c	390;"	d	file:
EXTERNAL_CALL	swap/preload/preload_control.h	/^	EXTERNAL_CALL,$/;"	e	enum:preload_call_type
E_SB_IS_STOPPED	swap/buffer/swap_buffer_errors.h	/^	E_SB_IS_STOPPED = 4,$/;"	e	enum:_swap_buffer_errors
E_SB_NOT_ALLOC	swap/buffer/swap_buffer_errors.h	/^	E_SB_NOT_ALLOC = 12,$/;"	e	enum:_swap_buffer_errors
E_SB_NO_CALLBACK	swap/buffer/swap_buffer_errors.h	/^	E_SB_NO_CALLBACK = 7,$/;"	e	enum:_swap_buffer_errors
E_SB_NO_MEM_BUFFER_STRUCT	swap/buffer/swap_buffer_errors.h	/^	E_SB_NO_MEM_BUFFER_STRUCT = 9,$/;"	e	enum:_swap_buffer_errors
E_SB_NO_MEM_DATA_BUFFER	swap/buffer/swap_buffer_errors.h	/^	E_SB_NO_MEM_DATA_BUFFER = 10,$/;"	e	enum:_swap_buffer_errors
E_SB_NO_MEM_QUEUE_BUSY	swap/buffer/swap_buffer_errors.h	/^	E_SB_NO_MEM_QUEUE_BUSY = 8,$/;"	e	enum:_swap_buffer_errors
E_SB_NO_READABLE_BUFFERS	swap/buffer/swap_buffer_errors.h	/^	E_SB_NO_READABLE_BUFFERS = 6,$/;"	e	enum:_swap_buffer_errors
E_SB_NO_SUBBUFFER_IN_BUSY	swap/buffer/swap_buffer_errors.h	/^	E_SB_NO_SUBBUFFER_IN_BUSY = 11,$/;"	e	enum:_swap_buffer_errors
E_SB_NO_WRITABLE_BUFFERS	swap/buffer/swap_buffer_errors.h	/^	E_SB_NO_WRITABLE_BUFFERS = 2,$/;"	e	enum:_swap_buffer_errors
E_SB_OVERLAP	swap/buffer/swap_buffer_errors.h	/^	E_SB_OVERLAP = 5,$/;"	e	enum:_swap_buffer_errors
E_SB_SUCCESS	swap/buffer/swap_buffer_errors.h	/^	E_SB_SUCCESS = 0,$/;"	e	enum:_swap_buffer_errors
E_SB_UNRELEASED_BUFFERS	swap/buffer/swap_buffer_errors.h	/^	E_SB_UNRELEASED_BUFFERS = 1,$/;"	e	enum:_swap_buffer_errors
E_SB_WRONG_DATA_SIZE	swap/buffer/swap_buffer_errors.h	/^	E_SB_WRONG_DATA_SIZE = 3,$/;"	e	enum:_swap_buffer_errors
E_SB_WRONG_THRESHOLD	swap/buffer/swap_buffer_errors.h	/^	E_SB_WRONG_THRESHOLD = 13$/;"	e	enum:_swap_buffer_errors
E_SD_ALLOC_CHRDEV_FAIL	swap/driver/swap_driver_errors.h	/^	E_SD_ALLOC_CHRDEV_FAIL = 1,$/;"	e	enum:_swap_driver_errors
E_SD_BUFFER_ERROR	swap/driver/swap_driver_errors.h	/^	E_SD_BUFFER_ERROR = 10,$/;"	e	enum:_swap_driver_errors
E_SD_CDEV_ADD_FAIL	swap/driver/swap_driver_errors.h	/^	E_SD_CDEV_ADD_FAIL = 3,$/;"	e	enum:_swap_driver_errors
E_SD_CDEV_ALLOC_FAIL	swap/driver/swap_driver_errors.h	/^	E_SD_CDEV_ALLOC_FAIL = 2,$/;"	e	enum:_swap_driver_errors
E_SD_CLASS_CREATE_FAIL	swap/driver/swap_driver_errors.h	/^	E_SD_CLASS_CREATE_FAIL = 4,$/;"	e	enum:_swap_driver_errors
E_SD_DEVICE_CREATE_FAIL	swap/driver/swap_driver_errors.h	/^	E_SD_DEVICE_CREATE_FAIL = 5,$/;"	e	enum:_swap_driver_errors
E_SD_NL_INIT_ERR	swap/driver/swap_driver_errors.h	/^	E_SD_NL_INIT_ERR = 15,$/;"	e	enum:_swap_driver_errors
E_SD_NL_MSG_ERR	swap/driver/swap_driver_errors.h	/^	E_SD_NL_MSG_ERR = 16,$/;"	e	enum:_swap_driver_errors
E_SD_NO_BUSY_SUBBUFFER	swap/driver/swap_driver_errors.h	/^	E_SD_NO_BUSY_SUBBUFFER = 8,$/;"	e	enum:_swap_driver_errors
E_SD_NO_DAEMON_PID	swap/driver/swap_driver_errors.h	/^	E_SD_NO_DAEMON_PID = 17$/;"	e	enum:_swap_driver_errors
E_SD_NO_DATA_TO_READ	swap/driver/swap_driver_errors.h	/^	E_SD_NO_DATA_TO_READ = 7,$/;"	e	enum:_swap_driver_errors
E_SD_NO_MEMORY	swap/driver/swap_driver_errors.h	/^	E_SD_NO_MEMORY = 13,$/;"	e	enum:_swap_driver_errors
E_SD_NO_SPLICE_FUNCS	swap/driver/swap_driver_errors.h	/^	E_SD_NO_SPLICE_FUNCS = 6,$/;"	e	enum:_swap_driver_errors
E_SD_SUCCESS	swap/driver/swap_driver_errors.h	/^	E_SD_SUCCESS = 0,$/;"	e	enum:_swap_driver_errors
E_SD_UNINIT_ERROR	swap/driver/swap_driver_errors.h	/^	E_SD_UNINIT_ERROR = 14,$/;"	e	enum:_swap_driver_errors
E_SD_WRITE_ERROR	swap/driver/swap_driver_errors.h	/^	E_SD_WRITE_ERROR = 11,$/;"	e	enum:_swap_driver_errors
E_SD_WRONG_ARGS	swap/driver/swap_driver_errors.h	/^	E_SD_WRONG_ARGS = 12,$/;"	e	enum:_swap_driver_errors
E_SD_WRONG_SUBBUFFER_PTR	swap/driver/swap_driver_errors.h	/^	E_SD_WRONG_SUBBUFFER_PTR = 9,$/;"	e	enum:_swap_driver_errors
E_SS_SUCCESS	swap/sampler/swap_sampler_errors.h	/^	E_SS_SUCCESS = 0,           \/**< Success. *\/$/;"	e	enum:_swap_sampler_errors
E_SS_WRONG_QUANTUM	swap/sampler/swap_sampler_errors.h	/^	E_SS_WRONG_QUANTUM = 1      \/**< Wrong timer quantum set. *\/$/;"	e	enum:_swap_sampler_errors
E_SW_SUCCESS	swap/writer/swap_writer_errors.h	/^	E_SW_SUCCESS = 0		\/**< Success. *\/$/;"	e	enum:_swap_writer_errors
FAILED	swap/preload/preload_pd.h	/^	FAILED,$/;"	e	enum:preload_state_t
FBI_DEBUG_LEVEL	swap/fbiprobe/fbi_probe_module.h	56;"	d
FB_STATE_DRAWING_OK	power/fbearlysuspend.c	/^	FB_STATE_DRAWING_OK,$/;"	e	enum:__anon34	file:
FB_STATE_REQUEST_STOP_DRAWING	power/fbearlysuspend.c	/^	FB_STATE_REQUEST_STOP_DRAWING,$/;"	e	enum:__anon34	file:
FB_STATE_STOPPED_DRAWING	power/fbearlysuspend.c	/^	FB_STATE_STOPPED_DRAWING,$/;"	e	enum:__anon34	file:
FETCH_FUNC_NAME	trace/trace_probe.c	/^static __kprobes void FETCH_FUNC_NAME(memory, string)(struct pt_regs *regs,$/;"	f	file:
FETCH_FUNC_NAME	trace/trace_probe.c	/^static __kprobes void FETCH_FUNC_NAME(memory, string_size)(struct pt_regs *regs,$/;"	f	file:
FETCH_FUNC_NAME	trace/trace_probe.c	92;"	d	file:
FETCH_MTD_END	trace/trace_probe.h	/^	FETCH_MTD_END,$/;"	e	enum:__anon87
FETCH_MTD_bitfield	trace/trace_probe.h	/^	FETCH_MTD_bitfield,$/;"	e	enum:__anon87
FETCH_MTD_deref	trace/trace_probe.h	/^	FETCH_MTD_deref,$/;"	e	enum:__anon87
FETCH_MTD_memory	trace/trace_probe.h	/^	FETCH_MTD_memory,$/;"	e	enum:__anon87
FETCH_MTD_reg	trace/trace_probe.h	/^	FETCH_MTD_reg = 0,$/;"	e	enum:__anon87
FETCH_MTD_retval	trace/trace_probe.h	/^	FETCH_MTD_retval,$/;"	e	enum:__anon87
FETCH_MTD_stack	trace/trace_probe.h	/^	FETCH_MTD_stack,$/;"	e	enum:__anon87
FETCH_MTD_symbol	trace/trace_probe.h	/^	FETCH_MTD_symbol,$/;"	e	enum:__anon87
FETCH_TYPE_STRING	trace/trace_probe.c	407;"	d	file:
FETCH_TYPE_STRSIZE	trace/trace_probe.c	408;"	d	file:
FID_DESC	swap/ks_features/ks_features.h	/^	FID_DESC = 6,			\/**< Description probes *\/$/;"	e	enum:feature_id
FID_FILE	swap/ks_features/ks_features.h	/^	FID_FILE = 1,			\/**< File probes *\/$/;"	e	enum:feature_id
FID_IPC	swap/ks_features/ks_features.h	/^	FID_IPC = 2,			\/**< Hz probes *\/$/;"	e	enum:feature_id
FID_NET	swap/ks_features/ks_features.h	/^	FID_NET = 5,			\/**< Network probes *\/$/;"	e	enum:feature_id
FID_PROCESS	swap/ks_features/ks_features.h	/^	FID_PROCESS = 3,		\/**< Process probes *\/$/;"	e	enum:feature_id
FID_SIGNAL	swap/ks_features/ks_features.h	/^	FID_SIGNAL = 4,			\/**< Signal probes *\/$/;"	e	enum:feature_id
FID_SWITCH	swap/ks_features/ks_features.h	/^	FID_SWITCH = 7,			\/**< Switch context probes *\/$/;"	e	enum:feature_id
FID_SYSFILE_ACTIVITY	swap/ks_features/ks_features.h	/^	FID_SYSFILE_ACTIVITY = 8	\/**< System file activity *\/$/;"	e	enum:feature_id
FIELD_STRING_FUNC	trace/trace_probe.h	51;"	d
FIELD_STRING_IP	trace/trace_probe.h	49;"	d
FIELD_STRING_RETIP	trace/trace_probe.h	50;"	d
FILE_CPULIST	cpuset.c	/^	FILE_CPULIST,$/;"	e	enum:__anon12	file:
FILE_CPU_EXCLUSIVE	cpuset.c	/^	FILE_CPU_EXCLUSIVE,$/;"	e	enum:__anon12	file:
FILE_MEMLIST	cpuset.c	/^	FILE_MEMLIST,$/;"	e	enum:__anon12	file:
FILE_MEMORY_MIGRATE	cpuset.c	/^	FILE_MEMORY_MIGRATE,$/;"	e	enum:__anon12	file:
FILE_MEMORY_PRESSURE	cpuset.c	/^	FILE_MEMORY_PRESSURE,$/;"	e	enum:__anon12	file:
FILE_MEMORY_PRESSURE_ENABLED	cpuset.c	/^	FILE_MEMORY_PRESSURE_ENABLED,$/;"	e	enum:__anon12	file:
FILE_MEM_EXCLUSIVE	cpuset.c	/^	FILE_MEM_EXCLUSIVE,$/;"	e	enum:__anon12	file:
FILE_MEM_HARDWALL	cpuset.c	/^	FILE_MEM_HARDWALL,$/;"	e	enum:__anon12	file:
FILE_OPS_CLOSE_LIST	swap/ks_features/file_ops.c	71;"	d	file:
FILE_OPS_LIST	swap/ks_features/file_ops.c	/^	FILE_OPS_LIST$/;"	e	enum:__anon50	file:
FILE_OPS_LIST	swap/ks_features/file_ops.c	91;"	d	file:
FILE_OPS_LOCK_LIST	swap/ks_features/file_ops.c	86;"	d	file:
FILE_OPS_OPEN_LIST	swap/ks_features/file_ops.c	66;"	d	file:
FILE_OPS_READ_LIST	swap/ks_features/file_ops.c	74;"	d	file:
FILE_OPS_WRITE_LIST	swap/ks_features/file_ops.c	80;"	d	file:
FILE_SCHED_LOAD_BALANCE	cpuset.c	/^	FILE_SCHED_LOAD_BALANCE,$/;"	e	enum:__anon12	file:
FILE_SCHED_RELAX_DOMAIN_LEVEL	cpuset.c	/^	FILE_SCHED_RELAX_DOMAIN_LEVEL,$/;"	e	enum:__anon12	file:
FILE_SPREAD_PAGE	cpuset.c	/^	FILE_SPREAD_PAGE,$/;"	e	enum:__anon12	file:
FILE_SPREAD_SLAB	cpuset.c	/^	FILE_SPREAD_SLAB,$/;"	e	enum:__anon12	file:
FILTER	trace/trace_events_filter.c	2141;"	d	file:
FILTER	trace/trace_events_filter.c	2146;"	d	file:
FILTER	trace/trace_events_filter.c	2147;"	d	file:
FILTER	trace/trace_events_filter.c	2152;"	d	file:
FILTER	trace/trace_events_filter.c	2153;"	d	file:
FILTER	trace/trace_events_filter.c	2159;"	d	file:
FILTER	trace/trace_events_filter.c	2160;"	d	file:
FILTER	trace/trace_events_filter.c	2165;"	d	file:
FILTER	trace/trace_events_filter.c	2166;"	d	file:
FILTER	trace/trace_events_filter.c	2171;"	d	file:
FILTER	trace/trace_events_filter.c	2172;"	d	file:
FILTER	trace/trace_events_filter.c	2177;"	d	file:
FILTER	trace/trace_events_filter.c	2178;"	d	file:
FILTER	trace/trace_events_filter.c	2183;"	d	file:
FILTER	trace/trace_events_filter.c	2184;"	d	file:
FILTER	trace/trace_events_filter.c	2192;"	d	file:
FILTER_PRED_FOLD	trace/trace.h	951;"	d
FILTER_PRED_INVALID	trace/trace.h	949;"	d
FILTER_PRED_IS_RIGHT	trace/trace.h	950;"	d
FILT_ERR_BAD_SUBSYS_FILTER	trace/trace_events_filter.c	/^	FILT_ERR_BAD_SUBSYS_FILTER,$/;"	e	enum:__anon89	file:
FILT_ERR_FIELD_NOT_FOUND	trace/trace_events_filter.c	/^	FILT_ERR_FIELD_NOT_FOUND,$/;"	e	enum:__anon89	file:
FILT_ERR_ILLEGAL_FIELD_OP	trace/trace_events_filter.c	/^	FILT_ERR_ILLEGAL_FIELD_OP,$/;"	e	enum:__anon89	file:
FILT_ERR_ILLEGAL_INTVAL	trace/trace_events_filter.c	/^	FILT_ERR_ILLEGAL_INTVAL,$/;"	e	enum:__anon89	file:
FILT_ERR_INVALID_FILTER	trace/trace_events_filter.c	/^	FILT_ERR_INVALID_FILTER,$/;"	e	enum:__anon89	file:
FILT_ERR_INVALID_OP	trace/trace_events_filter.c	/^	FILT_ERR_INVALID_OP,$/;"	e	enum:__anon89	file:
FILT_ERR_IP_FIELD_ONLY	trace/trace_events_filter.c	/^	FILT_ERR_IP_FIELD_ONLY,$/;"	e	enum:__anon89	file:
FILT_ERR_MISSING_FIELD	trace/trace_events_filter.c	/^	FILT_ERR_MISSING_FIELD,$/;"	e	enum:__anon89	file:
FILT_ERR_NONE	trace/trace_events_filter.c	/^	FILT_ERR_NONE,$/;"	e	enum:__anon89	file:
FILT_ERR_OPERAND_TOO_LONG	trace/trace_events_filter.c	/^	FILT_ERR_OPERAND_TOO_LONG,$/;"	e	enum:__anon89	file:
FILT_ERR_TOO_MANY_OPERANDS	trace/trace_events_filter.c	/^	FILT_ERR_TOO_MANY_OPERANDS,$/;"	e	enum:__anon89	file:
FILT_ERR_TOO_MANY_PREDS	trace/trace_events_filter.c	/^	FILT_ERR_TOO_MANY_PREDS,$/;"	e	enum:__anon89	file:
FILT_ERR_UNBALANCED_PAREN	trace/trace_events_filter.c	/^	FILT_ERR_UNBALANCED_PAREN,$/;"	e	enum:__anon89	file:
FI_GENIRAL	swap/ks_features/ksf_msg.c	/^	FI_GENIRAL = 0,$/;"	e	enum:file_info	file:
FI_LOCK	swap/ks_features/ksf_msg.c	/^	FI_LOCK = 2$/;"	e	enum:file_info	file:
FI_OPEN	swap/ks_features/ksf_msg.c	/^	FI_OPEN = 1,$/;"	e	enum:file_info	file:
FLAGS_CLOCKRT	futex.c	82;"	d	file:
FLAGS_HAS_TIMEOUT	futex.c	83;"	d	file:
FLAGS_SHARED	futex.c	81;"	d	file:
FL_GLOBAL_CONTROL_MASK	trace/ftrace.c	65;"	d	file:
FM_COEF	cpuset.c	1323;"	d	file:
FM_MAXCNT	cpuset.c	1325;"	d	file:
FM_MAXTICKS	cpuset.c	1324;"	d	file:
FM_SCALE	cpuset.c	1326;"	d	file:
FNV32_OFFSET	sysctl_binary.c	1377;"	d	file:
FNV32_PRIME	sysctl_binary.c	1378;"	d	file:
FOPS_CLOSE	swap/ks_features/ksf_msg.h	/^	FOPS_CLOSE		= 1,$/;"	e	enum:file_api_t
FOPS_DIRECTORY	swap/ks_features/ksf_msg.h	/^	FOPS_DIRECTORY		= 6,$/;"	e	enum:file_api_t
FOPS_LOCK_END	swap/ks_features/ksf_msg.h	/^	FOPS_LOCK_END		= 15,$/;"	e	enum:file_api_t
FOPS_LOCK_RELEASE	swap/ks_features/ksf_msg.h	/^	FOPS_LOCK_RELEASE	= 16$/;"	e	enum:file_api_t
FOPS_LOCK_START	swap/ks_features/ksf_msg.h	/^	FOPS_LOCK_START		= 14, \/* 13 *\/$/;"	e	enum:file_api_t
FOPS_MANAGE	swap/ks_features/ksf_msg.h	/^	FOPS_MANAGE		= 12,$/;"	e	enum:file_api_t
FOPS_OPEN	swap/ks_features/ksf_msg.h	/^	FOPS_OPEN		= 0,$/;"	e	enum:file_api_t
FOPS_OPTION	swap/ks_features/ksf_msg.h	/^	FOPS_OPTION		= 11,$/;"	e	enum:file_api_t
FOPS_OTHER	swap/ks_features/ksf_msg.h	/^	FOPS_OTHER		= 8,$/;"	e	enum:file_api_t
FOPS_PERMS	swap/ks_features/ksf_msg.h	/^	FOPS_PERMS		= 7,$/;"	e	enum:file_api_t
FOPS_PREFIX	swap/ks_features/file_ops.c	16;"	d	file:
FOPS_READ	swap/ks_features/ksf_msg.h	/^	FOPS_READ		= FOPS_READ_BEGIN,$/;"	e	enum:file_api_t
FOPS_READ_BEGIN	swap/ks_features/ksf_msg.h	/^	FOPS_READ_BEGIN		= 2,$/;"	e	enum:file_api_t
FOPS_READ_END	swap/ks_features/ksf_msg.h	/^	FOPS_READ_END		= 3,$/;"	e	enum:file_api_t
FOPS_RECV	swap/ks_features/ksf_msg.h	/^	FOPS_RECV		= 10,$/;"	e	enum:file_api_t
FOPS_SEND	swap/ks_features/ksf_msg.h	/^	FOPS_SEND		= 9,$/;"	e	enum:file_api_t
FOPS_WRITE	swap/ks_features/ksf_msg.h	/^	FOPS_WRITE		= FOPS_WRITE_BEGIN,$/;"	e	enum:file_api_t
FOPS_WRITE_BEGIN	swap/ks_features/ksf_msg.h	/^	FOPS_WRITE_BEGIN	= 4,$/;"	e	enum:file_api_t
FOPS_WRITE_END	swap/ks_features/ksf_msg.h	/^	FOPS_WRITE_END		= 5,$/;"	e	enum:file_api_t
FORMAT_FIELD_SEPERATOR	trace/trace_events.c	/^	FORMAT_FIELD_SEPERATOR	= 2,$/;"	e	enum:__anon80	file:
FORMAT_HEADER	trace/trace_events.c	/^	FORMAT_HEADER		= 1,$/;"	e	enum:__anon80	file:
FORMAT_PRINTFMT	trace/trace_events.c	/^	FORMAT_PRINTFMT		= 3,$/;"	e	enum:__anon80	file:
FTRACE_BUFF_MAX	trace/ftrace.c	2479;"	d	file:
FTRACE_CMP_TYPE	trace/trace.h	246;"	d
FTRACE_CTX_FIELDS	trace/trace_entries.h	118;"	d
FTRACE_ENTRY	trace/trace.h	1053;"	d
FTRACE_ENTRY	trace/trace.h	1054;"	d
FTRACE_ENTRY	trace/trace.h	64;"	d
FTRACE_ENTRY	trace/trace.h	65;"	d
FTRACE_ENTRY	trace/trace_export.c	127;"	d	file:
FTRACE_ENTRY	trace/trace_export.c	128;"	d	file:
FTRACE_ENTRY	trace/trace_export.c	185;"	d	file:
FTRACE_ENTRY	trace/trace_export.c	186;"	d	file:
FTRACE_ENTRY	trace/trace_export.c	56;"	d	file:
FTRACE_ENTRY	trace/trace_export.c	57;"	d	file:
FTRACE_ENTRY_DUP	trace/trace.h	1057;"	d
FTRACE_ENTRY_DUP	trace/trace.h	1058;"	d
FTRACE_ENTRY_DUP	trace/trace.h	74;"	d
FTRACE_ENTRY_DUP	trace/trace.h	75;"	d
FTRACE_ENTRY_DUP	trace/trace_export.c	69;"	d	file:
FTRACE_ENTRY_DUP	trace/trace_export.c	70;"	d	file:
FTRACE_ENTRY_REG	trace/trace.h	77;"	d
FTRACE_ENTRY_REG	trace/trace.h	78;"	d
FTRACE_ENTRY_REG	trace/trace_export.c	164;"	d	file:
FTRACE_ENTRY_REG	trace/trace_export.c	165;"	d	file:
FTRACE_ENTRY_REG	trace/trace_export.c	25;"	d	file:
FTRACE_ENTRY_REG	trace/trace_export.c	26;"	d	file:
FTRACE_FILTER_SIZE	trace/ftrace.c	3664;"	d	file:
FTRACE_FUNC_HASHSIZE	trace/ftrace.c	61;"	d	file:
FTRACE_GRAPH_MAX_FUNCS	trace/trace.h	737;"	d
FTRACE_HASH_BITS	trace/ftrace.c	60;"	d	file:
FTRACE_HASH_DEFAULT_BITS	trace/ftrace.c	62;"	d	file:
FTRACE_HASH_MAX_BITS	trace/ftrace.c	63;"	d	file:
FTRACE_PROFILE_HASH_BITS	trace/ftrace.c	560;"	d	file:
FTRACE_PROFILE_HASH_SIZE	trace/ftrace.c	561;"	d	file:
FTRACE_STACK_ENTRIES	trace/trace_entries.h	167;"	d
FTRACE_STACK_MAX_ENTRIES	trace/trace.c	1675;"	d	file:
FTRACE_WARN_ON	trace/ftrace.c	43;"	d	file:
FTRACE_WARN_ON_ONCE	trace/ftrace.c	51;"	d	file:
FULLSTOP_DONTSTOP	rcutorture.c	237;"	d	file:
FULLSTOP_RMMOD	rcutorture.c	239;"	d	file:
FULLSTOP_SHUTDOWN	rcutorture.c	238;"	d	file:
FUTEX_HASHBITS	futex.c	75;"	d	file:
F_ADDR	swap/ks_features/file_ops.c	204;"	d	file:
F_ARG	swap/nsp/nsp.c	428;"	d	file:
F_ARG1	swap/nsp/nsp.c	425;"	d	file:
F_ARG2	swap/nsp/nsp.c	426;"	d	file:
F_ARG3	swap/nsp/nsp.c	427;"	d	file:
F_STRUCT	trace/trace.h	61;"	d
F_STRUCT	trace/trace.h	62;"	d
F_STRUCT	trace/trace_export.c	50;"	d	file:
F_STRUCT	trace/trace_export.c	51;"	d	file:
F_printk	trace/trace_export.c	161;"	d	file:
F_printk	trace/trace_export.c	162;"	d	file:
F_printk	trace/trace_export.c	53;"	d	file:
F_printk	trace/trace_export.c	54;"	d	file:
GCOV_ADD	gcov/gcov.h	/^	GCOV_ADD,$/;"	e	enum:gcov_action
GCOV_COUNTERS	gcov/gcov.h	24;"	d
GCOV_DATA_MAGIC	gcov/gcov.h	25;"	d
GCOV_H	gcov/gcov.h	15;"	d
GCOV_REMOVE	gcov/gcov.h	/^	GCOV_REMOVE,$/;"	e	enum:gcov_action
GCOV_TAG_COUNTER_BASE	gcov/gcov.h	27;"	d
GCOV_TAG_FOR_COUNTER	gcov/gcov.h	28;"	d
GCOV_TAG_FUNCTION	gcov/gcov.h	26;"	d
GET_ENDIAN	sys.c	87;"	d	file:
GET_FPEMU_CTL	sys.c	78;"	d	file:
GET_FPEXC_CTL	sys.c	84;"	d	file:
GET_PORT_DELAY	swap/parser/msg_cmd.c	250;"	d	file:
GET_PORT_TIMEOUT	swap/parser/msg_cmd.c	251;"	d	file:
GET_POWEROFF_ALARM	time/alarmtimer.c	/^	GET_POWEROFF_ALARM,$/;"	e	enum:ALARM_TYPE	file:
GET_POWERON_ALARM	time/alarmtimer.c	/^	GET_POWERON_ALARM,$/;"	e	enum:ALARM_TYPE	file:
GET_STEP_4	swap/kprobe/swap_kprobes_deps.c	576;"	d	file:
GET_STEP_X	swap/kprobe/swap_kprobes_deps.c	575;"	d	file:
GET_TSC_CTL	sys.c	93;"	d	file:
GET_UNALIGN_CTL	sys.c	72;"	d	file:
GET_WAKE_ALARM	time/alarmtimer.c	/^	GET_WAKE_ALARM,$/;"	e	enum:ALARM_TYPE	file:
GFP_IMAGE	power/snapshot.c	1118;"	d	file:
GFP_KDB	debug/kdb/kdb_private.h	236;"	d
GFP_TRACE	trace/trace_events.c	33;"	d	file:
GLOBAL	modsign_certificate.S	/^#define GLOBAL(name)	\\$/;"	d
GRAPH_MAX_FUNC_TEST	trace/trace_selftest.c	704;"	d	file:
GRAPH_TRACER_FLAGS	trace/trace_irqsoff.c	230;"	d	file:
GRAPH_TRACER_FLAGS	trace/trace_sched_wakeup.c	274;"	d	file:
GREP_LEN	debug/kdb/kdb_main.c	45;"	d	file:
HANDLER_RUNNING	swap/preload/preload_module.c	/^	HANDLER_RUNNING = 0x1$/;"	e	enum:__anon36	file:
HARDIRQ_VERBOSE	lockdep.c	339;"	d	file:
HARDIRQ_VERBOSE	lockdep.c	343;"	d	file:
HARDIRQ_verbose	lockdep.c	/^static int HARDIRQ_verbose(struct lock_class *class)$/;"	f	file:
HASH_SIZE	audit_tree.c	/^enum {HASH_SIZE = 128};$/;"	e	enum:__anon92	file:
HEX_CHARS	trace/trace_output.h	39;"	d
HIBERNATE_SIG	power/swap.c	36;"	d	file:
HIBERNATION_FIRST	power/hibernate.c	56;"	d	file:
HIBERNATION_INVALID	power/hibernate.c	/^	HIBERNATION_INVALID,$/;"	e	enum:__anon33	file:
HIBERNATION_MAX	power/hibernate.c	55;"	d	file:
HIBERNATION_PLATFORM	power/hibernate.c	/^	HIBERNATION_PLATFORM,$/;"	e	enum:__anon33	file:
HIBERNATION_REBOOT	power/hibernate.c	/^	HIBERNATION_REBOOT,$/;"	e	enum:__anon33	file:
HIBERNATION_SHUTDOWN	power/hibernate.c	/^	HIBERNATION_SHUTDOWN,$/;"	e	enum:__anon33	file:
HIBERNATION_SUSPEND	power/hibernate.c	/^	HIBERNATION_SUSPEND,$/;"	e	enum:__anon33	file:
HIGHPRI_NICE_LEVEL	workqueue.c	/^	HIGHPRI_NICE_LEVEL	= -20,$/;"	e	enum:__anon24	file:
HIWORD	swap/kprobe/swap_kprobes.h	67;"	d
HMP_DATA_SYSFS_MAX	sched/fair.c	1237;"	d	file:
HMP_VARIABLE_SCALE_SHIFT	sched/fair.c	1224;"	d	file:
HP_THREAD_ACTIVE	smpboot.c	/^	HP_THREAD_ACTIVE,$/;"	e	enum:__anon27	file:
HP_THREAD_NONE	smpboot.c	/^	HP_THREAD_NONE = 0,$/;"	e	enum:__anon27	file:
HP_THREAD_PARKED	smpboot.c	/^	HP_THREAD_PARKED,$/;"	e	enum:__anon27	file:
HUNG_TASK_BATCHING	hung_task.c	31;"	d	file:
HZ_TO_MSEC_ADJ32	timeconst.h	15;"	d
HZ_TO_MSEC_DEN	timeconst.h	21;"	d
HZ_TO_MSEC_MUL32	timeconst.h	14;"	d
HZ_TO_MSEC_NUM	timeconst.h	20;"	d
HZ_TO_MSEC_SHR32	timeconst.h	16;"	d
HZ_TO_USEC_ADJ32	timeconst.h	26;"	d
HZ_TO_USEC_DEN	timeconst.h	32;"	d
HZ_TO_USEC_MUL32	timeconst.h	25;"	d
HZ_TO_USEC_NUM	timeconst.h	31;"	d
HZ_TO_USEC_SHR32	timeconst.h	27;"	d
IDLE	debug/kdb/kdb_support.c	558;"	d	file:
IDLE_WORKER_TIMEOUT	workqueue.c	/^	IDLE_WORKER_TIMEOUT	= 300 * HZ,	\/* keep idle ones for 5 mins *\/$/;"	e	enum:__anon24	file:
IF_ASSIGN	trace/trace.h	249;"	d
IF_ASSIGN	trace/trace.h	250;"	d
IF_MASK	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	66;"	d
IL_CORE	swap/master/swap_initializer.c	/^	IL_CORE,$/;"	e	enum:init_level	file:
IL_FS	swap/master/swap_initializer.c	/^	IL_FS$/;"	e	enum:init_level	file:
IMP_MOD_DEP_WRAPPER	swap/kprobe/swap_kprobes_deps.c	/^IMP_MOD_DEP_WRAPPER(find_extend_vma, mm, addr)$/;"	f
IMP_MOD_DEP_WRAPPER	swap/kprobe/swap_kprobes_deps.c	/^IMP_MOD_DEP_WRAPPER(vm_normal_page, vma, addr, pte)$/;"	f
IMP_MOD_DEP_WRAPPER	swap/kprobe/swap_kprobes_deps.h	73;"	d
INDEX	timer.c	1135;"	d	file:
INIT_MOD_DEP_CB	swap/kprobe/swap_kprobes_deps.h	90;"	d
INIT_MOD_DEP_VAR	swap/kprobe/swap_kprobes_deps.h	81;"	d
INIT_OFFSET_MASK	module.c	95;"	d	file:
INIT_REGEX_LOCK	trace/ftrace.c	68;"	d	file:
INIT_REGEX_LOCK	trace/ftrace.c	71;"	d	file:
INSPSERVER_START	swap/webprobe/webprobe_prof.h	/^	INSPSERVER_START = 1,$/;"	e	enum:web_prof_addr_t
INSPSERVER_START_FILE	swap/webprobe/webprobe_debugfs.c	/^static const char INSPSERVER_START_FILE[] =	"inspector_server_start";$/;"	v	file:
INTERNAL_CALL	swap/preload/preload_control.h	/^	INTERNAL_CALL$/;"	e	enum:preload_call_type
INVALID_POINTER	swap/kprobe/swap_kprobes.h	74;"	d
INVALID_VALUE	swap/kprobe/swap_kprobes.h	72;"	d
IP_FMT	trace/trace_entries.h	170;"	d
IP_FMT	trace/trace_entries.h	172;"	d
IP_FMT	trace/trace_output.c	492;"	d	file:
IP_FMT	trace/trace_output.c	494;"	d	file:
IRQF_MODIFY_MASK	irq/settings.h	29;"	d
IRQF_MODIFY_MASK	irq/settings.h	30;"	d
IRQS_AUTODETECT	irq/internals.h	/^	IRQS_AUTODETECT		= 0x00000001,$/;"	e	enum:__anon67
IRQS_ONESHOT	irq/internals.h	/^	IRQS_ONESHOT		= 0x00000020,$/;"	e	enum:__anon67
IRQS_PENDING	irq/internals.h	/^	IRQS_PENDING		= 0x00000200,$/;"	e	enum:__anon67
IRQS_POLL_INPROGRESS	irq/internals.h	/^	IRQS_POLL_INPROGRESS	= 0x00000008,$/;"	e	enum:__anon67
IRQS_REPLAY	irq/internals.h	/^	IRQS_REPLAY		= 0x00000040,$/;"	e	enum:__anon67
IRQS_SPURIOUS_DISABLED	irq/internals.h	/^	IRQS_SPURIOUS_DISABLED	= 0x00000002,$/;"	e	enum:__anon67
IRQS_SUSPENDED	irq/internals.h	/^	IRQS_SUSPENDED		= 0x00000800,$/;"	e	enum:__anon67
IRQS_WAITING	irq/internals.h	/^	IRQS_WAITING		= 0x00000080,$/;"	e	enum:__anon67
IRQTF_AFFINITY	irq/internals.h	/^	IRQTF_AFFINITY,$/;"	e	enum:__anon66
IRQTF_FORCED_THREAD	irq/internals.h	/^	IRQTF_FORCED_THREAD,$/;"	e	enum:__anon66
IRQTF_RUNTHREAD	irq/internals.h	/^	IRQTF_RUNTHREAD,$/;"	e	enum:__anon66
IRQTF_WARNED	irq/internals.h	/^	IRQTF_WARNED,$/;"	e	enum:__anon66
IRQ_BITMAP_BITS	irq/internals.h	11;"	d
IRQ_BITMAP_BITS	irq/internals.h	13;"	d
IRQ_DOMAIN_MAP_LEGACY	irq/irqdomain.c	19;"	d	file:
IRQ_DOMAIN_MAP_LINEAR	irq/irqdomain.c	22;"	d	file:
IRQ_DOMAIN_MAP_NOMAP	irq/irqdomain.c	21;"	d	file:
IRQ_DOMAIN_MAP_TREE	irq/irqdomain.c	23;"	d	file:
IRQ_GET_DESC_CHECK_GLOBAL	irq/internals.h	123;"	d
IRQ_GET_DESC_CHECK_PERCPU	irq/internals.h	124;"	d
IRQ_LEVEL	irq/settings.h	22;"	d
IRQ_NESTED_THREAD	irq/settings.h	27;"	d
IRQ_NOAUTOEN	irq/settings.h	26;"	d
IRQ_NOPROBE	irq/settings.h	23;"	d
IRQ_NOREQUEST	irq/settings.h	24;"	d
IRQ_NOTHREAD	irq/settings.h	25;"	d
IRQ_NO_BALANCING	irq/settings.h	21;"	d
IRQ_PER_CPU	irq/settings.h	20;"	d
IRQ_PER_CPU_DEVID	irq/settings.h	28;"	d
IS_OFF	swap/master/swap_initializer.c	/^	IS_OFF,$/;"	e	enum:init_stat_t	file:
IS_ON	swap/master/swap_initializer.c	/^	IS_ON,$/;"	e	enum:init_stat_t	file:
IS_SUBSYS_ENABLED	cgroup.c	109;"	d	file:
IS_SWITCHING	swap/master/swap_initializer.c	/^	IS_SWITCHING,$/;"	e	enum:init_stat_t	file:
IT_ID_NOT_SET	posix-timers.c	560;"	d	file:
IT_ID_SET	posix-timers.c	559;"	d	file:
JIFFIES_SHIFT	time/jiffies.c	55;"	d	file:
JIFFIES_SHIFT	time/jiffies.c	57;"	d	file:
JIFFIES_SHIFT	time/jiffies.c	59;"	d	file:
JPROBE_ENTRY	swap/kprobe/swap_kprobes.h	77;"	d
K	debug/kdb/kdb_main.c	2532;"	d	file:
KB	tsacct.c	121;"	d	file:
KB	tsacct.c	87;"	d	file:
KBD_DATA_REG	debug/kdb/kdb_keyboard.c	20;"	d	file:
KBD_STATUS_REG	debug/kdb/kdb_keyboard.c	19;"	d	file:
KBD_STAT_MOUSE_OBF	debug/kdb/kdb_keyboard.c	25;"	d	file:
KBD_STAT_OBF	debug/kdb/kdb_keyboard.c	24;"	d	file:
KBUILD_CFLAGS	trace/Makefile	/^KBUILD_CFLAGS = $(subst -pg,,$(ORIG_CFLAGS))$/;"	m
KB_MASK	tsacct.c	89;"	d	file:
KDBCMD_BC	debug/kdb/kdb_bp.c	390;"	d	file:
KDBCMD_BD	debug/kdb/kdb_bp.c	392;"	d	file:
KDBCMD_BE	debug/kdb/kdb_bp.c	391;"	d	file:
KDBMSG	debug/kdb/kdb_main.c	125;"	d	file:
KDBMSG	debug/kdb/kdb_main.c	94;"	d	file:
KDB_BASE_CMD_MAX	debug/kdb/kdb_main.c	81;"	d	file:
KDB_CMD_CPU	debug/kdb/kdb_private.h	20;"	d
KDB_CMD_GO	debug/kdb/kdb_private.h	19;"	d
KDB_CMD_HISTORY_COUNT	debug/kdb/kdb_main.c	767;"	d	file:
KDB_CMD_KGDB	debug/kdb/kdb_private.h	22;"	d
KDB_CMD_SS	debug/kdb/kdb_private.h	21;"	d
KDB_DB_BPT	debug/kdb/kdb_private.h	/^	KDB_DB_BPT,	\/* Breakpoint *\/$/;"	e	enum:__anon2
KDB_DB_NOBPT	debug/kdb/kdb_private.h	/^	KDB_DB_NOBPT	\/* Spurious breakpoint *\/$/;"	e	enum:__anon2
KDB_DB_SS	debug/kdb/kdb_private.h	/^	KDB_DB_SS,	\/* Single-step trap *\/$/;"	e	enum:__anon2
KDB_DB_SSBPT	debug/kdb/kdb_private.h	/^	KDB_DB_SSBPT,	\/* Single step over breakpoint *\/$/;"	e	enum:__anon2
KDB_DEBUG	debug/kdb/kdb_private.h	34;"	d
KDB_DEBUG_FLAG_AR	debug/kdb/kdb_private.h	27;"	d
KDB_DEBUG_FLAG_ARA	debug/kdb/kdb_private.h	28;"	d
KDB_DEBUG_FLAG_BB	debug/kdb/kdb_private.h	29;"	d
KDB_DEBUG_FLAG_BB_SUMM	debug/kdb/kdb_private.h	26;"	d
KDB_DEBUG_FLAG_BP	debug/kdb/kdb_private.h	25;"	d
KDB_DEBUG_FLAG_MASK	debug/kdb/kdb_private.h	31;"	d
KDB_DEBUG_FLAG_SHIFT	debug/kdb/kdb_private.h	32;"	d
KDB_DEBUG_FLAG_STATE	debug/kdb/kdb_private.h	30;"	d
KDB_DEBUG_STATE	debug/kdb/kdb_private.h	36;"	d
KDB_ENVBUFSIZE	debug/kdb/kdb_main.c	239;"	d	file:
KDB_MAXBPT	debug/kdb/kdb_private.h	69;"	d
KDB_PCU	debug/kdb/kdb_main.c	2579;"	d	file:
KDB_PCU	debug/kdb/kdb_main.c	2605;"	d	file:
KDB_PLATFORM_ENV	debug/kdb/kdb_private.h	41;"	d
KDB_PLATFORM_ENV	debug/kdb/kdb_private.h	53;"	d
KDB_SP_DEFAULT	debug/kdb/kdb_private.h	223;"	d
KDB_SP_NEWLINE	debug/kdb/kdb_private.h	222;"	d
KDB_SP_PAREN	debug/kdb/kdb_private.h	219;"	d
KDB_SP_SPACEA	debug/kdb/kdb_private.h	218;"	d
KDB_SP_SPACEB	debug/kdb/kdb_private.h	217;"	d
KDB_SP_SYMSIZE	debug/kdb/kdb_private.h	221;"	d
KDB_SP_VALUE	debug/kdb/kdb_private.h	220;"	d
KDB_STATE	debug/kdb/kdb_private.h	149;"	d
KDB_STATE_ARCH	debug/kdb/kdb_private.h	146;"	d
KDB_STATE_CLEAR	debug/kdb/kdb_private.h	151;"	d
KDB_STATE_CMD	debug/kdb/kdb_private.h	122;"	d
KDB_STATE_DOING_KGDB	debug/kdb/kdb_private.h	144;"	d
KDB_STATE_DOING_SS	debug/kdb/kdb_private.h	126;"	d
KDB_STATE_GO1	debug/kdb/kdb_private.h	140;"	d
KDB_STATE_GO_SWITCH	debug/kdb/kdb_private.h	133;"	d
KDB_STATE_HOLD_CPU	debug/kdb/kdb_private.h	125;"	d
KDB_STATE_IP_ADJUSTED	debug/kdb/kdb_private.h	138;"	d
KDB_STATE_KDB	debug/kdb/kdb_private.h	120;"	d
KDB_STATE_KDB_CONTROL	debug/kdb/kdb_private.h	123;"	d
KDB_STATE_KEXEC	debug/kdb/kdb_private.h	143;"	d
KDB_STATE_KEYBOARD	debug/kdb/kdb_private.h	141;"	d
KDB_STATE_KGDB_TRANS	debug/kdb/kdb_private.h	145;"	d
KDB_STATE_LEAVING	debug/kdb/kdb_private.h	121;"	d
KDB_STATE_PAGER	debug/kdb/kdb_private.h	132;"	d
KDB_STATE_PRINTF_LOCK	debug/kdb/kdb_private.h	135;"	d
KDB_STATE_RECURSE	debug/kdb/kdb_private.h	137;"	d
KDB_STATE_REENTRY	debug/kdb/kdb_private.h	130;"	d
KDB_STATE_SET	debug/kdb/kdb_private.h	150;"	d
KDB_STATE_SSBPT	debug/kdb/kdb_private.h	127;"	d
KDB_STATE_SUPPRESS	debug/kdb/kdb_private.h	131;"	d
KDB_STATE_WAIT_IPI	debug/kdb/kdb_private.h	136;"	d
KDB_TSK	debug/kdb/kdb_private.h	225;"	d
KDB_TSKREGS	debug/kdb/kdb_private.h	226;"	d
KDB_WORD_SIZE	debug/kdb/kdb_private.h	257;"	d
KERNEL_ATTR_RO	ksysfs.c	22;"	d	file:
KERNEL_ATTR_RW	ksysfs.c	25;"	d	file:
KERNEL_TIMECONST_H	timeconst.h	5;"	d
KERN_TRACE	trace/trace.c	6368;"	d	file:
KGDB_MAX_THREAD_QUERY	debug/gdbstub.c	41;"	d	file:
KILL_TEST	trace/ring_buffer_benchmark.c	65;"	d	file:
KIMAGE_NO_DEST	kexec.c	118;"	d	file:
KPROBES_TRAMP_INSN_IDX	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	81;"	d
KPROBES_TRAMP_INSN_IDX	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	71;"	d
KPROBES_TRAMP_LEN	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	79;"	d
KPROBES_TRAMP_LEN	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	70;"	d
KPROBES_TRAMP_RET_BREAK_IDX	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	86;"	d
KPROBES_TRAMP_SS_BREAK_IDX	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	83;"	d
KPROBE_EVENT_SYSTEM	trace/trace_kprobe.c	25;"	d	file:
KPROBE_HASH_BITS	kprobes.c	57;"	d	file:
KPROBE_HASH_BITS	swap/kprobe/swap_kprobes.h	253;"	d
KPROBE_HIT_ACTIVE	swap/kprobe/swap_kprobes.h	58;"	d
KPROBE_HIT_SS	swap/kprobe/swap_kprobes.h	60;"	d
KPROBE_HIT_SSDONE	swap/kprobe/swap_kprobes.h	64;"	d
KPROBE_INSN_PAGE_SIZE	kprobes.c	120;"	d	file:
KPROBE_REENTER	swap/kprobe/swap_kprobes.h	62;"	d
KPROBE_TABLE_SIZE	kprobes.c	58;"	d	file:
KPROBE_TABLE_SIZE	swap/kprobe/swap_kprobes.h	254;"	d
KSF_PREFIX	swap/ks_features/ksf_msg.c	29;"	d	file:
KSYMS_ERR	swap/ksyms/no_ksyms.c	43;"	d	file:
KTHREAD_BITS	kthread.c	/^enum KTHREAD_BITS {$/;"	g	file:
KTHREAD_IS_PARKED	kthread.c	/^	KTHREAD_IS_PARKED,$/;"	e	enum:KTHREAD_BITS	file:
KTHREAD_IS_PER_CPU	kthread.c	/^	KTHREAD_IS_PER_CPU = 0,$/;"	e	enum:KTHREAD_BITS	file:
KTHREAD_SHOULD_PARK	kthread.c	/^	KTHREAD_SHOULD_PARK,$/;"	e	enum:KTHREAD_BITS	file:
KTHREAD_SHOULD_STOP	kthread.c	/^	KTHREAD_SHOULD_STOP,$/;"	e	enum:KTHREAD_BITS	file:
LAT_BRIGHTNESS	swap/energy/lcd/lcd_base.h	/^	LAT_BRIGHTNESS,		\/**< LCD brightness *\/$/;"	e	enum:lcd_action_type
LAT_POWER	swap/energy/lcd/lcd_base.h	/^	LAT_POWER		\/**< LCD power *\/$/;"	e	enum:lcd_action_type
LBF_ALL_PINNED	sched/fair.c	4935;"	d	file:
LBF_NEED_BREAK	sched/fair.c	4936;"	d	file:
LBF_SOME_PINNED	sched/fair.c	4937;"	d	file:
LCD_FUNC_ARGS	swap/energy/Makefile	/^LCD_FUNC_ARGS := void$/;"	m
LCD_FUNC_LIST	swap/energy/Makefile	/^LCD_FUNC_LIST := $(TMP)$/;"	m
LCD_FUNC_RET	swap/energy/Makefile	/^LCD_FUNC_RET := struct lcd_ops *$/;"	m
LCD_MAKE_FNAME	swap/energy/Makefile	/^LCD_MAKE_FNAME := LCD_MAKE_FNAME(name)=$(LCD_PREFIX)\\#\\#name$/;"	m
LCD_PREFIX	swap/energy/Makefile	/^LCD_PREFIX := lcd_energy_$/;"	m
LEN_OR_ZERO	trace/trace_kprobe.c	1121;"	d	file:
LEN_OR_ZERO	trace/trace_kprobe.c	1142;"	d	file:
LEN_OR_ZERO	trace/trace_syscalls.c	210;"	d	file:
LEN_OR_ZERO	trace/trace_syscalls.c	225;"	d	file:
LEN_OR_ZERO	trace/trace_uprobe.c	688;"	d	file:
LEN_OR_ZERO	trace/trace_uprobe.c	721;"	d	file:
LIBEWEBKIT2_PATH	swap/webprobe/webprobe_prof.c	/^static const char *LIBEWEBKIT2_PATH = "\/usr\/lib\/libewebkit2.so.0";$/;"	v	file:
LINKED_PAGE_DATA_SIZE	power/snapshot.c	153;"	d	file:
LOADED	swap/preload/preload_pd.h	/^	LOADED,$/;"	e	enum:preload_state_t
LOADING	swap/preload/preload_pd.h	/^	LOADING,$/;"	e	enum:preload_state_t
LOAD_AVG_MAX	sched/core.c	1649;"	d	file:
LOAD_AVG_MAX	sched/fair.c	1139;"	d	file:
LOAD_AVG_MAX_N	sched/fair.c	1140;"	d	file:
LOAD_AVG_PERIOD	sched/fair.c	1138;"	d	file:
LOAD_FRAC	debug/kdb/kdb_main.c	2524;"	d	file:
LOAD_FRAC	debug/kdb/kdb_main.c	2530;"	d	file:
LOAD_INT	debug/kdb/kdb_main.c	2523;"	d	file:
LOAD_INT	debug/kdb/kdb_main.c	2529;"	d	file:
LOCKDEP_STATE	lockdep.c	1585;"	d	file:
LOCKDEP_STATE	lockdep.c	1588;"	d	file:
LOCKDEP_STATE	lockdep.c	1592;"	d	file:
LOCKDEP_STATE	lockdep.c	1595;"	d	file:
LOCKDEP_STATE	lockdep.c	1657;"	d	file:
LOCKDEP_STATE	lockdep.c	1661;"	d	file:
LOCKDEP_STATE	lockdep.c	2426;"	d	file:
LOCKDEP_STATE	lockdep.c	2429;"	d	file:
LOCKDEP_STATE	lockdep.c	2494;"	d	file:
LOCKDEP_STATE	lockdep.c	2496;"	d	file:
LOCKDEP_STATE	lockdep.c	2911;"	d	file:
LOCKDEP_STATE	lockdep.c	2917;"	d	file:
LOCKDEP_STATE	lockdep.c	465;"	d	file:
LOCKDEP_STATE	lockdep.c	467;"	d	file:
LOCKDEP_STATE	lockdep.c	500;"	d	file:
LOCKDEP_STATE	lockdep.c	504;"	d	file:
LOCKDEP_STATE	lockdep_internals.h	13;"	d
LOCKDEP_STATE	lockdep_internals.h	19;"	d
LOCKDEP_STATE	lockdep_internals.h	30;"	d
LOCKDEP_STATE	lockdep_internals.h	36;"	d
LOCKF_ENABLED_IRQ	lockdep_internals.h	40;"	d
LOCKF_ENABLED_IRQ_READ	lockdep_internals.h	43;"	d
LOCKF_USED_IN_IRQ	lockdep_internals.h	41;"	d
LOCKF_USED_IN_IRQ_READ	lockdep_internals.h	45;"	d
LOCK_USAGE_CHARS	lockdep_internals.h	73;"	d
LOCK_USAGE_STATES	lockdep_internals.h	/^	LOCK_USAGE_STATES$/;"	e	enum:lock_usage_bit
LOCK_USED	lockdep_internals.h	/^	LOCK_USED,$/;"	e	enum:lock_usage_bit
LOG_ALIGN	printk.c	269;"	d	file:
LOG_ALIGN	printk.c	271;"	d	file:
LOG_CONT	printk.c	/^	LOG_CONT	= 8,	\/* text is a fragment of a continuation line *\/$/;"	e	enum:log_flags	file:
LOG_LINE_MAX	printk.c	1808;"	d	file:
LOG_LINE_MAX	printk.c	1810;"	d	file:
LOG_LINE_MAX	printk.c	265;"	d	file:
LOG_NEWLINE	printk.c	/^	LOG_NEWLINE	= 2,	\/* text ended with a newline *\/$/;"	e	enum:log_flags	file:
LOG_NOCONS	printk.c	/^	LOG_NOCONS	= 1,	\/* already flushed, do not print to console *\/$/;"	e	enum:log_flags	file:
LOG_PREFIX	printk.c	/^	LOG_PREFIX	= 4,	\/* text started with a prefix *\/$/;"	e	enum:log_flags	file:
LOWORD	swap/kprobe/swap_kprobes.h	69;"	d
LPD_BRIGHTNESS	swap/energy/lcd/lcd_base.h	/^	LPD_BRIGHTNESS,		\/**< current brightness value *\/$/;"	e	enum:lcd_parameter_type
LPD_MAX_BRIGHTNESS	swap/energy/lcd/lcd_base.h	/^	LPD_MAX_BRIGHTNESS,	\/**< maximum brightness value *\/$/;"	e	enum:lcd_parameter_type
LPD_MIN_BRIGHTNESS	swap/energy/lcd/lcd_base.h	/^	LPD_MIN_BRIGHTNESS,	\/**< minimum brightness value *\/$/;"	e	enum:lcd_parameter_type
LPD_POWER	swap/energy/lcd/lcd_base.h	/^	LPD_POWER		\/**< current power value *\/$/;"	e	enum:lcd_parameter_type
LZO_CMP_PAGES	power/swap.c	423;"	d	file:
LZO_CMP_SIZE	power/swap.c	425;"	d	file:
LZO_HEADER	power/swap.c	416;"	d	file:
LZO_MAX_RD_PAGES	power/swap.c	432;"	d	file:
LZO_MIN_RD_PAGES	power/swap.c	431;"	d	file:
LZO_THREADS	power/swap.c	428;"	d	file:
LZO_UNC_PAGES	power/swap.c	419;"	d	file:
LZO_UNC_SIZE	power/swap.c	420;"	d	file:
MAGIC_END	configs.c	47;"	d	file:
MAGIC_SIZE	configs.c	51;"	d	file:
MAGIC_START	configs.c	46;"	d	file:
MAKE_UPROBE	swap/us_manager/probes/probe_info_new.h	64;"	d
MAKE_URPROBE	swap/us_manager/probes/probe_info_new.h	70;"	d
MANTSIZE	acct.c	348;"	d	file:
MANTSIZE2	acct.c	389;"	d	file:
MAP_PAGE_ENTRIES	power/swap.c	52;"	d	file:
MASK_ARM_INSN_AUNDEF	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	241;"	d
MASK_ARM_INSN_B	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	245;"	d
MASK_ARM_INSN_BL	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	263;"	d
MASK_ARM_INSN_BLX1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	273;"	d
MASK_ARM_INSN_BLX2	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	282;"	d
MASK_ARM_INSN_BREAK	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	309;"	d
MASK_ARM_INSN_BX	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	288;"	d
MASK_ARM_INSN_BXJ	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	294;"	d
MASK_ARM_INSN_CLS	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	549;"	d
MASK_ARM_INSN_CLZ	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	317;"	d
MASK_ARM_INSN_CRT	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	552;"	d
MASK_ARM_INSN_DPI	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	331;"	d
MASK_ARM_INSN_DPIS	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	321;"	d
MASK_ARM_INSN_DPRS	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	324;"	d
MASK_ARM_INSN_LIO	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	384;"	d
MASK_ARM_INSN_LM	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	534;"	d
MASK_ARM_INSN_LRO	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	494;"	d
MASK_ARM_INSN_SIO	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	439;"	d
MASK_ARM_INSN_SM	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	544;"	d
MASK_ARM_INSN_SRO	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	521;"	d
MASK_ARM_INSN_SWI	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	302;"	d
MASK_ARM_INSN_UNDEF	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	234;"	d
MASK_DECLARE_1	cpu.c	655;"	d	file:
MASK_DECLARE_2	cpu.c	656;"	d	file:
MASK_DECLARE_4	cpu.c	657;"	d	file:
MASK_DECLARE_8	cpu.c	658;"	d	file:
MASK_TC_BIT	trace/blktrace.c	182;"	d	file:
MASK_THUMB2_INSN_ADR	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	515;"	d
MASK_THUMB2_INSN_B1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	257;"	d
MASK_THUMB2_INSN_B2	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	260;"	d
MASK_THUMB2_INSN_BL	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	270;"	d
MASK_THUMB2_INSN_BLX1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	279;"	d
MASK_THUMB2_INSN_BXJ	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	297;"	d
MASK_THUMB2_INSN_DP	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	432;"	d
MASK_THUMB2_INSN_DPI	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	340;"	d
MASK_THUMB2_INSN_DPRS	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	327;"	d
MASK_THUMB2_INSN_LDMDB	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	540;"	d
MASK_THUMB2_INSN_LDMIA	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	537;"	d
MASK_THUMB2_INSN_LDRBW	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	405;"	d
MASK_THUMB2_INSN_LDRBW1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	408;"	d
MASK_THUMB2_INSN_LDRD	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	417;"	d
MASK_THUMB2_INSN_LDRD1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	420;"	d
MASK_THUMB2_INSN_LDREX	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	426;"	d
MASK_THUMB2_INSN_LDRHW	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	411;"	d
MASK_THUMB2_INSN_LDRHW1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	414;"	d
MASK_THUMB2_INSN_LDRW	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	399;"	d
MASK_THUMB2_INSN_LDRW1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	402;"	d
MASK_THUMB2_INSN_LDRWL	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	423;"	d
MASK_THUMB2_INSN_LSLW1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	358;"	d
MASK_THUMB2_INSN_LSLW2	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	361;"	d
MASK_THUMB2_INSN_LSRW1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	364;"	d
MASK_THUMB2_INSN_LSRW2	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	367;"	d
MASK_THUMB2_INSN_MUL	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	429;"	d
MASK_THUMB2_INSN_ROR	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	355;"	d
MASK_THUMB2_INSN_RORW	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	352;"	d
MASK_THUMB2_INSN_RSBW	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	349;"	d
MASK_THUMB2_INSN_STRBT	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	485;"	d
MASK_THUMB2_INSN_STRBW	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	476;"	d
MASK_THUMB2_INSN_STRBW1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	479;"	d
MASK_THUMB2_INSN_STRD	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	488;"	d
MASK_THUMB2_INSN_STRHT	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	469;"	d
MASK_THUMB2_INSN_STRHW	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	463;"	d
MASK_THUMB2_INSN_STRHW1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	466;"	d
MASK_THUMB2_INSN_STRT	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	473;"	d
MASK_THUMB2_INSN_STRW	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	454;"	d
MASK_THUMB2_INSN_STRW1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	457;"	d
MASK_THUMB2_INSN_TEQ1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	370;"	d
MASK_THUMB2_INSN_TEQ2	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	373;"	d
MASK_THUMB2_INSN_TST1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	376;"	d
MASK_THUMB2_INSN_TST2	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	379;"	d
MASK_THUMB_INSN_APC	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	337;"	d
MASK_THUMB_INSN_B1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	248;"	d
MASK_THUMB_INSN_B2	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	251;"	d
MASK_THUMB_INSN_BLX2	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	285;"	d
MASK_THUMB_INSN_BREAK	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	313;"	d
MASK_THUMB_INSN_BX	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	291;"	d
MASK_THUMB_INSN_CBZ	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	254;"	d
MASK_THUMB_INSN_DP	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	334;"	d
MASK_THUMB_INSN_LIO1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	387;"	d
MASK_THUMB_INSN_LIO2	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	390;"	d
MASK_THUMB_INSN_LIO3	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	393;"	d
MASK_THUMB_INSN_LIO4	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	396;"	d
MASK_THUMB_INSN_LRO1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	497;"	d
MASK_THUMB_INSN_LRO2	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	500;"	d
MASK_THUMB_INSN_LRO3	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	503;"	d
MASK_THUMB_INSN_LRO4	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	506;"	d
MASK_THUMB_INSN_LRO5	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	509;"	d
MASK_THUMB_INSN_LRO6	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	512;"	d
MASK_THUMB_INSN_MOV3	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	346;"	d
MASK_THUMB_INSN_SIO1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	442;"	d
MASK_THUMB_INSN_SIO2	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	445;"	d
MASK_THUMB_INSN_SIO3	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	448;"	d
MASK_THUMB_INSN_SIO4	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	451;"	d
MASK_THUMB_INSN_SRO1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	524;"	d
MASK_THUMB_INSN_SRO2	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	527;"	d
MASK_THUMB_INSN_SRO3	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	530;"	d
MASK_THUMB_INSN_SWI	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	305;"	d
MASK_THUMB_INSN_UNDEF	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	237;"	d
MATCH_END_ONLY	trace/trace.h	/^	MATCH_END_ONLY,$/;"	e	enum:regex_type
MATCH_FRONT_ONLY	trace/trace.h	/^	MATCH_FRONT_ONLY,$/;"	e	enum:regex_type
MATCH_FULL	trace/trace.h	/^	MATCH_FULL = 0,$/;"	e	enum:regex_type
MATCH_MIDDLE_ONLY	trace/trace.h	/^	MATCH_MIDDLE_ONLY,$/;"	e	enum:regex_type
MAXARGC	debug/kdb/kdb_main.c	865;"	d	file:
MAXEXP2	acct.c	392;"	d	file:
MAXFRACT	acct.c	350;"	d	file:
MAXFRACT2	acct.c	391;"	d	file:
MAXIMUM_SUBBUFFER_SIZE	swap/driver/device_driver.c	61;"	d	file:
MAXLR	latencytop.c	63;"	d	file:
MAXRESERVE	resource.c	1233;"	d	file:
MAX_APPS_COUNT	swap/us_manager/debugfs_us_manager.c	10;"	d	file:
MAX_ARCH_HEADER_SIZE	power/power.h	23;"	d
MAX_ARGSTR_LEN	trace/trace_probe.h	44;"	d
MAX_CIRCULAR_QUEUE_SIZE	lockdep.c	883;"	d	file:
MAX_CMDLINECONSOLES	printk.c	126;"	d	file:
MAX_ENTRIES	time/timer_stats.c	114;"	d	file:
MAX_ENTRIES_BITS	time/timer_stats.c	113;"	d	file:
MAX_EVENT_NAME_LEN	trace/trace_probe.h	45;"	d
MAX_EXECVE_AUDIT_LEN	auditsc.c	80;"	d	file:
MAX_FILTER_PRED	trace/trace.h	960;"	d
MAX_IDLE_WORKERS_RATIO	workqueue.c	/^	MAX_IDLE_WORKERS_RATIO	= 4,		\/* 1\/4 of busy can be idle *\/$/;"	e	enum:__anon24	file:
MAX_INSNS_PER_PATH	seccomp.c	64;"	d	file:
MAX_INSN_SIZE	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	68;"	d
MAX_INSN_SIZE	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	49;"	d
MAX_INTERRUPTS	events/core.c	1552;"	d	file:
MAX_IORES_LEVEL	resource.c	/^enum { MAX_IORES_LEVEL = 5 };$/;"	e	enum:__anon35	file:
MAX_KMOD_CONCURRENT	kmod.c	139;"	d	file:
MAX_LOCKDEP_CHAINS	lockdep_internals.h	60;"	d
MAX_LOCKDEP_CHAINS_BITS	lockdep_internals.h	59;"	d
MAX_LOCKDEP_CHAIN_HLOCKS	lockdep_internals.h	62;"	d
MAX_LOCKDEP_ENTRIES	lockdep_internals.h	57;"	d
MAX_MEMHEX_BYTES	trace/trace_output.h	38;"	d
MAX_NAMELEN	irq/proc.c	269;"	d	file:
MAX_NAMELEN	irq/proc.c	306;"	d	file:
MAX_NAMELEN	irq/proc.c	308;"	d	file:
MAX_NAMELEN	irq/proc.c	365;"	d	file:
MAX_OBJ_NUM	padata.c	34;"	d	file:
MAX_PID_NS_LEVEL	pid_namespace.c	80;"	d	file:
MAX_PINNED_INTERVAL	sched/fair.c	6095;"	d	file:
MAX_RCU_LVLS	rcutree.h	39;"	d
MAX_RT_TEST_MUTEXES	rtmutex-tester.c	22;"	d	file:
MAX_RT_TEST_THREADS	rtmutex-tester.c	21;"	d	file:
MAX_SHARES	sched/sched.h	181;"	d
MAX_SOFTIRQ_RESTART	softirq.c	211;"	d	file:
MAX_SOFTIRQ_TIME	softirq.c	210;"	d	file:
MAX_STACK_SIZE	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	50;"	d
MAX_STACK_TRACE_ENTRIES	lockdep_internals.h	68;"	d
MAX_STRING_LEN	swap/fbiprobe/fbiprobe.c	60;"	d	file:
MAX_STRING_SIZE	trace/trace_probe.h	46;"	d
MAX_TASKS_SHOWN_PER_CSS	cgroup.c	5459;"	d	file:
MAX_TICKADJ	time/ntp.c	39;"	d	file:
MAX_TICKADJ_SCALED	time/ntp.c	40;"	d	file:
MAX_TRACER_SIZE	trace/trace.c	120;"	d	file:
MAX_TRACE_ARGS	trace/trace_probe.h	43;"	d
MAX_TVAL	timer.c	68;"	d	file:
MAX_UPROBE_XOL_SLOTS	events/uprobes.c	42;"	d	file:
MAX_USER_PRIO	sched/sched.h	31;"	d
MAX_WAKEUP_REASON_IRQS	power/wakeup_reason.c	31;"	d	file:
MAX_WORK	async.c	64;"	d	file:
MAYDAY_INITIAL_TIMEOUT	workqueue.c	/^	MAYDAY_INITIAL_TIMEOUT  = HZ \/ 100 >= 2 ? HZ \/ 100 : 2,$/;"	e	enum:__anon24	file:
MAYDAY_INTERVAL	workqueue.c	/^	MAYDAY_INTERVAL		= HZ \/ 10,	\/* and then every 100ms *\/$/;"	e	enum:__anon24	file:
MB	tsacct.c	122;"	d	file:
MB	tsacct.c	88;"	d	file:
MCallIdentifier	swap/webprobe/web_msg.c	/^struct MCallIdentifier {$/;"	s	file:
MEMCPY_SKIP	events/internal.h	121;"	d
MINIMUM_CONSOLE_LOGLEVEL	printk.c	66;"	d	file:
MIN_DELTA_LIMIT	time/clockevents.c	129;"	d	file:
MIN_SHARES	sched/sched.h	180;"	d
MIN_SIZE_APP_INFO	swap/parser/msg_parser.h	/^	MIN_SIZE_APP_INFO = SIZE_APP_TYPE + MIN_SIZE_STRING + MIN_SIZE_STRING,$/;"	e	enum:__anon54
MIN_SIZE_APP_INST	swap/parser/msg_parser.h	/^	MIN_SIZE_APP_INST = MIN_SIZE_APP_INFO +$/;"	e	enum:__anon54
MIN_SIZE_FUNC_INST	swap/parser/msg_parser.h	/^	MIN_SIZE_FUNC_INST = sizeof(make_func_inst_data().addr) +$/;"	e	enum:__anon54
MIN_SIZE_LIB_INST	swap/parser/msg_parser.h	/^	MIN_SIZE_LIB_INST = MIN_SIZE_STRING +$/;"	e	enum:__anon54
MIN_SIZE_STRING	swap/parser/msg_parser.h	/^	MIN_SIZE_STRING = 1,$/;"	e	enum:__anon54
MIN_SIZE_US_INST	swap/parser/msg_parser.h	/^	MIN_SIZE_US_INST = sizeof(make_us_inst_data().cnt)$/;"	e	enum:__anon54
MIN_STACK_SIZE	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	52;"	d
MLOCK	mutex.c	120;"	d	file:
MMAP_HANDLERS	swap/preload/preload_module.c	/^	MMAP_HANDLERS,$/;"	e	enum:mmap_type_t	file:
MMAP_LOADER	swap/preload/preload_module.c	/^	MMAP_LOADER,$/;"	e	enum:mmap_type_t	file:
MMAP_SKIP	swap/preload/preload_module.c	/^	MMAP_SKIP$/;"	e	enum:mmap_type_t	file:
MODINFO_ATTR	module.c	591;"	d	file:
MODULE_NAME	swap/fbiprobe/fbi_probe_module.h	43;"	d
MOD_NUMBER_OF_PAGES	module.c	89;"	d	file:
MOD_TYPE	swap/parser/us_inst.h	/^enum MOD_TYPE {$/;"	g
MOVE_DOWN	trace/trace_events_filter.c	/^	MOVE_DOWN,$/;"	e	enum:move_type	file:
MOVE_UP_FROM_LEFT	trace/trace_events_filter.c	/^	MOVE_UP_FROM_LEFT,$/;"	e	enum:move_type	file:
MOVE_UP_FROM_RIGHT	trace/trace_events_filter.c	/^	MOVE_UP_FROM_RIGHT$/;"	e	enum:move_type	file:
MSEC_TO_HZ_ADJ32	timeconst.h	18;"	d
MSEC_TO_HZ_DEN	timeconst.h	23;"	d
MSEC_TO_HZ_MUL32	timeconst.h	17;"	d
MSEC_TO_HZ_NUM	timeconst.h	22;"	d
MSEC_TO_HZ_SHR32	timeconst.h	19;"	d
MSG_CONFIG	swap/parser/swap_msg_parser.c	/^	MSG_CONFIG		= 0x0004,	\/**< Config message. *\/$/;"	e	enum:MSG_ID	file:
MSG_CONTEXT_SWITCH_ENTRY	swap/writer/swap_msg.h	/^	MSG_CONTEXT_SWITCH_ENTRY	= 0x0010,$/;"	e	enum:swap_msg_id
MSG_CONTEXT_SWITCH_EXIT	swap/writer/swap_msg.h	/^	MSG_CONTEXT_SWITCH_EXIT		= 0x0011,$/;"	e	enum:swap_msg_id
MSG_ERROR	swap/writer/swap_msg.h	/^	MSG_ERROR			= 0x0003,$/;"	e	enum:swap_msg_id
MSG_FBI	swap/writer/swap_msg.h	/^	MSG_FBI				= 0x0020$/;"	e	enum:swap_msg_id
MSG_FILE_FUNCTION_ENTRY	swap/writer/swap_msg.h	/^	MSG_FILE_FUNCTION_ENTRY		= 0x000c,$/;"	e	enum:swap_msg_id
MSG_FILE_FUNCTION_EXIT	swap/writer/swap_msg.h	/^	MSG_FILE_FUNCTION_EXIT		= 0x000d,$/;"	e	enum:swap_msg_id
MSG_FUNCTION_ENTRY	swap/writer/swap_msg.h	/^	MSG_FUNCTION_ENTRY		= 0x0008,$/;"	e	enum:swap_msg_id
MSG_FUNCTION_EXIT	swap/writer/swap_msg.h	/^	MSG_FUNCTION_EXIT		= 0x0009,$/;"	e	enum:swap_msg_id
MSG_ID	swap/parser/swap_msg_parser.c	/^enum MSG_ID {$/;"	g	file:
MSG_KEEP_ALIVE	swap/parser/swap_msg_parser.c	/^	MSG_KEEP_ALIVE		= 0x0001,	\/**< Keep alive message. *\/$/;"	e	enum:MSG_ID	file:
MSG_NSP	swap/writer/swap_msg.h	/^	MSG_NSP				= 0x0019,$/;"	e	enum:swap_msg_id
MSG_PREFIX	swap/writer/swap_msg.c	36;"	d	file:
MSG_PROCESS_STATUS_INFO	swap/writer/swap_msg.h	/^	MSG_PROCESS_STATUS_INFO		= 0x000e,$/;"	e	enum:swap_msg_id
MSG_PROC_COMM	swap/writer/swap_msg.h	/^	MSG_PROC_COMM			= 0x0014,$/;"	e	enum:swap_msg_id
MSG_PROC_INFO	swap/writer/swap_msg.h	/^	MSG_PROC_INFO			= 0x0001,$/;"	e	enum:swap_msg_id
MSG_PROC_MAP	swap/writer/swap_msg.h	/^	MSG_PROC_MAP			= 0x0012,$/;"	e	enum:swap_msg_id
MSG_PROC_UNMAP	swap/writer/swap_msg.h	/^	MSG_PROC_UNMAP			= 0x0013,$/;"	e	enum:swap_msg_id
MSG_SAMPLE	swap/writer/swap_msg.h	/^	MSG_SAMPLE			= 0x0004,$/;"	e	enum:swap_msg_id
MSG_START	swap/parser/swap_msg_parser.c	/^	MSG_START		= 0x0002,	\/**< Start message. *\/$/;"	e	enum:MSG_ID	file:
MSG_STOP	swap/parser/swap_msg_parser.c	/^	MSG_STOP		= 0x0003,	\/**< Stop message. *\/$/;"	e	enum:MSG_ID	file:
MSG_SWAP_INST_ADD	swap/parser/swap_msg_parser.c	/^	MSG_SWAP_INST_ADD	= 0x0008,	\/**< Swap inst add message. *\/$/;"	e	enum:MSG_ID	file:
MSG_SWAP_INST_REMOVE	swap/parser/swap_msg_parser.c	/^	MSG_SWAP_INST_REMOVE	= 0x0009,	\/**< Swap inst remove message. *\/$/;"	e	enum:MSG_ID	file:
MSG_SYSCALL_ENTRY	swap/writer/swap_msg.h	/^	MSG_SYSCALL_ENTRY		= 0x000a,$/;"	e	enum:swap_msg_id
MSG_SYSCALL_EXIT	swap/writer/swap_msg.h	/^	MSG_SYSCALL_EXIT		= 0x000b,$/;"	e	enum:swap_msg_id
MSG_TERMINATE	swap/writer/swap_msg.h	/^	MSG_TERMINATE			= 0x0002,$/;"	e	enum:swap_msg_id
MSG_WEB_FUNCTION_ENTRY	swap/writer/swap_msg.h	/^	MSG_WEB_FUNCTION_ENTRY		= 0x0015,$/;"	e	enum:swap_msg_id
MSG_WEB_FUNCTION_EXIT	swap/writer/swap_msg.h	/^	MSG_WEB_FUNCTION_EXIT		= 0x0016,$/;"	e	enum:swap_msg_id
MSG_WRT_LAUNCHER_PORT	swap/parser/swap_msg_parser.c	/^	MSG_WRT_LAUNCHER_PORT	= 0x8001	\/**< WRT launcher port. *\/$/;"	e	enum:MSG_ID	file:
MSG_WSP	swap/writer/swap_msg.h	/^	MSG_WSP				= 0x001a,$/;"	e	enum:swap_msg_id
MStringImpl	swap/webprobe/web_msg.c	/^struct MStringImpl {$/;"	s	file:
MT_ADD	swap/parser/us_inst.h	/^	MT_ADD,             \/**< Add probes. *\/$/;"	e	enum:MOD_TYPE
MT_DEL	swap/parser/us_inst.h	/^	MT_DEL              \/**< Remove probes. *\/$/;"	e	enum:MOD_TYPE
MUTEX_SHOW_NO_WAITER	mutex.c	44;"	d	file:
M_ARG	swap/nsp/nsp.c	431;"	d	file:
M_TYPE_AND_ARG	swap/nsp/nsp.c	430;"	d	file:
NICE_0_LOAD	sched/sched.h	63;"	d
NICE_0_SHIFT	sched/sched.h	64;"	d
NICE_TO_PRIO	sched/sched.h	20;"	d
NI_SYSCALL4SWAP	swap/uprobe/arch/x86/swap-asm/swap_sc_patch.c	90;"	d	file:
NMS_CREATE	swap/nsp/nsp_msg.h	/^	NMS_CREATE	= 0x02,$/;"	e	enum:nsp_msg_stage
NMS_MAIN	swap/nsp/nsp_msg.h	/^	NMS_MAIN	= 0x01,$/;"	e	enum:nsp_msg_stage
NMS_MAPPING	swap/nsp/nsp_msg.h	/^	NMS_MAPPING	= 0x00,$/;"	e	enum:nsp_msg_stage
NMS_RESET	swap/nsp/nsp_msg.h	/^	NMS_RESET	= 0x03,$/;"	e	enum:nsp_msg_stage
NO	trace/trace_events_filter.c	2133;"	d	file:
NO	trace/trace_events_filter.c	2194;"	d	file:
NOHZ_BALANCE_KICK	sched/sched.h	/^	NOHZ_BALANCE_KICK,$/;"	e	enum:rq_nohz_flag_bits
NOHZ_TICK_STOPPED	sched/sched.h	/^	NOHZ_TICK_STOPPED,$/;"	e	enum:rq_nohz_flag_bits
NOT_INSTRUMENTED	swap/preload/preload_control.h	/^	NOT_INSTRUMENTED,$/;"	e	enum:preload_call_type
NOT_LOADED	swap/preload/preload_pd.h	/^	NOT_LOADED,$/;"	e	enum:preload_state_t
NO_CMDLINE_MAP	trace/trace.c	1248;"	d	file:
NPS_AC_EFL_MAIN_E	swap/nsp/nsp_tdata.h	/^	NPS_AC_EFL_MAIN_E,	\/* main end      *\/$/;"	e	enum:nsp_proc_stat
NPS_AC_INIT_R	swap/nsp/nsp_tdata.h	/^	NPS_AC_INIT_R,		\/* create begin  *\/$/;"	e	enum:nsp_proc_stat
NPS_DO_APP_E	swap/nsp/nsp_tdata.h	/^	NPS_DO_APP_E,		\/* reset begin   *\/$/;"	e	enum:nsp_proc_stat
NPS_DO_APP_R	swap/nsp/nsp_tdata.h	/^	NPS_DO_APP_R		\/* reset end     *\/$/;"	e	enum:nsp_proc_stat
NPS_ELM_RUN_E	swap/nsp/nsp_tdata.h	/^	NPS_ELM_RUN_E,		\/* create end    *\/$/;"	e	enum:nsp_proc_stat
NPS_MAIN_E	swap/nsp/nsp_tdata.h	/^	NPS_MAIN_E,		\/* main begin    *\/$/;"	e	enum:nsp_proc_stat
NPS_OPEN_E	swap/nsp/nsp_tdata.h	/^	NPS_OPEN_E,		\/* mapping begin *\/$/;"	e	enum:nsp_proc_stat
NPS_OPEN_R	swap/nsp/nsp_tdata.h	/^	NPS_OPEN_R,$/;"	e	enum:nsp_proc_stat
NPS_SYM_E	swap/nsp/nsp_tdata.h	/^	NPS_SYM_E,$/;"	e	enum:nsp_proc_stat
NPS_SYM_R	swap/nsp/nsp_tdata.h	/^	NPS_SYM_R,		\/* mapping end   *\/$/;"	e	enum:nsp_proc_stat
NR_ACCUMULATED_SAMPLES	events/core.c	228;"	d	file:
NR_PROFILE_GRP	profile.c	38;"	d	file:
NR_PROFILE_HIT	profile.c	37;"	d	file:
NR_STD_WORKER_POOLS	workqueue.c	/^	NR_STD_WORKER_POOLS	= 2,		\/* # standard pools per cpu *\/$/;"	e	enum:__anon24	file:
NR_TO_INIT	trace/ftrace.c	1188;"	d	file:
NSEC_PER_JIFFY	time/jiffies.c	40;"	d	file:
NSP_PREFIX	swap/nsp/nsp_print.h	29;"	d
NS_OFF	swap/nsp/nsp.h	/^	NS_OFF,$/;"	e	enum:nsp_stat
NS_ON	swap/nsp/nsp.h	/^	NS_ON$/;"	e	enum:nsp_stat
NS_TO_JIFFIES	sched/sched.h	36;"	d
NUM_RCU_LVL_0	rcutree.h	47;"	d
NUM_RCU_LVL_0	rcutree.h	54;"	d
NUM_RCU_LVL_0	rcutree.h	61;"	d
NUM_RCU_LVL_0	rcutree.h	68;"	d
NUM_RCU_LVL_1	rcutree.h	48;"	d
NUM_RCU_LVL_1	rcutree.h	55;"	d
NUM_RCU_LVL_1	rcutree.h	62;"	d
NUM_RCU_LVL_1	rcutree.h	69;"	d
NUM_RCU_LVL_2	rcutree.h	49;"	d
NUM_RCU_LVL_2	rcutree.h	56;"	d
NUM_RCU_LVL_2	rcutree.h	63;"	d
NUM_RCU_LVL_2	rcutree.h	70;"	d
NUM_RCU_LVL_3	rcutree.h	50;"	d
NUM_RCU_LVL_3	rcutree.h	57;"	d
NUM_RCU_LVL_3	rcutree.h	64;"	d
NUM_RCU_LVL_3	rcutree.h	71;"	d
NUM_RCU_LVL_4	rcutree.h	51;"	d
NUM_RCU_LVL_4	rcutree.h	58;"	d
NUM_RCU_LVL_4	rcutree.h	65;"	d
NUM_RCU_LVL_4	rcutree.h	72;"	d
NUM_RCU_NODES	rcutree.h	78;"	d
OBJ_TREE	gcov/gcov.h	/^		OBJ_TREE,$/;"	e	enum:gcov_link::__anon25
OFFSET_LNUM	swap/webprobe/web_msg.c	/^	OFFSET_LNUM = offsetof(struct MCallIdentifier, m_lineNumber)$/;"	e	enum:__anon40	file:
OFFSET_NAME	swap/webprobe/web_msg.c	/^	OFFSET_NAME = offsetof(struct MCallIdentifier, m_name),$/;"	e	enum:__anon40	file:
OFFSET_URL	swap/webprobe/web_msg.c	/^	OFFSET_URL = offsetof(struct MCallIdentifier, m_url),$/;"	e	enum:__anon40	file:
OPTIMIZE_DELAY	kprobes.c	474;"	d	file:
OP_AND	trace/trace_events_filter.c	/^	OP_AND,$/;"	e	enum:filter_op_ids	file:
OP_EQ	trace/trace_events_filter.c	/^	OP_EQ,$/;"	e	enum:filter_op_ids	file:
OP_GE	trace/trace_events_filter.c	/^	OP_GE,$/;"	e	enum:filter_op_ids	file:
OP_GLOB	trace/trace_events_filter.c	/^	OP_GLOB,$/;"	e	enum:filter_op_ids	file:
OP_GT	trace/trace_events_filter.c	/^	OP_GT,$/;"	e	enum:filter_op_ids	file:
OP_LE	trace/trace_events_filter.c	/^	OP_LE,$/;"	e	enum:filter_op_ids	file:
OP_LT	trace/trace_events_filter.c	/^	OP_LT,$/;"	e	enum:filter_op_ids	file:
OP_NE	trace/trace_events_filter.c	/^	OP_NE,$/;"	e	enum:filter_op_ids	file:
OP_NONE	trace/trace_events_filter.c	/^	OP_NONE,$/;"	e	enum:filter_op_ids	file:
OP_OPEN_PAREN	trace/trace_events_filter.c	/^	OP_OPEN_PAREN,$/;"	e	enum:filter_op_ids	file:
OP_OR	trace/trace_events_filter.c	/^	OP_OR,$/;"	e	enum:filter_op_ids	file:
ORIG_CFLAGS	trace/Makefile	/^ORIG_CFLAGS := $(KBUILD_CFLAGS)$/;"	m
ORIG_EAX_REG	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	62;"	d
OS_CREATE	swap/nsp/nsp.h	/^	OS_CREATE,$/;"	e	enum:offset_t
OS_RESET	swap/nsp/nsp.h	/^	OS_RESET$/;"	e	enum:offset_t
OWNER_LEN	time/time_history.c	19;"	d	file:
P	sched/debug.c	102;"	d	file:
P	sched/debug.c	259;"	d	file:
P	sched/debug.c	270;"	d	file:
P	sched/debug.c	291;"	d	file:
P	sched/debug.c	316;"	d	file:
P	sched/debug.c	320;"	d	file:
P	sched/debug.c	334;"	d	file:
P	sched/debug.c	370;"	d	file:
P	sched/debug.c	382;"	d	file:
P	sched/debug.c	387;"	d	file:
P	sched/debug.c	397;"	d	file:
P	sched/debug.c	518;"	d	file:
P	sched/debug.c	598;"	d	file:
P	sched/debug.c	65;"	d	file:
P	time/timer_list.c	148;"	d	file:
P	time/timer_list.c	163;"	d	file:
P	time/timer_list.c	167;"	d	file:
P	time/timer_list.c	194;"	d	file:
P64	sched/debug.c	321;"	d	file:
P64	sched/debug.c	335;"	d	file:
PADATA_ATTR_RO	padata.c	974;"	d	file:
PADATA_ATTR_RW	padata.c	971;"	d	file:
PAGES_FOR_IO	power/power.h	44;"	d
PANIC_BLINK_SPD	panic.c	27;"	d	file:
PANIC_TIMER_STEP	panic.c	26;"	d	file:
PARAM_MAX_STACK	trace/trace_probe.c	516;"	d	file:
PATH_LEN	swap/ks_features/file_ops.c	/^enum { PATH_LEN = 512 };$/;"	e	enum:__anon49	file:
PBES_PER_LINKED_PAGE	power/snapshot.c	2079;"	d	file:
PENDING	signal.c	128;"	d	file:
PERF_CGROUP_SWIN	events/core.c	459;"	d	file:
PERF_CGROUP_SWOUT	events/core.c	458;"	d	file:
PERF_FLAG_ALL	events/core.c	121;"	d	file:
PERF_FORMAT_TOTAL_TIMES	events/core.c	4302;"	d	file:
PERF_SAMPLE_BRANCH_PERM_PLM	events/core.c	128;"	d	file:
PE_READ_APPS	swap/energy/energy.h	/^	PE_READ_APPS,		\/**< number of bytes are read by apps *\/$/;"	e	enum:parameter_energy
PE_READ_SYSTEM	swap/energy/energy.h	/^	PE_READ_SYSTEM,		\/**< number of bytes are read by system *\/$/;"	e	enum:parameter_energy
PE_TIME_APPS	swap/energy/energy.h	/^	PE_TIME_APPS,		\/**< apps working time *\/$/;"	e	enum:parameter_energy
PE_TIME_IDLE	swap/energy/energy.h	/^	PE_TIME_IDLE,		\/**< IDLE working time *\/$/;"	e	enum:parameter_energy
PE_TIME_SYSTEM	swap/energy/energy.h	/^	PE_TIME_SYSTEM,		\/**< system working time *\/$/;"	e	enum:parameter_energy
PE_WRITE_APPS	swap/energy/energy.h	/^	PE_WRITE_APPS		\/**< number of bytes are write by apps*\/$/;"	e	enum:parameter_energy
PE_WRITE_SYSTEM	swap/energy/energy.h	/^	PE_WRITE_SYSTEM,	\/**< number of bytes are write by system *\/$/;"	e	enum:parameter_energy
PF_NO_SETAFFINITY	sys.c	370;"	d	file:
PG_ANY	power/snapshot.c	88;"	d	file:
PG_SAFE	power/snapshot.c	89;"	d	file:
PG_UNSAFE_CLEAR	power/snapshot.c	90;"	d	file:
PG_UNSAFE_KEEP	power/snapshot.c	91;"	d	file:
PIDLIST_TOO_LARGE	cgroup.c	3395;"	d	file:
PID_STRING	swap/us_manager/debugfs_us_manager.c	11;"	d	file:
PIF_ADD_PFG	swap/us_manager/pf/pf_group.c	/^	PIF_ADD_PFG$/;"	e	enum:pf_inst_flag	file:
PIF_FIRST	swap/us_manager/pf/pf_group.c	/^	PIF_FIRST,$/;"	e	enum:pf_inst_flag	file:
PIF_NONE	swap/us_manager/pf/pf_group.c	/^	PIF_NONE,$/;"	e	enum:pf_inst_flag	file:
PIF_SECOND	swap/us_manager/pf/pf_group.c	/^	PIF_SECOND,$/;"	e	enum:pf_inst_flag	file:
PN	sched/debug.c	101;"	d	file:
PN	sched/debug.c	261;"	d	file:
PN	sched/debug.c	269;"	d	file:
PN	sched/debug.c	299;"	d	file:
PN	sched/debug.c	317;"	d	file:
PN	sched/debug.c	372;"	d	file:
PN	sched/debug.c	381;"	d	file:
PN	sched/debug.c	389;"	d	file:
PN	sched/debug.c	396;"	d	file:
PN	sched/debug.c	522;"	d	file:
PN	sched/debug.c	596;"	d	file:
PN	sched/debug.c	67;"	d	file:
POLL_SPURIOUS_IRQ_INTERVAL	irq/spurious.c	21;"	d	file:
POOL_DISASSOCIATED	workqueue.c	/^	POOL_DISASSOCIATED	= 1 << 2,	\/* cpu can't serve workers *\/$/;"	e	enum:__anon24	file:
POOL_FREEZING	workqueue.c	/^	POOL_FREEZING		= 1 << 3,	\/* freeze in progress *\/$/;"	e	enum:__anon24	file:
POOL_MANAGE_WORKERS	workqueue.c	/^	POOL_MANAGE_WORKERS	= 1 << 0,	\/* need to manage workers *\/$/;"	e	enum:__anon24	file:
PPS_INTCOUNT	time/ntp.c	91;"	d	file:
PPS_INTMAX	time/ntp.c	90;"	d	file:
PPS_INTMIN	time/ntp.c	89;"	d	file:
PPS_MAXWANDER	time/ntp.c	94;"	d	file:
PPS_POPCORN	time/ntp.c	88;"	d	file:
PPS_VALID	time/ntp.c	87;"	d	file:
PREFIX_MAX	printk.c	1809;"	d	file:
PREFIX_MAX	printk.c	261;"	d	file:
PREFIX_MAX	printk.c	263;"	d	file:
PRELOAD_BINARIES	swap/preload/preload_debugfs.c	/^static const char PRELOAD_BINARIES[] = "target_binaries";$/;"	v	file:
PRELOAD_BINARIES_ADD	swap/preload/preload_debugfs.c	/^static const char PRELOAD_BINARIES_ADD[] = "bins_add";$/;"	v	file:
PRELOAD_BINARIES_LIST	swap/preload/preload_debugfs.c	/^static const char PRELOAD_BINARIES_LIST[] = "bins_list";$/;"	v	file:
PRELOAD_BINARIES_REMOVE	swap/preload/preload_debugfs.c	/^static const char PRELOAD_BINARIES_REMOVE[] = "bins_remove";$/;"	v	file:
PRELOAD_CALLER	swap/preload/preload_debugfs.c	/^static const char PRELOAD_CALLER[] = "caller";$/;"	v	file:
PRELOAD_DEFAULT_PERMS	swap/preload/preload.h	6;"	d
PRELOAD_FOLDER	swap/preload/preload_debugfs.c	/^static const char PRELOAD_FOLDER[] = "preload";$/;"	v	file:
PRELOAD_HANDLERS_PATH	swap/preload/preload_debugfs.c	/^static const char PRELOAD_HANDLERS_PATH[] = "handlers_path";$/;"	v	file:
PRELOAD_LINKER_DATA	swap/preload/preload_debugfs.c	/^static const char PRELOAD_LINKER_DATA[] = "linker";$/;"	v	file:
PRELOAD_LINKER_PATH	swap/preload/preload_debugfs.c	/^static const char PRELOAD_LINKER_PATH[] = "linker_path";$/;"	v	file:
PRELOAD_LINKER_R_DEBUG_OFFSET	swap/preload/preload_debugfs.c	/^static const char PRELOAD_LINKER_R_DEBUG_OFFSET[] = "r_debug_offset";$/;"	v	file:
PRELOAD_LOADER	swap/preload/preload_debugfs.c	/^static const char PRELOAD_LOADER[] = "loader";$/;"	v	file:
PRELOAD_LOADER_OFFSET	swap/preload/preload_debugfs.c	/^static const char PRELOAD_LOADER_OFFSET[] = "loader_offset";$/;"	v	file:
PRELOAD_LOADER_PATH	swap/preload/preload_debugfs.c	/^static const char PRELOAD_LOADER_PATH[] = "loader_path";$/;"	v	file:
PRELOAD_MAX_ATTEMPTS	swap/preload/preload.h	5;"	d
PRELOAD_PREFIX	swap/preload/preload.h	4;"	d
PRINTK_BUF_SIZE	printk.c	2556;"	d	file:
PRINTK_PENDING_SCHED	printk.c	2559;"	d	file:
PRINTK_PENDING_WAKEUP	printk.c	2558;"	d	file:
PRINTK_STRING	rcutorture.c	123;"	d	file:
PRINT_TYPE_FMT_NAME	trace/trace_probe.c	40;"	d	file:
PRINT_TYPE_FUNC_NAME	trace/trace_probe.c	39;"	d	file:
PRIO_TO_NICE	sched/sched.h	21;"	d
PROBE_TEST_DATA	trace/ftrace.c	/^	PROBE_TEST_DATA		= 2$/;"	e	enum:__anon86	file:
PROBE_TEST_FUNC	trace/ftrace.c	/^	PROBE_TEST_FUNC		= 1,$/;"	e	enum:__anon86	file:
PROCESS_CLOCK	posix-cpu-timers.c	1581;"	d	file:
PROFILES_PER_PAGE	trace/ftrace.c	550;"	d	file:
PROFILE_GRPSHIFT	profile.c	35;"	d	file:
PROFILE_GRPSZ	profile.c	36;"	d	file:
PROFILE_RECORDS_SIZE	trace/ftrace.c	547;"	d	file:
PROF_OFF	swap/webprobe/webprobe_prof.h	/^	PROF_OFF,$/;"	e	enum:web_prof_state_t
PROF_ON	swap/webprobe/webprobe_prof.h	/^	PROF_ON$/;"	e	enum:web_prof_state_t
PTRN_ARM_INSN_AUNDEF	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	242;"	d
PTRN_ARM_INSN_B	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	246;"	d
PTRN_ARM_INSN_BL	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	264;"	d
PTRN_ARM_INSN_BLX1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	274;"	d
PTRN_ARM_INSN_BLX2	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	283;"	d
PTRN_ARM_INSN_BREAK	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	310;"	d
PTRN_ARM_INSN_BX	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	289;"	d
PTRN_ARM_INSN_BXJ	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	295;"	d
PTRN_ARM_INSN_CLS	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	550;"	d
PTRN_ARM_INSN_CLZ	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	318;"	d
PTRN_ARM_INSN_CRT	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	553;"	d
PTRN_ARM_INSN_DPI	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	332;"	d
PTRN_ARM_INSN_DPIS	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	322;"	d
PTRN_ARM_INSN_DPRS	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	325;"	d
PTRN_ARM_INSN_LIO	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	385;"	d
PTRN_ARM_INSN_LM	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	535;"	d
PTRN_ARM_INSN_LRO	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	495;"	d
PTRN_ARM_INSN_SIO	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	440;"	d
PTRN_ARM_INSN_SM	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	545;"	d
PTRN_ARM_INSN_SRO	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	522;"	d
PTRN_ARM_INSN_SWI	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	303;"	d
PTRN_ARM_INSN_UNDEF	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	235;"	d
PTRN_THUMB2_INSN_ADR	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	516;"	d
PTRN_THUMB2_INSN_B1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	258;"	d
PTRN_THUMB2_INSN_B2	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	261;"	d
PTRN_THUMB2_INSN_BL	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	271;"	d
PTRN_THUMB2_INSN_BLX1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	280;"	d
PTRN_THUMB2_INSN_BXJ	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	298;"	d
PTRN_THUMB2_INSN_DP	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	433;"	d
PTRN_THUMB2_INSN_DPI	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	343;"	d
PTRN_THUMB2_INSN_DPRS	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	328;"	d
PTRN_THUMB2_INSN_LDMDB	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	541;"	d
PTRN_THUMB2_INSN_LDMIA	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	538;"	d
PTRN_THUMB2_INSN_LDRBW	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	406;"	d
PTRN_THUMB2_INSN_LDRBW1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	409;"	d
PTRN_THUMB2_INSN_LDRD	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	418;"	d
PTRN_THUMB2_INSN_LDRD1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	421;"	d
PTRN_THUMB2_INSN_LDREX	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	427;"	d
PTRN_THUMB2_INSN_LDRHW	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	412;"	d
PTRN_THUMB2_INSN_LDRHW1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	415;"	d
PTRN_THUMB2_INSN_LDRW	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	400;"	d
PTRN_THUMB2_INSN_LDRW1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	403;"	d
PTRN_THUMB2_INSN_LDRWL	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	424;"	d
PTRN_THUMB2_INSN_LSLW1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	359;"	d
PTRN_THUMB2_INSN_LSLW2	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	362;"	d
PTRN_THUMB2_INSN_LSRW1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	365;"	d
PTRN_THUMB2_INSN_LSRW2	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	368;"	d
PTRN_THUMB2_INSN_MUL	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	430;"	d
PTRN_THUMB2_INSN_ROR	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	356;"	d
PTRN_THUMB2_INSN_RORW	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	353;"	d
PTRN_THUMB2_INSN_RSBW	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	350;"	d
PTRN_THUMB2_INSN_STRBT	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	486;"	d
PTRN_THUMB2_INSN_STRBW	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	477;"	d
PTRN_THUMB2_INSN_STRBW1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	480;"	d
PTRN_THUMB2_INSN_STRD	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	490;"	d
PTRN_THUMB2_INSN_STRHT	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	471;"	d
PTRN_THUMB2_INSN_STRHW	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	464;"	d
PTRN_THUMB2_INSN_STRHW1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	467;"	d
PTRN_THUMB2_INSN_STRT	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	474;"	d
PTRN_THUMB2_INSN_STRW	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	455;"	d
PTRN_THUMB2_INSN_STRW1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	458;"	d
PTRN_THUMB2_INSN_TEQ1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	371;"	d
PTRN_THUMB2_INSN_TEQ2	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	374;"	d
PTRN_THUMB2_INSN_TST1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	377;"	d
PTRN_THUMB2_INSN_TST2	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	380;"	d
PTRN_THUMB_INSN_APC	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	338;"	d
PTRN_THUMB_INSN_B1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	249;"	d
PTRN_THUMB_INSN_B2	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	252;"	d
PTRN_THUMB_INSN_BLX2	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	286;"	d
PTRN_THUMB_INSN_BREAK	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	314;"	d
PTRN_THUMB_INSN_BX	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	292;"	d
PTRN_THUMB_INSN_CBZ	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	255;"	d
PTRN_THUMB_INSN_DP	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	335;"	d
PTRN_THUMB_INSN_LIO1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	388;"	d
PTRN_THUMB_INSN_LIO2	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	391;"	d
PTRN_THUMB_INSN_LIO3	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	394;"	d
PTRN_THUMB_INSN_LIO4	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	397;"	d
PTRN_THUMB_INSN_LRO1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	498;"	d
PTRN_THUMB_INSN_LRO2	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	501;"	d
PTRN_THUMB_INSN_LRO3	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	504;"	d
PTRN_THUMB_INSN_LRO4	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	507;"	d
PTRN_THUMB_INSN_LRO5	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	510;"	d
PTRN_THUMB_INSN_LRO6	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	513;"	d
PTRN_THUMB_INSN_MOV3	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	347;"	d
PTRN_THUMB_INSN_SIO1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	443;"	d
PTRN_THUMB_INSN_SIO2	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	446;"	d
PTRN_THUMB_INSN_SIO3	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	449;"	d
PTRN_THUMB_INSN_SIO4	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	452;"	d
PTRN_THUMB_INSN_SRO1	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	525;"	d
PTRN_THUMB_INSN_SRO2	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	528;"	d
PTRN_THUMB_INSN_SRO3	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	531;"	d
PTRN_THUMB_INSN_SWI	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	306;"	d
PTRN_THUMB_INSN_UNDEF	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	238;"	d
PT_CPU	swap/energy/energy.c	/^	PT_CPU,$/;"	e	enum:parameter_type	file:
PT_FILE	swap/ks_features/file_ops.c	18;"	d	file:
PT_KS_DESC	swap/ks_features/ksf_msg.h	/^	PT_KS_DESC	= 0x20$/;"	e	enum:probe_t
PT_KS_FILE	swap/ks_features/ksf_msg.h	/^	PT_KS_FILE	= 0x01,$/;"	e	enum:probe_t
PT_KS_IPC	swap/ks_features/ksf_msg.h	/^	PT_KS_IPC	= 0x02,$/;"	e	enum:probe_t
PT_KS_NETWORK	swap/ks_features/ksf_msg.h	/^	PT_KS_NETWORK	= 0x10,$/;"	e	enum:probe_t
PT_KS_NONE	swap/ks_features/ksf_msg.h	/^	PT_KS_NONE	= 0x00,$/;"	e	enum:probe_t
PT_KS_PROCESS	swap/ks_features/ksf_msg.h	/^	PT_KS_PROCESS	= 0x04,$/;"	e	enum:probe_t
PT_KS_SIGNAL	swap/ks_features/ksf_msg.h	/^	PT_KS_SIGNAL	= 0x08,$/;"	e	enum:probe_t
PT_READ	swap/energy/energy.c	/^	PT_READ,$/;"	e	enum:parameter_type	file:
PT_WRITE	swap/energy/energy.c	/^	PT_WRITE$/;"	e	enum:parameter_type	file:
PW_OFF	swap/energy/lcd/lcd_base.c	/^	PW_OFF$/;"	e	enum:power_t	file:
PW_ON	swap/energy/lcd/lcd_base.c	/^	PW_ON,$/;"	e	enum:power_t	file:
P_ns	time/timer_list.c	151;"	d	file:
P_ns	time/timer_list.c	164;"	d	file:
P_ns	time/timer_list.c	170;"	d	file:
P_ns	time/timer_list.c	195;"	d	file:
QT_OFF	swap/us_manager/us_manager.h	/^	QT_OFF		\/**< Quiet mode - off *\/$/;"	e	enum:quiet_type
QT_ON	swap/us_manager/us_manager.h	/^	QT_ON,		\/**< Quiet mode - on *\/$/;"	e	enum:quiet_type
RB_ALIGNMENT	trace/ring_buffer.c	180;"	d	file:
RB_ALIGN_DATA	trace/ring_buffer.c	/^	unsigned char	 data[] RB_ALIGN_DATA;	\/* data of buffer page *\/$/;"	m	struct:buffer_data_page	file:
RB_ALIGN_DATA	trace/ring_buffer.c	192;"	d	file:
RB_ARCH_ALIGNMENT	trace/ring_buffer.c	186;"	d	file:
RB_ARCH_ALIGNMENT	trace/ring_buffer.c	189;"	d	file:
RB_BUFFERS_DISABLED	trace/ring_buffer.c	/^	RB_BUFFERS_DISABLED	= 1 << RB_BUFFERS_DISABLED_BIT,$/;"	e	enum:__anon74	file:
RB_BUFFERS_DISABLED_BIT	trace/ring_buffer.c	/^	RB_BUFFERS_DISABLED_BIT	= 1,$/;"	e	enum:__anon73	file:
RB_BUFFERS_ON	trace/ring_buffer.c	/^	RB_BUFFERS_ON		= 1 << RB_BUFFERS_ON_BIT,$/;"	e	enum:__anon74	file:
RB_BUFFERS_ON_BIT	trace/ring_buffer.c	/^	RB_BUFFERS_ON_BIT	= 0,$/;"	e	enum:__anon73	file:
RB_BUFFER_OFF	trace/ring_buffer.c	164;"	d	file:
RB_EVNT_HDR_SIZE	trace/ring_buffer.c	179;"	d	file:
RB_EVNT_MIN_SIZE	trace/ring_buffer.c	182;"	d	file:
RB_FLAG_MASK	trace/ring_buffer.c	771;"	d	file:
RB_FORCE_8BYTE_ALIGNMENT	trace/ring_buffer.c	185;"	d	file:
RB_FORCE_8BYTE_ALIGNMENT	trace/ring_buffer.c	188;"	d	file:
RB_LEN_TIME_EXTEND	trace/ring_buffer.c	/^	RB_LEN_TIME_EXTEND = 8,$/;"	e	enum:__anon75	file:
RB_LEN_TIME_STAMP	trace/ring_buffer.c	/^	RB_LEN_TIME_STAMP = 16,$/;"	e	enum:__anon75	file:
RB_MAX_SMALL_DATA	trace/ring_buffer.c	181;"	d	file:
RB_MISSED_EVENTS	trace/ring_buffer.c	335;"	d	file:
RB_MISSED_STORED	trace/ring_buffer.c	337;"	d	file:
RB_PAGE_HEAD	trace/ring_buffer.c	767;"	d	file:
RB_PAGE_MOVED	trace/ring_buffer.c	774;"	d	file:
RB_PAGE_NORMAL	trace/ring_buffer.c	766;"	d	file:
RB_PAGE_UPDATE	trace/ring_buffer.c	768;"	d	file:
RB_TEST_BUFFER_SIZE	trace/ring_buffer.c	4701;"	d	file:
RB_WARN_ON	trace/ring_buffer.c	653;"	d	file:
RB_WRITE_INTCNT	trace/ring_buffer.c	375;"	d	file:
RB_WRITE_MASK	trace/ring_buffer.c	374;"	d	file:
RCUTORTURE_RUNNABLE_INIT	rcutorture.c	197;"	d	file:
RCUTORTURE_RUNNABLE_INIT	rcutorture.c	199;"	d	file:
RCU_BOOST_DELAY_JIFFIES	rcutiny_plugin.h	407;"	d
RCU_BOOST_DELAY_JIFFIES	rcutree_plugin.h	1315;"	d
RCU_BOOST_PRIO	rcutiny_plugin.h	307;"	d
RCU_BOOST_PRIO	rcutree_plugin.h	36;"	d
RCU_BOOST_PRIO	rcutree_plugin.h	38;"	d
RCU_DONE_TAIL	rcutree.h	229;"	d
RCU_FANOUT_1	rcutree.h	40;"	d
RCU_FANOUT_2	rcutree.h	41;"	d
RCU_FANOUT_3	rcutree.h	42;"	d
RCU_FANOUT_4	rcutree.h	43;"	d
RCU_FORCE_QS	rcutree.h	343;"	d
RCU_GP_FLAG_FQS	rcutree.h	451;"	d
RCU_GP_FLAG_INIT	rcutree.h	450;"	d
RCU_GP_IDLE	rcutree.h	340;"	d
RCU_GP_INIT	rcutree.h	341;"	d
RCU_IDLE_GP_DELAY	rcutree_plugin.h	1599;"	d
RCU_IDLE_LAZY_GP_DELAY	rcutree_plugin.h	1600;"	d
RCU_JIFFIES_TILL_FORCE_QS	rcutree.h	346;"	d
RCU_KTHREAD_MAX	rcutree.h	109;"	d
RCU_KTHREAD_OFFCPU	rcutree.h	107;"	d
RCU_KTHREAD_PRIO	rcutree_plugin.h	33;"	d
RCU_KTHREAD_RUNNING	rcutree.h	105;"	d
RCU_KTHREAD_STOPPED	rcutree.h	104;"	d
RCU_KTHREAD_WAITING	rcutree.h	106;"	d
RCU_KTHREAD_YIELDING	rcutree.h	108;"	d
RCU_NEXT_READY_TAIL	rcutree.h	231;"	d
RCU_NEXT_SIZE	rcutree.h	233;"	d
RCU_NEXT_TAIL	rcutree.h	232;"	d
RCU_NUM_LVLS	rcutree.h	46;"	d
RCU_NUM_LVLS	rcutree.h	53;"	d
RCU_NUM_LVLS	rcutree.h	60;"	d
RCU_NUM_LVLS	rcutree.h	67;"	d
RCU_OFL_TASKS_EXP_GP	rcutree.h	463;"	d
RCU_OFL_TASKS_NORM_GP	rcutree.h	461;"	d
RCU_RANDOM_ADD	rcutorture.c	319;"	d	file:
RCU_RANDOM_MULT	rcutorture.c	318;"	d	file:
RCU_RANDOM_REFRESH	rcutorture.c	320;"	d	file:
RCU_SAVE_DYNTICK	rcutree.h	342;"	d
RCU_SIGNAL_INIT	rcutree.h	344;"	d
RCU_STALL_DELAY_DELTA	rcupdate.c	422;"	d	file:
RCU_STALL_DELAY_DELTA	rcupdate.c	424;"	d	file:
RCU_STALL_RAT_DELAY	rcutree.h	348;"	d
RCU_STATE_INITIALIZER	rcutree.c	67;"	d	file:
RCU_SUM	rcutree.h	77;"	d
RCU_TORTURE_PIPE_LEN	rcutorture.c	149;"	d	file:
RCU_TRACE	rcu.h	27;"	d
RCU_TRACE	rcu.h	29;"	d
RCU_TREE_NONCORE	rcutree_trace.c	46;"	d	file:
RCU_WAIT_TAIL	rcutree.h	230;"	d
RECLAIM_FS_verbose	lockdep.c	/^static int RECLAIM_FS_verbose(struct lock_class *class)$/;"	f	file:
RECLAIM_VERBOSE	lockdep.c	341;"	d	file:
RECLAIM_VERBOSE	lockdep.c	345;"	d	file:
RECORD_COUNT	gcov/gcc_3_4.c	309;"	d	file:
RECORD_COUNT_LEN	gcov/gcc_3_4.c	308;"	d	file:
RECORD_COUNT_TAG	gcov/gcc_3_4.c	307;"	d	file:
RECORD_FILE_MAGIC	gcov/gcc_3_4.c	300;"	d	file:
RECORD_FUNCTION_CHECK	gcov/gcc_3_4.c	306;"	d	file:
RECORD_FUNCTION_IDENT	gcov/gcc_3_4.c	305;"	d	file:
RECORD_FUNCTION_TAG	gcov/gcc_3_4.c	303;"	d	file:
RECORD_FUNCTON_TAG_LEN	gcov/gcc_3_4.c	304;"	d	file:
RECORD_GCOV_VERSION	gcov/gcc_3_4.c	301;"	d	file:
RECORD_TIME_STAMP	gcov/gcc_3_4.c	302;"	d	file:
REDUCE_FLS	events/core.c	2519;"	d	file:
REGISTER	taskstats.c	/^	REGISTER,$/;"	e	enum:actions	file:
RELATIVEJUMP_INSTRUCTION	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	46;"	d
RESCUER_NICE_LEVEL	workqueue.c	/^	RESCUER_NICE_LEVEL	= -20,$/;"	e	enum:__anon24	file:
RESERVED_PIDS	pid.c	50;"	d	file:
RESUME	acct.c	71;"	d	file:
RETPROBE_STACK_DEPTH	swap/kprobe/swap_kprobes.h	80;"	d
RINGBUF_TYPE_DATA	trace/ring_buffer.c	195;"	d	file:
RING_BUFFER_WRITABLE	events/internal.h	9;"	d
ROOT_TASK_GROUP_LOAD	sched/sched.h	170;"	d
RP_PREFIX	swap/retprobe/rp_msg.c	30;"	d	file:
RTTEST_LOCK	rtmutex-tester.c	/^	RTTEST_LOCK,		\/* 3 Lock uninterruptible, data = lockindex *\/$/;"	e	enum:test_opcodes	file:
RTTEST_LOCKCONT	rtmutex-tester.c	/^	RTTEST_LOCKCONT,	\/* 7 Continue locking after the wakeup delay *\/$/;"	e	enum:test_opcodes	file:
RTTEST_LOCKINT	rtmutex-tester.c	/^	RTTEST_LOCKINT,		\/* 5 Lock interruptible, data = lockindex *\/$/;"	e	enum:test_opcodes	file:
RTTEST_LOCKINTNOWAIT	rtmutex-tester.c	/^	RTTEST_LOCKINTNOWAIT,	\/* 6 Lock interruptible no wait in wakeup, data = lockindex *\/$/;"	e	enum:test_opcodes	file:
RTTEST_LOCKNOWAIT	rtmutex-tester.c	/^	RTTEST_LOCKNOWAIT,	\/* 4 Lock uninterruptible no wait in wakeup, data = lockindex *\/$/;"	e	enum:test_opcodes	file:
RTTEST_NOP	rtmutex-tester.c	/^	RTTEST_NOP = 0,$/;"	e	enum:test_opcodes	file:
RTTEST_RESET	rtmutex-tester.c	/^	RTTEST_RESET = 99,	\/* 99 Reset all pending operations *\/$/;"	e	enum:test_opcodes	file:
RTTEST_RESETEVENT	rtmutex-tester.c	/^	RTTEST_RESETEVENT = 98,	\/* 98 Reset event counter *\/$/;"	e	enum:test_opcodes	file:
RTTEST_SCHEDOT	rtmutex-tester.c	/^	RTTEST_SCHEDOT,		\/* 1 Sched other, data = nice *\/$/;"	e	enum:test_opcodes	file:
RTTEST_SCHEDRT	rtmutex-tester.c	/^	RTTEST_SCHEDRT,		\/* 2 Sched fifo, data = prio *\/$/;"	e	enum:test_opcodes	file:
RTTEST_SIGNAL	rtmutex-tester.c	/^	RTTEST_SIGNAL = 11,	\/* 11 Signal other test thread, data = thread id *\/$/;"	e	enum:test_opcodes	file:
RTTEST_UNLOCK	rtmutex-tester.c	/^	RTTEST_UNLOCK,		\/* 8 Unlock, data = lockindex *\/$/;"	e	enum:test_opcodes	file:
RT_MAX_TRIES	sched/rt.c	1441;"	d	file:
RT_MUTEX_HAS_WAITERS	rtmutex_common.h	94;"	d
RT_MUTEX_OWNER_MASKALL	rtmutex_common.h	95;"	d
RUNNING	debug/kdb/kdb_support.c	557;"	d	file:
RUNNING_HELPERS_TIMEOUT	kmod.c	382;"	d	file:
RUNTIME_INF	sched/sched.h	73;"	d
RUN_TIME	trace/ring_buffer_benchmark.c	20;"	d	file:
R_ADDR	swap/ks_features/file_ops.c	205;"	d	file:
SAVED_CMDLINES	trace/trace.c	1247;"	d	file:
SCHEDSTAT_VERSION	sched/stats.c	13;"	d	file:
SCHED_FEAT	sched/core.c	145;"	d	file:
SCHED_FEAT	sched/core.c	152;"	d	file:
SCHED_FEAT	sched/core.c	155;"	d	file:
SCHED_FEAT	sched/core.c	162;"	d	file:
SCHED_FEAT	sched/core.c	183;"	d	file:
SCHED_FEAT	sched/core.c	190;"	d	file:
SCHED_FEAT	sched/sched.h	734;"	d
SCHED_FEAT	sched/sched.h	742;"	d
SCHED_FEAT	sched/sched.h	755;"	d
SCHED_FEAT	sched/sched.h	763;"	d
SCHED_FREQSCALE_SHIFT	sched/fair.c	1291;"	d	file:
SCHED_LOAD_FREQINVAR_SINGLEFREQ	sched/fair.c	1301;"	d	file:
SCHED_LOAD_RESOLUTION	sched/sched.h	55;"	d
SCHED_LOAD_SCALE	sched/sched.h	61;"	d
SCHED_LOAD_SHIFT	sched/sched.h	60;"	d
SCHED_RP_NR	swap/kprobe/swap_kprobes.c	801;"	d	file:
SDTL_OVERLAP	sched/core.c	5821;"	d	file:
SD_INIT_FUNC	sched/core.c	6064;"	d	file:
SD_INIT_NAME	sched/core.c	6059;"	d	file:
SD_INIT_NAME	sched/core.c	6061;"	d	file:
SECS_PER_DAY	time/timeconv.c	67;"	d	file:
SECS_PER_HOUR	time/timeconv.c	66;"	d	file:
SEQ_PUT_FIELD_RET	trace/trace_output.h	41;"	d
SEQ_PUT_HEX_FIELD_RET	trace/trace_output.h	47;"	d
SEQ_printf	sched/debug.c	27;"	d	file:
SEQ_printf	time/timer_list.c	38;"	d	file:
SET_ENDIAN	sys.c	90;"	d	file:
SET_FPEMU_CTL	sys.c	75;"	d	file:
SET_FPEXC_CTL	sys.c	81;"	d	file:
SET_POWEROFF_ALARM	time/alarmtimer.c	/^	SET_POWEROFF_ALARM,$/;"	e	enum:ALARM_TYPE	file:
SET_POWERON_ALARM	time/alarmtimer.c	/^	SET_POWERON_ALARM = 0,$/;"	e	enum:ALARM_TYPE	file:
SET_SYSCTL	sched/fair.c	162;"	d	file:
SET_SYSCTL	sched/fair.c	167;"	d	file:
SET_TSC_CTL	sys.c	96;"	d	file:
SET_UNALIGN_CTL	sys.c	69;"	d	file:
SET_WAKE_ALARM	time/alarmtimer.c	/^	SET_WAKE_ALARM,$/;"	e	enum:ALARM_TYPE	file:
SF_CRC32_MODE	power/power.h	151;"	d
SF_NOCOMPRESS_MODE	power/power.h	150;"	d
SF_PLATFORM_MODE	power/power.h	149;"	d
SIZEOF_TRACE_ENTRY	trace/trace_uprobe.c	36;"	d	file:
SIZEOF_TRACE_PROBE	trace/trace_kprobe.c	44;"	d	file:
SIZEOF_TRACE_UPROBE	trace/trace_uprobe.c	68;"	d	file:
SIZE_APP_TYPE	swap/parser/msg_parser.h	/^	SIZE_APP_TYPE = 4$/;"	e	enum:__anon53
SIZE_FEATURE_LIST	swap/parser/features.c	/^	SIZE_FEATURE_LIST =$/;"	e	enum:__anon55	file:
SKEW_PREFIX	gcov/fs.c	349;"	d	file:
SLEEP_HISTORY_MAGIC_NUMBER	power/sleep_history.c	38;"	d	file:
SLEEP_HISTORY_RINGBUFFER_SIZE	power/sleep_history.c	40;"	d	file:
SLEEP_TIME	trace/ring_buffer_benchmark.c	21;"	d	file:
SLOT_CLEAN	kprobes.c	/^	SLOT_CLEAN = 0,$/;"	e	enum:kprobe_slot_state	file:
SLOT_DIRTY	kprobes.c	/^	SLOT_DIRTY = 1,$/;"	e	enum:kprobe_slot_state	file:
SLOT_USED	kprobes.c	/^	SLOT_USED = 2,$/;"	e	enum:kprobe_slot_state	file:
SLO_REGISTER	swap/energy/lcd/lcd_base.c	/^	SLO_REGISTER	= 1 << 0,$/;"	e	enum:ST_LCD_OPS	file:
SLO_SET	swap/energy/lcd/lcd_base.c	/^	SLO_SET		= 1 << 1$/;"	e	enum:ST_LCD_OPS	file:
SMPBOOT_H	smpboot.h	2;"	d
SNAPSHOT_MINOR	power/user.c	33;"	d	file:
SOFTIRQ_VERBOSE	lockdep.c	340;"	d	file:
SOFTIRQ_VERBOSE	lockdep.c	344;"	d	file:
SOFTIRQ_verbose	lockdep.c	/^static int SOFTIRQ_verbose(struct lock_class *class)$/;"	f	file:
SPARE_PAGES	power/power.h	50;"	d
SPLIT_NS	sched/debug.c	58;"	d	file:
SPURIOUS_DEFERRED	irq/spurious.c	268;"	d	file:
SRCU_CALLBACK_BATCH	srcu.c	514;"	d	file:
SRCU_INTERVAL	srcu.c	515;"	d	file:
SRCU_RETRY_CHECK_DELAY	srcu.c	332;"	d	file:
SRC_TREE	gcov/gcov.h	/^		SRC_TREE,$/;"	e	enum:gcov_link::__anon25
SRR	sched/fair.c	186;"	d	file:
SSPT_FEATURE_ID_BAD	swap/us_manager/sspt/sspt_feature.h	30;"	d
STACK_SKIP	trace/trace_functions.c	275;"	d	file:
STACK_TRACE_ENTRIES	trace/trace_stack.c	21;"	d	file:
STANDARD_PARAM_DEF	params.c	230;"	d	file:
START_CB	swap/us_manager/callbacks.h	/^	START_CB = 0,$/;"	e	enum:callback_t
STATE_RCU_HEAD_QUEUED	rcu.h	66;"	d
STATE_RCU_HEAD_READY	rcu.h	65;"	d
STOPMACHINE_DISABLE_IRQ	stop_machine.c	/^	STOPMACHINE_DISABLE_IRQ,$/;"	e	enum:stopmachine_state	file:
STOPMACHINE_EXIT	stop_machine.c	/^	STOPMACHINE_EXIT,$/;"	e	enum:stopmachine_state	file:
STOPMACHINE_NONE	stop_machine.c	/^	STOPMACHINE_NONE,$/;"	e	enum:stopmachine_state	file:
STOPMACHINE_PREPARE	stop_machine.c	/^	STOPMACHINE_PREPARE,$/;"	e	enum:stopmachine_state	file:
STOPMACHINE_RUN	stop_machine.c	/^	STOPMACHINE_RUN,$/;"	e	enum:stopmachine_state	file:
STOP_CB	swap/us_manager/callbacks.h	/^	STOP_CB,$/;"	e	enum:callback_t
STOP_CB_TD	swap/us_manager/callbacks.h	/^	STOP_CB_TD$/;"	e	enum:callback_t
STRICT_READ_CHECKS	lockdep.c	2423;"	d	file:
ST_LCD_OPS	swap/energy/lcd/lcd_base.c	/^enum ST_LCD_OPS {$/;"	g	file:
ST_OFF	swap/us_manager/us_manager.h	/^	ST_OFF,		\/**< Instrumentation status - off *\/$/;"	e	enum:status_type
ST_ON	swap/us_manager/us_manager.h	/^	ST_ON		\/**< Instrumentation status - on *\/$/;"	e	enum:status_type
SUBSYS	cgroup.c	108;"	d	file:
SUFFIX_HIGH	kexec.c	1363;"	d	file:
SUFFIX_LOW	kexec.c	1364;"	d	file:
SUFFIX_NULL	kexec.c	1365;"	d	file:
SUPRESS_BUG_MESSAGES	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	42;"	d	file:
SUSPEND	acct.c	72;"	d	file:
SUSPENDED	power/earlysuspend.c	/^	SUSPENDED = 0x2,$/;"	e	enum:__anon30	file:
SUSPEND_BACKOFF_INTERVAL	power/wakelock.c	58;"	d	file:
SUSPEND_BACKOFF_THRESHOLD	power/wakelock.c	57;"	d	file:
SUSPEND_CONSOLE	power/console.c	14;"	d	file:
SUSPEND_REQUESTED	power/earlysuspend.c	/^	SUSPEND_REQUESTED = 0x1,$/;"	e	enum:__anon30	file:
SUSPEND_REQUESTED_AND_SUSPENDED	power/earlysuspend.c	/^	SUSPEND_REQUESTED_AND_SUSPENDED = SUSPEND_REQUESTED | SUSPENDED,$/;"	e	enum:__anon30	file:
SUSPEND_SYS_SYNC_TIMEOUT	power/wakelock.c	296;"	d	file:
SWAP_DEFINE_SIMPLE_ATTRIBUTE	swap/energy/debugfs_energy.h	39;"	d
SWAP_DEVICE_NAME	swap/driver/device_driver.c	58;"	d	file:
SWAP_DRIVER_BUFFER_INITIALIZE	swap/driver/swap_ioctl.h	54;"	d
SWAP_DRIVER_BUFFER_UNINITIALIZE	swap/driver/swap_ioctl.h	57;"	d
SWAP_DRIVER_FLUSH_BUFFER	swap/driver/swap_ioctl.h	61;"	d
SWAP_DRIVER_IOC_MAGIC	swap/driver/swap_ioctl.h	36;"	d
SWAP_DRIVER_MSG	swap/driver/swap_ioctl.h	63;"	d
SWAP_DRIVER_NEXT_BUFFER_TO_READ	swap/driver/swap_ioctl.h	59;"	d
SWAP_DRIVER_WAKE_UP	swap/driver/swap_ioctl.h	66;"	d
SWAP_FBIPROBE	swap/us_manager/probes/probes.h	/^	SWAP_FBIPROBE = 1,          \/* FBI probe *\/$/;"	e	enum:probe_t
SWAP_GET_CALLER	swap/us_manager/probes/probes.h	/^	SWAP_GET_CALLER = 4,        \/* Get caller probe. Supports preload *\/$/;"	e	enum:probe_t
SWAP_GET_CALL_TYPE	swap/us_manager/probes/probes.h	/^	SWAP_GET_CALL_TYPE = 5,     \/* Get call type probe. Supports preload *\/$/;"	e	enum:probe_t
SWAP_LIGHT_INIT_MODULE	swap/master/swap_initializer.h	76;"	d
SWAP_MSG_BUF_SIZE	swap/writer/swap_msg.h	/^	SWAP_MSG_BUF_SIZE = 32 * 1024,$/;"	e	enum:__anon64
SWAP_MSG_PAYLOAD_SIZE	swap/writer/swap_msg.h	/^	SWAP_MSG_PAYLOAD_SIZE = SWAP_MSG_BUF_SIZE - SWAP_MSG_PRIV_DATA$/;"	e	enum:__anon64
SWAP_MSG_PRIV_DATA	swap/writer/swap_msg.h	/^	SWAP_MSG_PRIV_DATA = 20,$/;"	e	enum:__anon64
SWAP_NEW_UP	swap/us_manager/probes/probes.h	/^	SWAP_NEW_UP,$/;"	e	enum:probe_t
SWAP_NEW_URP	swap/us_manager/probes/probes.h	/^	SWAP_NEW_URP,$/;"	e	enum:probe_t
SWAP_PRELOAD_ALWAYS_RUN	swap/preload/preload_probe.h	/^	SWAP_PRELOAD_ALWAYS_RUN =       (1 << 0),$/;"	e	enum:__anon37
SWAP_PRELOAD_INVERTED_PROBE	swap/preload/preload_probe.h	/^	SWAP_PRELOAD_INVERTED_PROBE =   (1 << 2)$/;"	e	enum:__anon37
SWAP_PRELOAD_NON_BLOCK_PROBE	swap/preload/preload_probe.h	/^	SWAP_PRELOAD_NON_BLOCK_PROBE =  (1 << 1),$/;"	e	enum:__anon37
SWAP_PRELOAD_NOT_READY	swap/preload/preload_module.c	/^	SWAP_PRELOAD_NOT_READY = 0,$/;"	e	enum:preload_status_t	file:
SWAP_PRELOAD_PROBE	swap/us_manager/probes/probes.h	/^	SWAP_PRELOAD_PROBE = 2,     \/* Preload probe *\/$/;"	e	enum:probe_t
SWAP_PRELOAD_READY	swap/preload/preload_module.c	/^	SWAP_PRELOAD_READY = 1,$/;"	e	enum:preload_status_t	file:
SWAP_PRELOAD_RUNNING	swap/preload/preload_module.c	/^	SWAP_PRELOAD_RUNNING = 2$/;"	e	enum:preload_status_t	file:
SWAP_PROBE_MAX_VAL	swap/us_manager/probes/probes.h	/^	SWAP_PROBE_MAX_VAL          \/* Probes max value. *\/$/;"	e	enum:probe_t
SWAP_RESTORE_REGS_STRING	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	67;"	d	file:
SWAP_RETPROBE	swap/us_manager/probes/probes.h	/^	SWAP_RETPROBE = 0,          \/* Retprobe *\/$/;"	e	enum:probe_t
SWAP_SAVE_REGS_STRING	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	54;"	d	file:
SWAP_TD_FREE	swap/task_data/task_data.h	4;"	d
SWAP_WEBPROBE	swap/us_manager/probes/probes.h	/^	SWAP_WEBPROBE = 3,          \/* Webprobe *\/$/;"	e	enum:probe_t
SWAP_WRITE_MSG	swap/us_manager/probes/probes.h	/^	SWAP_WRITE_MSG = 6,         \/* Write messages from user space directly to $/;"	e	enum:probe_t
SYNCHRONIZE_SRCU_EXP_TRYCOUNT	srcu.c	334;"	d	file:
SYNCHRONIZE_SRCU_TRYCOUNT	srcu.c	333;"	d	file:
SYNCHRONOUS_MASK	signal.c	165;"	d	file:
SYSCALL_DEFINE0	fork.c	/^SYSCALL_DEFINE0(fork)$/;"	f
SYSCALL_DEFINE0	fork.c	/^SYSCALL_DEFINE0(vfork)$/;"	f
SYSCALL_DEFINE0	sched/core.c	/^SYSCALL_DEFINE0(sched_yield)$/;"	f
SYSCALL_DEFINE0	signal.c	/^SYSCALL_DEFINE0(pause)$/;"	f
SYSCALL_DEFINE0	signal.c	/^SYSCALL_DEFINE0(restart_syscall)$/;"	f
SYSCALL_DEFINE0	signal.c	/^SYSCALL_DEFINE0(sgetmask)$/;"	f
SYSCALL_DEFINE0	sys.c	/^SYSCALL_DEFINE0(getegid)$/;"	f
SYSCALL_DEFINE0	sys.c	/^SYSCALL_DEFINE0(geteuid)$/;"	f
SYSCALL_DEFINE0	sys.c	/^SYSCALL_DEFINE0(getgid)$/;"	f
SYSCALL_DEFINE0	sys.c	/^SYSCALL_DEFINE0(getpgrp)$/;"	f
SYSCALL_DEFINE0	sys.c	/^SYSCALL_DEFINE0(getpid)$/;"	f
SYSCALL_DEFINE0	sys.c	/^SYSCALL_DEFINE0(getppid)$/;"	f
SYSCALL_DEFINE0	sys.c	/^SYSCALL_DEFINE0(gettid)$/;"	f
SYSCALL_DEFINE0	sys.c	/^SYSCALL_DEFINE0(getuid)$/;"	f
SYSCALL_DEFINE0	sys.c	/^SYSCALL_DEFINE0(setsid)$/;"	f
SYSCALL_DEFINE0	uid16.c	/^SYSCALL_DEFINE0(getegid16)$/;"	f
SYSCALL_DEFINE0	uid16.c	/^SYSCALL_DEFINE0(geteuid16)$/;"	f
SYSCALL_DEFINE0	uid16.c	/^SYSCALL_DEFINE0(getgid16)$/;"	f
SYSCALL_DEFINE0	uid16.c	/^SYSCALL_DEFINE0(getuid16)$/;"	f
SYSCALL_DEFINE1	acct.c	/^SYSCALL_DEFINE1(acct, const char __user *, name)$/;"	f
SYSCALL_DEFINE1	exec_domain.c	/^SYSCALL_DEFINE1(personality, unsigned int, personality)$/;"	f
SYSCALL_DEFINE1	exit.c	/^SYSCALL_DEFINE1(exit, int, error_code)$/;"	f
SYSCALL_DEFINE1	exit.c	/^SYSCALL_DEFINE1(exit_group, int, error_code)$/;"	f
SYSCALL_DEFINE1	fork.c	/^SYSCALL_DEFINE1(set_tid_address, int __user *, tidptr)$/;"	f
SYSCALL_DEFINE1	fork.c	/^SYSCALL_DEFINE1(unshare, unsigned long, unshare_flags)$/;"	f
SYSCALL_DEFINE1	posix-timers.c	/^SYSCALL_DEFINE1(timer_delete, timer_t, timer_id)$/;"	f
SYSCALL_DEFINE1	posix-timers.c	/^SYSCALL_DEFINE1(timer_getoverrun, timer_t, timer_id)$/;"	f
SYSCALL_DEFINE1	sched/core.c	/^SYSCALL_DEFINE1(nice, int, increment)$/;"	f
SYSCALL_DEFINE1	sched/core.c	/^SYSCALL_DEFINE1(sched_get_priority_max, int, policy)$/;"	f
SYSCALL_DEFINE1	sched/core.c	/^SYSCALL_DEFINE1(sched_get_priority_min, int, policy)$/;"	f
SYSCALL_DEFINE1	sched/core.c	/^SYSCALL_DEFINE1(sched_getscheduler, pid_t, pid)$/;"	f
SYSCALL_DEFINE1	signal.c	/^SYSCALL_DEFINE1(sigpending, old_sigset_t __user *, set)$/;"	f
SYSCALL_DEFINE1	signal.c	/^SYSCALL_DEFINE1(sigsuspend, old_sigset_t, mask)$/;"	f
SYSCALL_DEFINE1	signal.c	/^SYSCALL_DEFINE1(ssetmask, int, newmask)$/;"	f
SYSCALL_DEFINE1	sys.c	/^SYSCALL_DEFINE1(getpgid, pid_t, pid)$/;"	f
SYSCALL_DEFINE1	sys.c	/^SYSCALL_DEFINE1(getsid, pid_t, pid)$/;"	f
SYSCALL_DEFINE1	sys.c	/^SYSCALL_DEFINE1(newuname, struct new_utsname __user *, name)$/;"	f
SYSCALL_DEFINE1	sys.c	/^SYSCALL_DEFINE1(olduname, struct oldold_utsname __user *, name)$/;"	f
SYSCALL_DEFINE1	sys.c	/^SYSCALL_DEFINE1(setfsgid, gid_t, gid)$/;"	f
SYSCALL_DEFINE1	sys.c	/^SYSCALL_DEFINE1(setfsuid, uid_t, uid)$/;"	f
SYSCALL_DEFINE1	sys.c	/^SYSCALL_DEFINE1(setgid, gid_t, gid)$/;"	f
SYSCALL_DEFINE1	sys.c	/^SYSCALL_DEFINE1(setuid, uid_t, uid)$/;"	f
SYSCALL_DEFINE1	sys.c	/^SYSCALL_DEFINE1(sysinfo, struct sysinfo __user *, info)$/;"	f
SYSCALL_DEFINE1	sys.c	/^SYSCALL_DEFINE1(times, struct tms __user *, tbuf)$/;"	f
SYSCALL_DEFINE1	sys.c	/^SYSCALL_DEFINE1(umask, int, mask)$/;"	f
SYSCALL_DEFINE1	sys.c	/^SYSCALL_DEFINE1(uname, struct old_utsname __user *, name)$/;"	f
SYSCALL_DEFINE1	sysctl_binary.c	/^SYSCALL_DEFINE1(sysctl, struct __sysctl_args __user *, args)$/;"	f
SYSCALL_DEFINE1	time.c	/^SYSCALL_DEFINE1(adjtimex, struct timex __user *, txc_p)$/;"	f
SYSCALL_DEFINE1	time.c	/^SYSCALL_DEFINE1(stime, time_t __user *, tptr)$/;"	f
SYSCALL_DEFINE1	time.c	/^SYSCALL_DEFINE1(time, time_t __user *, tloc)$/;"	f
SYSCALL_DEFINE1	timer.c	/^SYSCALL_DEFINE1(alarm, unsigned int, seconds)$/;"	f
SYSCALL_DEFINE1	uid16.c	/^SYSCALL_DEFINE1(setfsgid16, old_gid_t, gid)$/;"	f
SYSCALL_DEFINE1	uid16.c	/^SYSCALL_DEFINE1(setfsuid16, old_uid_t, uid)$/;"	f
SYSCALL_DEFINE1	uid16.c	/^SYSCALL_DEFINE1(setgid16, old_gid_t, gid)$/;"	f
SYSCALL_DEFINE1	uid16.c	/^SYSCALL_DEFINE1(setuid16, old_uid_t, uid)$/;"	f
SYSCALL_DEFINE2	capability.c	/^SYSCALL_DEFINE2(capget, cap_user_header_t, header, cap_user_data_t, dataptr)$/;"	f
SYSCALL_DEFINE2	capability.c	/^SYSCALL_DEFINE2(capset, cap_user_header_t, header, const cap_user_data_t, data)$/;"	f
SYSCALL_DEFINE2	futex.c	/^SYSCALL_DEFINE2(set_robust_list, struct robust_list_head __user *, head,$/;"	f
SYSCALL_DEFINE2	groups.c	/^SYSCALL_DEFINE2(getgroups, int, gidsetsize, gid_t __user *, grouplist)$/;"	f
SYSCALL_DEFINE2	groups.c	/^SYSCALL_DEFINE2(setgroups, int, gidsetsize, gid_t __user *, grouplist)$/;"	f
SYSCALL_DEFINE2	hrtimer.c	/^SYSCALL_DEFINE2(nanosleep, struct timespec __user *, rqtp,$/;"	f
SYSCALL_DEFINE2	itimer.c	/^SYSCALL_DEFINE2(getitimer, int, which, struct itimerval __user *, value)$/;"	f
SYSCALL_DEFINE2	module.c	/^SYSCALL_DEFINE2(delete_module, const char __user *, name_user,$/;"	f
SYSCALL_DEFINE2	nsproxy.c	/^SYSCALL_DEFINE2(setns, int, fd, int, nstype)$/;"	f
SYSCALL_DEFINE2	posix-timers.c	/^SYSCALL_DEFINE2(clock_adjtime, const clockid_t, which_clock,$/;"	f
SYSCALL_DEFINE2	posix-timers.c	/^SYSCALL_DEFINE2(clock_getres, const clockid_t, which_clock,$/;"	f
SYSCALL_DEFINE2	posix-timers.c	/^SYSCALL_DEFINE2(clock_gettime, const clockid_t, which_clock,$/;"	f
SYSCALL_DEFINE2	posix-timers.c	/^SYSCALL_DEFINE2(clock_settime, const clockid_t, which_clock,$/;"	f
SYSCALL_DEFINE2	posix-timers.c	/^SYSCALL_DEFINE2(timer_gettime, timer_t, timer_id,$/;"	f
SYSCALL_DEFINE2	sched/core.c	/^SYSCALL_DEFINE2(sched_getparam, pid_t, pid, struct sched_param __user *, param)$/;"	f
SYSCALL_DEFINE2	sched/core.c	/^SYSCALL_DEFINE2(sched_rr_get_interval, pid_t, pid,$/;"	f
SYSCALL_DEFINE2	sched/core.c	/^SYSCALL_DEFINE2(sched_setparam, pid_t, pid, struct sched_param __user *, param)$/;"	f
SYSCALL_DEFINE2	signal.c	/^SYSCALL_DEFINE2(kill, pid_t, pid, int, sig)$/;"	f
SYSCALL_DEFINE2	signal.c	/^SYSCALL_DEFINE2(rt_sigpending, sigset_t __user *, uset, size_t, sigsetsize)$/;"	f
SYSCALL_DEFINE2	signal.c	/^SYSCALL_DEFINE2(rt_sigsuspend, sigset_t __user *, unewset, size_t, sigsetsize)$/;"	f
SYSCALL_DEFINE2	signal.c	/^SYSCALL_DEFINE2(sigaltstack,const stack_t __user *,uss, stack_t __user *,uoss)$/;"	f
SYSCALL_DEFINE2	signal.c	/^SYSCALL_DEFINE2(signal, int, sig, __sighandler_t, handler)$/;"	f
SYSCALL_DEFINE2	signal.c	/^SYSCALL_DEFINE2(tkill, pid_t, pid, int, sig)$/;"	f
SYSCALL_DEFINE2	sys.c	/^SYSCALL_DEFINE2(gethostname, char __user *, name, int, len)$/;"	f
SYSCALL_DEFINE2	sys.c	/^SYSCALL_DEFINE2(getpriority, int, which, int, who)$/;"	f
SYSCALL_DEFINE2	sys.c	/^SYSCALL_DEFINE2(getrlimit, unsigned int, resource, struct rlimit __user *, rlim)$/;"	f
SYSCALL_DEFINE2	sys.c	/^SYSCALL_DEFINE2(getrusage, int, who, struct rusage __user *, ru)$/;"	f
SYSCALL_DEFINE2	sys.c	/^SYSCALL_DEFINE2(old_getrlimit, unsigned int, resource,$/;"	f
SYSCALL_DEFINE2	sys.c	/^SYSCALL_DEFINE2(setdomainname, char __user *, name, int, len)$/;"	f
SYSCALL_DEFINE2	sys.c	/^SYSCALL_DEFINE2(sethostname, char __user *, name, int, len)$/;"	f
SYSCALL_DEFINE2	sys.c	/^SYSCALL_DEFINE2(setpgid, pid_t, pid, pid_t, pgid)$/;"	f
SYSCALL_DEFINE2	sys.c	/^SYSCALL_DEFINE2(setregid, gid_t, rgid, gid_t, egid)$/;"	f
SYSCALL_DEFINE2	sys.c	/^SYSCALL_DEFINE2(setreuid, uid_t, ruid, uid_t, euid)$/;"	f
SYSCALL_DEFINE2	sys.c	/^SYSCALL_DEFINE2(setrlimit, unsigned int, resource, struct rlimit __user *, rlim)$/;"	f
SYSCALL_DEFINE2	time.c	/^SYSCALL_DEFINE2(gettimeofday, struct timeval __user *, tv,$/;"	f
SYSCALL_DEFINE2	time.c	/^SYSCALL_DEFINE2(settimeofday, struct timeval __user *, tv,$/;"	f
SYSCALL_DEFINE2	uid16.c	/^SYSCALL_DEFINE2(getgroups16, int, gidsetsize, old_gid_t __user *, grouplist)$/;"	f
SYSCALL_DEFINE2	uid16.c	/^SYSCALL_DEFINE2(setgroups16, int, gidsetsize, old_gid_t __user *, grouplist)$/;"	f
SYSCALL_DEFINE2	uid16.c	/^SYSCALL_DEFINE2(setregid16, old_gid_t, rgid, old_gid_t, egid)$/;"	f
SYSCALL_DEFINE2	uid16.c	/^SYSCALL_DEFINE2(setreuid16, old_uid_t, ruid, old_uid_t, euid)$/;"	f
SYSCALL_DEFINE3	exit.c	/^SYSCALL_DEFINE3(waitpid, pid_t, pid, int __user *, stat_addr, int, options)$/;"	f
SYSCALL_DEFINE3	futex.c	/^SYSCALL_DEFINE3(get_robust_list, int, pid,$/;"	f
SYSCALL_DEFINE3	itimer.c	/^SYSCALL_DEFINE3(setitimer, int, which, struct itimerval __user *, value,$/;"	f
SYSCALL_DEFINE3	module.c	/^SYSCALL_DEFINE3(finit_module, int, fd, const char __user *, uargs, int, flags)$/;"	f
SYSCALL_DEFINE3	module.c	/^SYSCALL_DEFINE3(init_module, void __user *, umod,$/;"	f
SYSCALL_DEFINE3	posix-timers.c	/^SYSCALL_DEFINE3(timer_create, const clockid_t, which_clock,$/;"	f
SYSCALL_DEFINE3	printk.c	/^SYSCALL_DEFINE3(syslog, int, type, char __user *, buf, int, len)$/;"	f
SYSCALL_DEFINE3	sched/core.c	/^SYSCALL_DEFINE3(sched_getaffinity, pid_t, pid, unsigned int, len,$/;"	f
SYSCALL_DEFINE3	sched/core.c	/^SYSCALL_DEFINE3(sched_setaffinity, pid_t, pid, unsigned int, len,$/;"	f
SYSCALL_DEFINE3	sched/core.c	/^SYSCALL_DEFINE3(sched_setscheduler, pid_t, pid, int, policy,$/;"	f
SYSCALL_DEFINE3	seccomp.c	/^SYSCALL_DEFINE3(seccomp, unsigned int, op, unsigned int, flags,$/;"	f
SYSCALL_DEFINE3	signal.c	/^SYSCALL_DEFINE3(rt_sigqueueinfo, pid_t, pid, int, sig,$/;"	f
SYSCALL_DEFINE3	signal.c	/^SYSCALL_DEFINE3(sigaction, int, sig,$/;"	f
SYSCALL_DEFINE3	signal.c	/^SYSCALL_DEFINE3(sigprocmask, int, how, old_sigset_t __user *, nset,$/;"	f
SYSCALL_DEFINE3	signal.c	/^SYSCALL_DEFINE3(sigsuspend, int, unused1, int, unused2, old_sigset_t, mask)$/;"	f
SYSCALL_DEFINE3	signal.c	/^SYSCALL_DEFINE3(tgkill, pid_t, tgid, pid_t, pid, int, sig)$/;"	f
SYSCALL_DEFINE3	sys.c	/^SYSCALL_DEFINE3(getcpu, unsigned __user *, cpup, unsigned __user *, nodep,$/;"	f
SYSCALL_DEFINE3	sys.c	/^SYSCALL_DEFINE3(getresgid, gid_t __user *, rgidp, gid_t __user *, egidp, gid_t __user *, sgidp)$/;"	f
SYSCALL_DEFINE3	sys.c	/^SYSCALL_DEFINE3(getresuid, uid_t __user *, ruidp, uid_t __user *, euidp, uid_t __user *, suidp)$/;"	f
SYSCALL_DEFINE3	sys.c	/^SYSCALL_DEFINE3(setpriority, int, which, int, who, int, niceval)$/;"	f
SYSCALL_DEFINE3	sys.c	/^SYSCALL_DEFINE3(setresgid, gid_t, rgid, gid_t, egid, gid_t, sgid)$/;"	f
SYSCALL_DEFINE3	sys.c	/^SYSCALL_DEFINE3(setresuid, uid_t, ruid, uid_t, euid, uid_t, suid)$/;"	f
SYSCALL_DEFINE3	uid16.c	/^SYSCALL_DEFINE3(chown16, const char __user *, filename, old_uid_t, user, old_gid_t, group)$/;"	f
SYSCALL_DEFINE3	uid16.c	/^SYSCALL_DEFINE3(fchown16, unsigned int, fd, old_uid_t, user, old_gid_t, group)$/;"	f
SYSCALL_DEFINE3	uid16.c	/^SYSCALL_DEFINE3(getresgid16, old_gid_t __user *, rgidp, old_gid_t __user *, egidp, old_gid_t __user *, sgidp)$/;"	f
SYSCALL_DEFINE3	uid16.c	/^SYSCALL_DEFINE3(getresuid16, old_uid_t __user *, ruidp, old_uid_t __user *, euidp, old_uid_t __user *, suidp)$/;"	f
SYSCALL_DEFINE3	uid16.c	/^SYSCALL_DEFINE3(lchown16, const char __user *, filename, old_uid_t, user, old_gid_t, group)$/;"	f
SYSCALL_DEFINE3	uid16.c	/^SYSCALL_DEFINE3(setresgid16, old_gid_t, rgid, old_gid_t, egid, old_gid_t, sgid)$/;"	f
SYSCALL_DEFINE3	uid16.c	/^SYSCALL_DEFINE3(setresuid16, old_uid_t, ruid, old_uid_t, euid, old_uid_t, suid)$/;"	f
SYSCALL_DEFINE4	exit.c	/^SYSCALL_DEFINE4(wait4, pid_t, upid, int __user *, stat_addr,$/;"	f
SYSCALL_DEFINE4	kexec.c	/^SYSCALL_DEFINE4(kexec_load, unsigned long, entry, unsigned long, nr_segments,$/;"	f
SYSCALL_DEFINE4	posix-timers.c	/^SYSCALL_DEFINE4(clock_nanosleep, const clockid_t, which_clock, int, flags,$/;"	f
SYSCALL_DEFINE4	posix-timers.c	/^SYSCALL_DEFINE4(timer_settime, timer_t, timer_id, int, flags,$/;"	f
SYSCALL_DEFINE4	ptrace.c	/^SYSCALL_DEFINE4(ptrace, long, request, long, pid, unsigned long, addr,$/;"	f
SYSCALL_DEFINE4	signal.c	/^SYSCALL_DEFINE4(rt_sigaction, int, sig,$/;"	f
SYSCALL_DEFINE4	signal.c	/^SYSCALL_DEFINE4(rt_sigprocmask, int, how, sigset_t __user *, nset,$/;"	f
SYSCALL_DEFINE4	signal.c	/^SYSCALL_DEFINE4(rt_sigtimedwait, const sigset_t __user *, uthese,$/;"	f
SYSCALL_DEFINE4	signal.c	/^SYSCALL_DEFINE4(rt_tgsigqueueinfo, pid_t, tgid, pid_t, pid, int, sig,$/;"	f
SYSCALL_DEFINE4	sys.c	/^SYSCALL_DEFINE4(prlimit64, pid_t, pid, unsigned int, resource,$/;"	f
SYSCALL_DEFINE4	sys.c	/^SYSCALL_DEFINE4(reboot, int, magic1, int, magic2, unsigned int, cmd,$/;"	f
SYSCALL_DEFINE5	events/core.c	/^SYSCALL_DEFINE5(perf_event_open,$/;"	f
SYSCALL_DEFINE5	exit.c	/^SYSCALL_DEFINE5(waitid, int, which, pid_t, upid, struct siginfo __user *,$/;"	f
SYSCALL_DEFINE5	fork.c	/^SYSCALL_DEFINE5(clone, unsigned long, clone_flags, unsigned long, newsp,$/;"	f
SYSCALL_DEFINE5	kcmp.c	/^SYSCALL_DEFINE5(kcmp, pid_t, pid1, pid_t, pid2, int, type,$/;"	f
SYSCALL_DEFINE5	sys.c	/^SYSCALL_DEFINE5(prctl, int, option, unsigned long, arg2, unsigned long, arg3,$/;"	f
SYSCALL_DEFINE6	futex.c	/^SYSCALL_DEFINE6(futex, u32 __user *, uaddr, int, op, u32, val,$/;"	f
SYSCALL_FIELD	trace/trace_syscalls.c	197;"	d	file:
SYSCALL_LIST	swap/ks_features/features_data.c	/^	SYSCALL_LIST$/;"	e	enum:syscall_id	file:
SYSCALL_LIST	swap/ks_features/syscall_list.h	34;"	d
SYSTEM_FL_FREE_NAME	trace/trace_events.c	38;"	d	file:
TASKSTATS_CPUMASK_MAXLEN	taskstats.c	38;"	d	file:
TASKSTATS_NEEDS_PADDING	taskstats.c	368;"	d	file:
TASK_NICE	sched/sched.h	22;"	d
TASK_USER_PRIO	sched/sched.h	30;"	d
TDS_DRAW	swap/wsp/wsp_res.h	/^	TDS_DRAW$/;"	e	enum:tdata_stat
TDS_ERR	swap/wsp/wsp_res.h	/^	TDS_ERR,$/;"	e	enum:tdata_stat
TDS_FINISH_MAIN_LOAD	swap/wsp/wsp_res.h	/^	TDS_FINISH_MAIN_LOAD,$/;"	e	enum:tdata_stat
TDS_NEW	swap/wsp/wsp_res.h	/^	TDS_NEW,$/;"	e	enum:tdata_stat
TD_FLAGS_MASK	swap/task_data/task_data.c	14;"	d	file:
TD_MAGIC	swap/task_data/task_data.c	18;"	d	file:
TD_MAGIC_MASK	swap/task_data/task_data.c	13;"	d	file:
TD_OFFSET	swap/task_data/task_data.c	19;"	d	file:
TD_PREFIX	swap/task_data/task_data.c	20;"	d	file:
TEST_CORE	power/power.h	/^	TEST_CORE,$/;"	e	enum:__anon31
TEST_CPUS	power/power.h	/^	TEST_CPUS,$/;"	e	enum:__anon31
TEST_DEVICES	power/power.h	/^	TEST_DEVICES,$/;"	e	enum:__anon31
TEST_FIRST	power/power.h	232;"	d
TEST_FREEZER	power/power.h	/^	TEST_FREEZER,$/;"	e	enum:__anon31
TEST_MAX	power/power.h	233;"	d
TEST_NONE	power/power.h	/^	TEST_NONE,$/;"	e	enum:__anon31
TEST_PLATFORM	power/power.h	/^	TEST_PLATFORM,$/;"	e	enum:__anon31
TEST_SUSPEND_SECONDS	power/suspend_test.c	22;"	d	file:
TF_MASK	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	65;"	d
THREAD_CLOCK	posix-cpu-timers.c	1582;"	d	file:
THUMB2_INSN_MATCH	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	560;"	d
THUMB2_INSN_REG_RD	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	599;"	d
THUMB2_INSN_REG_RM	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	600;"	d
THUMB2_INSN_REG_RN	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	598;"	d
THUMB2_INSN_REG_RT	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	596;"	d
THUMB2_INSN_REG_RT2	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	597;"	d
THUMB_INSN_MATCH	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	557;"	d
TICK_DO_TIMER_BOOT	time/tick-internal.h	12;"	d
TICK_DO_TIMER_NONE	time/tick-internal.h	11;"	d
TIME_LOG_MAX	time/time_history.c	11;"	d	file:
TIME_LOG_MAX	time/time_history.c	14;"	d	file:
TMP	swap/energy/Makefile	/^TMP := $(foreach it, $(LCD_FUNC_LIST), $(LCD_PREFIX)$(it))$/;"	m
TMP	swap/energy/Makefile	/^TMP := ($(LCD_FUNC_ARGS));$/;"	m
TMPBUFLEN	sysctl.c	1810;"	d	file:
TMPBUFLEN	sysctl.c	1902;"	d	file:
TORTURE_FLAG	rcutorture.c	122;"	d	file:
TP_ARGS	trace/trace.h	71;"	d
TP_ARGS	trace/trace.h	72;"	d
TP_FLAG_PROFILE	trace/trace_probe.h	67;"	d
TP_FLAG_REGISTERED	trace/trace_probe.h	68;"	d
TP_FLAG_TRACE	trace/trace_probe.h	66;"	d
TRACEPOINT_HASH_BITS	tracepoint.c	51;"	d	file:
TRACEPOINT_TABLE_SIZE	tracepoint.c	52;"	d	file:
TRACER_IRQS_OFF	trace/trace_irqsoff.c	/^	TRACER_IRQS_OFF		= (1 << 1),$/;"	e	enum:__anon71	file:
TRACER_OPT	trace/trace.h	314;"	d
TRACER_PREEMPT_OFF	trace/trace_irqsoff.c	/^	TRACER_PREEMPT_OFF	= (1 << 2),$/;"	e	enum:__anon71	file:
TRACE_ARRAY_FL_GLOBAL	trace/trace.h	/^	TRACE_ARRAY_FL_GLOBAL	= (1 << 0)$/;"	e	enum:__anon77
TRACE_BLK	trace/trace.h	/^	TRACE_BLK,$/;"	e	enum:trace_type
TRACE_BLK_OPT_CLASSIC	trace/blktrace.c	42;"	d	file:
TRACE_BPRINT	trace/trace.h	/^	TRACE_BPRINT,$/;"	e	enum:trace_type
TRACE_BPUTS	trace/trace.h	/^	TRACE_BPUTS,$/;"	e	enum:trace_type
TRACE_BRANCH	trace/trace.h	/^	TRACE_BRANCH,$/;"	e	enum:trace_type
TRACE_BUFFER_BIT	trace/trace.h	/^	TRACE_BUFFER_BIT,$/;"	e	enum:__anon78
TRACE_BUFFER_IRQ_BIT	trace/trace.h	/^	TRACE_BUFFER_IRQ_BIT,$/;"	e	enum:__anon78
TRACE_BUFFER_NMI_BIT	trace/trace.h	/^	TRACE_BUFFER_NMI_BIT,$/;"	e	enum:__anon78
TRACE_BUFFER_SIRQ_BIT	trace/trace.h	/^	TRACE_BUFFER_SIRQ_BIT,$/;"	e	enum:__anon78
TRACE_BUF_SIZE	trace/trace.h	129;"	d
TRACE_BUF_SIZE_DEFAULT	trace/trace.c	284;"	d	file:
TRACE_CONTEXT_BITS	trace/trace.h	445;"	d
TRACE_CONTEXT_MASK	trace/trace.h	456;"	d
TRACE_CONTROL_BIT	trace/trace.h	/^	TRACE_CONTROL_BIT,$/;"	e	enum:__anon78
TRACE_CTX	trace/trace.h	/^	TRACE_CTX,$/;"	e	enum:trace_type
TRACE_DISPLAY_GRAPH	trace/trace_irqsoff.c	62;"	d	file:
TRACE_DISPLAY_GRAPH	trace/trace_sched_wakeup.c	42;"	d	file:
TRACE_EVENT_TYPE_PRINTF	trace/trace.h	/^	TRACE_EVENT_TYPE_PRINTF		= 1,$/;"	e	enum:__anon79
TRACE_EVENT_TYPE_RAW	trace/trace.h	/^	TRACE_EVENT_TYPE_RAW		= 2,$/;"	e	enum:__anon79
TRACE_FILE_SIZE	trace/trace_entries.h	305;"	d
TRACE_FLAG_HARDIRQ	trace/trace.h	/^	TRACE_FLAG_HARDIRQ		= 0x08,$/;"	e	enum:trace_flag_type
TRACE_FLAG_IRQS_NOSUPPORT	trace/trace.h	/^	TRACE_FLAG_IRQS_NOSUPPORT	= 0x02,$/;"	e	enum:trace_flag_type
TRACE_FLAG_IRQS_OFF	trace/trace.h	/^	TRACE_FLAG_IRQS_OFF		= 0x01,$/;"	e	enum:trace_flag_type
TRACE_FLAG_NEED_RESCHED	trace/trace.h	/^	TRACE_FLAG_NEED_RESCHED		= 0x04,$/;"	e	enum:trace_flag_type
TRACE_FLAG_SOFTIRQ	trace/trace.h	/^	TRACE_FLAG_SOFTIRQ		= 0x10,$/;"	e	enum:trace_flag_type
TRACE_FN	trace/trace.h	/^	TRACE_FN,$/;"	e	enum:trace_type
TRACE_FTRACE_BIT	trace/trace.h	/^	TRACE_FTRACE_BIT,$/;"	e	enum:__anon78
TRACE_FTRACE_IRQ_BIT	trace/trace.h	/^	TRACE_FTRACE_IRQ_BIT,$/;"	e	enum:__anon78
TRACE_FTRACE_MAX	trace/trace.h	448;"	d
TRACE_FTRACE_NMI_BIT	trace/trace.h	/^	TRACE_FTRACE_NMI_BIT,$/;"	e	enum:__anon78
TRACE_FTRACE_SIRQ_BIT	trace/trace.h	/^	TRACE_FTRACE_SIRQ_BIT,$/;"	e	enum:__anon78
TRACE_FTRACE_START	trace/trace.h	447;"	d
TRACE_FUNC_OPT_STACK	trace/trace_functions.c	/^	TRACE_FUNC_OPT_STACK	= 0x1,$/;"	e	enum:__anon81	file:
TRACE_FUNC_SIZE	trace/trace_entries.h	304;"	d
TRACE_GLOBAL_BIT	trace/trace.h	/^	TRACE_GLOBAL_BIT,$/;"	e	enum:__anon78
TRACE_GLOBAL_IRQ_BIT	trace/trace.h	/^	TRACE_GLOBAL_IRQ_BIT,$/;"	e	enum:__anon78
TRACE_GLOBAL_MAX	trace/trace.h	451;"	d
TRACE_GLOBAL_NMI_BIT	trace/trace.h	/^	TRACE_GLOBAL_NMI_BIT,$/;"	e	enum:__anon78
TRACE_GLOBAL_SIRQ_BIT	trace/trace.h	/^	TRACE_GLOBAL_SIRQ_BIT,$/;"	e	enum:__anon78
TRACE_GLOBAL_START	trace/trace.h	450;"	d
TRACE_GRAPH_ENT	trace/trace.h	/^	TRACE_GRAPH_ENT,$/;"	e	enum:trace_type
TRACE_GRAPH_INDENT	trace/trace_functions_graph.c	39;"	d	file:
TRACE_GRAPH_PRINT_ABS_TIME	trace/trace.h	718;"	d
TRACE_GRAPH_PRINT_ABS_TIME	trace/trace_functions_graph.c	47;"	d	file:
TRACE_GRAPH_PRINT_CPU	trace/trace.h	714;"	d
TRACE_GRAPH_PRINT_CPU	trace/trace_functions_graph.c	43;"	d	file:
TRACE_GRAPH_PRINT_DURATION	trace/trace.h	717;"	d
TRACE_GRAPH_PRINT_DURATION	trace/trace_functions_graph.c	46;"	d	file:
TRACE_GRAPH_PRINT_FLAT	trace/trace_functions_graph.c	49;"	d	file:
TRACE_GRAPH_PRINT_IRQS	trace/trace_functions_graph.c	48;"	d	file:
TRACE_GRAPH_PRINT_OVERHEAD	trace/trace.h	715;"	d
TRACE_GRAPH_PRINT_OVERHEAD	trace/trace_functions_graph.c	44;"	d	file:
TRACE_GRAPH_PRINT_OVERRUN	trace/trace.h	713;"	d
TRACE_GRAPH_PRINT_OVERRUN	trace/trace_functions_graph.c	42;"	d	file:
TRACE_GRAPH_PRINT_PROC	trace/trace.h	716;"	d
TRACE_GRAPH_PRINT_PROC	trace/trace_functions_graph.c	45;"	d	file:
TRACE_GRAPH_PROCINFO_LENGTH	trace/trace_functions_graph.c	428;"	d	file:
TRACE_GRAPH_RET	trace/trace.h	/^	TRACE_GRAPH_RET,$/;"	e	enum:trace_type
TRACE_INCLUDE_FILE	trace/trace_events_filter_test.h	45;"	d
TRACE_INCLUDE_FILE	trace/trace_events_filter_test.h	47;"	d
TRACE_INCLUDE_PATH	trace/trace_events_filter_test.h	44;"	d
TRACE_INCLUDE_PATH	trace/trace_events_filter_test.h	46;"	d
TRACE_INTERNAL_BIT	trace/trace.h	/^	TRACE_INTERNAL_BIT,$/;"	e	enum:__anon78
TRACE_INTERNAL_IRQ_BIT	trace/trace.h	/^	TRACE_INTERNAL_IRQ_BIT,$/;"	e	enum:__anon78
TRACE_INTERNAL_NMI_BIT	trace/trace.h	/^	TRACE_INTERNAL_NMI_BIT,$/;"	e	enum:__anon78
TRACE_INTERNAL_SIRQ_BIT	trace/trace.h	/^	TRACE_INTERNAL_SIRQ_BIT,$/;"	e	enum:__anon78
TRACE_IRQ_BIT	trace/trace.h	/^	TRACE_IRQ_BIT,$/;"	e	enum:__anon78
TRACE_ITER_ANNOTATE	trace/trace.h	/^	TRACE_ITER_ANNOTATE		= 0x1000,$/;"	e	enum:trace_iterator_flags
TRACE_ITER_BIN	trace/trace.h	/^	TRACE_ITER_BIN			= 0x40,$/;"	e	enum:trace_iterator_flags
TRACE_ITER_BLOCK	trace/trace.h	/^	TRACE_ITER_BLOCK		= 0x80,$/;"	e	enum:trace_iterator_flags
TRACE_ITER_BRANCH	trace/trace.h	/^	TRACE_ITER_BRANCH		= 0x800,$/;"	e	enum:trace_iterator_flags
TRACE_ITER_CONTEXT_INFO	trace/trace.h	/^	TRACE_ITER_CONTEXT_INFO		= 0x10000, \/* Print pid\/cpu\/time *\/$/;"	e	enum:trace_iterator_flags
TRACE_ITER_FUNCTION	trace/trace.h	/^	TRACE_ITER_FUNCTION		= 0x2000000,$/;"	e	enum:trace_iterator_flags
TRACE_ITER_GRAPH_TIME	trace/trace.h	/^	TRACE_ITER_GRAPH_TIME		= 0x80000,$/;"	e	enum:trace_iterator_flags
TRACE_ITER_HEX	trace/trace.h	/^	TRACE_ITER_HEX			= 0x20,$/;"	e	enum:trace_iterator_flags
TRACE_ITER_IRQ_INFO	trace/trace.h	/^	TRACE_ITER_IRQ_INFO		= 0x800000,$/;"	e	enum:trace_iterator_flags
TRACE_ITER_LATENCY_FMT	trace/trace.h	/^	TRACE_ITER_LATENCY_FMT		= 0x20000,$/;"	e	enum:trace_iterator_flags
TRACE_ITER_MARKERS	trace/trace.h	/^	TRACE_ITER_MARKERS		= 0x1000000,$/;"	e	enum:trace_iterator_flags
TRACE_ITER_OVERWRITE	trace/trace.h	/^	TRACE_ITER_OVERWRITE		= 0x200000,$/;"	e	enum:trace_iterator_flags
TRACE_ITER_PREEMPTONLY	trace/trace.h	/^	TRACE_ITER_PREEMPTONLY		= 0x400,$/;"	e	enum:trace_iterator_flags
TRACE_ITER_PRINTK	trace/trace.h	/^	TRACE_ITER_PRINTK		= 0x200,$/;"	e	enum:trace_iterator_flags
TRACE_ITER_PRINTK_MSGONLY	trace/trace.h	/^	TRACE_ITER_PRINTK_MSGONLY	= 0x8000,$/;"	e	enum:trace_iterator_flags
TRACE_ITER_PRINT_PARENT	trace/trace.h	/^	TRACE_ITER_PRINT_PARENT		= 0x01,$/;"	e	enum:trace_iterator_flags
TRACE_ITER_RAW	trace/trace.h	/^	TRACE_ITER_RAW			= 0x10,$/;"	e	enum:trace_iterator_flags
TRACE_ITER_RECORD_CMD	trace/trace.h	/^	TRACE_ITER_RECORD_CMD		= 0x100000,$/;"	e	enum:trace_iterator_flags
TRACE_ITER_SLEEP_TIME	trace/trace.h	/^	TRACE_ITER_SLEEP_TIME		= 0x40000,$/;"	e	enum:trace_iterator_flags
TRACE_ITER_STACKTRACE	trace/trace.h	/^	TRACE_ITER_STACKTRACE		= 0x100,$/;"	e	enum:trace_iterator_flags
TRACE_ITER_STOP_ON_FREE	trace/trace.h	/^	TRACE_ITER_STOP_ON_FREE		= 0x400000,$/;"	e	enum:trace_iterator_flags
TRACE_ITER_SYM_ADDR	trace/trace.h	/^	TRACE_ITER_SYM_ADDR		= 0x04,$/;"	e	enum:trace_iterator_flags
TRACE_ITER_SYM_MASK	trace/trace.h	877;"	d
TRACE_ITER_SYM_OFFSET	trace/trace.h	/^	TRACE_ITER_SYM_OFFSET		= 0x02,$/;"	e	enum:trace_iterator_flags
TRACE_ITER_SYM_USEROBJ	trace/trace.h	/^	TRACE_ITER_SYM_USEROBJ          = 0x4000,$/;"	e	enum:trace_iterator_flags
TRACE_ITER_TGID	trace/trace.h	/^	TRACE_ITER_TGID 		= 0x4000000,$/;"	e	enum:trace_iterator_flags
TRACE_ITER_USERSTACKTRACE	trace/trace.h	/^	TRACE_ITER_USERSTACKTRACE       = 0x2000,$/;"	e	enum:trace_iterator_flags
TRACE_ITER_VERBOSE	trace/trace.h	/^	TRACE_ITER_VERBOSE		= 0x08,$/;"	e	enum:trace_iterator_flags
TRACE_LIST_MAX	trace/trace.h	454;"	d
TRACE_LIST_START	trace/trace.h	453;"	d
TRACE_MAX_PRINT	trace/trace.c	6361;"	d	file:
TRACE_MMIO_MAP	trace/trace.h	/^	TRACE_MMIO_MAP,$/;"	e	enum:trace_type
TRACE_MMIO_RW	trace/trace.h	/^	TRACE_MMIO_RW,$/;"	e	enum:trace_type
TRACE_NOP_OPT_ACCEPT	trace/trace_nop.c	/^	TRACE_NOP_OPT_ACCEPT = 0x1,$/;"	e	enum:__anon88	file:
TRACE_NOP_OPT_REFUSE	trace/trace_nop.c	/^	TRACE_NOP_OPT_REFUSE = 0x2$/;"	e	enum:__anon88	file:
TRACE_PRINT	trace/trace.h	/^	TRACE_PRINT,$/;"	e	enum:trace_type
TRACE_SELFTEST_REGS_FOUND	trace/trace_selftest.c	/^	TRACE_SELFTEST_REGS_FOUND,$/;"	e	enum:__anon83	file:
TRACE_SELFTEST_REGS_NOT_FOUND	trace/trace_selftest.c	/^	TRACE_SELFTEST_REGS_NOT_FOUND,$/;"	e	enum:__anon83	file:
TRACE_SELFTEST_REGS_START	trace/trace_selftest.c	/^	TRACE_SELFTEST_REGS_START,$/;"	e	enum:__anon83	file:
TRACE_STACK	trace/trace.h	/^	TRACE_STACK,$/;"	e	enum:trace_type
TRACE_SYSTEM	trace/trace_events.c	25;"	d	file:
TRACE_SYSTEM	trace/trace_events.c	26;"	d	file:
TRACE_SYSTEM	trace/trace_events_filter_test.h	1;"	d
TRACE_SYSTEM	trace/trace_events_filter_test.h	2;"	d
TRACE_SYSTEM	trace/trace_export.c	18;"	d	file:
TRACE_SYSTEM	trace/trace_export.c	19;"	d	file:
TRACE_USER_STACK	trace/trace.h	/^	TRACE_USER_STACK,$/;"	e	enum:trace_type
TRACE_WAKE	trace/trace.h	/^	TRACE_WAKE,$/;"	e	enum:trace_type
TSTAT_HASH_BITS	time/timer_stats.c	124;"	d	file:
TSTAT_HASH_MASK	time/timer_stats.c	126;"	d	file:
TSTAT_HASH_SIZE	time/timer_stats.c	125;"	d	file:
TS_DELTA_TEST	trace/ring_buffer.c	332;"	d	file:
TS_MASK	trace/ring_buffer.c	331;"	d	file:
TS_SHIFT	trace/ring_buffer.c	330;"	d	file:
TVN_BITS	timer.c	62;"	d	file:
TVN_MASK	timer.c	66;"	d	file:
TVN_SIZE	timer.c	64;"	d	file:
TVR_BITS	timer.c	63;"	d	file:
TVR_MASK	timer.c	67;"	d	file:
TVR_SIZE	timer.c	65;"	d	file:
UBP_ARM	swap/uprobe/arch/arm/swap-asm/swap_uprobes.c	52;"	d	file:
UBP_THUMB	swap/uprobe/arch/arm/swap-asm/swap_uprobes.c	53;"	d	file:
UIDHASH_BITS	user.c	65;"	d	file:
UIDHASH_MASK	user.c	67;"	d	file:
UIDHASH_SZ	user.c	66;"	d	file:
UINSNS_PER_PAGE	events/uprobes.c	41;"	d	file:
UNBOUND_POOL_HASH_ORDER	workqueue.c	/^	UNBOUND_POOL_HASH_ORDER	= 6,		\/* hashed by pool->attrs *\/$/;"	e	enum:__anon24	file:
UNDEF_INSTRUCTION	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	59;"	d
UNDEF_INSTRUCTION	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	62;"	d
UNRUNNABLE	debug/kdb/kdb_support.c	556;"	d	file:
UPROBES_HASH_SZ	events/uprobes.c	53;"	d	file:
UPROBES_TRAMP_INSN_IDX	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	73;"	d
UPROBES_TRAMP_INSN_IDX	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	68;"	d
UPROBES_TRAMP_LEN	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	71;"	d
UPROBES_TRAMP_LEN	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	67;"	d
UPROBES_TRAMP_RET_BREAK_IDX	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	77;"	d
UPROBES_TRAMP_RET_BREAK_IDX	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	69;"	d
UPROBES_TRAMP_SS_BREAK_IDX	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	75;"	d
UPROBE_COPY_INSN	events/uprobes.c	61;"	d	file:
UPROBE_EVENT_SYSTEM	trace/trace_uprobe.c	29;"	d	file:
UPROBE_HASH_BITS	swap/uprobe/swap_uprobes.c	/^	UPROBE_HASH_BITS  = 10,$/;"	e	enum:__anon42	file:
UPROBE_SKIP_SSTEP	events/uprobes.c	63;"	d	file:
UPROBE_TABLE_SIZE	swap/uprobe/swap_uprobes.c	/^	UPROBE_TABLE_SIZE = (1 << UPROBE_HASH_BITS)$/;"	e	enum:__anon42	file:
UREGS_OFFSET	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	89;"	d
USEC_TO_HZ_ADJ32	timeconst.h	29;"	d
USEC_TO_HZ_DEN	timeconst.h	34;"	d
USEC_TO_HZ_MUL32	timeconst.h	28;"	d
USEC_TO_HZ_NUM	timeconst.h	33;"	d
USEC_TO_HZ_SHR32	timeconst.h	30;"	d
USER_PRIO	sched/sched.h	29;"	d
USM_PREFIX	swap/parser/usm_msg.c	32;"	d	file:
US_DISARM	swap/us_manager/sspt/sspt_proc.h	/^	US_DISARM,		\/**< probes disarm *\/$/;"	e	enum:US_FLAGS
US_FLAGS	swap/us_manager/sspt/sspt_proc.h	/^enum US_FLAGS {$/;"	g
US_INT_CONT_APPS	swap/driver/us_interaction_msg.h	/^	US_INT_CONT_APPS = 2$/;"	e	enum:us_interaction_k2u_msg_t
US_INT_PAUSE_APPS	swap/driver/us_interaction_msg.h	/^	US_INT_PAUSE_APPS = 1,$/;"	e	enum:us_interaction_k2u_msg_t
US_MANAGER_DFS_DIR	swap/us_manager/debugfs_us_manager.h	31;"	d
US_MANAGER_TASKS	swap/us_manager/debugfs_us_manager.h	37;"	d
US_UNINSTALL	swap/us_manager/sspt/sspt_proc.h	/^	US_UNINSTALL		\/**< probes remove from list install *\/$/;"	e	enum:US_FLAGS
US_UNREGS_PROBE	swap/us_manager/sspt/sspt_proc.h	/^	US_UNREGS_PROBE,	\/**< probes remove and disarm *\/$/;"	e	enum:US_FLAGS
VERBOSE	lockdep.c	335;"	d	file:
VERBOSE_PRINTK_ERRSTRING	rcutorture.c	127;"	d	file:
VERBOSE_PRINTK_STRING	rcutorture.c	125;"	d	file:
VERY_VERBOSE	lockdep.c	336;"	d	file:
W	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	122;"	d	file:
W	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	153;"	d	file:
WAKE_LOCK_ACTIVE	power/wakelock.c	39;"	d	file:
WAKE_LOCK_AUTO_EXPIRE	power/wakelock.c	40;"	d	file:
WAKE_LOCK_INITIALIZED	power/wakelock.c	38;"	d	file:
WAKE_LOCK_PREVENTING_SUSPEND	power/wakelock.c	41;"	d	file:
WAKE_LOCK_TYPE_MASK	power/wakelock.c	37;"	d	file:
WALK_PRED_ABORT	trace/trace_events_filter.c	/^	WALK_PRED_ABORT,$/;"	e	enum:walk_return	file:
WALK_PRED_DEFAULT	trace/trace_events_filter.c	/^	WALK_PRED_DEFAULT,$/;"	e	enum:walk_return	file:
WALK_PRED_PARENT	trace/trace_events_filter.c	/^	WALK_PRED_PARENT,$/;"	e	enum:walk_return	file:
WARN_ONCE_HASH_BITS	sysctl_binary.c	1372;"	d	file:
WARN_ONCE_HASH_SIZE	sysctl_binary.c	1373;"	d	file:
WATCHDOG_INTERVAL	time/clocksource.c	197;"	d	file:
WATCHDOG_THRESHOLD	time/clocksource.c	198;"	d	file:
WEB_PREFIX	swap/webprobe/web_msg.c	32;"	d	file:
WEIGHT_IDLEPRIO	sched/sched.h	924;"	d
WF_FORK	sched/sched.h	894;"	d
WF_MIGRATED	sched/sched.h	895;"	d
WF_SYNC	sched/sched.h	893;"	d
WILL_EXECUTE	swap/webprobe/webprobe_prof.h	/^	WILL_EXECUTE = 2,$/;"	e	enum:web_prof_addr_t
WILL_EXECUTE_FILE	swap/webprobe/webprobe_debugfs.c	/^static const char WILL_EXECUTE_FILE[] =		"will_execute";$/;"	v	file:
WMULT_CONST	sched/fair.c	176;"	d	file:
WMULT_CONST	sched/fair.c	178;"	d	file:
WMULT_IDLEPRIO	sched/sched.h	925;"	d
WMULT_SHIFT	sched/fair.c	181;"	d	file:
WORKER_CPU_INTENSIVE	workqueue.c	/^	WORKER_CPU_INTENSIVE	= 1 << 6,	\/* cpu intensive *\/$/;"	e	enum:__anon24	file:
WORKER_DIE	workqueue.c	/^	WORKER_DIE		= 1 << 1,	\/* die die die *\/$/;"	e	enum:__anon24	file:
WORKER_IDLE	workqueue.c	/^	WORKER_IDLE		= 1 << 2,	\/* is idle *\/$/;"	e	enum:__anon24	file:
WORKER_NOT_RUNNING	workqueue.c	/^	WORKER_NOT_RUNNING	= WORKER_PREP | WORKER_CPU_INTENSIVE |$/;"	e	enum:__anon24	file:
WORKER_PREP	workqueue.c	/^	WORKER_PREP		= 1 << 3,	\/* preparing to run works *\/$/;"	e	enum:__anon24	file:
WORKER_REBOUND	workqueue.c	/^	WORKER_REBOUND		= 1 << 8,	\/* worker was rebound *\/$/;"	e	enum:__anon24	file:
WORKER_STARTED	workqueue.c	/^	WORKER_STARTED		= 1 << 0,	\/* started *\/$/;"	e	enum:__anon24	file:
WORKER_UNBOUND	workqueue.c	/^	WORKER_UNBOUND		= 1 << 7,	\/* worker is unbound *\/$/;"	e	enum:__anon24	file:
WQ_NAME_LEN	workqueue.c	/^	WQ_NAME_LEN		= 24,$/;"	e	enum:__anon24	file:
WRITE_BUFSIZE	trace/trace_probe.c	785;"	d	file:
WRS_ADD_DATA	swap/wsp/wsp_res.h	/^	WRS_ADD_DATA,$/;"	e	enum:wsp_res_stat
WRS_ERR	swap/wsp/wsp_res.h	/^	WRS_ERR$/;"	e	enum:wsp_res_stat
WRS_FINISH	swap/wsp/wsp_res.h	/^	WRS_FINISH,$/;"	e	enum:wsp_res_stat
WRS_NEW	swap/wsp/wsp_res.h	/^	WRS_NEW,$/;"	e	enum:wsp_res_stat
WRS_SOUP_REQ	swap/wsp/wsp_res.h	/^	WRS_SOUP_REQ,$/;"	e	enum:wsp_res_stat
WRS_WILL_REQ	swap/wsp/wsp_res.h	/^	WRS_WILL_REQ,$/;"	e	enum:wsp_res_stat
WRT_SYSCTL	sched/fair.c	595;"	d	file:
WRT_SYSCTL	sched/fair.c	600;"	d	file:
WR_ANY	swap/wsp/wsp_res.h	/^	WR_ANY$/;"	e	enum:wsp_res_t
WR_MAIN	swap/wsp/wsp_res.h	/^	WR_MAIN,$/;"	e	enum:wsp_res_t
WR_NONE	swap/wsp/wsp_res.h	/^	WR_NONE,$/;"	e	enum:wsp_res_t
WSP_DRAW_BEGIN	swap/wsp/wsp_msg.h	/^	WSP_DRAW_BEGIN     = 0x0005,$/;"	e	enum:wsp_id
WSP_DRAW_END	swap/wsp/wsp_msg.h	/^	WSP_DRAW_END       = 0x0006$/;"	e	enum:wsp_id
WSP_OFF	swap/wsp/wsp.h	/^	WSP_OFF$/;"	e	enum:wsp_mode
WSP_ON	swap/wsp/wsp.h	/^	WSP_ON,$/;"	e	enum:wsp_mode
WSP_PROBE_MAKE	swap/wsp/wsp.c	47;"	d	file:
WSP_RES_LOAD_BEGIN	swap/wsp/wsp_msg.h	/^	WSP_RES_LOAD_BEGIN = 0x0001,$/;"	e	enum:wsp_id
WSP_RES_LOAD_END	swap/wsp/wsp_msg.h	/^	WSP_RES_LOAD_END   = 0x0002,$/;"	e	enum:wsp_id
WSP_RES_PROC_BEGIN	swap/wsp/wsp_msg.h	/^	WSP_RES_PROC_BEGIN = 0x0003,$/;"	e	enum:wsp_id
WSP_RES_PROC_END	swap/wsp/wsp_msg.h	/^	WSP_RES_PROC_END   = 0x0004,$/;"	e	enum:wsp_id
WS_ARRAY_MAX	power/sleep_history.c	39;"	d	file:
X	swap/ks_features/features_data.c	59;"	d	file:
X	swap/ks_features/features_data.c	67;"	d	file:
X	swap/ks_features/file_ops.c	103;"	d	file:
X	swap/ks_features/file_ops.c	119;"	d	file:
X	swap/ks_features/file_ops.c	125;"	d	file:
X	swap/ks_features/file_ops.c	127;"	d	file:
X	swap/ks_features/file_ops.c	133;"	d	file:
X	swap/ks_features/file_ops.c	135;"	d	file:
X	swap/ks_features/file_ops.c	141;"	d	file:
X	swap/ks_features/file_ops.c	143;"	d	file:
X	swap/ks_features/file_ops.c	149;"	d	file:
X	swap/ks_features/file_ops.c	151;"	d	file:
X	swap/ks_features/file_ops.c	157;"	d	file:
X	swap/ks_features/file_ops.c	98;"	d	file:
X	swap/ks_features/ks_features.c	70;"	d	file:
X	swap/ks_features/ks_features.c	74;"	d	file:
X	swap/ks_features/ks_features.c	85;"	d	file:
X	swap/ks_features/ks_features.c	96;"	d	file:
XREG	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	61;"	d
YES	trace/trace_events_filter.c	2132;"	d	file:
YES	trace/trace_events_filter.c	2193;"	d	file:
_ARM_SWAP_UPROBES_H	swap/uprobe/arch/arm/swap-asm/swap_uprobes.h	35;"	d
_CPU_CTRL_H_	swap/parser/cpu_ctrl.h	31;"	d
_DEBUGFS_ENERGY_H	swap/energy/debugfs_energy.h	2;"	d
_DEBUGFS_WRITER_H	swap/writer/debugfs_writer.h	31;"	d
_DEBUG_CORE_H_	debug/debug_core.h	12;"	d
_DEFAULT_FETCH_TYPE	trace/trace_probe.c	379;"	d	file:
_ENERGY_H	swap/energy/energy.h	2;"	d
_EVENT_FILTER_H	swap/writer/event_filter.h	32;"	d
_FEATURES_H	swap/parser/features.h	32;"	d
_HELPER_H	swap/us_manager/helper.h	25;"	d
_IMG_FILE_H	swap/us_manager/img/img_file.h	27;"	d
_IMG_IP_H	swap/us_manager/img/img_ip.h	27;"	d
_IMG_PROC_H	swap/us_manager/img/img_proc.h	26;"	d
_IRQF_MODIFY_MASK	irq/settings.h	/^	_IRQF_MODIFY_MASK	= IRQF_MODIFY_MASK,$/;"	e	enum:__anon68
_IRQ_DEFAULT_INIT_FLAGS	irq/settings.h	/^	_IRQ_DEFAULT_INIT_FLAGS	= IRQ_DEFAULT_INIT_FLAGS,$/;"	e	enum:__anon68
_IRQ_DESC_CHECK	irq/internals.h	120;"	d
_IRQ_DESC_PERCPU	irq/internals.h	121;"	d
_IRQ_LEVEL	irq/settings.h	/^	_IRQ_LEVEL		= IRQ_LEVEL,$/;"	e	enum:__anon68
_IRQ_MOVE_PCNTXT	irq/settings.h	/^	_IRQ_MOVE_PCNTXT	= IRQ_MOVE_PCNTXT,$/;"	e	enum:__anon68
_IRQ_NESTED_THREAD	irq/settings.h	/^	_IRQ_NESTED_THREAD	= IRQ_NESTED_THREAD,$/;"	e	enum:__anon68
_IRQ_NOAUTOEN	irq/settings.h	/^	_IRQ_NOAUTOEN		= IRQ_NOAUTOEN,$/;"	e	enum:__anon68
_IRQ_NOPROBE	irq/settings.h	/^	_IRQ_NOPROBE		= IRQ_NOPROBE,$/;"	e	enum:__anon68
_IRQ_NOREQUEST	irq/settings.h	/^	_IRQ_NOREQUEST		= IRQ_NOREQUEST,$/;"	e	enum:__anon68
_IRQ_NOTHREAD	irq/settings.h	/^	_IRQ_NOTHREAD		= IRQ_NOTHREAD,$/;"	e	enum:__anon68
_IRQ_NO_BALANCING	irq/settings.h	/^	_IRQ_NO_BALANCING	= IRQ_NO_BALANCING,$/;"	e	enum:__anon68
_IRQ_PER_CPU	irq/settings.h	/^	_IRQ_PER_CPU		= IRQ_PER_CPU,$/;"	e	enum:__anon68
_IRQ_PER_CPU_DEVID	irq/settings.h	/^	_IRQ_PER_CPU_DEVID	= IRQ_PER_CPU_DEVID,$/;"	e	enum:__anon68
_KDBPRIVATE_H	debug/kdb/kdb_private.h	2;"	d
_KERNEL_EVENTS_INTERNAL_H	events/internal.h	2;"	d
_KERNEL_WORKQUEUE_INTERNAL_H	workqueue_internal.h	8;"	d
_KSF_MSG_H	swap/ks_features/ksf_msg.h	24;"	d
_KS_FEATURES_H	swap/ks_features/ks_features.h	32;"	d
_LCD_BASE_H	swap/energy/lcd/lcd_base.h	2;"	d
_LCD_DEBUGFS_H	swap/energy/lcd/lcd_debugfs.h	2;"	d
_LINUX_CPUPRI_H	sched/cpupri.h	2;"	d
_LINUX_KERNEL_TRACE_H	trace/trace.h	2;"	d
_LINUX_NTP_INTERNAL_H	time/ntp_internal.h	2;"	d
_MEMORY_RWX_H	swap/kprobe/arch/arm/swap-asm/memory_rwx.h	29;"	d
_MSG_BUF_H	swap/parser/msg_buf.h	32;"	d
_MSG_CMD_H	swap/parser/msg_cmd.h	31;"	d
_MSG_PARSER_H	swap/parser/msg_parser.h	33;"	d
_NSP_DEBUGFS_H	swap/nsp/nsp_debugfs.h	2;"	d
_NSP_H	swap/nsp/nsp.h	2;"	d
_NSP_MSG_H	swap/nsp/nsp_msg.h	23;"	d
_NSP_PRINT_H	swap/nsp/nsp_print.h	23;"	d
_NSP_TDATA_H	swap/nsp/nsp_tdata.h	23;"	d
_PF_GROUP_H	swap/us_manager/pf/pf_group.h	26;"	d
_PROBE_INFO_NEW_H	swap/us_manager/probes/probe_info_new.h	2;"	d
_PROC_FILTERS_H	swap/us_manager/pf/proc_filters.h	26;"	d
_RATIONAL_DEBUGFS_H	swap/energy/rational_debugfs.h	2;"	d
_RP_MSG_H	swap/retprobe/rp_msg.h	24;"	d
_SSPT_FEATUER_H	swap/us_manager/sspt/sspt_feature.h	2;"	d
_SWAP_ASM_ARM_KPROBES_H	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	40;"	d
_SWAP_ASM_X86_KPROBES_H	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	34;"	d
_SWAP_DEBUGFS_H	swap/master/swap_debugfs.h	30;"	d
_SWAP_INITIALIZER_H	swap/master/swap_initializer.h	30;"	d
_SWAP_KPROBES_DEPS_H	swap/kprobe/swap_kprobes_deps.h	33;"	d
_SWAP_KPROBES_H	swap/kprobe/swap_kprobes.h	36;"	d
_SWAP_KPROBE_DEBUG_H	swap/kprobe/swap_kdebug.h	34;"	d
_SWAP_MSG_H	swap/writer/swap_msg.h	24;"	d
_SWAP_SLOTS_H	swap/kprobe/swap_slots.h	35;"	d
_SWAP_UPROBES_H	swap/uprobe/swap_uprobes.h	34;"	d
_SYSCALL_LIST_H	swap/ks_features/syscall_list.h	32;"	d
_TM_STAT_H	swap/energy/tm_stat.h	2;"	d
_TRACE_TEST_H	trace/trace_events_filter_test.h	5;"	d
_USM_MSG_H	swap/parser/usm_msg.h	24;"	d
_US_INST_H	swap/parser/us_inst.h	32;"	d
_US_MANAGER_H	swap/us_manager/us_manager.h	25;"	d
_US_SLOT_MANAGER_H	swap/us_manager/us_slot_manager.h	26;"	d
_WEBPROBE_DEBUGFS_H	swap/webprobe/webprobe_debugfs.h	2;"	d
_WEBPROBE_PROF_H	swap/webprobe/webprobe_prof.h	2;"	d
_WEB_MSG_H	swap/webprobe/web_msg.h	24;"	d
_WSP_DEBUGFS_H	swap/wsp/wsp_debugfs.h	2;"	d
_WSP_H	swap/wsp/wsp.h	2;"	d
_WSP_MSG_H	swap/wsp/wsp_msg.h	2;"	d
_WSP_TDATA_H	swap/wsp/wsp_res.h	2;"	d
_X86_SWAP_UPROBES_H	swap/uprobe/arch/x86/swap-asm/swap_uprobes.h	34;"	d
__APP_MANAGE_H__	swap/driver/app_manage.h	31;"	d
__ASM_ARM_TRAMPOLINE_ARM_H	swap/kprobe/arch/arm/swap-asm/trampoline_arm.h	38;"	d
__ASM_ARM_TRAMPOLINE_THUMB_H	swap/uprobe/arch/arm/swap-asm/trampoline_thumb.h	35;"	d
__ASSIGN_FETCH_TYPE	trace/trace_probe.c	386;"	d	file:
__BUFFER_DESCRIPTION_H__	swap/buffer/buffer_description.h	31;"	d
__BUFFER_QUEUE_H__	swap/buffer/buffer_queue.h	33;"	d
__CALLBACKS_H__	swap/us_manager/callbacks.h	2;"	d
__DATA_TYPES_H__	swap/buffer/data_types.h	31;"	d
__DEBUGFS_US_MANAGER_H__	swap/us_manager/debugfs_us_manager.h	2;"	d
__DEFAULT_FETCH_TYPE	trace/trace_probe.c	378;"	d	file:
__DEFINE_TD_MAGIC	swap/task_data/task_data.c	16;"	d	file:
__DEVICE_DRIVER_TO_DRIVER_TO_BUFFER_H__	swap/driver/device_driver_to_driver_to_buffer.h	31;"	d
__FBI_MSG_H__	swap/fbiprobe/fbi_msg.h	33;"	d
__FBI_PROBE_H__	swap/fbiprobe/fbiprobe.h	35;"	d
__FBI_PROBE_MODULE_H__	swap/fbiprobe/fbi_probe_module.h	37;"	d
__FILE_OPS__	swap/ks_features/file_ops.h	2;"	d
__FILE_PROBE_INITIALIZER	swap/ks_features/file_ops.c	105;"	d	file:
__GENERATING_BOUNDS_H	bounds.c	7;"	d	file:
__HIBERNATION_AFTER_LAST	power/hibernate.c	/^	__HIBERNATION_AFTER_LAST$/;"	e	enum:__anon33	file:
__IP__	swap/us_manager/sspt/ip.h	2;"	d
__KERNEL_OPERATIONS_H__	swap/buffer/kernel_operations.h	31;"	d
__KERNEL_OPERATIONS_H__	swap/sampler/kernel_operations.h	31;"	d
__KERNEL_OPERATIONS_H__	swap/writer/kernel_operations.h	33;"	d
__KERNEL_RTMUTEX_COMMON_H	rtmutex_common.h	13;"	d
__KSYMS_H__	swap/ksyms/ksyms.h	31;"	d
__KSYMS_INIT_H__	swap/ksyms/ksyms_init.h	31;"	d
__KS_MAP__	swap/ks_features/ks_map.h	2;"	d
__LINUX_RCU_H	rcu.h	24;"	d
__LOCKF	lockdep_internals.h	/^	__LOCKF(USED)$/;"	e	enum:__anon10
__LOCKF	lockdep_internals.h	27;"	d
__LOG_BUF_LEN	printk.c	273;"	d	file:
__MAP_INITIALIZER	swap/ks_features/ks_map.h	17;"	d
__P	sched/debug.c	516;"	d	file:
__P	sched/debug.c	599;"	d	file:
__PN	sched/debug.c	520;"	d	file:
__PN	sched/debug.c	597;"	d	file:
__PRELOAD_CONTROL_H__	swap/preload/preload_control.h	2;"	d
__PRELOAD_DEBUGFS_H__	swap/preload/preload_debugfs.h	2;"	d
__PRELOAD_MODULE_H__	swap/preload/preload_module.h	2;"	d
__PRELOAD_PD_H__	swap/preload/preload_pd.h	2;"	d
__PRELOAD_PROBE_H__	swap/preload/preload_probe.h	26;"	d
__PRELOAD_STORAGE_H__	swap/preload/preload_storage.h	2;"	d
__PRELOAD_THREADS_H__	swap/preload/preload_threads.h	2;"	d
__PRELOAD__	swap/preload/preload.h	2;"	d
__PROBES_H__	swap/us_manager/probes/probes.h	35;"	d
__REGISTER_PROBES_H__	swap/us_manager/probes/register_probes.h	2;"	d
__REGS_H__	swap/fbiprobe/regs.h	37;"	d
__SAMPLER_TIMERS_H__	swap/sampler/sampler_timers.h	28;"	d
__SCHED_FEAT_NR	sched/sched.h	/^	__SCHED_FEAT_NR,$/;"	e	enum:__anon5
__SSPT_DEBUG__	swap/us_manager/sspt/sspt_debug.h	2;"	d
__SSPT_FILE__	swap/us_manager/sspt/sspt_file.h	2;"	d
__SSPT_FILTER_H__	swap/us_manager/sspt/sspt_filter.h	2;"	d
__SSPT_PAGE__	swap/us_manager/sspt/sspt_page.h	2;"	d
__SSPT_PROC__	swap/us_manager/sspt/sspt_proc.h	2;"	d
__SSPT__	swap/us_manager/sspt/sspt.h	2;"	d
__SWAP_BUFFER_ERRORS_H__	swap/buffer/swap_buffer_errors.h	31;"	d
__SWAP_BUFFER_MODULE_H__	swap/buffer/swap_buffer_module.h	31;"	d
__SWAP_BUFFER_TO_BUFFER_QUEUE_H__	swap/buffer/swap_buffer_to_buffer_queue.h	30;"	d
__SWAP_DRIVER_DEVICE_DEFS_H__	swap/driver/driver_defs.h	30;"	d
__SWAP_DRIVER_DEVICE_DEFS_H__	swap/parser/parser_defs.h	33;"	d
__SWAP_DRIVER_DEVICE_DRIVER_H__	swap/driver/device_driver.h	31;"	d
__SWAP_DRIVER_DRIVER_TO_BUFFER__	swap/driver/driver_to_buffer.h	31;"	d
__SWAP_DRIVER_DRIVER_TO_MSG__	swap/driver/driver_to_msg.h	31;"	d
__SWAP_DRIVER_ERRORS_H__	swap/driver/swap_driver_errors.h	31;"	d
__SWAP_IOCTL_H__	swap/driver/swap_ioctl.h	31;"	d
__SWAP_SAMPLER_MODULE_H__	swap/sampler/swap_sampler_module.h	34;"	d
__SWAP_WRITER_ERRORS_H__	swap/writer/swap_writer_errors.h	31;"	d
__TASK_DATA__	swap/task_data/task_data.h	2;"	d
__TEST_AFTER_LAST	power/power.h	/^	__TEST_AFTER_LAST$/;"	e	enum:__anon31
__TRACE_EVENTS_H	trace/trace_output.h	2;"	d
__TRACE_FIRST_TYPE	trace/trace.h	/^	__TRACE_FIRST_TYPE = 0,$/;"	e	enum:trace_type
__TRACE_LAST_TYPE	trace/trace.h	/^	__TRACE_LAST_TYPE,$/;"	e	enum:trace_type
__TRACE_STAT_H	trace/trace_stat.h	2;"	d
__URETPROBE_H__	swap/retprobe/retprobe.h	26;"	d
__USAGE	lockdep.c	457;"	d	file:
__USE_PROBES_H__	swap/us_manager/probes/use_probes.h	2;"	d
__US_INTERACTION_H__	swap/driver/us_interaction.h	31;"	d
__US_INTERACTION_MSG_H__	swap/driver/us_interaction_msg.h	31;"	d
___P	irq/debug.h	43;"	d
___P	irq/debug.h	7;"	d
___PD	irq/debug.h	10;"	d
___PD	irq/debug.h	45;"	d
___PS	irq/debug.h	44;"	d
___PS	irq/debug.h	8;"	d
____cacheline_aligned	sched/fair.c	/^} nohz ____cacheline_aligned;$/;"	v	typeref:struct:__anon3	file:
____cacheline_aligned	softirq.c	/^irq_cpustat_t irq_stat[NR_CPUS] ____cacheline_aligned;$/;"	v
____cacheline_aligned	timer.c	/^} ____cacheline_aligned;$/;"	v	typeref:struct:tvec_base
____cacheline_aligned	workqueue.c	/^	unsigned int		flags ____cacheline_aligned; \/* WQ: WQ_* flags *\/$/;"	m	struct:workqueue_struct	file:
____cacheline_aligned_in_smp	kprobes.c	/^	raw_spinlock_t lock ____cacheline_aligned_in_smp;$/;"	m	struct:__anon1	file:
____cacheline_aligned_in_smp	time/timer_stats.c	/^} ____cacheline_aligned_in_smp;$/;"	v	typeref:struct:entry
____cacheline_aligned_in_smp	trace/trace_clock.c	/^} trace_clock_struct ____cacheline_aligned_in_smp =$/;"	v	typeref:struct:__anon82	file:
____cacheline_aligned_in_smp	workqueue.c	/^	atomic_t		nr_running ____cacheline_aligned_in_smp;$/;"	m	struct:worker_pool	file:
____cacheline_aligned_in_smp	workqueue.c	/^} ____cacheline_aligned_in_smp;$/;"	v	typeref:struct:worker_pool
____cacheline_internodealigned_in_smp	rcutree.h	/^	raw_spinlock_t fqslock ____cacheline_internodealigned_in_smp;$/;"	m	struct:rcu_node
____cacheline_internodealigned_in_smp	rcutree.h	/^	raw_spinlock_t orphan_lock ____cacheline_internodealigned_in_smp;$/;"	m	struct:rcu_state
____cacheline_internodealigned_in_smp	rcutree.h	/^	u8	fqs_state ____cacheline_internodealigned_in_smp;$/;"	m	struct:rcu_state
____cacheline_internodealigned_in_smp	rcutree.h	/^} ____cacheline_internodealigned_in_smp;$/;"	v	typeref:struct:rcu_node
____call_usermodehelper	kmod.c	/^static int ____call_usermodehelper(void *data)$/;"	f	file:
__account_cfs_rq_runtime	sched/fair.c	/^static void __account_cfs_rq_runtime(struct cfs_rq *cfs_rq,$/;"	f	file:
__account_scheduler_latency	latencytop.c	/^__account_scheduler_latency(struct task_struct *tsk, int usecs, int inter)$/;"	f
__account_system_time	sched/cputime.c	/^void __account_system_time(struct task_struct *p, cputime_t cputime,$/;"	f	file:
__acct_update_integrals	tsacct.c	/^static void __acct_update_integrals(struct task_struct *tsk,$/;"	f	file:
__acquires	cgroup.c	/^	__acquires(css_set_lock)$/;"	f
__acquires	debug/kdb/kdb_support.c	/^	__acquires(dap_lock)$/;"	f
__acquires	kprobes.c	/^__acquires(hlist_lock)$/;"	f
__acquires	rcutorture.c	/^static int rcu_bh_torture_read_lock(void) __acquires(RCU_BH)$/;"	f
__acquires	rcutorture.c	/^static int rcu_torture_read_lock(void) __acquires(RCU)$/;"	f
__acquires	resource.c	/^	__acquires(resource_lock)$/;"	f
__add_event_to_tracers	trace/trace_events.c	/^__add_event_to_tracers(struct ftrace_event_call *call,$/;"	f	file:
__add_hash_entry	trace/ftrace.c	/^static void __add_hash_entry(struct ftrace_hash *hash,$/;"	f	file:
__add_preferred_console	printk.c	/^static int __add_preferred_console(char *name, int idx, char *options,$/;"	f	file:
__add_target_binary	swap/preload/preload_control.c	/^static int __add_target_binary(struct dentry *dentry, char *filename)$/;"	f	file:
__add_to_disable_list	swap/preload/preload_threads.c	/^static inline int __add_to_disable_list(struct thread_slot *slot,$/;"	f	file:
__adjust_resource	resource.c	/^static int __adjust_resource(struct resource *res, resource_size_t start,$/;"	f	file:
__alloc_filter	trace/trace_events_filter.c	/^static struct event_filter *__alloc_filter(void)$/;"	f	file:
__alloc_pred_stack	trace/trace_events_filter.c	/^static int __alloc_pred_stack(struct pred_stack *stack, int n_preds)$/;"	f	file:
__alloc_preds	trace/trace_events_filter.c	/^static int __alloc_preds(struct event_filter *filter, int n_preds)$/;"	f	file:
__alloc_target_binaries	swap/preload/preload_control.c	/^static int __alloc_target_binaries(unsigned int cnt)$/;"	f	file:
__alloc_target_binaries_no_lock	swap/preload/preload_control.c	/^static int __alloc_target_binaries_no_lock(unsigned int cnt)$/;"	f	file:
__alloc_workqueue_key	workqueue.c	/^EXPORT_SYMBOL_GPL(__alloc_workqueue_key);$/;"	v
__alloc_workqueue_key	workqueue.c	/^struct workqueue_struct *__alloc_workqueue_key(const char *fmt,$/;"	f
__arm_kprobe	kprobes.c	/^static void __kprobes __arm_kprobe(struct kprobe *p)$/;"	f	file:
__arm_kprobe	kprobes.c	919;"	d	file:
__array	trace/trace.h	52;"	d
__array	trace/trace.h	53;"	d
__array	trace/trace_export.c	152;"	d	file:
__array	trace/trace_export.c	153;"	d	file:
__array	trace/trace_export.c	41;"	d	file:
__array	trace/trace_export.c	42;"	d	file:
__array	trace/trace_export.c	95;"	d	file:
__array	trace/trace_export.c	96;"	d	file:
__array_desc	trace/trace.h	55;"	d
__array_desc	trace/trace.h	56;"	d
__array_desc	trace/trace_export.c	108;"	d	file:
__array_desc	trace/trace_export.c	109;"	d	file:
__array_desc	trace/trace_export.c	155;"	d	file:
__array_desc	trace/trace_export.c	156;"	d	file:
__array_desc	trace/trace_export.c	44;"	d	file:
__array_desc	trace/trace_export.c	45;"	d	file:
__async_schedule	async.c	/^static async_cookie_t __async_schedule(async_func_t func, void *data, struct async_domain *domain)$/;"	f	file:
__atomic_notifier_call_chain	notifier.c	/^EXPORT_SYMBOL_GPL(__atomic_notifier_call_chain);$/;"	v
__atomic_notifier_call_chain	notifier.c	/^int __kprobes __atomic_notifier_call_chain(struct atomic_notifier_head *nh,$/;"	f
__audit_bprm	auditsc.c	/^int __audit_bprm(struct linux_binprm *bprm)$/;"	f
__audit_fd_pair	auditsc.c	/^void __audit_fd_pair(int fd1, int fd2)$/;"	f
__audit_free	auditsc.c	/^void __audit_free(struct task_struct *tsk)$/;"	f
__audit_getname	auditsc.c	/^void __audit_getname(struct filename *name)$/;"	f
__audit_inode	auditsc.c	/^void __audit_inode(struct filename *name, const struct dentry *dentry,$/;"	f
__audit_inode_child	auditsc.c	/^EXPORT_SYMBOL_GPL(__audit_inode_child);$/;"	v
__audit_inode_child	auditsc.c	/^void __audit_inode_child(const struct inode *parent,$/;"	f
__audit_ipc_obj	auditsc.c	/^void __audit_ipc_obj(struct kern_ipc_perm *ipcp)$/;"	f
__audit_ipc_set_perm	auditsc.c	/^void __audit_ipc_set_perm(unsigned long qbytes, uid_t uid, gid_t gid, umode_t mode)$/;"	f
__audit_log_bprm_fcaps	auditsc.c	/^int __audit_log_bprm_fcaps(struct linux_binprm *bprm,$/;"	f
__audit_log_capset	auditsc.c	/^void __audit_log_capset(pid_t pid,$/;"	f
__audit_mmap_fd	auditsc.c	/^void __audit_mmap_fd(int fd, int flags)$/;"	f
__audit_mq_getsetattr	auditsc.c	/^void __audit_mq_getsetattr(mqd_t mqdes, struct mq_attr *mqstat)$/;"	f
__audit_mq_notify	auditsc.c	/^void __audit_mq_notify(mqd_t mqdes, const struct sigevent *notification)$/;"	f
__audit_mq_open	auditsc.c	/^void __audit_mq_open(int oflag, umode_t mode, struct mq_attr *attr)$/;"	f
__audit_mq_sendrecv	auditsc.c	/^void __audit_mq_sendrecv(mqd_t mqdes, size_t msg_len, unsigned int msg_prio,$/;"	f
__audit_ptrace	auditsc.c	/^void __audit_ptrace(struct task_struct *t)$/;"	f
__audit_reusename	auditsc.c	/^__audit_reusename(const __user char *uptr)$/;"	f
__audit_seccomp	auditsc.c	/^void __audit_seccomp(unsigned long syscall, long signr, int code)$/;"	f
__audit_signal_info	auditsc.c	/^int __audit_signal_info(int sig, struct task_struct *t)$/;"	f
__audit_sockaddr	auditsc.c	/^int __audit_sockaddr(int len, void *a)$/;"	f
__audit_socketcall	auditsc.c	/^int __audit_socketcall(int nargs, unsigned long *args)$/;"	f
__audit_syscall_entry	auditsc.c	/^void __audit_syscall_entry(int arch, int major,$/;"	f
__audit_syscall_exit	auditsc.c	/^void __audit_syscall_exit(int success, long return_code)$/;"	f
__bfs	lockdep.c	/^static int __bfs(struct lock_list *source_entry,$/;"	f	file:
__bfs_backwards	lockdep.c	/^static inline int __bfs_backwards(struct lock_list *src_entry,$/;"	f	file:
__bfs_forwards	lockdep.c	/^static inline int __bfs_forwards(struct lock_list *src_entry,$/;"	f	file:
__blk_add_trace	trace/blktrace.c	/^static void __blk_add_trace(struct blk_trace *bt, sector_t sector, int bytes,$/;"	f	file:
__blocking_notifier_call_chain	notifier.c	/^EXPORT_SYMBOL_GPL(__blocking_notifier_call_chain);$/;"	v
__blocking_notifier_call_chain	notifier.c	/^int __blocking_notifier_call_chain(struct blocking_notifier_head *nh,$/;"	f
__bottom_wake_up	swap/driver/device_driver.c	/^static void __bottom_wake_up(void)$/;"	f	file:
__buffer_unlock_commit	trace/trace.c	/^__buffer_unlock_commit(struct ring_buffer *buffer, struct ring_buffer_event *event)$/;"	f
__cacheline_aligned_in_smp	irq/irqdesc.c	/^struct irq_desc irq_desc[NR_IRQS] __cacheline_aligned_in_smp = {$/;"	v	typeref:struct:irq_desc
__cacheline_aligned_in_smp	softirq.c	/^static struct softirq_action softirq_vec[NR_SOFTIRQS] __cacheline_aligned_in_smp;$/;"	v	typeref:struct:softirq_vec	file:
__cacheline_aligned_in_smp	timer.c	/^u64 jiffies_64 __cacheline_aligned_in_smp = INITIAL_JIFFIES;$/;"	v
__call_rcu	rcutiny.c	/^static void __call_rcu(struct rcu_head *head,$/;"	f	file:
__call_rcu	rcutree.c	/^__call_rcu(struct rcu_head *head, void (*func)(struct rcu_head *rcu),$/;"	f	file:
__call_rcu_core	rcutree.c	/^static void __call_rcu_core(struct rcu_state *rsp, struct rcu_data *rdp,$/;"	f	file:
__call_rcu_nocb	rcutree_plugin.h	/^static bool __call_rcu_nocb(struct rcu_data *rdp, struct rcu_head *rhp,$/;"	f
__call_rcu_nocb_enqueue	rcutree_plugin.h	/^static void __call_rcu_nocb_enqueue(struct rcu_data *rdp,$/;"	f
__call_usermodehelper	kmod.c	/^static void __call_usermodehelper(struct work_struct *work)$/;"	f	file:
__cancel_work_timer	workqueue.c	/^static bool __cancel_work_timer(struct work_struct *work, bool is_dwork)$/;"	f	file:
__cap_empty_set	capability.c	/^EXPORT_SYMBOL(__cap_empty_set);$/;"	v
__cap_empty_set	capability.c	/^const kernel_cap_t __cap_empty_set = CAP_EMPTY_SET;$/;"	v
__cfs_bandwidth_used	sched/fair.c	/^static struct static_key __cfs_bandwidth_used;$/;"	v	typeref:struct:static_key	file:
__cfs_schedulable	sched/core.c	/^static int __cfs_schedulable(struct task_group *tg, u64 period, u64 quota)$/;"	f	file:
__chainhashfn	lockdep.c	303;"	d	file:
__change_pid	pid.c	/^static void __change_pid(struct task_struct *task, enum pid_type type,$/;"	f	file:
__check_dentry_already_exist	swap/preload/preload_control.c	/^static bool __check_dentry_already_exist(struct dentry *dentry)$/;"	f	file:
__check_flag_and_call_type	swap/preload/preload_module.c	/^static inline bool __check_flag_and_call_type(struct us_ip *ip,$/;"	f	file:
__check_handlers_info	swap/preload/preload_storage.c	/^static inline bool __check_handlers_info(void)$/;"	f	file:
__check_if_instrumented	swap/preload/preload_control.c	/^static bool __check_if_instrumented(struct task_struct *task,$/;"	f	file:
__check_linker_info	swap/preload/preload_storage.c	/^static inline bool __check_linker_info(void)$/;"	f	file:
__check_region	resource.c	/^EXPORT_SYMBOL(__check_region);$/;"	v
__check_region	resource.c	/^int __check_region(struct resource *parent, resource_size_t start,$/;"	f
__classhashfn	lockdep.c	292;"	d	file:
__clean_slot	swap/preload/preload_threads.c	/^static void __clean_slot(struct thread_slot *slot)$/;"	f	file:
__cleanup_sighand	fork.c	/^void __cleanup_sighand(struct sighand_struct *sighand)$/;"	f
__clear_buddies_last	sched/fair.c	/^static void __clear_buddies_last(struct sched_entity *se)$/;"	f	file:
__clear_buddies_next	sched/fair.c	/^static void __clear_buddies_next(struct sched_entity *se)$/;"	f	file:
__clear_buddies_skip	sched/fair.c	/^static void __clear_buddies_skip(struct sched_entity *se)$/;"	f	file:
__clocksource_change_rating	time/clocksource.c	/^static void __clocksource_change_rating(struct clocksource *cs, int rating)$/;"	f	file:
__clocksource_register_scale	time/clocksource.c	/^EXPORT_SYMBOL_GPL(__clocksource_register_scale);$/;"	v
__clocksource_register_scale	time/clocksource.c	/^int __clocksource_register_scale(struct clocksource *cs, u32 scale, u32 freq)$/;"	f
__clocksource_unstable	time/clocksource.c	/^static void __clocksource_unstable(struct clocksource *cs)$/;"	f	file:
__clocksource_updatefreq_scale	time/clocksource.c	/^EXPORT_SYMBOL_GPL(__clocksource_updatefreq_scale);$/;"	v
__clocksource_updatefreq_scale	time/clocksource.c	/^void __clocksource_updatefreq_scale(struct clocksource *cs, u32 scale, u32 freq)$/;"	f
__common_field	trace/trace_events.c	145;"	d	file:
__compat_save_altstack	signal.c	/^int __compat_save_altstack(compat_stack_t __user *uss, unsigned long sp)$/;"	f
__compute_runnable_contrib	sched/fair.c	/^static u32 __compute_runnable_contrib(u64 n)$/;"	f	file:
__cond_resched	sched/core.c	/^static void __cond_resched(void)$/;"	f	file:
__cond_resched_lock	sched/core.c	/^EXPORT_SYMBOL(__cond_resched_lock);$/;"	v
__cond_resched_lock	sched/core.c	/^int __cond_resched_lock(spinlock_t *lock)$/;"	f
__cond_resched_softirq	sched/core.c	/^EXPORT_SYMBOL(__cond_resched_softirq);$/;"	v
__cond_resched_softirq	sched/core.c	/^int __sched __cond_resched_softirq(void)$/;"	f
__copy_insn	events/uprobes.c	/^__copy_insn(struct address_space *mapping, struct file *filp, char *insn,$/;"	f	file:
__cpu_notify	cpu.c	/^static int __cpu_notify(unsigned long val, void *v, int nr_to_call,$/;"	f	file:
__cpuset_memory_pressure_bump	cpuset.c	/^void __cpuset_memory_pressure_bump(void)$/;"	f
__cpuset_node_allowed_hardwall	cpuset.c	/^int __cpuset_node_allowed_hardwall(int node, gfp_t gfp_mask)$/;"	f
__cpuset_node_allowed_softwall	cpuset.c	/^int __cpuset_node_allowed_softwall(int node, gfp_t gfp_mask)$/;"	f
__cq_dequeue	lockdep.c	/^static inline int __cq_dequeue(struct circular_queue *cq, unsigned long *elem)$/;"	f	file:
__cq_empty	lockdep.c	/^static inline int __cq_empty(struct circular_queue *cq)$/;"	f	file:
__cq_enqueue	lockdep.c	/^static inline int __cq_enqueue(struct circular_queue *cq, unsigned long elem)$/;"	f	file:
__cq_full	lockdep.c	/^static inline int __cq_full(struct circular_queue *cq)$/;"	f	file:
__cq_get_elem_count	lockdep.c	/^static inline unsigned int  __cq_get_elem_count(struct circular_queue *cq)$/;"	f	file:
__cq_init	lockdep.c	/^static inline void __cq_init(struct circular_queue *cq)$/;"	f	file:
__css_put	cgroup.c	/^EXPORT_SYMBOL_GPL(__css_put);$/;"	v
__css_put	cgroup.c	/^void __css_put(struct cgroup_subsys_state *css)$/;"	f
__css_tryget	cgroup.c	/^EXPORT_SYMBOL_GPL(__css_tryget);$/;"	v
__css_tryget	cgroup.c	/^bool __css_tryget(struct cgroup_subsys_state *css)$/;"	f
__current_kernel_time	time/timekeeping.c	/^struct timespec __current_kernel_time(void)$/;"	f
__d_cfe	cgroup.c	/^static inline struct cfent *__d_cfe(struct dentry *dentry)$/;"	f	file:
__d_cft	cgroup.c	/^static inline struct cftype *__d_cft(struct dentry *dentry)$/;"	f	file:
__d_cgrp	cgroup.c	/^static inline struct cgroup *__d_cgrp(struct dentry *dentry)$/;"	f	file:
__d_xattrs	cgroup.c	/^static struct simple_xattrs *__d_xattrs(struct dentry *dentry)$/;"	f	file:
__debug_atomic_inc	lockdep_internals.h	142;"	d
__debug_atomic_inc	lockdep_internals.h	166;"	d
__delayacct_add_tsk	delayacct.c	/^int __delayacct_add_tsk(struct taskstats *d, struct task_struct *tsk)$/;"	f
__delayacct_blkio_end	delayacct.c	/^void __delayacct_blkio_end(void)$/;"	f
__delayacct_blkio_start	delayacct.c	/^void __delayacct_blkio_start(void)$/;"	f
__delayacct_blkio_ticks	delayacct.c	/^__u64 __delayacct_blkio_ticks(struct task_struct *tsk)$/;"	f
__delayacct_freepages_end	delayacct.c	/^void __delayacct_freepages_end(void)$/;"	f
__delayacct_freepages_start	delayacct.c	/^void __delayacct_freepages_start(void)$/;"	f
__delayacct_tsk_init	delayacct.c	/^void __delayacct_tsk_init(struct task_struct *tsk)$/;"	f
__dequeue_entity	sched/fair.c	/^static void __dequeue_entity(struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f	file:
__dequeue_rt_entity	sched/rt.c	/^static void __dequeue_rt_entity(struct sched_rt_entity *rt_se)$/;"	f	file:
__dequeue_signal	signal.c	/^static int __dequeue_signal(struct sigpending *pending, sigset_t *mask,$/;"	f	file:
__devm_release_region	resource.c	/^EXPORT_SYMBOL(__devm_release_region);$/;"	v
__devm_release_region	resource.c	/^void __devm_release_region(struct device *dev, struct resource *parent,$/;"	f
__devm_request_region	resource.c	/^EXPORT_SYMBOL(__devm_request_region);$/;"	v
__devm_request_region	resource.c	/^struct resource * __devm_request_region(struct device *dev,$/;"	f
__disable_ftrace_function_probe	trace/ftrace.c	/^static void __disable_ftrace_function_probe(void)$/;"	f	file:
__disable_irq	irq/manage.c	/^void __disable_irq(struct irq_desc *desc, unsigned int irq, bool suspend)$/;"	f
__disable_irq_nosync	irq/manage.c	/^static int __disable_irq_nosync(unsigned int irq)$/;"	f	file:
__disable_kprobe	kprobes.c	/^static struct kprobe *__kprobes __disable_kprobe(struct kprobe *p)$/;"	f	file:
__disable_runtime	sched/rt.c	/^static void __disable_runtime(struct rq *rq)$/;"	f	file:
__disarm_kprobe	kprobes.c	/^static void __kprobes __disarm_kprobe(struct kprobe *p, bool reopt)$/;"	f	file:
__disarm_kprobe	kprobes.c	920;"	d	file:
__do_active_load_balance_cpu_stop	sched/fair.c	/^static int __do_active_load_balance_cpu_stop(void *data, bool check_sd_lb_flag)$/;"	f	file:
__do_adjtimex	time/ntp.c	/^int __do_adjtimex(struct timex *txc, struct timespec *ts, s32 *time_tai)$/;"	f
__do_get_proc	swap/us_manager/pf/pf_group.c	/^static void __do_get_proc(struct sspt_proc *proc, void *data)$/;"	f	file:
__do_proc_dointvec	sysctl.c	/^static int __do_proc_dointvec(void *tbl_data, struct ctl_table *table,$/;"	f	file:
__do_proc_doulongvec_minmax	sysctl.c	/^static int __do_proc_doulongvec_minmax(void *data, struct ctl_table *table, int write,$/;"	f	file:
__do_put_proc	swap/us_manager/pf/pf_group.c	/^static void __do_put_proc(struct sspt_proc *proc, void *data)$/;"	f	file:
__do_softirq	softirq.c	/^asmlinkage void __do_softirq(void)$/;"	f
__do_usm_stop	swap/us_manager/us_manager.c	/^static int __do_usm_stop(void *data)$/;"	f	file:
__down	semaphore.c	/^static noinline void __sched __down(struct semaphore *sem)$/;"	f	file:
__down_common	semaphore.c	/^static inline int __sched __down_common(struct semaphore *sem, long state,$/;"	f	file:
__down_interruptible	semaphore.c	/^static noinline int __sched __down_interruptible(struct semaphore *sem)$/;"	f	file:
__down_killable	semaphore.c	/^static noinline int __sched __down_killable(struct semaphore *sem)$/;"	f	file:
__down_timeout	semaphore.c	/^static noinline int __sched __down_timeout(struct semaphore *sem, long jiffies)$/;"	f	file:
__drop_handlers_info	swap/preload/preload_storage.c	/^static inline void __drop_handlers_info(void)$/;"	f	file:
__drop_libc_info	swap/preload/preload_storage.c	/^static inline void __drop_libc_info(void)$/;"	f	file:
__drop_linker_info	swap/preload/preload_storage.c	/^static inline void __drop_linker_info(void)$/;"	f	file:
__dynamic_array	trace/trace.h	58;"	d
__dynamic_array	trace/trace.h	59;"	d
__dynamic_array	trace/trace_export.c	119;"	d	file:
__dynamic_array	trace/trace_export.c	120;"	d	file:
__dynamic_array	trace/trace_export.c	158;"	d	file:
__dynamic_array	trace/trace_export.c	159;"	d	file:
__dynamic_array	trace/trace_export.c	47;"	d	file:
__dynamic_array	trace/trace_export.c	48;"	d	file:
__enable_ftrace_function_probe	trace/ftrace.c	/^static void __enable_ftrace_function_probe(void)$/;"	f	file:
__enable_irq	irq/manage.c	/^void __enable_irq(struct irq_desc *desc, unsigned int irq, bool resume)$/;"	f
__enable_runtime	sched/rt.c	/^static void __enable_runtime(struct rq *rq)$/;"	f	file:
__energy_cpu	swap/energy/debugfs_energy.c	/^static u64 __energy_cpu(enum parameter_energy pe)$/;"	f	file:
__enqueue_entity	sched/fair.c	/^static void __enqueue_entity(struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f	file:
__enqueue_rt_entity	sched/rt.c	/^static void __enqueue_rt_entity(struct sched_rt_entity *rt_se, bool head)$/;"	f	file:
__entry	trace/trace_export.c	143;"	d	file:
__entry	trace/trace_export.c	144;"	d	file:
__env	debug/kdb/kdb_main.c	/^static char *__env[] = {$/;"	v	file:
__exit_signal	exit.c	/^static void __exit_signal(struct task_struct *tsk)$/;"	f	file:
__field	trace/trace.h	43;"	d
__field	trace/trace.h	44;"	d
__field	trace/trace_export.c	146;"	d	file:
__field	trace/trace_export.c	147;"	d	file:
__field	trace/trace_export.c	35;"	d	file:
__field	trace/trace_export.c	36;"	d	file:
__field	trace/trace_export.c	76;"	d	file:
__field	trace/trace_export.c	77;"	d	file:
__field_desc	trace/trace.h	49;"	d
__field_desc	trace/trace.h	50;"	d
__field_desc	trace/trace_export.c	149;"	d	file:
__field_desc	trace/trace_export.c	150;"	d	file:
__field_desc	trace/trace_export.c	38;"	d	file:
__field_desc	trace/trace_export.c	39;"	d	file:
__field_desc	trace/trace_export.c	85;"	d	file:
__field_desc	trace/trace_export.c	86;"	d	file:
__field_struct	trace/trace.h	46;"	d
__field_struct	trace/trace.h	47;"	d
__field_struct	trace/trace_export.c	32;"	d	file:
__field_struct	trace/trace_export.c	33;"	d	file:
__file_cft	cgroup.c	/^static inline struct cftype *__file_cft(struct file *file)$/;"	f	file:
__find_disabled_addr	swap/preload/preload_threads.c	/^static inline struct disabled_addr *__find_disabled_addr(struct thread_slot *slot,$/;"	f	file:
__find_event_field	trace/trace_events.c	/^__find_event_field(struct list_head *head, char *name)$/;"	f	file:
__find_next_entry	trace/trace.c	/^__find_next_entry(struct trace_iterator *iter, int *ent_cpu,$/;"	f	file:
__find_resource	resource.c	/^static int __find_resource(struct resource *root, struct resource *old,$/;"	f	file:
__find_swevent_head	events/core.c	/^__find_swevent_head(struct swevent_hlist *hlist, u64 type, u32 event_id)$/;"	f	file:
__find_uprobe	events/uprobes.c	/^static struct uprobe *__find_uprobe(struct inode *inode, loff_t offset)$/;"	f	file:
__flush_itimer_signals	signal.c	/^static void __flush_itimer_signals(struct sigpending *pending)$/;"	f	file:
__flush_signals	signal.c	/^void __flush_signals(struct task_struct *t)$/;"	f
__fops_dget	swap/ks_features/file_ops.c	/^static struct dentry *__fops_dget(struct dentry *dentry)$/;"	f	file:
__fops_dpath	swap/ks_features/file_ops.c	/^static char *__fops_dpath(struct dentry *dentry, char *buf, int buflen)$/;"	f	file:
__fops_dput	swap/ks_features/file_ops.c	/^static void __fops_dput(struct dentry *dentry)$/;"	f	file:
__fops_dput_wrapper	swap/ks_features/file_ops.c	/^static int __fops_dput_wrapper(void *data, void *arg)$/;"	f	file:
__fops_fget	swap/ks_features/file_ops.c	/^static struct file *__fops_fget(int fd)$/;"	f	file:
__fops_fput	swap/ks_features/file_ops.c	/^static void __fops_fput(struct file *file)$/;"	f	file:
__fraction	power/snapshot.c	/^static unsigned long __fraction(u64 x, u64 multiplier, u64 base)$/;"	f	file:
__free_cb	swap/us_manager/callbacks.c	/^static inline void __free_cb(struct cb_item *cb)$/;"	f	file:
__free_domain_allocs	sched/core.c	/^static void __free_domain_allocs(struct s_data *d, enum s_alloc what,$/;"	f	file:
__free_filter	trace/trace_events_filter.c	/^static void __free_filter(struct event_filter *filter)$/;"	f	file:
__free_ftrace_hash_rcu	trace/ftrace.c	/^static void __free_ftrace_hash_rcu(struct rcu_head *rcu)$/;"	f	file:
__free_insn_slot	kprobes.c	/^static void __kprobes __free_insn_slot(struct kprobe_insn_cache *c,$/;"	f	file:
__free_irq	irq/manage.c	/^static struct irqaction *__free_irq(unsigned int irq, void *dev_id)$/;"	f	file:
__free_percpu_irq	irq/manage.c	/^static struct irqaction *__free_percpu_irq(unsigned int irq, void __percpu *dev_id)$/;"	f	file:
__free_pred_stack	trace/trace_events_filter.c	/^static void __free_pred_stack(struct pred_stack *stack)$/;"	f	file:
__free_preds	trace/trace_events_filter.c	/^static void __free_preds(struct event_filter *filter)$/;"	f	file:
__free_target_binaries	swap/preload/preload_control.c	/^static void __free_target_binaries(void)$/;"	f	file:
__ftrace_event_enable_disable	trace/trace_events.c	/^static int __ftrace_event_enable_disable(struct ftrace_event_file *file,$/;"	f	file:
__ftrace_function_set_filter	trace/trace_events_filter.c	/^static int __ftrace_function_set_filter(int filter, char *buf, int len,$/;"	f	file:
__ftrace_graph_entry	trace/ftrace.c	/^static trace_func_graph_ent_t __ftrace_graph_entry = ftrace_graph_entry_stub;$/;"	v	file:
__ftrace_hash_rec_update	trace/ftrace.c	/^static void __ftrace_hash_rec_update(struct ftrace_ops *ops,$/;"	f	file:
__ftrace_modify_code	trace/ftrace.c	/^static int __ftrace_modify_code(void *data)$/;"	f	file:
__ftrace_ops_list_func	trace/ftrace.c	/^__ftrace_ops_list_func(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
__ftrace_replace_code	trace/ftrace.c	/^__ftrace_replace_code(struct dyn_ftrace *rec, int enable)$/;"	f	file:
__ftrace_set_clr_event	trace/trace_events.c	/^static int __ftrace_set_clr_event(struct trace_array *tr, const char *match,$/;"	f	file:
__ftrace_set_clr_event_nolock	trace/trace_events.c	/^__ftrace_set_clr_event_nolock(struct trace_array *tr, const char *match,$/;"	f	file:
__ftrace_trace_stack	trace/trace.c	/^static void __ftrace_trace_stack(struct ring_buffer *buffer,$/;"	f	file:
__ftrace_vbprintk	trace/trace_printk.c	/^EXPORT_SYMBOL_GPL(__ftrace_vbprintk);$/;"	v
__ftrace_vbprintk	trace/trace_printk.c	/^int __ftrace_vbprintk(unsigned long ip, const char *fmt, va_list ap)$/;"	f
__ftrace_vprintk	trace/trace_printk.c	/^EXPORT_SYMBOL_GPL(__ftrace_vprintk);$/;"	v
__ftrace_vprintk	trace/trace_printk.c	/^int __ftrace_vprintk(unsigned long ip, const char *fmt, va_list ap)$/;"	f
__g_next	trace/ftrace.c	/^__g_next(struct seq_file *m, loff_t *pos)$/;"	f	file:
__gcov_flush	gcov/base.c	/^EXPORT_SYMBOL(__gcov_flush);$/;"	v
__gcov_flush	gcov/base.c	/^void __gcov_flush(void)$/;"	f
__gcov_init	gcov/base.c	/^EXPORT_SYMBOL(__gcov_init);$/;"	v
__gcov_init	gcov/base.c	/^void __gcov_init(struct gcov_info *info)$/;"	f
__gcov_merge_add	gcov/base.c	/^EXPORT_SYMBOL(__gcov_merge_add);$/;"	v
__gcov_merge_add	gcov/base.c	/^void __gcov_merge_add(gcov_type *counters, unsigned int n_counters)$/;"	f
__gcov_merge_delta	gcov/base.c	/^EXPORT_SYMBOL(__gcov_merge_delta);$/;"	v
__gcov_merge_delta	gcov/base.c	/^void __gcov_merge_delta(gcov_type *counters, unsigned int n_counters)$/;"	f
__gcov_merge_single	gcov/base.c	/^EXPORT_SYMBOL(__gcov_merge_single);$/;"	v
__gcov_merge_single	gcov/base.c	/^void __gcov_merge_single(gcov_type *counters, unsigned int n_counters)$/;"	f
__get_attempts	swap/preload/preload_pd.c	/^static inline long __get_attempts(struct process_data *pd)$/;"	f	file:
__get_binary_name	swap/preload/preload_control.c	/^static char *__get_binary_name(struct bin_desc *bin)$/;"	f	file:
__get_caller_dentry	swap/preload/preload_control.c	/^static struct dentry *__get_caller_dentry(struct task_struct *task,$/;"	f	file:
__get_cb_by_handle	swap/us_manager/callbacks.c	/^static struct cb_item *__get_cb_by_handle(int handle)$/;"	f	file:
__get_cpu_context	events/core.c	/^__get_cpu_context(struct perf_event_context *ctx)$/;"	f	file:
__get_data_page	swap/preload/preload_pd.c	/^static inline unsigned long __get_data_page(struct process_data *pd)$/;"	f	file:
__get_data_size	trace/trace_kprobe.c	/^static __kprobes int __get_data_size(struct trace_probe *tp,$/;"	f	file:
__get_dentry	swap/preload/preload_module.c	/^static struct dentry *__get_dentry(struct dentry *dentry)$/;"	f	file:
__get_handle	swap/preload/preload_pd.c	/^static inline void *__get_handle(struct process_data *pd)$/;"	f	file:
__get_handlers_base	swap/preload/preload_pd.c	/^static inline unsigned long __get_handlers_base(struct process_data *pd)$/;"	f	file:
__get_handlers_info	swap/preload/preload_storage.c	/^static inline struct bin_info *__get_handlers_info(void)$/;"	f	file:
__get_insn_slot	kprobes.c	/^static kprobe_opcode_t __kprobes *__get_insn_slot(struct kprobe_insn_cache *c)$/;"	f	file:
__get_key_name	lockdep.c	/^const char * __get_key_name(struct lockdep_subclass_key *key, char *str)$/;"	f
__get_libc_vma	swap/preload/preload_module.c	/^static struct vm_area_struct *__get_libc_vma(struct task_struct *task)$/;"	f	file:
__get_linker_info	swap/preload/preload_storage.c	/^static inline struct bin_info *__get_linker_info(void)$/;"	f	file:
__get_linker_vma	swap/preload/preload_module.c	/^static struct vm_area_struct *__get_linker_vma(struct task_struct *task)$/;"	f	file:
__get_loader_base	swap/preload/preload_pd.c	/^static inline unsigned long __get_loader_base(struct process_data *pd)$/;"	f	file:
__get_map	swap/ks_features/file_ops.c	/^static inline struct map *__get_map(void)$/;"	f	file:
__get_new_handle	swap/us_manager/callbacks.c	/^static inline int __get_new_handle(void)$/;"	f	file:
__get_path	swap/preload/preload_pd.c	/^static inline char __user *__get_path(struct process_data *pd)$/;"	f	file:
__get_process_data	swap/preload/preload_module.c	/^static inline struct process_data *__get_process_data(struct uretprobe *rp)$/;"	f	file:
__get_r_debug_off	swap/preload/preload_module.c	/^static inline unsigned long __get_r_debug_off(struct vm_area_struct *linker_vma)$/;"	f	file:
__get_refcount	swap/preload/preload_pd.c	/^static inline long __get_refcount(struct process_data *pd)$/;"	f	file:
__get_state	swap/preload/preload_pd.c	/^static inline enum preload_state_t __get_state(struct process_data *pd)$/;"	f	file:
__get_system	trace/trace_events.c	/^static void __get_system(struct event_subsystem *system)$/;"	f	file:
__get_system_dir	trace/trace_events.c	/^static void __get_system_dir(struct ftrace_subsystem_dir *dir)$/;"	f	file:
__get_task_slot	swap/preload/preload_threads.c	/^static inline struct thread_slot *__get_task_slot(struct task_struct *task)$/;"	f	file:
__get_task_struct	swap/preload/preload_control.c	/^static inline struct task_struct *__get_task_struct(void)$/;"	f	file:
__get_user_pages_uprobe	swap/kprobe/swap_kprobes_deps.c	/^long __get_user_pages_uprobe(struct task_struct *tsk, struct mm_struct *mm,$/;"	f
__get_valid_kprobe	kprobes.c	/^static struct kprobe * __kprobes __get_valid_kprobe(struct kprobe *p)$/;"	f	file:
__get_vma_by_addr	swap/preload/preload_module.c	/^static inline struct vm_area_struct *__get_vma_by_addr(struct task_struct *task,$/;"	f	file:
__getnstimeofday	time/timekeeping.c	/^EXPORT_SYMBOL(__getnstimeofday);$/;"	v
__getnstimeofday	time/timekeeping.c	/^int __getnstimeofday(struct timespec *ts)$/;"	f
__group_send_sig_info	signal.c	/^__group_send_sig_info(int sig, struct siginfo *info, struct task_struct *p)$/;"	f
__grow_slot	swap/preload/preload_threads.c	/^static inline struct thread_slot *__grow_slot(void)$/;"	f	file:
__grow_target_binaries	swap/preload/preload_control.c	/^static int __grow_target_binaries(void)$/;"	f	file:
__handlers_info	swap/preload/preload_storage.c	/^static struct bin_info __handlers_info = { NULL, NULL };$/;"	v	typeref:struct:bin_info	file:
__hardpps	time/ntp.c	/^void __hardpps(const struct timespec *phase_ts, const struct timespec *raw_ts)$/;"	f
__hrtick_start	sched/core.c	/^static void __hrtick_start(void *arg)$/;"	f	file:
__hrtimer_init	hrtimer.c	/^static void __hrtimer_init(struct hrtimer *timer, clockid_t clock_id,$/;"	f	file:
__hrtimer_peek_ahead_timers	hrtimer.c	/^static inline void __hrtimer_peek_ahead_timers(void) { }$/;"	f	file:
__hrtimer_peek_ahead_timers	hrtimer.c	/^static void __hrtimer_peek_ahead_timers(void)$/;"	f	file:
__hrtimer_start_range_ns	hrtimer.c	/^int __hrtimer_start_range_ns(struct hrtimer *timer, ktime_t tim,$/;"	f
__hrtimer_tasklet_trampoline	softirq.c	/^static enum hrtimer_restart __hrtimer_tasklet_trampoline(struct hrtimer *timer)$/;"	f	file:
__init_handlers_info	swap/preload/preload_storage.c	/^static inline int __init_handlers_info(char *path)$/;"	f	file:
__init_kthread_worker	kthread.c	/^EXPORT_SYMBOL_GPL(__init_kthread_worker);$/;"	v
__init_kthread_worker	kthread.c	/^void __init_kthread_worker(struct kthread_worker *worker,$/;"	f
__init_linker_info	swap/preload/preload_storage.c	/^static inline int __init_linker_info(char *path)$/;"	f	file:
__init_slot	swap/preload/preload_threads.c	/^static inline void __init_slot(struct thread_slot *slot)$/;"	f	file:
__init_srcu_struct	srcu.c	/^EXPORT_SYMBOL_GPL(__init_srcu_struct);$/;"	v
__init_srcu_struct	srcu.c	/^int __init_srcu_struct(struct srcu_struct *sp, const char *name,$/;"	f
__init_waitqueue_head	wait.c	/^EXPORT_SYMBOL(__init_waitqueue_head);$/;"	v
__init_waitqueue_head	wait.c	/^void __init_waitqueue_head(wait_queue_head_t *q, const char *name, struct lock_class_key *key)$/;"	f
__init_work	workqueue.c	/^EXPORT_SYMBOL_GPL(__init_work);$/;"	v
__init_work	workqueue.c	/^void __init_work(struct work_struct *work, int onstack)$/;"	f
__initdata	power/suspend_test.c	/^static char warn_bad_state[] __initdata =$/;"	v	file:
__initdata	power/suspend_test.c	/^static suspend_state_t test_state __initdata = PM_SUSPEND_ON;$/;"	v	file:
__initdata	trace/ftrace.c	/^static char ftrace_filter_buf[FTRACE_FILTER_SIZE] __initdata;$/;"	v	file:
__initdata	trace/ftrace.c	/^static char ftrace_graph_buf[FTRACE_FILTER_SIZE] __initdata;$/;"	v	file:
__initdata	trace/ftrace.c	/^static char ftrace_notrace_buf[FTRACE_FILTER_SIZE] __initdata;$/;"	v	file:
__initdata	trace/ftrace.c	/^static struct tracer_stat function_stats __initdata = {$/;"	v	typeref:struct:function_stats	file:
__initdata	trace/ring_buffer.c	/^static bool rb_test_started __initdata;$/;"	v	file:
__initdata	trace/ring_buffer.c	/^static char rb_string[] __initdata =$/;"	v	file:
__initdata	trace/ring_buffer.c	/^static struct rb_test_data rb_data[NR_CPUS] __initdata;$/;"	v	typeref:struct:rb_data	file:
__initdata	trace/ring_buffer.c	/^static struct task_struct *rb_threads[NR_CPUS] __initdata;$/;"	v	typeref:struct:rb_threads	file:
__initdata	trace/trace.c	/^static char *trace_boot_options __initdata;$/;"	v	file:
__initdata	trace/trace.c	/^static char bootup_tracer_buf[MAX_TRACER_SIZE] __initdata;$/;"	v	file:
__initdata	trace/trace.c	/^static char trace_boot_options_buf[MAX_TRACER_SIZE] __initdata;$/;"	v	file:
__initdata	trace/trace_events.c	/^static char bootup_event_buf[COMMAND_LINE_SIZE] __initdata;$/;"	v	file:
__initdata	trace/trace_events.c	/^static struct ftrace_ops trace_ops __initdata  =$/;"	v	typeref:struct:trace_ops	file:
__initdata	trace/trace_output.c	/^static struct trace_event *events[] __initdata = {$/;"	v	typeref:struct:events	file:
__initdata	trace/trace_stack.c	/^static char stack_trace_filter_buf[COMMAND_LINE_SIZE+1] __initdata;$/;"	v	file:
__insert_resource	resource.c	/^static struct resource * __insert_resource(struct resource *parent, struct resource *new)$/;"	f	file:
__insert_uprobe	events/uprobes.c	/^static struct uprobe *__insert_uprobe(struct uprobe *uprobe)$/;"	f	file:
__internal_add_timer	timer.c	/^__internal_add_timer(struct tvec_base *base, struct timer_list *timer)$/;"	f	file:
__invalid_creds	cred.c	/^EXPORT_SYMBOL(__invalid_creds);$/;"	v
__invalid_creds	cred.c	/^void __invalid_creds(const struct cred *cred, const char *file, unsigned line)$/;"	f
__inverted	swap/preload/preload_module.c	/^static inline bool __inverted(struct us_ip *ip)$/;"	f	file:
__irq_alloc_descs	irq/irqdesc.c	/^EXPORT_SYMBOL_GPL(__irq_alloc_descs);$/;"	v
__irq_alloc_descs	irq/irqdesc.c	/^__irq_alloc_descs(int irq, unsigned int from, unsigned int cnt, int node,$/;"	f
__irq_get_desc_lock	irq/irqdesc.c	/^__irq_get_desc_lock(unsigned int irq, unsigned long *flags, bool bus,$/;"	f
__irq_put_desc_unlock	irq/irqdesc.c	/^void __irq_put_desc_unlock(struct irq_desc *desc, unsigned long flags, bool bus)$/;"	f
__irq_set_affinity	irq/manage.c	/^int __irq_set_affinity(unsigned int irq, const struct cpumask *mask, bool force)$/;"	f
__irq_set_handler	irq/chip.c	/^EXPORT_SYMBOL_GPL(__irq_set_handler);$/;"	v
__irq_set_handler	irq/chip.c	/^__irq_set_handler(unsigned int irq, irq_flow_handler_t handle, int is_chained,$/;"	f
__irq_set_trigger	irq/manage.c	/^int __irq_set_trigger(struct irq_desc *desc, unsigned int irq,$/;"	f
__irq_work_run	irq_work.c	/^static void __irq_work_run(void)$/;"	f	file:
__irqsoff_tracer_init	trace/trace_irqsoff.c	/^static void __irqsoff_tracer_init(struct trace_array *tr)$/;"	f	file:
__is_addr_found	swap/preload/preload_threads.c	/^static inline bool __is_addr_found(struct disabled_addr *da,$/;"	f	file:
__is_handlers_call	swap/preload/preload_module.c	/^static inline bool __is_handlers_call(struct vm_area_struct *caller)$/;"	f	file:
__is_instrumented	swap/preload/preload_control.c	/^static bool __is_instrumented(void *caller)$/;"	f	file:
__is_probe_non_block	swap/preload/preload_module.c	/^static inline bool __is_probe_non_block(struct us_ip *ip)$/;"	f	file:
__is_proc_mmap_mappable	swap/preload/preload_module.c	/^static bool __is_proc_mmap_mappable(struct task_struct *task)$/;"	f	file:
__is_ram	resource.c	/^static int __is_ram(unsigned long pfn, unsigned long nr_pages, void *arg)$/;"	f	file:
__isleap	time/timeconv.c	/^static int __isleap(long year)$/;"	f	file:
__jump_label_mod_text_reserved	jump_label.c	/^static int __jump_label_mod_text_reserved(void *start, void *end)$/;"	f	file:
__jump_label_mod_update	jump_label.c	/^static void __jump_label_mod_update(struct static_key *key, int enable)$/;"	f	file:
__jump_label_text_reserved	jump_label.c	/^static int __jump_label_text_reserved(struct jump_entry *iter_start,$/;"	f	file:
__jump_label_update	jump_label.c	/^static void __jump_label_update(struct static_key *key,$/;"	f	file:
__kernel_param_lock	params.c	/^EXPORT_SYMBOL(__kernel_param_lock);$/;"	v
__kernel_param_lock	params.c	/^void __kernel_param_lock(void)$/;"	f
__kernel_param_unlock	params.c	/^EXPORT_SYMBOL(__kernel_param_unlock);$/;"	v
__kernel_param_unlock	params.c	/^void __kernel_param_unlock(void)$/;"	f
__kernel_text_address	extable.c	/^int __kernel_text_address(unsigned long addr)$/;"	f
__kill_pgrp_info	signal.c	/^int __kill_pgrp_info(int sig, struct siginfo *info, struct pid *pgrp)$/;"	f
__kprobe_handler	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^static int __kprobe_handler(struct pt_regs *regs)$/;"	f	file:
__kprobe_trace_func	trace/trace_kprobe.c	/^__kprobe_trace_func(struct trace_probe *tp, struct pt_regs *regs,$/;"	f	file:
__kretprobe_trace_func	trace/trace_kprobe.c	/^__kretprobe_trace_func(struct trace_probe *tp, struct kretprobe_instance *ri,$/;"	f	file:
__ksymtab	debug/kdb/kdb_private.h	/^typedef struct __ksymtab {$/;"	s
__kthread_bind	kthread.c	/^static void __kthread_bind(struct task_struct *p, unsigned int cpu, long state)$/;"	f	file:
__kthread_parkme	kthread.c	/^static void __kthread_parkme(struct kthread *self)$/;"	f	file:
__kthread_unpark	kthread.c	/^static void __kthread_unpark(struct task_struct *k, struct kthread *kthread)$/;"	f	file:
__libc_info	swap/preload/preload_storage.c	/^static struct bin_info __libc_info;$/;"	v	typeref:struct:bin_info	file:
__linker_info	swap/preload/preload_storage.c	/^static struct bin_info __linker_info = { NULL, NULL };$/;"	v	typeref:struct:bin_info	file:
__loader_info	swap/preload/preload_debugfs.c	/^static struct loader_info __loader_info;$/;"	v	typeref:struct:loader_info	file:
__local_bh_disable	softirq.c	/^static inline void __local_bh_disable(unsigned long ip, unsigned int cnt)$/;"	f	file:
__local_bh_disable	softirq.c	/^static void __local_bh_disable(unsigned long ip, unsigned int cnt)$/;"	f	file:
__local_bh_enable	softirq.c	/^static void __local_bh_enable(unsigned int cnt)$/;"	f	file:
__local_trigger	softirq.c	/^static void __local_trigger(struct call_single_data *cp, int softirq)$/;"	f	file:
__lock_acquire	lockdep.c	/^static int __lock_acquire(struct lockdep_map *lock, unsigned int subclass,$/;"	f	file:
__lock_acquired	lockdep.c	/^__lock_acquired(struct lockdep_map *lock, unsigned long ip)$/;"	f	file:
__lock_arg_init	swap/ks_features/file_ops.c	478;"	d	file:
__lock_cbs_list	swap/us_manager/callbacks.c	/^static inline void __lock_cbs_list(void)$/;"	f	file:
__lock_contended	lockdep.c	/^__lock_contended(struct lockdep_map *lock, unsigned long ip)$/;"	f	file:
__lock_is_held	lockdep.c	/^static int __lock_is_held(struct lockdep_map *lock)$/;"	f	file:
__lock_release	lockdep.c	/^__lock_release(struct lockdep_map *lock, int nested, unsigned long ip)$/;"	f	file:
__lock_set_class	lockdep.c	/^__lock_set_class(struct lockdep_map *lock, const char *name,$/;"	f	file:
__lock_task_sighand	signal.c	/^struct sighand_struct *__lock_task_sighand(struct task_struct *tsk,$/;"	f
__lock_timer	posix-timers.c	/^static struct k_itimer *__lock_timer(timer_t timer_id, unsigned long *flags)$/;"	f	file:
__lockdep_count_backward_deps	lockdep.c	/^unsigned long __lockdep_count_backward_deps(struct lock_list *this)$/;"	f
__lockdep_count_forward_deps	lockdep.c	/^unsigned long __lockdep_count_forward_deps(struct lock_list *this)$/;"	f
__lockdep_no_validate__	lockdep.c	/^EXPORT_SYMBOL_GPL(__lockdep_no_validate__);$/;"	v
__lockdep_no_validate__	lockdep.c	/^struct lock_class_key __lockdep_no_validate__;$/;"	v	typeref:struct:lock_class_key
__lockdep_trace_alloc	lockdep.c	/^static void __lockdep_trace_alloc(gfp_t gfp_mask, unsigned long flags)$/;"	f	file:
__might_sleep	sched/core.c	/^EXPORT_SYMBOL(__might_sleep);$/;"	v
__might_sleep	sched/core.c	/^void __might_sleep(const char *file, int line, int preempt_offset)$/;"	f
__might_sleep_init	sched/core.c	/^early_initcall(__might_sleep_init);$/;"	v
__might_sleep_init	sched/core.c	/^int __init __might_sleep_init(void)$/;"	f
__might_sleep_init_called	sched/core.c	/^static int __might_sleep_init_called;$/;"	v	file:
__migrate_task	sched/core.c	/^static int __migrate_task(struct task_struct *p, int src_cpu, int dest_cpu)$/;"	f	file:
__mm	swap/us_manager/sspt/sspt_proc.h	/^	struct mm_struct *__mm;$/;"	m	struct:sspt_proc	typeref:struct:sspt_proc::mm_struct
__mmdrop	fork.c	/^EXPORT_SYMBOL_GPL(__mmdrop);$/;"	v
__mmdrop	fork.c	/^void __mmdrop(struct mm_struct *mm)$/;"	f
__mod_timer	timer.c	/^__mod_timer(struct timer_list *timer, unsigned long expires,$/;"	f	file:
__modinit	params.c	564;"	d	file:
__modinit	params.c	566;"	d	file:
__module_address	module.c	/^EXPORT_SYMBOL_GPL(__module_address);$/;"	v
__module_address	module.c	/^struct module *__module_address(unsigned long addr)$/;"	f
__module_get	module.c	/^EXPORT_SYMBOL(__module_get);$/;"	v
__module_get	module.c	/^void __module_get(struct module *module)$/;"	f
__module_put_and_exit	module.c	/^EXPORT_SYMBOL(__module_put_and_exit);$/;"	v
__module_put_and_exit	module.c	/^void __module_put_and_exit(struct module *mod, long code)$/;"	f
__module_text_address	module.c	/^EXPORT_SYMBOL_GPL(__module_text_address);$/;"	v
__module_text_address	module.c	/^struct module *__module_text_address(unsigned long addr)$/;"	f
__modver_version_show	params.c	/^ssize_t __modver_version_show(struct module_attribute *mattr,$/;"	f
__mon_yday	time/timeconv.c	/^static const unsigned short __mon_yday[2][13] = {$/;"	v	file:
__msg_sanitization	swap/preload/preload_module.c	/^static inline int __msg_sanitization(char *user_msg, size_t len,$/;"	f	file:
__mutex_init	mutex.c	/^EXPORT_SYMBOL(__mutex_init);$/;"	v
__mutex_init	mutex.c	/^__mutex_init(struct mutex *lock, const char *name, struct lock_class_key *key)$/;"	f
__mutex_lock_common	mutex.c	/^__mutex_lock_common(struct mutex *lock, long state, unsigned int subclass,$/;"	f	file:
__mutex_lock_interruptible_slowpath	mutex.c	/^__mutex_lock_interruptible_slowpath(atomic_t *lock_count)$/;"	f	file:
__mutex_lock_killable_slowpath	mutex.c	/^__mutex_lock_killable_slowpath(atomic_t *lock_count)$/;"	f	file:
__mutex_lock_slowpath	mutex.c	/^__mutex_lock_slowpath(atomic_t *lock_count)$/;"	f	file:
__mutex_trylock_slowpath	mutex.c	/^static inline int __mutex_trylock_slowpath(atomic_t *lock_count)$/;"	f	file:
__mutex_unlock_common_slowpath	mutex.c	/^__mutex_unlock_common_slowpath(atomic_t *lock_count, int nested)$/;"	f	file:
__mutex_unlock_slowpath	mutex.c	/^__mutex_unlock_slowpath(atomic_t *lock_count)$/;"	f	file:
__need_more_worker	workqueue.c	/^static bool __need_more_worker(struct worker_pool *pool)$/;"	f	file:
__nenv	debug/kdb/kdb_main.c	/^static const int __nenv = ARRAY_SIZE(__env);$/;"	v	file:
__next	trace/trace_stack.c	/^__next(struct seq_file *m, loff_t *pos)$/;"	f	file:
__next_timer_interrupt	timer.c	/^static unsigned long __next_timer_interrupt(struct tvec_base *base)$/;"	f	file:
__nkdb_err	debug/kdb/kdb_main.c	/^static const int __nkdb_err = ARRAY_SIZE(kdbmsgs);$/;"	v	file:
__normal_prio	sched/core.c	/^static inline int __normal_prio(struct task_struct *p)$/;"	f	file:
__nosavedata	power/hibernate.c	/^int in_suspend __nosavedata;$/;"	v
__not_system_caller	swap/preload/preload_module.c	/^static bool __not_system_caller(struct task_struct *task,$/;"	f	file:
__note_new_gpnum	rcutree.c	/^static void __note_new_gpnum(struct rcu_state *rsp, struct rcu_node *rnp, struct rcu_data *rdp)$/;"	f	file:
__nsp_add	swap/nsp/nsp.c	/^static int __nsp_add(const char *app_path, unsigned long main_addr)$/;"	f	file:
__nsp_disabel	swap/nsp/nsp.c	/^static void __nsp_disabel(void)$/;"	f	file:
__nsp_enable	swap/nsp/nsp.c	/^static int __nsp_enable(void)$/;"	f	file:
__nsp_rm	swap/nsp/nsp.c	/^static int __nsp_rm(const char *path)$/;"	f	file:
__nsp_rm_all	swap/nsp/nsp.c	/^static int __nsp_rm_all(void)$/;"	f	file:
__orderly_poweroff	sys.c	/^static int __orderly_poweroff(bool force)$/;"	f	file:
__packed	power/user.c	/^} __packed;$/;"	v	typeref:struct:compat_resume_swap_area
__packed	swap/fbiprobe/fbi_msg.c	/^} __packed;$/;"	v	typeref:struct:msg_fbi
__packed	swap/fbiprobe/fbiprobe.h	/^} __packed;$/;"	v	typeref:struct:fbi_step
__packed	swap/ks_features/ksf_msg.c	/^} __packed;$/;"	v	typeref:struct:lock_arg
__packed	swap/ks_features/ksf_msg.c	/^} __packed;$/;"	v	typeref:struct:msg_context_switch
__packed	swap/ks_features/ksf_msg.c	/^} __packed;$/;"	v	typeref:struct:msg_file_entry
__packed	swap/ks_features/ksf_msg.c	/^} __packed;$/;"	v	typeref:struct:msg_file_exit
__packed	swap/ks_features/ksf_msg.c	/^} __packed;$/;"	v	typeref:struct:msg_sys_entry
__packed	swap/ks_features/ksf_msg.c	/^} __packed;$/;"	v	typeref:struct:msg_sys_exit
__packed	swap/ks_features/ksf_msg.c	/^} __packed;$/;"	v	typeref:struct:msg_sys_header
__packed	swap/nsp/nsp_msg.c	/^} __packed;$/;"	v	typeref:struct:nsp_msg_struct
__packed	swap/parser/features.c	/^} __packed;$/;"	v	typeref:struct:sample
__packed	swap/parser/swap_msg_parser.c	/^} __packed;$/;"	v	typeref:struct:basic_msg_fmt
__packed	swap/parser/usm_msg.c	/^} __packed;$/;"	v	typeref:struct:lib_obj
__packed	swap/parser/usm_msg.c	/^} __packed;$/;"	v	typeref:struct:ofile
__packed	swap/parser/usm_msg.c	/^} __packed;$/;"	v	typeref:struct:proc_comm
__packed	swap/parser/usm_msg.c	/^} __packed;$/;"	v	typeref:struct:proc_info_bottom
__packed	swap/parser/usm_msg.c	/^} __packed;$/;"	v	typeref:struct:proc_info_top
__packed	swap/parser/usm_msg.c	/^} __packed;$/;"	v	typeref:struct:proc_map
__packed	swap/parser/usm_msg.c	/^} __packed;$/;"	v	typeref:struct:proc_terminate
__packed	swap/parser/usm_msg.c	/^} __packed;$/;"	v	typeref:struct:proc_unmap
__packed	swap/retprobe/rp_msg.c	/^} __packed;$/;"	v	typeref:struct:msg_entry
__packed	swap/retprobe/rp_msg.c	/^} __packed;$/;"	v	typeref:struct:msg_exit
__packed	swap/writer/swap_msg.c	/^} __packed;$/;"	v	typeref:struct:swap_msg
__pad	module_signing.c	/^	u8	__pad[3];$/;"	m	struct:module_signature	file:
__padata_add_cpu	padata.c	/^static int __padata_add_cpu(struct padata_instance *pinst, int cpu)$/;"	f	file:
__padata_free	padata.c	/^static void __padata_free(struct padata_instance *pinst)$/;"	f	file:
__padata_list_init	padata.c	/^static void __padata_list_init(struct padata_list *pd_list)$/;"	f	file:
__padata_remove_cpu	padata.c	/^static int __padata_remove_cpu(struct padata_instance *pinst, int cpu)$/;"	f	file:
__padata_set_cpumasks	padata.c	/^static int __padata_set_cpumasks(struct padata_instance *pinst,$/;"	f	file:
__padata_start	padata.c	/^static void __padata_start(struct padata_instance *pinst)$/;"	f	file:
__padata_stop	padata.c	/^static void __padata_stop(struct padata_instance *pinst)$/;"	f	file:
__parent_ca	sched/cpuacct.c	/^static inline struct cpuacct *__parent_ca(struct cpuacct *ca)$/;"	f	file:
__parse_bitfield_probe_arg	trace/trace_probe.c	/^static int __parse_bitfield_probe_arg(const char *bf,$/;"	f	file:
__parse_crashkernel	kexec.c	/^static int __init __parse_crashkernel(char *cmdline,$/;"	f	file:
__pd_create_on_demand	swap/preload/preload_pd.c	/^static int __pd_create_on_demand(void)$/;"	f	file:
__perf_cgroup_move	events/core.c	/^static int __perf_cgroup_move(void *info)$/;"	f	file:
__perf_event__output_id_sample	events/core.c	/^static void __perf_event__output_id_sample(struct perf_output_handle *handle,$/;"	f	file:
__perf_event_disable	events/core.c	/^int __perf_event_disable(void *info)$/;"	f
__perf_event_enable	events/core.c	/^static int __perf_event_enable(void *info)$/;"	f	file:
__perf_event_exit_context	events/core.c	/^static void __perf_event_exit_context(void *__info)$/;"	f	file:
__perf_event_exit_task	events/core.c	/^__perf_event_exit_task(struct perf_event *child_event,$/;"	f	file:
__perf_event_header__init_id	events/core.c	/^static void __perf_event_header__init_id(struct perf_event_header *header,$/;"	f	file:
__perf_event_init_context	events/core.c	/^static void __perf_event_init_context(struct perf_event_context *ctx)$/;"	f	file:
__perf_event_mark_enabled	events/core.c	/^static void __perf_event_mark_enabled(struct perf_event *event)$/;"	f	file:
__perf_event_overflow	events/core.c	/^static int __perf_event_overflow(struct perf_event *event,$/;"	f	file:
__perf_event_read	events/core.c	/^static void __perf_event_read(void *info)$/;"	f	file:
__perf_event_sync_stat	events/core.c	/^static void __perf_event_sync_stat(struct perf_event *event,$/;"	f	file:
__perf_event_task_sched_in	events/core.c	/^void __perf_event_task_sched_in(struct task_struct *prev,$/;"	f
__perf_event_task_sched_out	events/core.c	/^void __perf_event_task_sched_out(struct task_struct *task,$/;"	f
__perf_install_in_context	events/core.c	/^static int  __perf_install_in_context(void *info)$/;"	f	file:
__perf_remove_from_context	events/core.c	/^static int __perf_remove_from_context(void *info)$/;"	f	file:
__perf_sw_event	events/core.c	/^void __perf_sw_event(u32 event_id, u64 nr, struct pt_regs *regs, u64 addr)$/;"	f
__pick_first_entity	sched/fair.c	/^struct sched_entity *__pick_first_entity(struct cfs_rq *cfs_rq)$/;"	f
__pick_last_entity	sched/fair.c	/^struct sched_entity *__pick_last_entity(struct cfs_rq *cfs_rq)$/;"	f
__pick_next_entity	sched/fair.c	/^static struct sched_entity *__pick_next_entity(struct sched_entity *se)$/;"	f	file:
__pm_qos_update_request	power/qos.c	/^static void __pm_qos_update_request(struct pm_qos_request *req,$/;"	f	file:
__pop_pred_stack	trace/trace_events_filter.c	/^__pop_pred_stack(struct pred_stack *stack)$/;"	f	file:
__posix_timers_find	posix-timers.c	/^static struct k_itimer *__posix_timers_find(struct hlist_head *head,$/;"	f	file:
__preload_cbs_start_h	swap/preload/preload_module.c	/^static int __preload_cbs_start_h = -1;$/;"	v	file:
__preload_cbs_stop_h	swap/preload/preload_module.c	/^static int __preload_cbs_stop_h = -1;$/;"	v	file:
__preload_status	swap/preload/preload_module.c	/^static enum preload_status_t __preload_status = SWAP_PRELOAD_NOT_READY;$/;"	v	typeref:enum:preload_status_t	file:
__prepare_ujump	swap/preload/preload_module.c	/^static inline void __prepare_ujump(struct uretprobe_instance *ri,$/;"	f	file:
__print_graph_headers_flags	trace/trace_functions_graph.c	/^static void __print_graph_headers_flags(struct seq_file *s, u32 flags)$/;"	f	file:
__print_lock_name	lockdep.c	/^static void __print_lock_name(struct lock_class *class)$/;"	f	file:
__print_symbol	kallsyms.c	/^EXPORT_SYMBOL(__print_symbol);$/;"	v
__print_symbol	kallsyms.c	/^void __print_symbol(const char *fmt, unsigned long address)$/;"	f
__printk_ratelimit	printk.c	/^EXPORT_SYMBOL(__printk_ratelimit);$/;"	v
__printk_ratelimit	printk.c	/^int __printk_ratelimit(const char *func)$/;"	f
__priv_tdata_destroy	swap/nsp/nsp_tdata.c	/^static void __priv_tdata_destroy(struct tdata *tdata)$/;"	f	file:
__profile_flip_buffers	profile.c	/^static void __profile_flip_buffers(void *unused)$/;"	f	file:
__ptrace_detach	ptrace.c	/^static bool __ptrace_detach(struct task_struct *tracer, struct task_struct *p)$/;"	f	file:
__ptrace_link	ptrace.c	/^void __ptrace_link(struct task_struct *child, struct task_struct *new_parent)$/;"	f
__ptrace_may_access	ptrace.c	/^static int __ptrace_may_access(struct task_struct *task, unsigned int mode)$/;"	f	file:
__ptrace_unlink	ptrace.c	/^void __ptrace_unlink(struct task_struct *child)$/;"	f
__push	swap/preload/preload_module.c	/^static inline int __push(struct pt_regs *regs, void *buf, size_t len)$/;"	f	file:
__push_pred_stack	trace/trace_events_filter.c	/^static int __push_pred_stack(struct pred_stack *stack,$/;"	f	file:
__put_chunk	audit_tree.c	/^static void __put_chunk(struct rcu_head *rcu)$/;"	f	file:
__put_cred	cred.c	/^EXPORT_SYMBOL(__put_cred);$/;"	v
__put_cred	cred.c	/^void __put_cred(struct cred *cred)$/;"	f
__put_css_set	cgroup.c	/^static void __put_css_set(struct css_set *cg, int taskexit)$/;"	f	file:
__put_system	trace/trace_events.c	/^static void __put_system(struct event_subsystem *system)$/;"	f	file:
__put_system_dir	trace/trace_events.c	/^static void __put_system_dir(struct ftrace_subsystem_dir *dir)$/;"	f	file:
__put_task_struct	fork.c	/^EXPORT_SYMBOL_GPL(__put_task_struct);$/;"	v
__put_task_struct	fork.c	/^void __put_task_struct(struct task_struct *tsk)$/;"	f
__queue_delayed_work	workqueue.c	/^static void __queue_delayed_work(int cpu, struct workqueue_struct *wq,$/;"	f	file:
__queue_work	workqueue.c	/^static void __queue_work(int cpu, struct workqueue_struct *wq,$/;"	f	file:
__raise_softirq_irqoff	softirq.c	/^void __raise_softirq_irqoff(unsigned int nr)$/;"	f
__raw_notifier_call_chain	notifier.c	/^EXPORT_SYMBOL_GPL(__raw_notifier_call_chain);$/;"	v
__raw_notifier_call_chain	notifier.c	/^int __raw_notifier_call_chain(struct raw_notifier_head *nh,$/;"	f
__rb_allocate_pages	trace/ring_buffer.c	/^static int __rb_allocate_pages(int nr_pages, struct list_head *pages, int cpu)$/;"	f	file:
__rb_data_page_index	trace/ring_buffer.c	/^__rb_data_page_index(struct buffer_data_page *bpage, unsigned index)$/;"	f	file:
__rb_page_index	trace/ring_buffer.c	/^static inline void *__rb_page_index(struct buffer_page *bpage, unsigned index)$/;"	f	file:
__rb_reserve_next	trace/ring_buffer.c	/^__rb_reserve_next(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
__rcu_init_preempt	rcutree_plugin.h	/^static void __init __rcu_init_preempt(void)$/;"	f
__rcu_pending	rcutree.c	/^static int __rcu_pending(struct rcu_state *rsp, struct rcu_data *rdp)$/;"	f	file:
__rcu_process_callbacks	rcutiny.c	/^static void __rcu_process_callbacks(struct rcu_ctrlblk *rcp)$/;"	f	file:
__rcu_process_callbacks	rcutree.c	/^__rcu_process_callbacks(struct rcu_state *rsp)$/;"	f	file:
__rcu_process_gp_end	rcutree.c	/^__rcu_process_gp_end(struct rcu_state *rsp, struct rcu_node *rnp, struct rcu_data *rdp)$/;"	f	file:
__rcu_read_lock	rcupdate.c	/^EXPORT_SYMBOL_GPL(__rcu_read_lock);$/;"	v
__rcu_read_lock	rcupdate.c	/^void __rcu_read_lock(void)$/;"	f
__rcu_read_unlock	rcupdate.c	/^EXPORT_SYMBOL_GPL(__rcu_read_unlock);$/;"	v
__rcu_read_unlock	rcupdate.c	/^void __rcu_read_unlock(void)$/;"	f
__rcu_reclaim	rcu.h	/^static inline bool __rcu_reclaim(char *rn, struct rcu_head *head)$/;"	f
__read_mostly	cgroup.c	/^static int need_forkexit_callback __read_mostly;$/;"	v	file:
__read_mostly	cgroup.c	/^static int use_task_css_set_links __read_mostly;$/;"	v	file:
__read_mostly	cpuset.c	/^int cpuset_memory_pressure_enabled __read_mostly;$/;"	v
__read_mostly	cpuset.c	/^int number_of_cpusets __read_mostly;$/;"	v
__read_mostly	delayacct.c	/^int delayacct_on __read_mostly = 1;	\/* Delay accounting turned on\/off *\/$/;"	v
__read_mostly	events/core.c	/^int sysctl_perf_cpu_time_max_percent __read_mostly = DEFAULT_CPU_TIME_MAX_PERCENT;$/;"	v
__read_mostly	events/core.c	/^int sysctl_perf_event_mlock __read_mostly = 512 + (PAGE_SIZE \/ 1024); \/* 'free' kiB per user *\/$/;"	v
__read_mostly	events/core.c	/^int sysctl_perf_event_paranoid __read_mostly = 1;$/;"	v
__read_mostly	events/core.c	/^int sysctl_perf_event_sample_rate __read_mostly	= DEFAULT_MAX_SAMPLE_RATE;$/;"	v
__read_mostly	events/core.c	/^static atomic_t nr_comm_events __read_mostly;$/;"	v	file:
__read_mostly	events/core.c	/^static atomic_t nr_mmap_events __read_mostly;$/;"	v	file:
__read_mostly	events/core.c	/^static atomic_t nr_task_events __read_mostly;$/;"	v	file:
__read_mostly	events/core.c	/^static atomic_t perf_sample_allowed_ns __read_mostly =$/;"	v	file:
__read_mostly	events/core.c	/^static int max_samples_per_tick __read_mostly	= DIV_ROUND_UP(DEFAULT_MAX_SAMPLE_RATE, HZ);$/;"	v	file:
__read_mostly	events/core.c	/^static int perf_sample_period_ns __read_mostly	= DEFAULT_SAMPLE_PERIOD_NS;$/;"	v	file:
__read_mostly	events/core.c	/^struct static_key_deferred perf_sched_events __read_mostly;$/;"	v	typeref:struct:perf_sched_events
__read_mostly	hrtimer.c	/^static int hrtimer_hres_enabled __read_mostly  = 1;$/;"	v	file:
__read_mostly	irq/spurious.c	/^bool noirqdebug __read_mostly;$/;"	v
__read_mostly	irq/spurious.c	/^static int irqfixup __read_mostly;$/;"	v	file:
__read_mostly	kcmp.c	/^static unsigned long cookies[KCMP_TYPES][2] __read_mostly;$/;"	v	file:
__read_mostly	kprobes.c	/^static struct ftrace_ops kprobe_ftrace_ops __read_mostly = {$/;"	v	typeref:struct:kprobe_ftrace_ops	file:
__read_mostly	printk.c	/^int printk_delay_msec __read_mostly;$/;"	v
__read_mostly	profile.c	/^int prof_on __read_mostly;$/;"	v
__read_mostly	rcupdate.c	/^int rcu_cpu_stall_suppress __read_mostly; \/* 1 = suppress stall warnings. *\/$/;"	v
__read_mostly	rcupdate.c	/^int rcu_cpu_stall_timeout __read_mostly = CONFIG_RCU_CPU_STALL_TIMEOUT;$/;"	v
__read_mostly	rcutiny_plugin.h	/^int rcu_scheduler_active __read_mostly;$/;"	v
__read_mostly	rcutiny_plugin.h	/^static int rcu_scheduler_fully_active __read_mostly;$/;"	v
__read_mostly	rcutree.c	/^int rcu_num_lvls __read_mostly = RCU_NUM_LVLS;$/;"	v
__read_mostly	rcutree.c	/^int rcu_num_nodes __read_mostly = NUM_RCU_NODES; \/* Total # rcu_nodes in use. *\/$/;"	v
__read_mostly	rcutree.c	/^int rcu_scheduler_active __read_mostly;$/;"	v
__read_mostly	rcutree.c	/^static int rcu_scheduler_fully_active __read_mostly;$/;"	v	file:
__read_mostly	sched/fair.c	/^unsigned int sysctl_sched_child_runs_first __read_mostly;$/;"	v
__read_mostly	signal.c	/^int print_fatal_signals __read_mostly;$/;"	v
__read_mostly	smp.c	/^int nr_cpu_ids __read_mostly = NR_CPUS;$/;"	v
__read_mostly	time/tick-common.c	/^int tick_do_timer_cpu __read_mostly = TICK_DO_TIMER_BOOT;$/;"	v
__read_mostly	time/tick-sched.c	/^int tick_nohz_enabled __read_mostly  = 1;$/;"	v
__read_mostly	time/timer_stats.c	/^static struct entry *tstat_hash_table[TSTAT_HASH_SIZE] __read_mostly;$/;"	v	typeref:struct:tstat_hash_table	file:
__read_mostly	trace/blktrace.c	/^static bool blk_tracer_enabled __read_mostly;$/;"	v	file:
__read_mostly	trace/blktrace.c	/^static struct tracer blk_tracer __read_mostly = {$/;"	v	typeref:struct:blk_tracer	file:
__read_mostly	trace/blktrace.c	/^static unsigned int blktrace_seq __read_mostly = 1;$/;"	v	file:
__read_mostly	trace/ftrace.c	/^ftrace_func_t ftrace_pid_function __read_mostly = ftrace_stub;$/;"	v
__read_mostly	trace/ftrace.c	/^ftrace_func_t ftrace_trace_function __read_mostly = ftrace_stub;$/;"	v
__read_mostly	trace/ftrace.c	/^int ftrace_enabled __read_mostly;$/;"	v
__read_mostly	trace/ftrace.c	/^int function_trace_stop __read_mostly;$/;"	v
__read_mostly	trace/ftrace.c	/^static int ftrace_disabled __read_mostly;$/;"	v	file:
__read_mostly	trace/ftrace.c	/^static int ftrace_profile_enabled __read_mostly;$/;"	v	file:
__read_mostly	trace/ftrace.c	/^static struct ftrace_ops *ftrace_control_list __read_mostly = &ftrace_list_end;$/;"	v	typeref:struct:ftrace_control_list	file:
__read_mostly	trace/ftrace.c	/^static struct ftrace_ops *ftrace_global_list __read_mostly = &ftrace_list_end;$/;"	v	typeref:struct:ftrace_global_list	file:
__read_mostly	trace/ftrace.c	/^static struct ftrace_ops *ftrace_ops_list __read_mostly = &ftrace_list_end;$/;"	v	typeref:struct:ftrace_ops_list	file:
__read_mostly	trace/ftrace.c	/^static struct ftrace_ops fgraph_ops __read_mostly = {$/;"	v	typeref:struct:fgraph_ops	file:
__read_mostly	trace/ftrace.c	/^static struct ftrace_ops ftrace_list_end __read_mostly = {$/;"	v	typeref:struct:ftrace_list_end	file:
__read_mostly	trace/ftrace.c	/^static struct ftrace_ops ftrace_profile_ops __read_mostly = {$/;"	v	typeref:struct:ftrace_profile_ops	file:
__read_mostly	trace/ftrace.c	/^static struct ftrace_ops trace_probe_ops __read_mostly =$/;"	v	typeref:struct:trace_probe_ops	file:
__read_mostly	trace/ftrace.c	/^static struct hlist_head ftrace_func_hash[FTRACE_FUNC_HASHSIZE] __read_mostly;$/;"	v	typeref:struct:ftrace_func_hash	file:
__read_mostly	trace/ftrace.c	/^struct ftrace_ops *function_trace_op __read_mostly = &ftrace_list_end;$/;"	v	typeref:struct:function_trace_op
__read_mostly	trace/ftrace.c	/^unsigned long ftrace_graph_funcs[FTRACE_GRAPH_MAX_FUNCS] __read_mostly;$/;"	v
__read_mostly	trace/ring_buffer.c	/^static unsigned long ring_buffer_flags __read_mostly = RB_BUFFERS_ON;$/;"	v	file:
__read_mostly	trace/trace.c	/^static atomic_t trace_record_cmdline_disabled __read_mostly;$/;"	v	file:
__read_mostly	trace/trace.c	/^static struct tracer		*trace_types __read_mostly;$/;"	v	typeref:struct:trace_types	file:
__read_mostly	trace/trace_branch.c	/^static int branch_tracing_enabled __read_mostly;$/;"	v	file:
__read_mostly	trace/trace_branch.c	/^static struct tracer branch_trace __read_mostly =$/;"	v	typeref:struct:branch_trace	file:
__read_mostly	trace/trace_functions.c	/^static struct ftrace_ops trace_ops __read_mostly =$/;"	v	typeref:struct:trace_ops	file:
__read_mostly	trace/trace_functions.c	/^static struct ftrace_ops trace_stack_ops __read_mostly =$/;"	v	typeref:struct:trace_stack_ops	file:
__read_mostly	trace/trace_functions.c	/^static struct tracer function_trace __read_mostly =$/;"	v	typeref:struct:function_trace	file:
__read_mostly	trace/trace_functions_graph.c	/^static struct tracer graph_trace __read_mostly = {$/;"	v	typeref:struct:graph_trace	file:
__read_mostly	trace/trace_irqsoff.c	/^static int				tracer_enabled __read_mostly;$/;"	v	file:
__read_mostly	trace/trace_irqsoff.c	/^static int trace_type __read_mostly;$/;"	v	file:
__read_mostly	trace/trace_irqsoff.c	/^static struct ftrace_ops trace_ops __read_mostly =$/;"	v	typeref:struct:trace_ops	file:
__read_mostly	trace/trace_irqsoff.c	/^static struct trace_array		*irqsoff_trace __read_mostly;$/;"	v	typeref:struct:irqsoff_trace	file:
__read_mostly	trace/trace_irqsoff.c	/^static struct tracer irqsoff_tracer __read_mostly =$/;"	v	typeref:struct:irqsoff_tracer	file:
__read_mostly	trace/trace_irqsoff.c	/^static struct tracer preemptirqsoff_tracer __read_mostly =$/;"	v	typeref:struct:preemptirqsoff_tracer	file:
__read_mostly	trace/trace_irqsoff.c	/^static struct tracer preemptoff_tracer __read_mostly =$/;"	v	typeref:struct:preemptoff_tracer	file:
__read_mostly	trace/trace_mmiotrace.c	/^static struct tracer mmio_tracer __read_mostly =$/;"	v	typeref:struct:mmio_tracer	file:
__read_mostly	trace/trace_nop.c	/^struct tracer nop_trace __read_mostly =$/;"	v	typeref:struct:nop_trace
__read_mostly	trace/trace_output.c	/^static struct hlist_head event_hash[EVENT_HASHSIZE] __read_mostly;$/;"	v	typeref:struct:event_hash	file:
__read_mostly	trace/trace_sched_wakeup.c	/^static struct ftrace_ops trace_ops __read_mostly =$/;"	v	typeref:struct:trace_ops	file:
__read_mostly	trace/trace_sched_wakeup.c	/^static struct tracer wakeup_rt_tracer __read_mostly =$/;"	v	typeref:struct:wakeup_rt_tracer	file:
__read_mostly	trace/trace_sched_wakeup.c	/^static struct tracer wakeup_tracer __read_mostly =$/;"	v	typeref:struct:wakeup_tracer	file:
__read_mostly	trace/trace_stack.c	/^static struct ftrace_ops trace_ops __read_mostly =$/;"	v	typeref:struct:trace_ops	file:
__read_mostly	user_namespace.c	/^static struct kmem_cache *user_ns_cachep __read_mostly;$/;"	v	typeref:struct:user_ns_cachep	file:
__read_mostly	workqueue.c	/^struct workqueue_struct *system_freezable_power_efficient_wq __read_mostly;$/;"	v	typeref:struct:system_freezable_power_efficient_wq
__read_mostly	workqueue.c	/^struct workqueue_struct *system_freezable_wq __read_mostly;$/;"	v	typeref:struct:system_freezable_wq
__read_mostly	workqueue.c	/^struct workqueue_struct *system_highpri_wq __read_mostly;$/;"	v	typeref:struct:system_highpri_wq
__read_mostly	workqueue.c	/^struct workqueue_struct *system_long_wq __read_mostly;$/;"	v	typeref:struct:system_long_wq
__read_mostly	workqueue.c	/^struct workqueue_struct *system_power_efficient_wq __read_mostly;$/;"	v	typeref:struct:system_power_efficient_wq
__read_mostly	workqueue.c	/^struct workqueue_struct *system_unbound_wq __read_mostly;$/;"	v	typeref:struct:system_unbound_wq
__read_mostly	workqueue.c	/^struct workqueue_struct *system_wq __read_mostly;$/;"	v	typeref:struct:system_wq
__refill_cfs_bandwidth_runtime	sched/fair.c	/^void __refill_cfs_bandwidth_runtime(struct cfs_bandwidth *cfs_b)$/;"	f
__refrigerator	freezer.c	/^EXPORT_SYMBOL(__refrigerator);$/;"	v
__refrigerator	freezer.c	/^bool __refrigerator(bool check_kthr_stop)$/;"	f
__register_event	trace/trace_events.c	/^__register_event(struct ftrace_event_call *call, struct module *mod)$/;"	f	file:
__register_ftrace_function	trace/ftrace.c	/^static int __register_ftrace_function(struct ftrace_ops *ops)$/;"	f	file:
__register_nosave_region	power/snapshot.c	/^__register_nosave_region(unsigned long start_pfn, unsigned long end_pfn,$/;"	f
__register_trace_probe	trace/trace_kprobe.c	/^static int __register_trace_probe(struct trace_probe *tp)$/;"	f	file:
__reinit_slot	swap/preload/preload_threads.c	/^static inline void __reinit_slot(struct thread_slot *slot)$/;"	f	file:
__relay_reset	relay.c	/^static void __relay_reset(struct rchan_buf *buf, unsigned int init)$/;"	f	file:
__relay_set_buf_dentry	relay.c	/^static void __relay_set_buf_dentry(void *info)$/;"	f	file:
__release_bp_slot	events/hw_breakpoint.c	/^static void __release_bp_slot(struct perf_event *bp)$/;"	f	file:
__release_child_resources	resource.c	/^static void __release_child_resources(struct resource *r)$/;"	f	file:
__release_region	resource.c	/^EXPORT_SYMBOL(__release_region);$/;"	v
__release_region	resource.c	/^void __release_region(struct resource *parent, resource_size_t start,$/;"	f
__release_resource	resource.c	/^static int __release_resource(struct resource *old)$/;"	f	file:
__releases	cgroup.c	/^	__releases(css_set_lock)$/;"	f
__releases	kprobes.c	/^__releases(hlist_lock)$/;"	f
__releases	rcutorture.c	/^static void rcu_bh_torture_read_unlock(int idx) __releases(RCU_BH)$/;"	f
__releases	rcutorture.c	/^static void rcu_torture_read_unlock(int idx) __releases(RCU)$/;"	f
__releases	resource.c	/^	__releases(resource_lock)$/;"	f
__remove	swap/ks_features/ks_map.c	/^static void *__remove(struct map *map, struct entry *entry)$/;"	f	file:
__remove_from_disable_list	swap/preload/preload_threads.c	/^static inline void __remove_from_disable_list(struct disabled_addr *da)$/;"	f	file:
__remove_hrtimer	hrtimer.c	/^static void __remove_hrtimer(struct hrtimer *timer,$/;"	f	file:
__remove_unmap_probes	swap/us_manager/helper.c	/^static void __remove_unmap_probes(struct sspt_proc *proc,$/;"	f	file:
__remove_whole_disable_list	swap/preload/preload_threads.c	/^static inline void __remove_whole_disable_list(struct thread_slot *slot)$/;"	f	file:
__replace	swap/ks_features/ks_map.c	/^static void *__replace(struct map *map, struct entry *old, struct entry *new)$/;"	f	file:
__replace_page	events/uprobes.c	/^static int __replace_page(struct vm_area_struct *vma, unsigned long addr,$/;"	f	file:
__report_bad_irq	irq/spurious.c	/^__report_bad_irq(unsigned int irq, struct irq_desc *desc,$/;"	f	file:
__request_module	kmod.c	/^EXPORT_SYMBOL(__request_module);$/;"	v
__request_module	kmod.c	/^int __request_module(bool wait, const char *fmt, ...)$/;"	f
__request_region	resource.c	/^EXPORT_SYMBOL(__request_region);$/;"	v
__request_region	resource.c	/^struct resource * __request_region(struct resource *parent,$/;"	f
__request_resource	resource.c	/^static struct resource * __request_resource(struct resource *root, struct resource *new)$/;"	f	file:
__res_counter_charge	res_counter.c	/^static int __res_counter_charge(struct res_counter *counter, unsigned long val,$/;"	f	file:
__reserve_bp_slot	events/hw_breakpoint.c	/^static int __reserve_bp_slot(struct perf_event *bp)$/;"	f	file:
__reserve_region_with_split	resource.c	/^static void __init __reserve_region_with_split(struct resource *root,$/;"	f	file:
__reset_stat_session	trace/trace_stat.c	/^static void __reset_stat_session(struct stat_session *session)$/;"	f	file:
__restore_uregs	swap/preload/preload_module.c	/^static inline void __restore_uregs(struct uretprobe_instance *ri,$/;"	f	file:
__return_cfs_rq_runtime	sched/fair.c	/^static void __return_cfs_rq_runtime(struct cfs_rq *cfs_rq)$/;"	f	file:
__ring_buffer_alloc	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(__ring_buffer_alloc);$/;"	v
__ring_buffer_alloc	trace/ring_buffer.c	/^struct ring_buffer *__ring_buffer_alloc(unsigned long size, unsigned flags,$/;"	f
__round_jiffies	timer.c	/^EXPORT_SYMBOL_GPL(__round_jiffies);$/;"	v
__round_jiffies	timer.c	/^unsigned long __round_jiffies(unsigned long j, int cpu)$/;"	f
__round_jiffies_relative	timer.c	/^EXPORT_SYMBOL_GPL(__round_jiffies_relative);$/;"	v
__round_jiffies_relative	timer.c	/^unsigned long __round_jiffies_relative(unsigned long j, int cpu)$/;"	f
__round_jiffies_up	timer.c	/^EXPORT_SYMBOL_GPL(__round_jiffies_up);$/;"	v
__round_jiffies_up	timer.c	/^unsigned long __round_jiffies_up(unsigned long j, int cpu)$/;"	f
__round_jiffies_up_relative	timer.c	/^EXPORT_SYMBOL_GPL(__round_jiffies_up_relative);$/;"	v
__round_jiffies_up_relative	timer.c	/^unsigned long __round_jiffies_up_relative(unsigned long j, int cpu)$/;"	f
__rt_mutex_adjust_prio	rtmutex.c	/^static void __rt_mutex_adjust_prio(struct task_struct *task)$/;"	f	file:
__rt_mutex_init	rtmutex.c	/^EXPORT_SYMBOL_GPL(__rt_mutex_init);$/;"	v
__rt_mutex_init	rtmutex.c	/^void __rt_mutex_init(struct rt_mutex *lock, const char *name)$/;"	f
__rt_mutex_slowlock	rtmutex.c	/^__rt_mutex_slowlock(struct rt_mutex *lock, int state,$/;"	f	file:
__rt_schedulable	sched/core.c	/^static int __rt_schedulable(struct task_group *tg, u64 period, u64 runtime)$/;"	f	file:
__run_hrtimer	hrtimer.c	/^static void __run_hrtimer(struct hrtimer *timer, ktime_t *now)$/;"	f	file:
__run_timers	timer.c	/^static inline void __run_timers(struct tvec_base *base)$/;"	f	file:
__save_altstack	signal.c	/^int __save_altstack(stack_t __user *uss, unsigned long sp)$/;"	f
__save_uregs	swap/preload/preload_module.c	/^static inline void __save_uregs(struct uretprobe_instance *ri,$/;"	f	file:
__sched_fork	sched/core.c	/^static void __sched_fork(struct task_struct *p)$/;"	f	file:
__sched_info_switch	sched/stats.h	/^__sched_info_switch(struct task_struct *prev, struct task_struct *next)$/;"	f
__sched_period	sched/fair.c	/^static u64 __sched_period(unsigned long nr_running)$/;"	f	file:
__sched_setscheduler	sched/core.c	/^static int __sched_setscheduler(struct task_struct *p, int policy,$/;"	f	file:
__schedule	sched/core.c	/^static void __sched __schedule(void)$/;"	f	file:
__schedule_bug	sched/core.c	/^static noinline void __schedule_bug(struct task_struct *prev)$/;"	f	file:
__sdt_alloc	sched/core.c	/^static int __sdt_alloc(const struct cpumask *cpu_map)$/;"	f	file:
__sdt_free	sched/core.c	/^static void __sdt_free(const struct cpumask *cpu_map)$/;"	f	file:
__search	swap/ks_features/ks_map.c	/^static struct entry *__search(struct map *map, void *key)$/;"	f	file:
__secure_computing	seccomp.c	/^int __secure_computing(int this_syscall)$/;"	f
__send_remote_softirq	softirq.c	/^EXPORT_SYMBOL(__send_remote_softirq);$/;"	v
__send_remote_softirq	softirq.c	/^void __send_remote_softirq(struct call_single_data *cp, int cpu, int this_cpu, int softirq)$/;"	f
__send_signal	signal.c	/^static int __send_signal(int sig, struct siginfo *info, struct task_struct *t,$/;"	f	file:
__set_attempts	swap/preload/preload_pd.c	/^static inline void __set_attempts(struct process_data *pd, long attempts)$/;"	f	file:
__set_current_blocked	signal.c	/^void __set_current_blocked(const sigset_t *newset)$/;"	f
__set_data_page	swap/preload/preload_pd.c	/^static inline void __set_data_page(struct process_data *pd, unsigned long page)$/;"	f	file:
__set_enter_print_fmt	trace/trace_syscalls.c	/^int  __set_enter_print_fmt(struct syscall_metadata *entry, char *buf, int len)$/;"	f	file:
__set_handle	swap/preload/preload_pd.c	/^static inline void __set_handle(struct process_data *pd, void __user *handle)$/;"	f	file:
__set_handlers_base	swap/preload/preload_pd.c	/^static inline void __set_handlers_base(struct process_data *pd,$/;"	f	file:
__set_loader_base	swap/preload/preload_pd.c	/^static inline void __set_loader_base(struct process_data *pd,$/;"	f	file:
__set_personality	exec_domain.c	/^EXPORT_SYMBOL(__set_personality);$/;"	v
__set_personality	exec_domain.c	/^int __set_personality(unsigned int personality)$/;"	f
__set_print_fmt	trace/trace_kprobe.c	/^static int __set_print_fmt(struct trace_probe *tp, char *buf, int len)$/;"	f	file:
__set_print_fmt	trace/trace_uprobe.c	/^static int __set_print_fmt(struct trace_uprobe *tu, char *buf, int len)$/;"	f	file:
__set_refcount	swap/preload/preload_pd.c	/^static inline void __set_refcount(struct process_data *pd, long refcount)$/;"	f	file:
__set_slot	swap/preload/preload_threads.c	/^static inline void __set_slot(struct thread_slot *slot,$/;"	f	file:
__set_special_pids	exit.c	/^void __set_special_pids(struct pid *pid)$/;"	f
__set_state	swap/preload/preload_pd.c	/^static inline void __set_state(struct process_data *pd,$/;"	f	file:
__set_task_blocked	signal.c	/^static void __set_task_blocked(struct task_struct *tsk, const sigset_t *newset)$/;"	f	file:
__set_task_cpu	sched/sched.h	/^static inline void __set_task_cpu(struct task_struct *p, unsigned int cpu)$/;"	f
__set_tracer_option	trace/trace.c	/^static int __set_tracer_option(struct tracer *trace,$/;"	f	file:
__setscheduler	sched/core.c	/^__setscheduler(struct rq *rq, struct task_struct *p, int policy, int prio)$/;"	f	file:
__setup_irq	irq/manage.c	/^__setup_irq(unsigned int irq, struct irq_desc *desc, struct irqaction *new)$/;"	f	file:
__should_drop	swap/preload/preload_module.c	/^static inline bool __should_drop(struct us_ip *ip, enum preload_call_type ct)$/;"	f	file:
__should_we_preload_handlers	swap/preload/preload_module.c	/^static bool __should_we_preload_handlers(struct task_struct *task,$/;"	f	file:
__si_special	signal.c	1487;"	d	file:
__sigqueue_alloc	signal.c	/^__sigqueue_alloc(int sig, struct task_struct *t, gfp_t flags, int override_rlimit)$/;"	f	file:
__sigqueue_free	signal.c	/^static void __sigqueue_free(struct sigqueue *q)$/;"	f	file:
__smp_call_function_single	smp.c	/^void __smp_call_function_single(int cpu, struct call_single_data *csd,$/;"	f
__smpboot_create_thread	smpboot.c	/^__smpboot_create_thread(struct smp_hotplug_thread *ht, unsigned int cpu)$/;"	f	file:
__sprint_symbol	kallsyms.c	/^static int __sprint_symbol(char *buffer, unsigned long address,$/;"	f	file:
__srcu_notifier_call_chain	notifier.c	/^EXPORT_SYMBOL_GPL(__srcu_notifier_call_chain);$/;"	v
__srcu_notifier_call_chain	notifier.c	/^int __srcu_notifier_call_chain(struct srcu_notifier_head *nh,$/;"	f
__srcu_read_lock	srcu.c	/^EXPORT_SYMBOL_GPL(__srcu_read_lock);$/;"	v
__srcu_read_lock	srcu.c	/^int __srcu_read_lock(struct srcu_struct *sp)$/;"	f
__srcu_read_unlock	srcu.c	/^EXPORT_SYMBOL_GPL(__srcu_read_unlock);$/;"	v
__srcu_read_unlock	srcu.c	/^void __srcu_read_unlock(struct srcu_struct *sp, int idx)$/;"	f
__stack_chk_fail	panic.c	/^EXPORT_SYMBOL(__stack_chk_fail);$/;"	v
__stack_chk_fail	panic.c	/^void __stack_chk_fail(void)$/;"	f
__start_cfs_bandwidth	sched/fair.c	/^void __start_cfs_bandwidth(struct cfs_bandwidth *cfs_b)$/;"	f
__static_key_slow_dec	jump_label.c	/^static void __static_key_slow_dec(struct static_key *key,$/;"	f	file:
__stop_cpus	stop_machine.c	/^static int __stop_cpus(const struct cpumask *cpumask,$/;"	f	file:
__stop_machine	stop_machine.c	/^int __stop_machine(int (*fn)(void *), void *data, const struct cpumask *cpus)$/;"	f
__swap_msg_flush	swap/writer/swap_msg.c	/^static int __swap_msg_flush(struct swap_msg *m, size_t size, bool wakeup)$/;"	f	file:
__swap_register_undef_hook	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^static void (*__swap_register_undef_hook)(struct undef_hook *hook);$/;"	v	file:
__swap_unregister_kretprobes_top	swap/kprobe/swap_kprobes.c	/^static int __swap_unregister_kretprobes_top(void *data)$/;"	f	file:
__swap_unregister_ujprobe	swap/uprobe/swap_uprobes.c	/^EXPORT_SYMBOL_GPL(__swap_unregister_ujprobe);$/;"	v
__swap_unregister_ujprobe	swap/uprobe/swap_uprobes.c	/^void __swap_unregister_ujprobe(struct ujprobe *jp, int disarm)$/;"	f
__swap_unregister_undef_hook	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^static void (*__swap_unregister_undef_hook)(struct undef_hook *hook);$/;"	v	file:
__swap_unregister_uprobe	swap/uprobe/swap_uprobes.c	/^EXPORT_SYMBOL_GPL(__swap_unregister_uprobe);$/;"	v
__swap_unregister_uprobe	swap/uprobe/swap_uprobes.c	/^void __swap_unregister_uprobe(struct uprobe *up, int disarm)$/;"	f
__swap_unregister_uretprobe	swap/uprobe/swap_uprobes.c	/^EXPORT_SYMBOL_GPL(__swap_unregister_uretprobe);$/;"	v
__swap_unregister_uretprobe	swap/uprobe/swap_uprobes.c	/^void __swap_unregister_uretprobe(struct uretprobe *rp, int disarm)$/;"	f
__symbol_get	module.c	/^EXPORT_SYMBOL_GPL(__symbol_get);$/;"	v
__symbol_get	module.c	/^void *__symbol_get(const char *symbol)$/;"	f
__symbol_put	module.c	/^EXPORT_SYMBOL(__symbol_put);$/;"	v
__symbol_put	module.c	/^void __symbol_put(const char *symbol)$/;"	f
__synchronize_entity_decay	sched/fair.c	/^static inline u64 __synchronize_entity_decay(struct sched_entity *se)$/;"	f	file:
__synchronize_srcu	srcu.c	/^static void __synchronize_srcu(struct srcu_struct *sp, int trycount)$/;"	f	file:
__sysrq_enabled	sysctl.c	/^static int __sysrq_enabled = SYSRQ_DEFAULT_ENABLE;$/;"	v	file:
__target_binaries_lock	swap/preload/preload_control.c	/^static inline void __target_binaries_lock(void)$/;"	f	file:
__target_binaries_unlock	swap/preload/preload_control.c	/^static inline void __target_binaries_unlock(void)$/;"	f	file:
__task	swap/us_manager/sspt/sspt_proc.h	/^	struct task_struct *__task;$/;"	m	struct:sspt_proc	typeref:struct:sspt_proc::task_struct
__task_data_cbs_start_h	swap/task_data/task_data.c	/^static int __task_data_cbs_start_h = -1;$/;"	v	file:
__task_data_cbs_stop_h	swap/task_data/task_data.c	/^static int __task_data_cbs_stop_h = -1;$/;"	v	file:
__task_data_exit	swap/task_data/task_data.c	/^static int __task_data_exit(void *data)$/;"	f	file:
__task_data_init	swap/task_data/task_data.c	/^static int __task_data_init(void *data)$/;"	f	file:
__task_pid_nr_ns	pid.c	/^EXPORT_SYMBOL(__task_pid_nr_ns);$/;"	v
__task_pid_nr_ns	pid.c	/^pid_t __task_pid_nr_ns(struct task_struct *task, enum pid_type type,$/;"	f
__tasklet_hi_schedule	softirq.c	/^EXPORT_SYMBOL(__tasklet_hi_schedule);$/;"	v
__tasklet_hi_schedule	softirq.c	/^void __tasklet_hi_schedule(struct tasklet_struct *t)$/;"	f
__tasklet_hi_schedule_first	softirq.c	/^EXPORT_SYMBOL(__tasklet_hi_schedule_first);$/;"	v
__tasklet_hi_schedule_first	softirq.c	/^void __tasklet_hi_schedule_first(struct tasklet_struct *t)$/;"	f
__tasklet_hrtimer_trampoline	softirq.c	/^static void __tasklet_hrtimer_trampoline(unsigned long data)$/;"	f	file:
__tasklet_schedule	softirq.c	/^EXPORT_SYMBOL(__tasklet_schedule);$/;"	v
__tasklet_schedule	softirq.c	/^void __tasklet_schedule(struct tasklet_struct *t)$/;"	f
__td	swap/task_data/task_data.c	/^static inline struct task_data *__td(struct task_struct *task)$/;"	f	file:
__td_check	swap/task_data/task_data.c	/^static inline bool __td_check(struct task_data *td)$/;"	f	file:
__td_free	swap/task_data/task_data.c	/^static inline void __td_free(struct task_data *td)$/;"	f	file:
__td_init	swap/task_data/task_data.c	/^static inline void __td_init(struct task_data *td, void *data,$/;"	f	file:
__thaw_task	freezer.c	/^void __thaw_task(struct task_struct *p)$/;"	f
__tick_nohz_idle_enter	time/tick-sched.c	/^static void __tick_nohz_idle_enter(struct tick_sched *ts)$/;"	f	file:
__time_history_alarm_del	time/time_history.c	/^void __time_history_alarm_del(const struct alarm *alarm, void *caller)$/;"	f
__time_history_alarm_expired	time/time_history.c	/^void __time_history_alarm_expired(const struct alarm *alarm, ktime_t now)$/;"	f
__time_history_alarm_init	time/time_history.c	/^void __time_history_alarm_init(const struct alarm *alarm, void *caller)$/;"	f
__time_history_alarm_restart	time/time_history.c	/^void __time_history_alarm_restart(const struct alarm *alarm, void *caller)$/;"	f
__time_history_alarm_start	time/time_history.c	/^void __time_history_alarm_start(const struct alarm *alarm, void *caller)$/;"	f
__time_history_rtc_alarm_init	time/time_history.c	/^void __time_history_rtc_alarm_init(const struct rtc_timer *timer,$/;"	f
__time_history_rtc_alarm_set	time/time_history.c	/^void __time_history_rtc_alarm_set(struct rtc_device *rtc,$/;"	f
__time_history_rtc_time_set	time/time_history.c	/^void __time_history_rtc_time_set(const struct timespec *newtime,$/;"	f
__time_history_time_set	time/time_history.c	/^void __time_history_time_set(const struct timespec *oldtime,$/;"	f
__timekeeping_inject_sleeptime	time/timekeeping.c	/^static void __timekeeping_inject_sleeptime(struct timekeeper *tk,$/;"	f	file:
__timekeeping_set_tai_offset	time/timekeeping.c	/^static void __timekeeping_set_tai_offset(struct timekeeper *tk, s32 tai_offset)$/;"	f	file:
__timer_stats_timer_set_start_info	timer.c	/^void __timer_stats_timer_set_start_info(struct timer_list *timer, void *addr)$/;"	f
__timespec_to_jiffies	time.c	/^__timespec_to_jiffies(unsigned long sec, long nsec)$/;"	f	file:
__to_kthread	kthread.c	56;"	d	file:
__touch_watchdog	watchdog.c	/^static void __touch_watchdog(void)$/;"	f	file:
__trace_add_event_dirs	trace/trace_events.c	/^__trace_add_event_dirs(struct trace_array *tr)$/;"	f	file:
__trace_add_new_event	trace/trace_events.c	/^__trace_add_new_event(struct ftrace_event_call *call,$/;"	f	file:
__trace_add_new_mod_event	trace/trace_events.c	/^__trace_add_new_mod_event(struct ftrace_event_call *call,$/;"	f	file:
__trace_array_put	trace/trace.c	/^static void __trace_array_put(struct trace_array *this_tr)$/;"	f	file:
__trace_array_vprintk	trace/trace.c	/^__trace_array_vprintk(struct ring_buffer *buffer,$/;"	f	file:
__trace_bprintk	trace/trace_printk.c	/^EXPORT_SYMBOL_GPL(__trace_bprintk);$/;"	v
__trace_bprintk	trace/trace_printk.c	/^int __trace_bprintk(unsigned long ip, const char *fmt, ...)$/;"	f
__trace_bputs	trace/trace.c	/^EXPORT_SYMBOL_GPL(__trace_bputs);$/;"	v
__trace_bputs	trace/trace.c	/^int __trace_bputs(unsigned long ip, const char *str)$/;"	f
__trace_buffer_unlock_commit	trace/trace.c	/^__trace_buffer_unlock_commit(struct ring_buffer *buffer,$/;"	f	file:
__trace_define_field	trace/trace_events.c	/^static int __trace_define_field(struct list_head *head, const char *type,$/;"	f	file:
__trace_early_add_event_dirs	trace/trace_events.c	/^__trace_early_add_event_dirs(struct trace_array *tr)$/;"	f	file:
__trace_early_add_events	trace/trace_events.c	/^__trace_early_add_events(struct trace_array *tr)$/;"	f	file:
__trace_early_add_new_event	trace/trace_events.c	/^__trace_early_add_new_event(struct ftrace_event_call *call,$/;"	f	file:
__trace_function	trace/trace_irqsoff.c	/^__trace_function(struct trace_array *tr,$/;"	f	file:
__trace_function	trace/trace_irqsoff.c	267;"	d	file:
__trace_function	trace/trace_sched_wakeup.c	/^__trace_function(struct trace_array *tr,$/;"	f	file:
__trace_function	trace/trace_sched_wakeup.c	309;"	d	file:
__trace_graph_entry	trace/trace_functions_graph.c	/^int __trace_graph_entry(struct trace_array *tr,$/;"	f
__trace_graph_function	trace/trace_functions_graph.c	/^__trace_graph_function(struct trace_array *tr,$/;"	f	file:
__trace_graph_return	trace/trace_functions_graph.c	/^void __trace_graph_return(struct trace_array *tr,$/;"	f
__trace_hardirqs_on_caller	lockdep.c	/^static void __trace_hardirqs_on_caller(unsigned long ip)$/;"	f	file:
__trace_mmiotrace_map	trace/trace_mmiotrace.c	/^static void __trace_mmiotrace_map(struct trace_array *tr,$/;"	f	file:
__trace_mmiotrace_rw	trace/trace_mmiotrace.c	/^static void __trace_mmiotrace_rw(struct trace_array *tr,$/;"	f	file:
__trace_note_message	trace/blktrace.c	/^EXPORT_SYMBOL_GPL(__trace_note_message);$/;"	v
__trace_note_message	trace/blktrace.c	/^void __trace_note_message(struct blk_trace *bt, const char *fmt, ...)$/;"	f
__trace_printk	trace/trace_printk.c	/^EXPORT_SYMBOL_GPL(__trace_printk);$/;"	v
__trace_printk	trace/trace_printk.c	/^int __trace_printk(unsigned long ip, const char *fmt, ...)$/;"	f
__trace_puts	trace/trace.c	/^EXPORT_SYMBOL_GPL(__trace_puts);$/;"	v
__trace_puts	trace/trace.c	/^int __trace_puts(unsigned long ip, const char *str, int size)$/;"	f
__trace_remove_event_call	trace/trace_events.c	/^static void __trace_remove_event_call(struct ftrace_event_call *call)$/;"	f	file:
__trace_remove_event_dirs	trace/trace_events.c	/^__trace_remove_event_dirs(struct trace_array *tr)$/;"	f	file:
__trace_stack	trace/trace.c	/^void __trace_stack(struct trace_array *tr, unsigned long flags, int skip,$/;"	f
__trace_stack	trace/trace.h	/^static inline void __trace_stack(struct trace_array *tr, unsigned long flags,$/;"	f
__trace_userstack	trace/trace.c	/^static void __trace_userstack(struct trace_array *tr, unsigned long flags)$/;"	f	file:
__tracing_open	trace/trace.c	/^__tracing_open(struct inode *inode, struct file *file, bool snapshot)$/;"	f	file:
__tracing_resize_ring_buffer	trace/trace.c	/^static int __tracing_resize_ring_buffer(struct trace_array *tr,$/;"	f	file:
__try_remote_softirq	softirq.c	/^static int __try_remote_softirq(struct call_single_data *cp, int cpu, int softirq)$/;"	f	file:
__try_stop_module	module.c	/^static int __try_stop_module(void *_sref)$/;"	f	file:
__tstat_hashfn	time/timer_stats.c	128;"	d	file:
__uidhashfn	user.c	68;"	d	file:
__unhash_process	exit.c	/^static void __unhash_process(struct task_struct *p, bool group_dead)$/;"	f	file:
__unlink_module	module.c	/^static int __unlink_module(void *_mod)$/;"	f	file:
__unlock_cbs_list	swap/us_manager/callbacks.c	/^static inline void __unlock_cbs_list(void)$/;"	f	file:
__unqueue_futex	futex.c	/^static void __unqueue_futex(struct futex_q *q)$/;"	f	file:
__unregister_ftrace_event	trace/trace_output.c	/^int __unregister_ftrace_event(struct trace_event *event)$/;"	f
__unregister_ftrace_function	trace/ftrace.c	/^static int __unregister_ftrace_function(struct ftrace_ops *ops)$/;"	f	file:
__unregister_ftrace_function_probe	trace/ftrace.c	/^__unregister_ftrace_function_probe(char *glob, struct ftrace_probe_ops *ops,$/;"	f	file:
__unregister_kprobe_bottom	kprobes.c	/^static void __kprobes __unregister_kprobe_bottom(struct kprobe *p)$/;"	f	file:
__unregister_kprobe_top	kprobes.c	/^static int __kprobes __unregister_kprobe_top(struct kprobe *p)$/;"	f	file:
__unregister_trace_probe	trace/trace_kprobe.c	/^static void __unregister_trace_probe(struct trace_probe *tp)$/;"	f	file:
__unused	sysctl_binary.c	/^	compat_ulong_t	__unused[4];$/;"	m	struct:compat_sysctl_args	file:
__up	semaphore.c	/^static noinline void __sched __up(struct semaphore *sem)$/;"	f	file:
__update_blocked_averages_cpu	sched/fair.c	/^static void __update_blocked_averages_cpu(struct task_group *tg, int cpu)$/;"	f	file:
__update_cfs_rq_tg_load_contrib	sched/fair.c	/^static inline void __update_cfs_rq_tg_load_contrib(struct cfs_rq *cfs_rq,$/;"	f	file:
__update_cgrp_time	events/core.c	/^static inline void __update_cgrp_time(struct perf_cgroup *cgrp)$/;"	f	file:
__update_cpu_load	sched/core.c	/^static void __update_cpu_load(struct rq *this_rq, unsigned long this_load,$/;"	f	file:
__update_curr	sched/fair.c	/^__update_curr(struct cfs_rq *cfs_rq, struct sched_entity *curr,$/;"	f	file:
__update_entity_load_avg_contrib	sched/fair.c	/^static long __update_entity_load_avg_contrib(struct sched_entity *se, long *ratio)$/;"	f	file:
__update_entity_runnable_avg	sched/fair.c	/^static __always_inline int __update_entity_runnable_avg(u64 now,$/;"	f	file:
__update_group_entity_contrib	sched/fair.c	/^static inline void __update_group_entity_contrib(struct sched_entity *se) {}$/;"	f	file:
__update_group_entity_contrib	sched/fair.c	/^static inline void __update_group_entity_contrib(struct sched_entity *se)$/;"	f	file:
__update_max_tr	trace/trace.c	/^__update_max_tr(struct trace_array *tr, struct task_struct *tsk, int cpu)$/;"	f	file:
__update_task_entity_contrib	sched/fair.c	/^static inline void __update_task_entity_contrib(struct sched_entity *se)$/;"	f	file:
__update_tg_runnable_avg	sched/fair.c	/^static inline void __update_tg_runnable_avg(struct sched_avg *sa,$/;"	f	file:
__uprobe_perf_filter	trace/trace_uprobe.c	/^__uprobe_perf_filter(struct trace_uprobe_filter *filter, struct mm_struct *mm)$/;"	f	file:
__uprobe_register	events/uprobes.c	/^static int __uprobe_register(struct uprobe *uprobe, struct uprobe_consumer *uc)$/;"	f	file:
__uprobe_unregister	events/uprobes.c	/^static void __uprobe_unregister(struct uprobe *uprobe, struct uprobe_consumer *uc)$/;"	f	file:
__usermodehelper_disable	kmod.c	/^int __usermodehelper_disable(enum umh_disable_depth depth)$/;"	f
__usermodehelper_set_disable_depth	kmod.c	/^void __usermodehelper_set_disable_depth(enum umh_disable_depth depth)$/;"	f
__validate_process_creds	cred.c	/^EXPORT_SYMBOL(__validate_process_creds);$/;"	v
__validate_process_creds	cred.c	/^void __validate_process_creds(struct task_struct *tsk,$/;"	f
__visit_domain_allocation_hell	sched/core.c	/^static enum s_alloc __visit_domain_allocation_hell(struct s_data *d,$/;"	f	file:
__vtime_account_system	sched/cputime.c	/^static void __vtime_account_system(struct task_struct *tsk)$/;"	f	file:
__wait_for_common	sched/core.c	/^__wait_for_common(struct completion *x,$/;"	f	file:
__wait_on_bit	wait.c	/^EXPORT_SYMBOL(__wait_on_bit);$/;"	v
__wait_on_bit	wait.c	/^__wait_on_bit(wait_queue_head_t *wq, struct wait_bit_queue *q,$/;"	f
__wait_on_bit_lock	wait.c	/^EXPORT_SYMBOL(__wait_on_bit_lock);$/;"	v
__wait_on_bit_lock	wait.c	/^__wait_on_bit_lock(wait_queue_head_t *wq, struct wait_bit_queue *q,$/;"	f
__wake_up	sched/core.c	/^EXPORT_SYMBOL(__wake_up);$/;"	v
__wake_up	sched/core.c	/^void __wake_up(wait_queue_head_t *q, unsigned int mode,$/;"	f
__wake_up_bit	wait.c	/^EXPORT_SYMBOL(__wake_up_bit);$/;"	v
__wake_up_bit	wait.c	/^void __wake_up_bit(wait_queue_head_t *wq, void *word, int bit)$/;"	f
__wake_up_common	sched/core.c	/^static void __wake_up_common(wait_queue_head_t *q, unsigned int mode,$/;"	f	file:
__wake_up_locked	sched/core.c	/^EXPORT_SYMBOL_GPL(__wake_up_locked);$/;"	v
__wake_up_locked	sched/core.c	/^void __wake_up_locked(wait_queue_head_t *q, unsigned int mode, int nr)$/;"	f
__wake_up_locked_key	sched/core.c	/^EXPORT_SYMBOL_GPL(__wake_up_locked_key);$/;"	v
__wake_up_locked_key	sched/core.c	/^void __wake_up_locked_key(wait_queue_head_t *q, unsigned int mode, void *key)$/;"	f
__wake_up_parent	exit.c	/^void __wake_up_parent(struct task_struct *p, struct task_struct *parent)$/;"	f
__wake_up_sync	sched/core.c	/^EXPORT_SYMBOL_GPL(__wake_up_sync);	\/* For internal use only *\/$/;"	v
__wake_up_sync	sched/core.c	/^void __wake_up_sync(wait_queue_head_t *q, unsigned int mode, int nr_exclusive)$/;"	f
__wake_up_sync_key	sched/core.c	/^EXPORT_SYMBOL_GPL(__wake_up_sync_key);$/;"	v
__wake_up_sync_key	sched/core.c	/^void __wake_up_sync_key(wait_queue_head_t *q, unsigned int mode,$/;"	f
__wakeup_reset	trace/trace_sched_wakeup.c	/^static void __wakeup_reset(struct trace_array *tr)$/;"	f	file:
__wakeup_tracer_init	trace/trace_sched_wakeup.c	/^static int __wakeup_tracer_init(struct trace_array *tr)$/;"	f	file:
__wrapper_module_alloc	swap/kprobe/swap_kprobes.c	/^static void *__wrapper_module_alloc(unsigned long size)$/;"	f	file:
__wrapper_module_free	swap/kprobe/swap_kprobes.c	/^static void *__wrapper_module_free(void *module_region)$/;"	f	file:
__write_data_to_msg	swap/preload/preload_module.c	/^static inline void __write_data_to_msg(char *msg, size_t len,$/;"	f	file:
_cond_resched	sched/core.c	/^EXPORT_SYMBOL(_cond_resched);$/;"	v
_cond_resched	sched/core.c	/^int __sched _cond_resched(void)$/;"	f
_cpu_down	cpu.c	/^static int __ref _cpu_down(unsigned int cpu, int tasks_frozen)$/;"	f	file:
_cpu_up	cpu.c	/^static int __cpuinit _cpu_up(unsigned int cpu, int tasks_frozen)$/;"	f	file:
_down_write_nest_lock	rwsem.c	/^EXPORT_SYMBOL(_down_write_nest_lock);$/;"	v
_down_write_nest_lock	rwsem.c	/^void _down_write_nest_lock(struct rw_semaphore *sem, struct lockdep_map *nest)$/;"	f
_f	sys.c	/^	char _f[20-2*sizeof(u32)-sizeof(int)];$/;"	m	struct:compat_sysinfo	file:
_kdb_bp	debug/kdb/kdb_private.h	/^typedef struct _kdb_bp {$/;"	s
_kdb_bp_install	debug/kdb/kdb_bp.c	/^static int _kdb_bp_install(struct pt_regs *regs, kdb_bp_t *bp)$/;"	f	file:
_kdb_bp_remove	debug/kdb/kdb_bp.c	/^static int _kdb_bp_remove(kdb_bp_t *bp)$/;"	f	file:
_kdbmsg	debug/kdb/kdb_main.c	/^typedef struct _kdbmsg {$/;"	s	file:
_kdbtab	debug/kdb/kdb_private.h	/^typedef struct _kdbtab {$/;"	s
_local_bh_enable	softirq.c	/^EXPORT_SYMBOL(_local_bh_enable);$/;"	v
_local_bh_enable	softirq.c	/^void _local_bh_enable(void)$/;"	f
_local_bh_enable_ip	softirq.c	/^static inline void _local_bh_enable_ip(unsigned long ip)$/;"	f	file:
_mutex_lock_nest_lock	mutex.c	/^EXPORT_SYMBOL_GPL(_mutex_lock_nest_lock);$/;"	v
_mutex_lock_nest_lock	mutex.c	/^_mutex_lock_nest_lock(struct mutex *lock, struct lockdep_map *nest)$/;"	f
_pick_next_task_rt	sched/rt.c	/^static struct task_struct *_pick_next_task_rt(struct rq *rq)$/;"	f	file:
_proc_do_string	sysctl.c	/^static int _proc_do_string(void* data, int maxlen, int write,$/;"	f	file:
_raw_read_lock	spinlock.c	/^EXPORT_SYMBOL(_raw_read_lock);$/;"	v
_raw_read_lock	spinlock.c	/^void __lockfunc _raw_read_lock(rwlock_t *lock)$/;"	f
_raw_read_lock_bh	spinlock.c	/^EXPORT_SYMBOL(_raw_read_lock_bh);$/;"	v
_raw_read_lock_bh	spinlock.c	/^void __lockfunc _raw_read_lock_bh(rwlock_t *lock)$/;"	f
_raw_read_lock_irq	spinlock.c	/^EXPORT_SYMBOL(_raw_read_lock_irq);$/;"	v
_raw_read_lock_irq	spinlock.c	/^void __lockfunc _raw_read_lock_irq(rwlock_t *lock)$/;"	f
_raw_read_lock_irqsave	spinlock.c	/^EXPORT_SYMBOL(_raw_read_lock_irqsave);$/;"	v
_raw_read_lock_irqsave	spinlock.c	/^unsigned long __lockfunc _raw_read_lock_irqsave(rwlock_t *lock)$/;"	f
_raw_read_trylock	spinlock.c	/^EXPORT_SYMBOL(_raw_read_trylock);$/;"	v
_raw_read_trylock	spinlock.c	/^int __lockfunc _raw_read_trylock(rwlock_t *lock)$/;"	f
_raw_read_unlock	spinlock.c	/^EXPORT_SYMBOL(_raw_read_unlock);$/;"	v
_raw_read_unlock	spinlock.c	/^void __lockfunc _raw_read_unlock(rwlock_t *lock)$/;"	f
_raw_read_unlock_bh	spinlock.c	/^EXPORT_SYMBOL(_raw_read_unlock_bh);$/;"	v
_raw_read_unlock_bh	spinlock.c	/^void __lockfunc _raw_read_unlock_bh(rwlock_t *lock)$/;"	f
_raw_read_unlock_irq	spinlock.c	/^EXPORT_SYMBOL(_raw_read_unlock_irq);$/;"	v
_raw_read_unlock_irq	spinlock.c	/^void __lockfunc _raw_read_unlock_irq(rwlock_t *lock)$/;"	f
_raw_read_unlock_irqrestore	spinlock.c	/^EXPORT_SYMBOL(_raw_read_unlock_irqrestore);$/;"	v
_raw_read_unlock_irqrestore	spinlock.c	/^void __lockfunc _raw_read_unlock_irqrestore(rwlock_t *lock, unsigned long flags)$/;"	f
_raw_spin_lock	spinlock.c	/^EXPORT_SYMBOL(_raw_spin_lock);$/;"	v
_raw_spin_lock	spinlock.c	/^void __lockfunc _raw_spin_lock(raw_spinlock_t *lock)$/;"	f
_raw_spin_lock_bh	spinlock.c	/^EXPORT_SYMBOL(_raw_spin_lock_bh);$/;"	v
_raw_spin_lock_bh	spinlock.c	/^void __lockfunc _raw_spin_lock_bh(raw_spinlock_t *lock)$/;"	f
_raw_spin_lock_irq	spinlock.c	/^EXPORT_SYMBOL(_raw_spin_lock_irq);$/;"	v
_raw_spin_lock_irq	spinlock.c	/^void __lockfunc _raw_spin_lock_irq(raw_spinlock_t *lock)$/;"	f
_raw_spin_lock_irqsave	spinlock.c	/^EXPORT_SYMBOL(_raw_spin_lock_irqsave);$/;"	v
_raw_spin_lock_irqsave	spinlock.c	/^unsigned long __lockfunc _raw_spin_lock_irqsave(raw_spinlock_t *lock)$/;"	f
_raw_spin_lock_irqsave_nested	spinlock.c	/^EXPORT_SYMBOL(_raw_spin_lock_irqsave_nested);$/;"	v
_raw_spin_lock_irqsave_nested	spinlock.c	/^unsigned long __lockfunc _raw_spin_lock_irqsave_nested(raw_spinlock_t *lock,$/;"	f
_raw_spin_lock_nest_lock	spinlock.c	/^EXPORT_SYMBOL(_raw_spin_lock_nest_lock);$/;"	v
_raw_spin_lock_nest_lock	spinlock.c	/^void __lockfunc _raw_spin_lock_nest_lock(raw_spinlock_t *lock,$/;"	f
_raw_spin_lock_nested	spinlock.c	/^EXPORT_SYMBOL(_raw_spin_lock_nested);$/;"	v
_raw_spin_lock_nested	spinlock.c	/^void __lockfunc _raw_spin_lock_nested(raw_spinlock_t *lock, int subclass)$/;"	f
_raw_spin_trylock	spinlock.c	/^EXPORT_SYMBOL(_raw_spin_trylock);$/;"	v
_raw_spin_trylock	spinlock.c	/^int __lockfunc _raw_spin_trylock(raw_spinlock_t *lock)$/;"	f
_raw_spin_trylock_bh	spinlock.c	/^EXPORT_SYMBOL(_raw_spin_trylock_bh);$/;"	v
_raw_spin_trylock_bh	spinlock.c	/^int __lockfunc _raw_spin_trylock_bh(raw_spinlock_t *lock)$/;"	f
_raw_spin_unlock	spinlock.c	/^EXPORT_SYMBOL(_raw_spin_unlock);$/;"	v
_raw_spin_unlock	spinlock.c	/^void __lockfunc _raw_spin_unlock(raw_spinlock_t *lock)$/;"	f
_raw_spin_unlock_bh	spinlock.c	/^EXPORT_SYMBOL(_raw_spin_unlock_bh);$/;"	v
_raw_spin_unlock_bh	spinlock.c	/^void __lockfunc _raw_spin_unlock_bh(raw_spinlock_t *lock)$/;"	f
_raw_spin_unlock_irq	spinlock.c	/^EXPORT_SYMBOL(_raw_spin_unlock_irq);$/;"	v
_raw_spin_unlock_irq	spinlock.c	/^void __lockfunc _raw_spin_unlock_irq(raw_spinlock_t *lock)$/;"	f
_raw_spin_unlock_irqrestore	spinlock.c	/^EXPORT_SYMBOL(_raw_spin_unlock_irqrestore);$/;"	v
_raw_spin_unlock_irqrestore	spinlock.c	/^void __lockfunc _raw_spin_unlock_irqrestore(raw_spinlock_t *lock, unsigned long flags)$/;"	f
_raw_write_lock	spinlock.c	/^EXPORT_SYMBOL(_raw_write_lock);$/;"	v
_raw_write_lock	spinlock.c	/^void __lockfunc _raw_write_lock(rwlock_t *lock)$/;"	f
_raw_write_lock_bh	spinlock.c	/^EXPORT_SYMBOL(_raw_write_lock_bh);$/;"	v
_raw_write_lock_bh	spinlock.c	/^void __lockfunc _raw_write_lock_bh(rwlock_t *lock)$/;"	f
_raw_write_lock_irq	spinlock.c	/^EXPORT_SYMBOL(_raw_write_lock_irq);$/;"	v
_raw_write_lock_irq	spinlock.c	/^void __lockfunc _raw_write_lock_irq(rwlock_t *lock)$/;"	f
_raw_write_lock_irqsave	spinlock.c	/^EXPORT_SYMBOL(_raw_write_lock_irqsave);$/;"	v
_raw_write_lock_irqsave	spinlock.c	/^unsigned long __lockfunc _raw_write_lock_irqsave(rwlock_t *lock)$/;"	f
_raw_write_trylock	spinlock.c	/^EXPORT_SYMBOL(_raw_write_trylock);$/;"	v
_raw_write_trylock	spinlock.c	/^int __lockfunc _raw_write_trylock(rwlock_t *lock)$/;"	f
_raw_write_unlock	spinlock.c	/^EXPORT_SYMBOL(_raw_write_unlock);$/;"	v
_raw_write_unlock	spinlock.c	/^void __lockfunc _raw_write_unlock(rwlock_t *lock)$/;"	f
_raw_write_unlock_bh	spinlock.c	/^EXPORT_SYMBOL(_raw_write_unlock_bh);$/;"	v
_raw_write_unlock_bh	spinlock.c	/^void __lockfunc _raw_write_unlock_bh(rwlock_t *lock)$/;"	f
_raw_write_unlock_irq	spinlock.c	/^EXPORT_SYMBOL(_raw_write_unlock_irq);$/;"	v
_raw_write_unlock_irq	spinlock.c	/^void __lockfunc _raw_write_unlock_irq(rwlock_t *lock)$/;"	f
_raw_write_unlock_irqrestore	spinlock.c	/^EXPORT_SYMBOL(_raw_write_unlock_irqrestore);$/;"	v
_raw_write_unlock_irqrestore	spinlock.c	/^void __lockfunc _raw_write_unlock_irqrestore(rwlock_t *lock, unsigned long flags)$/;"	f
_rcu_barrier	rcutree.c	/^static void _rcu_barrier(struct rcu_state *rsp)$/;"	f	file:
_rcu_barrier_trace	rcutree.c	/^static void _rcu_barrier_trace(struct rcu_state *rsp, char *s,$/;"	f	file:
_swap_buffer_errors	swap/buffer/swap_buffer_errors.h	/^enum _swap_buffer_errors {$/;"	g
_swap_buffer_status_mask	swap/buffer/swap_buffer_module.c	/^enum _swap_buffer_status_mask {$/;"	g	file:
_swap_driver_errors	swap/driver/swap_driver_errors.h	/^enum _swap_driver_errors {$/;"	g
_swap_sampler_errors	swap/sampler/swap_sampler_errors.h	/^enum _swap_sampler_errors {$/;"	g
_swap_writer_errors	swap/writer/swap_writer_errors.h	/^enum _swap_writer_errors {$/;"	g
a_preds	trace/trace.h	/^	int			a_preds;	\/* allocated *\/$/;"	m	struct:event_filter
abbr	rcutree.h	/^	char abbr;				\/* Abbreviated name. *\/$/;"	m	struct:rcu_state
abort_creds	cred.c	/^EXPORT_SYMBOL(abort_creds);$/;"	v
abort_creds	cred.c	/^void abort_creds(struct cred *new)$/;"	f
abort_exclusive_wait	wait.c	/^EXPORT_SYMBOL(abort_exclusive_wait);$/;"	v
abort_exclusive_wait	wait.c	/^void abort_exclusive_wait(wait_queue_head_t *q, wait_queue_t *wait,$/;"	f
abort_reason	power/wakeup_reason.c	/^static char abort_reason[MAX_SUSPEND_ABORT_LEN];$/;"	v	file:
abs_timeout	audit.h	/^			struct timespec		abs_timeout;$/;"	m	struct:audit_context::__anon15::__anon20	typeref:struct:audit_context::__anon15::__anon20::timespec
ac_efl_main	swap/nsp/nsp.h	/^	unsigned long ac_efl_main;$/;"	m	struct:appcore_info_data
ac_efl_main_h	swap/nsp/nsp.c	/^static int ac_efl_main_h(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
ac_init	swap/nsp/nsp.h	/^	unsigned long ac_init;$/;"	m	struct:appcore_info_data
ac_init_rh	swap/nsp/nsp.c	/^static int ac_init_rh(struct uretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
access_process_vm_atomic	swap/kprobe/swap_kprobes_deps.c	/^EXPORT_SYMBOL_GPL(access_process_vm_atomic);$/;"	v
access_process_vm_atomic	swap/kprobe/swap_kprobes_deps.c	/^int access_process_vm_atomic(struct task_struct *tsk, unsigned long addr,$/;"	f
account_cfs_rq_runtime	sched/fair.c	/^static void account_cfs_rq_runtime(struct cfs_rq *cfs_rq,$/;"	f	file:
account_cfs_rq_runtime	sched/fair.c	/^void account_cfs_rq_runtime(struct cfs_rq *cfs_rq, unsigned long delta_exec)$/;"	f	file:
account_entity_dequeue	sched/fair.c	/^account_entity_dequeue(struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f	file:
account_entity_enqueue	sched/fair.c	/^account_entity_enqueue(struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f	file:
account_global_scheduler_latency	latencytop.c	/^account_global_scheduler_latency(struct task_struct *tsk, struct latency_record *lat)$/;"	f	file:
account_group_exec_runtime	sched/stats.h	/^static inline void account_group_exec_runtime(struct task_struct *tsk,$/;"	f
account_group_system_time	sched/stats.h	/^static inline void account_group_system_time(struct task_struct *tsk,$/;"	f
account_group_user_time	sched/stats.h	/^static inline void account_group_user_time(struct task_struct *tsk,$/;"	f
account_guest_time	sched/cputime.c	/^static void account_guest_time(struct task_struct *p, cputime_t cputime,$/;"	f	file:
account_idle_ticks	sched/cputime.c	/^void account_idle_ticks(unsigned long ticks)$/;"	f
account_idle_time	sched/cputime.c	/^void account_idle_time(cputime_t cputime)$/;"	f
account_kernel_stack	fork.c	/^static void account_kernel_stack(struct thread_info *ti, int account)$/;"	f	file:
account_process_tick	sched/cputime.c	/^void account_process_tick(struct task_struct *p, int user_tick)$/;"	f
account_steal_ticks	sched/cputime.c	/^void account_steal_ticks(unsigned long ticks)$/;"	f
account_steal_time	sched/cputime.c	/^void account_steal_time(cputime_t cputime)$/;"	f
account_system_time	sched/cputime.c	/^void account_system_time(struct task_struct *p, int hardirq_offset,$/;"	f
account_user_time	sched/cputime.c	/^void account_user_time(struct task_struct *p, cputime_t cputime,$/;"	f
acct_account_cputime	tsacct.c	/^void acct_account_cputime(struct task_struct *tsk)$/;"	f
acct_auto_close	acct.c	/^void acct_auto_close(struct super_block *sb)$/;"	f
acct_auto_close_mnt	acct.c	/^void acct_auto_close_mnt(struct vfsmount *m)$/;"	f
acct_clear_integrals	tsacct.c	/^void acct_clear_integrals(struct task_struct *tsk)$/;"	f
acct_collect	acct.c	/^void acct_collect(long exitcode, int group_dead)$/;"	f
acct_exit_ns	acct.c	/^void acct_exit_ns(struct pid_namespace *ns)$/;"	f
acct_file_reopen	acct.c	/^static void acct_file_reopen(struct bsd_acct_struct *acct, struct file *file,$/;"	f	file:
acct_on	acct.c	/^static int acct_on(struct filename *pathname)$/;"	f	file:
acct_parm	acct.c	/^int acct_parm[3] = {4, 2, 30};$/;"	v
acct_process	acct.c	/^void acct_process(void)$/;"	f
acct_process_in_ns	acct.c	/^static void acct_process_in_ns(struct pid_namespace *ns)$/;"	f	file:
acct_update_integrals	tsacct.c	/^void acct_update_integrals(struct task_struct *tsk)$/;"	f
accumulate_nsecs_to_secs	time/timekeeping.c	/^static inline unsigned int accumulate_nsecs_to_secs(struct timekeeper *tk)$/;"	f	file:
accumulate_thread_rusage	sys.c	/^static void accumulate_thread_rusage(struct task_struct *t, struct rusage *r)$/;"	f	file:
ack_bad	irq/dummychip.c	/^static void ack_bad(struct irq_data *data)$/;"	f	file:
ack_state	stop_machine.c	/^static void ack_state(struct stop_machine_data *smdata)$/;"	f	file:
act	trace/blktrace.c	/^	const char *act[2];$/;"	m	struct:__anon84	file:
act_func_t	swap/ks_features/ks_map.h	/^typedef int (*act_func_t)(void *, void *);$/;"	t
act_log_check	trace/blktrace.c	/^static int act_log_check(struct blk_trace *bt, u32 what, sector_t sector,$/;"	f	file:
actions	taskstats.c	/^enum actions {$/;"	g	file:
activate_task	sched/core.c	/^void activate_task(struct rq *rq, struct task_struct *p, int flags)$/;"	f
active	acct.c	/^	int			active;$/;"	m	struct:bsd_acct_struct	file:
active	sched/sched.h	/^	struct rt_prio_array active;$/;"	m	struct:rt_rq	typeref:struct:rt_rq::rt_prio_array
active_balance	sched/sched.h	/^	int active_balance;$/;"	m	struct:rq
active_balance_work	sched/sched.h	/^	struct cpu_stop_work active_balance_work;$/;"	m	struct:rq	typeref:struct:rq::cpu_stop_work
active_cpus	stop_machine.c	/^	const struct cpumask	*active_cpus;$/;"	m	struct:stop_machine_data	typeref:struct:stop_machine_data::cpumask	file:
active_load_balance_cpu_stop	sched/fair.c	/^static int active_load_balance_cpu_stop(void *data)$/;"	f	file:
active_timers	timer.c	/^	unsigned long active_timers;$/;"	m	struct:tvec_base	file:
active_wake_locks	power/wakelock.c	/^static struct list_head active_wake_locks[WAKE_LOCK_TYPE_COUNT];$/;"	v	typeref:struct:list_head	file:
active_writer	cpu.c	/^	struct task_struct *active_writer;$/;"	m	struct:__anon70	typeref:struct:__anon70::task_struct	file:
add_aggr_kprobe	swap/kprobe/swap_kprobes.c	/^static inline void add_aggr_kprobe(struct kprobe *ap, struct kprobe *p)$/;"	f	file:
add_aggr_uprobe	swap/uprobe/swap_uprobes.c	/^static inline void add_aggr_uprobe(struct kprobe *ap, struct kprobe *p)$/;"	f	file:
add_del_listener	taskstats.c	/^static int add_del_listener(pid_t pid, const struct cpumask *mask, int isadd)$/;"	f	file:
add_event_to_ctx	events/core.c	/^static void add_event_to_ctx(struct perf_event *event,$/;"	f	file:
add_feature_img_to_list	swap/us_manager/sspt/sspt_feature.c	/^static void add_feature_img_to_list(struct sspt_feature_img *fi)$/;"	f	file:
add_ftrace_list_ops	trace/ftrace.c	/^static void add_ftrace_list_ops(struct ftrace_ops **list,$/;"	f	file:
add_ftrace_ops	trace/ftrace.c	/^static void add_ftrace_ops(struct ftrace_ops **list, struct ftrace_ops *ops)$/;"	f	file:
add_hash_entry	trace/ftrace.c	/^static int add_hash_entry(struct ftrace_hash *hash, unsigned long ip)$/;"	f	file:
add_info	gcov/fs.c	/^static void add_info(struct gcov_node *node, struct gcov_info *info)$/;"	f	file:
add_kallsyms	module.c	/^static void add_kallsyms(struct module *mod, const struct load_info *info)$/;"	f	file:
add_links	gcov/fs.c	/^static void add_links(struct gcov_node *node, struct dentry *parent)$/;"	f	file:
add_lock_to_list	lockdep.c	/^static int add_lock_to_list(struct lock_class *class, struct lock_class *this,$/;"	f	file:
add_module_usage	module.c	/^static int add_module_usage(struct module *a, struct module *b)$/;"	f	file:
add_new_kprobe	kprobes.c	/^static int __kprobes add_new_kprobe(struct kprobe *ap, struct kprobe *p)$/;"	f	file:
add_new_kprobe	swap/kprobe/swap_kprobes.c	/^static int add_new_kprobe(struct kprobe *old_p, struct kprobe *p)$/;"	f	file:
add_new_uprobe	swap/uprobe/swap_uprobes.c	/^static int add_new_uprobe(struct kprobe *old_p, struct kprobe *p)$/;"	f	file:
add_node	gcov/fs.c	/^static void add_node(struct gcov_info *info)$/;"	f	file:
add_notes_attrs	module.c	/^static inline void add_notes_attrs(struct module *mod,$/;"	f	file:
add_notes_attrs	module.c	/^static void add_notes_attrs(struct module *mod, const struct load_info *info)$/;"	f	file:
add_preempt_count	sched/core.c	/^EXPORT_SYMBOL(add_preempt_count);$/;"	v
add_preempt_count	sched/core.c	/^void __kprobes add_preempt_count(int val)$/;"	f
add_preferred_console	printk.c	/^int add_preferred_console(char *name, int idx, char *options)$/;"	f
add_range	range.c	/^int add_range(struct range *range, int az, int nr_range, u64 start, u64 end)$/;"	f
add_range_with_merge	range.c	/^int add_range_with_merge(struct range *range, int az, int nr_range,$/;"	f
add_rp_inst	swap/kprobe/swap_kprobes.c	/^static void add_rp_inst(struct kretprobe_instance *ri)$/;"	f	file:
add_sect_attrs	module.c	/^static inline void add_sect_attrs(struct module *mod,$/;"	f	file:
add_sect_attrs	module.c	/^static void add_sect_attrs(struct module *mod, const struct load_info *info)$/;"	f	file:
add_smi	swap/ksyms/no_ksyms.c	/^static void add_smi(struct sys_map_item *smi)$/;"	f	file:
add_sysfs_param	params.c	/^static __modinit int add_sysfs_param(struct module_kobject *mk,$/;"	f	file:
add_taint	panic.c	/^EXPORT_SYMBOL(add_taint);$/;"	v
add_taint	panic.c	/^void add_taint(unsigned flag, enum lockdep_ok lockdep_ok)$/;"	f
add_taint_module	module.c	/^static inline void add_taint_module(struct module *mod, unsigned flag,$/;"	f	file:
add_timer	timer.c	/^EXPORT_SYMBOL(add_timer);$/;"	v
add_timer	timer.c	/^void add_timer(struct timer_list *timer)$/;"	f
add_timer_on	timer.c	/^EXPORT_SYMBOL_GPL(add_timer_on);$/;"	v
add_timer_on	timer.c	/^void add_timer_on(struct timer_list *timer, int cpu)$/;"	f
add_to_busy_list	swap/buffer/buffer_queue.c	/^void add_to_busy_list(struct swap_subbuffer *subbuffer)$/;"	f
add_to_read_list	swap/buffer/buffer_queue.c	/^void add_to_read_list(struct swap_subbuffer *subbuffer)$/;"	f
add_to_read_list_with_callback	swap/buffer/buffer_queue.c	/^static int add_to_read_list_with_callback(struct swap_subbuffer *subbuffer,$/;"	f	file:
add_to_write_list	swap/buffer/buffer_queue.c	/^void add_to_write_list(struct swap_subbuffer *subbuffer)$/;"	f
add_tracepoint	tracepoint.c	/^static struct tracepoint_entry *add_tracepoint(const char *name)$/;"	f	file:
add_unformed_module	module.c	/^static int add_unformed_module(struct module *mod)$/;"	f	file:
add_uprobe_table	swap/uprobe/swap_uprobes.c	/^void add_uprobe_table(struct kprobe *p)$/;"	f
add_urp_inst	swap/uprobe/swap_uprobes.c	/^static void add_urp_inst(struct uretprobe_instance *ri)$/;"	f	file:
add_usage_links	module.c	/^static void add_usage_links(struct module *mod)$/;"	f	file:
add_wait_queue	wait.c	/^EXPORT_SYMBOL(add_wait_queue);$/;"	v
add_wait_queue	wait.c	/^void add_wait_queue(wait_queue_head_t *q, wait_queue_t *wait)$/;"	f
add_wait_queue_exclusive	wait.c	/^EXPORT_SYMBOL(add_wait_queue_exclusive);$/;"	v
add_wait_queue_exclusive	wait.c	/^void add_wait_queue_exclusive(wait_queue_head_t *q, wait_queue_t *wait)$/;"	f
addr	swap/kprobe/swap_kprobes.h	/^	kprobe_opcode_t					*addr;$/;"	m	struct:kprobe
addr	swap/ksyms/ksyms.c	/^	unsigned long addr;$/;"	m	struct:symbol_data	file:
addr	swap/ksyms/no_ksyms.c	/^	unsigned long addr;$/;"	m	struct:sys_map_item	file:
addr	swap/parser/msg_parser.h	/^	u64 addr;                   \/**< Function address. *\/$/;"	m	struct:func_inst_data
addr	swap/preload/preload_threads.c	/^	unsigned long addr;$/;"	m	struct:disabled_addr	file:
addr	swap/us_manager/helper.c	/^	unsigned long addr;$/;"	m	struct:pf_data	file:
addr	swap/us_manager/img/img_ip.h	/^	unsigned long addr;		\/**< Function address *\/$/;"	m	struct:img_ip
addr	trace/trace_probe.c	/^	unsigned long	addr;$/;"	m	struct:symbol_cache	file:
addr_conflict	jump_label.c	/^static int addr_conflict(struct jump_entry *entry, void *start, void *end)$/;"	f	file:
address	module.c	/^	unsigned long address;$/;"	m	struct:module_sect_attr	file:
adjust_resource	resource.c	/^EXPORT_SYMBOL(adjust_resource);$/;"	v
adjust_resource	resource.c	/^int adjust_resource(struct resource *res, resource_size_t start,$/;"	f
age_stamp	sched/sched.h	/^	u64 age_stamp;$/;"	m	struct:rq
aggr_break_handler	kprobes.c	/^static int __kprobes aggr_break_handler(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
aggr_break_handler	swap/kprobe/swap_kprobes.c	/^static int aggr_break_handler(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
aggr_break_uhandler	swap/uprobe/swap_uprobes.c	/^static int aggr_break_uhandler(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
aggr_fault_handler	kprobes.c	/^static int __kprobes aggr_fault_handler(struct kprobe *p, struct pt_regs *regs,$/;"	f	file:
aggr_fault_handler	swap/kprobe/swap_kprobes.c	/^static int aggr_fault_handler(struct kprobe *p,$/;"	f	file:
aggr_fault_uhandler	swap/uprobe/swap_uprobes.c	/^static int aggr_fault_uhandler(struct kprobe *p,$/;"	f	file:
aggr_kprobe_disabled	kprobes.c	/^static int __kprobes aggr_kprobe_disabled(struct kprobe *ap)$/;"	f	file:
aggr_post_handler	kprobes.c	/^static void __kprobes aggr_post_handler(struct kprobe *p, struct pt_regs *regs,$/;"	f	file:
aggr_post_handler	swap/kprobe/swap_kprobes.c	/^static void aggr_post_handler(struct kprobe *p,$/;"	f	file:
aggr_post_uhandler	swap/uprobe/swap_uprobes.c	/^static void aggr_post_uhandler(struct kprobe *p, struct pt_regs *regs,$/;"	f	file:
aggr_pre_handler	kprobes.c	/^static int __kprobes aggr_pre_handler(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
aggr_pre_handler	swap/kprobe/swap_kprobes.c	/^static int aggr_pre_handler(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
aggr_pre_uhandler	swap/uprobe/swap_uprobes.c	/^static int aggr_pre_uhandler(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
ainsn	swap/kprobe/swap_kprobes.h	/^	struct arch_specific_insn			ainsn;$/;"	m	struct:kprobe	typeref:struct:kprobe::arch_specific_insn
alarm_base	time/alarmtimer.c	/^static struct alarm_base {$/;"	s	file:
alarm_bases	time/alarmtimer.c	/^} alarm_bases[ALARM_NUMTYPE];$/;"	v	typeref:struct:alarm_base	file:
alarm_cancel	time/alarmtimer.c	/^int alarm_cancel(struct alarm *alarm)$/;"	f
alarm_clock_get	time/alarmtimer.c	/^static int alarm_clock_get(clockid_t which_clock, struct timespec *tp)$/;"	f	file:
alarm_clock_getres	time/alarmtimer.c	/^static int alarm_clock_getres(const clockid_t which_clock, struct timespec *tp)$/;"	f	file:
alarm_expires_remaining	time/alarmtimer.c	/^ktime_t alarm_expires_remaining(const struct alarm *alarm)$/;"	f
alarm_forward	time/alarmtimer.c	/^u64 alarm_forward(struct alarm *alarm, ktime_t now, ktime_t interval)$/;"	f
alarm_forward_now	time/alarmtimer.c	/^u64 alarm_forward_now(struct alarm *alarm, ktime_t interval)$/;"	f
alarm_handle_timer	time/alarmtimer.c	/^static enum alarmtimer_restart alarm_handle_timer(struct alarm *alarm,$/;"	f	file:
alarm_info	time/time_history.c	/^struct alarm_info {$/;"	s	file:
alarm_init	time/alarmtimer.c	/^void alarm_init(struct alarm *alarm, enum alarmtimer_type type,$/;"	f
alarm_log	time/time_history.c	/^static struct time_history_log_buf alarm_log = {$/;"	v	typeref:struct:time_history_log_buf	file:
alarm_log_buf	time/time_history.c	/^static struct time_log_entry alarm_log_buf[ALARM_LOG_MAX];$/;"	v	typeref:struct:time_log_entry	file:
alarm_owner_filter	time/time_history.c	/^static const char *alarm_owner_filter[] = {$/;"	v	file:
alarm_restart	time/alarmtimer.c	/^void alarm_restart(struct alarm *alarm)$/;"	f
alarm_setitimer	itimer.c	/^unsigned int alarm_setitimer(unsigned int seconds)$/;"	f
alarm_start	time/alarmtimer.c	/^int alarm_start(struct alarm *alarm, ktime_t start)$/;"	f
alarm_start_relative	time/alarmtimer.c	/^int alarm_start_relative(struct alarm *alarm, ktime_t start)$/;"	f
alarm_table	time/time_history.c	/^	struct alarm_info alarm_table[ALARM_ID_MAX];$/;"	m	struct:time_history	typeref:struct:time_history::alarm_info	file:
alarm_timer_create	time/alarmtimer.c	/^static int alarm_timer_create(struct k_itimer *new_timer)$/;"	f	file:
alarm_timer_del	time/alarmtimer.c	/^static int alarm_timer_del(struct k_itimer *timr)$/;"	f	file:
alarm_timer_get	time/alarmtimer.c	/^static void alarm_timer_get(struct k_itimer *timr,$/;"	f	file:
alarm_timer_nsleep	time/alarmtimer.c	/^static int alarm_timer_nsleep(const clockid_t which_clock, int flags,$/;"	f	file:
alarm_timer_nsleep_restart	time/alarmtimer.c	/^static long __sched alarm_timer_nsleep_restart(struct restart_block *restart)$/;"	f	file:
alarm_timer_set	time/alarmtimer.c	/^static int alarm_timer_set(struct k_itimer *timr, int flags,$/;"	f	file:
alarm_try_to_cancel	time/alarmtimer.c	/^int alarm_try_to_cancel(struct alarm *alarm)$/;"	f
alarm_wake_lock	time/alarmtimer.c	/^struct wake_lock alarm_wake_lock;$/;"	v	typeref:struct:wake_lock
alarmid	time/time_history.c	/^	void *alarmid;$/;"	m	struct:alarm_info	file:
alarmid	time/time_history.c	/^	void *alarmid;$/;"	m	struct:time_log_entry	file:
alarmid_cnt	time/time_history.c	/^	int alarmid_cnt;$/;"	m	struct:time_history	file:
alarmtimer_dequeue	time/alarmtimer.c	/^static void alarmtimer_dequeue(struct alarm_base *base, struct alarm *alarm)$/;"	f	file:
alarmtimer_do_nsleep	time/alarmtimer.c	/^static int alarmtimer_do_nsleep(struct alarm *alarm, ktime_t absexp)$/;"	f	file:
alarmtimer_driver	time/alarmtimer.c	/^static struct platform_driver alarmtimer_driver = {$/;"	v	typeref:struct:platform_driver	file:
alarmtimer_enqueue	time/alarmtimer.c	/^static void alarmtimer_enqueue(struct alarm_base *base, struct alarm *alarm)$/;"	f	file:
alarmtimer_fired	time/alarmtimer.c	/^static enum hrtimer_restart alarmtimer_fired(struct hrtimer *timer)$/;"	f	file:
alarmtimer_freezerset	time/alarmtimer.c	/^static void alarmtimer_freezerset(ktime_t absexp, enum alarmtimer_type type)$/;"	f	file:
alarmtimer_get_rtcdev	time/alarmtimer.c	/^struct rtc_device *alarmtimer_get_rtcdev(void)$/;"	f
alarmtimer_init	time/alarmtimer.c	/^device_initcall(alarmtimer_init);$/;"	v
alarmtimer_init	time/alarmtimer.c	/^static int __init alarmtimer_init(void)$/;"	f	file:
alarmtimer_nsleep_wakeup	time/alarmtimer.c	/^static enum alarmtimer_restart alarmtimer_nsleep_wakeup(struct alarm *alarm,$/;"	f	file:
alarmtimer_pm_ops	time/alarmtimer.c	/^static const struct dev_pm_ops alarmtimer_pm_ops = {$/;"	v	typeref:struct:dev_pm_ops	file:
alarmtimer_rtc_add_device	time/alarmtimer.c	/^static int alarmtimer_rtc_add_device(struct device *dev,$/;"	f	file:
alarmtimer_rtc_interface	time/alarmtimer.c	/^static struct class_interface alarmtimer_rtc_interface = {$/;"	v	typeref:struct:class_interface	file:
alarmtimer_rtc_interface_remove	time/alarmtimer.c	/^static inline void alarmtimer_rtc_interface_remove(void) { }$/;"	f	file:
alarmtimer_rtc_interface_remove	time/alarmtimer.c	/^static void alarmtimer_rtc_interface_remove(void)$/;"	f	file:
alarmtimer_rtc_interface_setup	time/alarmtimer.c	/^static inline int alarmtimer_rtc_interface_setup(void) { return 0; }$/;"	f	file:
alarmtimer_rtc_interface_setup	time/alarmtimer.c	/^static int alarmtimer_rtc_interface_setup(void)$/;"	f	file:
alarmtimer_rtc_timer_init	time/alarmtimer.c	/^static inline void alarmtimer_rtc_timer_init(void) { }$/;"	f	file:
alarmtimer_rtc_timer_init	time/alarmtimer.c	/^static inline void alarmtimer_rtc_timer_init(void)$/;"	f	file:
alarmtimer_shutdown	time/alarmtimer.c	/^void alarmtimer_shutdown(struct platform_device * pdev)$/;"	f
alarmtimer_suspend	time/alarmtimer.c	/^static int alarmtimer_suspend(struct device *dev)$/;"	f	file:
algo	module_signing.c	/^	u8	algo;		\/* Public-key crypto algorithm [enum pkey_algo] *\/$/;"	m	struct:module_signature	file:
align	resource.c	/^	resource_size_t min, max, align;$/;"	m	struct:resource_constraint	file:
alignf	resource.c	/^	resource_size_t (*alignf)(void *, const struct resource *,$/;"	m	struct:resource_constraint	file:
alignf_data	resource.c	/^	void *alignf_data;$/;"	m	struct:resource_constraint	file:
all	gcov/fs.c	/^	struct list_head all;$/;"	m	struct:gcov_node	typeref:struct:gcov_node::list_head	file:
all_annotated_branch_stats	trace/trace_branch.c	/^__init static int all_annotated_branch_stats(void)$/;"	f	file:
all_annotated_branch_stats	trace/trace_branch.c	/^fs_initcall(all_annotated_branch_stats);$/;"	v
all_branch_stat_headers	trace/trace_branch.c	/^static int all_branch_stat_headers(struct seq_file *m)$/;"	f	file:
all_branch_stat_next	trace/trace_branch.c	/^all_branch_stat_next(void *v, int idx)$/;"	f	file:
all_branch_stat_start	trace/trace_branch.c	/^static void *all_branch_stat_start(struct tracer_stat *trace)$/;"	f	file:
all_branch_stats	trace/trace_branch.c	/^static struct tracer_stat all_branch_stats = {$/;"	v	typeref:struct:tracer_stat	file:
all_lazy	rcutree.h	/^	bool all_lazy;		    \/* Are all CPU's CBs lazy? *\/$/;"	m	struct:rcu_dynticks
all_lock_classes	lockdep.c	/^LIST_HEAD(all_lock_classes);$/;"	v
all_path	swap/energy/lcd/maru.c	/^static const char * const all_path[] = {$/;"	v	file:
all_path	swap/energy/lcd/s6e8aa0.c	/^static const char * const all_path[] = {$/;"	v	file:
all_path	swap/energy/lcd/s6e8aa0_panel.c	/^static const char * const all_path[] = {$/;"	v	file:
all_path_cnt	swap/energy/lcd/maru.c	/^	all_path_cnt = sizeof(all_path) \/ sizeof(char *)$/;"	e	enum:__anon47	file:
all_path_cnt	swap/energy/lcd/s6e8aa0.c	/^	all_path_cnt = sizeof(all_path) \/ sizeof(char *)$/;"	e	enum:__anon46	file:
all_path_cnt	swap/energy/lcd/s6e8aa0_panel.c	/^	all_path_cnt = sizeof(all_path) \/ sizeof(char *)$/;"	e	enum:__anon48	file:
all_var	kallsyms.c	30;"	d	file:
all_var	kallsyms.c	32;"	d	file:
alloc	swap/kprobe/swap_slots.h	/^	void *(*alloc)(struct slot_manager *sm);$/;"	m	struct:slot_manager
alloc	swap/us_manager/sspt/sspt_feature.c	/^	void *(*alloc)(void);$/;"	m	struct:sspt_feature_img	file:
alloc_aggr_kprobe	kprobes.c	/^static __kprobes struct kprobe *alloc_aggr_kprobe(struct kprobe *p)$/;"	f	file:
alloc_and_copy_ftrace_hash	trace/ftrace.c	/^alloc_and_copy_ftrace_hash(int size_bits, struct ftrace_hash *hash)$/;"	f	file:
alloc_and_link_pwqs	workqueue.c	/^static int alloc_and_link_pwqs(struct workqueue_struct *wq)$/;"	f	file:
alloc_callchain_buffers	events/callchain.c	/^static int alloc_callchain_buffers(void)$/;"	f	file:
alloc_chunk	audit_tree.c	/^static struct audit_chunk *alloc_chunk(int count)$/;"	f	file:
alloc_css_id	cgroup.c	/^static int alloc_css_id(struct cgroup_subsys *ss, struct cgroup *parent,$/;"	f	file:
alloc_desc	irq/irqdesc.c	/^static struct irq_desc *alloc_desc(int irq, int node, struct module *owner)$/;"	f	file:
alloc_descs	irq/irqdesc.c	/^static inline int alloc_descs(unsigned int start, unsigned int cnt, int node,$/;"	f	file:
alloc_descs	irq/irqdesc.c	/^static int alloc_descs(unsigned int start, unsigned int cnt, int node,$/;"	f	file:
alloc_entry	swap/ks_features/ks_map.c	/^static struct entry *alloc_entry(struct map *map, void *data)$/;"	f	file:
alloc_entry	time/timer_stats.c	/^static struct entry *alloc_entry(void)$/;"	f	file:
alloc_fair_sched_group	sched/fair.c	/^int alloc_fair_sched_group(struct task_group *tg, struct task_group *parent)$/;"	f
alloc_frozen_cpus	cpu.c	/^core_initcall(alloc_frozen_cpus);$/;"	v
alloc_frozen_cpus	cpu.c	/^static int __init alloc_frozen_cpus(void)$/;"	f	file:
alloc_ftrace_hash	trace/ftrace.c	/^static struct ftrace_hash *alloc_ftrace_hash(int size_bits)$/;"	f	file:
alloc_highmem	power/snapshot.c	/^unsigned int alloc_normal, alloc_highmem;$/;"	v
alloc_highmem_pages	power/snapshot.c	/^alloc_highmem_pages(struct memory_bitmap *bm, unsigned int n) { return 0; }$/;"	f	file:
alloc_highmem_pages	power/snapshot.c	/^alloc_highmem_pages(struct memory_bitmap *bm, unsigned int nr_highmem)$/;"	f	file:
alloc_image_page	power/snapshot.c	/^static struct page *alloc_image_page(gfp_t gfp_mask)$/;"	f	file:
alloc_list_entry	lockdep.c	/^static struct lock_list *alloc_list_entry(void)$/;"	f	file:
alloc_masks	irq/irqdesc.c	/^alloc_masks(struct irq_desc *desc, gfp_t gfp, int node) { return 0; }$/;"	f	file:
alloc_masks	irq/irqdesc.c	/^static int alloc_masks(struct irq_desc *desc, gfp_t gfp, int node)$/;"	f	file:
alloc_module_percpu	module.c	/^static int alloc_module_percpu(struct module *mod, struct load_info *info)$/;"	f	file:
alloc_nodes_kretprobe	swap/kprobe/swap_kprobes.c	/^static int alloc_nodes_kretprobe(struct kretprobe *rp)$/;"	f	file:
alloc_nodes_uretprobe	swap/uprobe/swap_uprobes.c	/^static int alloc_nodes_uretprobe(struct uretprobe *rp)$/;"	f	file:
alloc_normal	power/snapshot.c	/^unsigned int alloc_normal, alloc_highmem;$/;"	v
alloc_percpu_trace_buffer	trace/trace.c	/^static int alloc_percpu_trace_buffer(void)$/;"	f	file:
alloc_perf_context	events/core.c	/^alloc_perf_context(struct pmu *pmu, struct task_struct *task)$/;"	f	file:
alloc_pi_state	futex.c	/^static struct futex_pi_state * alloc_pi_state(void)$/;"	f	file:
alloc_pid	pid.c	/^struct pid *alloc_pid(struct pid_namespace *ns)$/;"	f
alloc_pidmap	pid.c	/^static int alloc_pidmap(struct pid_namespace *pid_ns)$/;"	f	file:
alloc_posix_timer	posix-timers.c	/^static struct k_itimer * alloc_posix_timer(void)$/;"	f	file:
alloc_resource	resource.c	/^static struct resource *alloc_resource(gfp_t flags)$/;"	f	file:
alloc_retstack_tasklist	trace/ftrace.c	/^static int alloc_retstack_tasklist(struct ftrace_ret_stack **ret_stack_list)$/;"	f	file:
alloc_rootdomain	sched/core.c	/^static struct root_domain *alloc_rootdomain(void)$/;"	f	file:
alloc_rt_sched_group	sched/rt.c	/^int alloc_rt_sched_group(struct task_group *tg, struct task_group *parent)$/;"	f
alloc_sched_domains	sched/core.c	/^cpumask_var_t *alloc_sched_domains(unsigned int ndoms)$/;"	f
alloc_snapshot	trace/trace.c	/^static int alloc_snapshot(struct trace_array *tr)$/;"	f	file:
alloc_swapdev_block	power/swap.c	/^sector_t alloc_swapdev_block(int swap)$/;"	f
alloc_symbol_cache	trace/trace_probe.c	/^static struct symbol_cache *alloc_symbol_cache(const char *sym, long offset)$/;"	f	file:
alloc_task_struct_node	fork.c	/^static inline struct task_struct *alloc_task_struct_node(int node)$/;"	f	file:
alloc_thread_info_node	fork.c	/^static struct thread_info *alloc_thread_info_node(struct task_struct *tsk,$/;"	f	file:
alloc_trace_probe	trace/trace_kprobe.c	/^static struct trace_probe *alloc_trace_probe(const char *group,$/;"	f	file:
alloc_trace_uprobe	trace/trace_uprobe.c	/^alloc_trace_uprobe(const char *group, const char *event, int nargs, bool is_ret)$/;"	f	file:
alloc_tree	audit_tree.c	/^static struct audit_tree *alloc_tree(const char *s)$/;"	f	file:
alloc_trial_cpuset	cpuset.c	/^static struct cpuset *alloc_trial_cpuset(const struct cpuset *cs)$/;"	f	file:
alloc_uid	user.c	/^struct user_struct *alloc_uid(kuid_t uid)$/;"	f
alloc_unbound_pwq	workqueue.c	/^static struct pool_workqueue *alloc_unbound_pwq(struct workqueue_struct *wq,$/;"	f	file:
alloc_uprobe	events/uprobes.c	/^static struct uprobe *alloc_uprobe(struct inode *inode, loff_t offset)$/;"	f	file:
alloc_worker	workqueue.c	/^static struct worker *alloc_worker(void)$/;"	f	file:
alloc_workqueue_attrs	workqueue.c	/^struct workqueue_attrs *alloc_workqueue_attrs(gfp_t gfp_mask)$/;"	f
allocate_cg_links	cgroup.c	/^static int allocate_cg_links(int count, struct list_head *tmp)$/;"	f	file:
allocate_mm	fork.c	531;"	d	file:
allocate_probes	tracepoint.c	/^static inline void *allocate_probes(int count)$/;"	f	file:
allocate_resource	resource.c	/^EXPORT_SYMBOL(allocate_resource);$/;"	v
allocate_resource	resource.c	/^int allocate_resource(struct resource *root, struct resource *new,$/;"	f
allocate_snapshot	trace/trace.c	/^static bool allocate_snapshot;$/;"	v	file:
allocate_trace_buffer	trace/trace.c	/^allocate_trace_buffer(struct trace_array *tr, struct trace_buffer *buf, int size)$/;"	f	file:
allocate_trace_buffers	trace/trace.c	/^static int allocate_trace_buffers(struct trace_array *tr, int size)$/;"	f	file:
allocated_snapshot	trace/trace.h	/^	bool			allocated_snapshot;$/;"	m	struct:trace_array
allocated_unsafe_pages	power/snapshot.c	/^static unsigned int allocated_unsafe_pages;$/;"	v	file:
allow_signal	exit.c	/^EXPORT_SYMBOL(allow_signal);$/;"	v
allow_signal	exit.c	/^int allow_signal(int sig)$/;"	f
already_uses	module.c	/^static int already_uses(struct module *a, struct module *b)$/;"	f	file:
alter_cred_subscribers	cred.c	/^static inline void alter_cred_subscribers(const struct cred *_cred, int n)$/;"	f	file:
always_kmsg_dump	printk.c	/^static bool always_kmsg_dump;$/;"	v	file:
android_power_exit	power/fbearlysuspend.c	/^module_exit(android_power_exit);$/;"	v
android_power_exit	power/fbearlysuspend.c	/^static void  __exit android_power_exit(void)$/;"	f	file:
android_power_init	power/fbearlysuspend.c	/^module_init(android_power_init);$/;"	v
android_power_init	power/fbearlysuspend.c	/^static int __init android_power_init(void)$/;"	f	file:
annotated_branch_stat_cmp	trace/trace_branch.c	/^static int annotated_branch_stat_cmp(void *p1, void *p2)$/;"	f	file:
annotated_branch_stat_headers	trace/trace_branch.c	/^static int annotated_branch_stat_headers(struct seq_file *m)$/;"	f	file:
annotated_branch_stat_next	trace/trace_branch.c	/^annotated_branch_stat_next(void *v, int idx)$/;"	f	file:
annotated_branch_stat_start	trace/trace_branch.c	/^static void *annotated_branch_stat_start(struct tracer_stat *trace)$/;"	f	file:
annotated_branch_stats	trace/trace_branch.c	/^static struct tracer_stat annotated_branch_stats = {$/;"	v	typeref:struct:tracer_stat	file:
annoy_ccache	modsign_pubkey.c	/^static __initdata const char annoy_ccache[] = __TIME__ "foo";$/;"	v	file:
app_dentry	swap/nsp/nsp.c	/^	struct dentry *app_dentry;$/;"	m	struct:nsp_data	typeref:struct:nsp_data::dentry	file:
app_dentry	swap/webprobe/webprobe_prof.c	/^	struct dentry *app_dentry;$/;"	m	struct:web_prof_data	typeref:struct:web_prof_data::dentry	file:
app_id	swap/parser/msg_parser.h	/^	char *app_id;               \/**< Application ID *\/$/;"	m	struct:app_info_data
app_info	swap/parser/msg_parser.h	/^	struct app_info_data *app_info;     \/**< Pointer to app_info struct. *\/$/;"	m	struct:app_inst_data	typeref:struct:app_inst_data::app_info_data
app_info	swap/webprobe/webprobe_debugfs.c	/^static char app_info[max_count];$/;"	v	file:
app_info_data	swap/parser/msg_parser.h	/^struct app_info_data {$/;"	s
app_inst	swap/parser/msg_parser.h	/^	struct app_inst_data **app_inst;    \/**< Pointer to the apps array. *\/$/;"	m	struct:us_inst_data	typeref:struct:us_inst_data::app_inst_data
app_inst_data	swap/parser/msg_parser.h	/^struct app_inst_data {$/;"	s
app_manage_cont_apps	swap/driver/app_manage.h	/^static inline int app_manage_cont_apps(void)$/;"	f
app_manage_pause_apps	swap/driver/app_manage.h	/^static inline int app_manage_pause_apps(void)$/;"	f
app_path	swap/nsp/nsp.c	/^	const char *app_path;$/;"	m	struct:nsp_data	file:
app_type	swap/parser/msg_parser.h	/^	enum APP_TYPE app_type;     \/**< Application type. *\/$/;"	m	struct:app_info_data	typeref:enum:app_info_data::APP_TYPE
appcore_info_data	swap/nsp/nsp.h	/^struct appcore_info_data {$/;"	s
append_elf_note	kexec.c	/^static u32 *append_elf_note(u32 *buf, char *name, unsigned type, void *data,$/;"	f	file:
append_filter_err	trace/trace_events_filter.c	/^static void append_filter_err(struct filter_parse_state *ps,$/;"	f	file:
append_filter_string	trace/trace_events_filter.c	/^static int append_filter_string(struct event_filter *filter,$/;"	f	file:
append_operand_char	trace/trace_events_filter.c	/^static inline int append_operand_char(struct filter_parse_state *ps, char c)$/;"	f	file:
apply_event_filter	trace/trace_events_filter.c	/^int apply_event_filter(struct ftrace_event_call *call, char *filter_string)$/;"	f
apply_relocations	module.c	/^static int apply_relocations(struct module *mod, const struct load_info *info)$/;"	f	file:
apply_slack	timer.c	/^unsigned long apply_slack(struct timer_list *timer, unsigned long expires)$/;"	f	file:
apply_subsystem_event_filter	trace/trace_events_filter.c	/^int apply_subsystem_event_filter(struct ftrace_subsystem_dir *dir,$/;"	f
apply_workqueue_attrs	workqueue.c	/^int apply_workqueue_attrs(struct workqueue_struct *wq,$/;"	f
apps	swap/energy/debugfs_energy.c	/^	u64 (*apps)(void);$/;"	m	struct:param_data	file:
arch	audit.h	/^	int		    arch;$/;"	m	struct:audit_context
arch	events/uprobes.c	/^	struct arch_uprobe	arch;$/;"	m	struct:uprobe	typeref:struct:uprobe::arch_uprobe	file:
arch_arm_uprobe	swap/uprobe/arch/arm/swap-asm/swap_uprobes.c	/^int arch_arm_uprobe(struct uprobe *p)$/;"	f
arch_arm_uprobe	swap/uprobe/arch/x86/swap-asm/swap_uprobes.c	/^int arch_arm_uprobe(struct uprobe *p)$/;"	f
arch_check_insn	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	/^static inline int arch_check_insn(struct arch_specific_insn *ainsn)$/;"	f
arch_check_insn_arm	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^static int arch_check_insn_arm(unsigned long insn)$/;"	f	file:
arch_check_insn_thumb	swap/uprobe/arch/arm/swap-asm/swap_uprobes.c	/^static int arch_check_insn_thumb(unsigned long insn)$/;"	f	file:
arch_cpu_idle	cpu/idle.c	/^void __weak arch_cpu_idle(void)$/;"	f
arch_cpu_idle_dead	cpu/idle.c	/^void __weak arch_cpu_idle_dead(void) { }$/;"	f
arch_cpu_idle_enter	cpu/idle.c	/^void __weak arch_cpu_idle_enter(void) { }$/;"	f
arch_cpu_idle_exit	cpu/idle.c	/^void __weak arch_cpu_idle_exit(void) { }$/;"	f
arch_cpu_idle_prepare	cpu/idle.c	/^void __weak arch_cpu_idle_prepare(void) { }$/;"	f
arch_crash_save_vmcoreinfo	kexec.c	/^void __attribute__ ((weak)) arch_crash_save_vmcoreinfo(void)$/;"	f
arch_deref_entry_point	kprobes.c	/^unsigned long __weak arch_deref_entry_point(void *entry)$/;"	f
arch_disable_smp_support	smp.c	/^void __weak arch_disable_smp_support(void) { }$/;"	f
arch_disarm_uprobe	swap/uprobe/arch/arm/swap-asm/swap_uprobes.c	/^void arch_disarm_uprobe(struct kprobe *p, struct task_struct *task)$/;"	f
arch_disarm_uprobe	swap/uprobe/arch/x86/swap-asm/swap_uprobes.c	/^void arch_disarm_uprobe(struct kprobe *p, struct task_struct *task)$/;"	f
arch_disarm_urp_inst	swap/uprobe/arch/arm/swap-asm/swap_uprobes.c	/^int arch_disarm_urp_inst(struct uretprobe_instance *ri,$/;"	f
arch_disarm_urp_inst	swap/uprobe/arch/x86/swap-asm/swap_uprobes.c	/^int arch_disarm_urp_inst(struct uretprobe_instance *ri,$/;"	f
arch_dup_task_struct	fork.c	/^int __attribute__((weak)) arch_dup_task_struct(struct task_struct *dst,$/;"	f
arch_early_irq_init	softirq.c	/^int __init __weak arch_early_irq_init(void)$/;"	f
arch_enable_nonboot_cpus_begin	cpu.c	/^void __weak arch_enable_nonboot_cpus_begin(void)$/;"	f
arch_enable_nonboot_cpus_end	cpu.c	/^void __weak arch_enable_nonboot_cpus_end(void)$/;"	f
arch_ftrace_update_code	trace/ftrace.c	/^void __weak arch_ftrace_update_code(int command)$/;"	f
arch_get_task_pc	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	/^static inline unsigned long arch_get_task_pc(struct task_struct *p)$/;"	f
arch_get_task_pc	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	/^static inline unsigned long arch_get_task_pc(struct task_struct *p)$/;"	f
arch_get_trampoline_addr	swap/uprobe/arch/arm/swap-asm/swap_uprobes.c	/^unsigned long arch_get_trampoline_addr(struct kprobe *p, struct pt_regs *regs)$/;"	f
arch_get_trampoline_addr	swap/uprobe/arch/x86/swap-asm/swap_uprobes.c	/^unsigned long arch_get_trampoline_addr(struct kprobe *p, struct pt_regs *regs)$/;"	f
arch_gettimeoffset	time/timekeeping.c	/^u32 (*arch_gettimeoffset)(void);$/;"	v
arch_init_module_deps	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^int arch_init_module_deps(void)$/;"	f
arch_init_module_deps	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^int arch_init_module_deps()$/;"	f
arch_irq_work_raise	irq_work.c	/^void __weak arch_irq_work_raise(void)$/;"	f
arch_jump_label_transform_static	jump_label.c	/^void __weak __init_or_module arch_jump_label_transform_static(struct jump_entry *entry,$/;"	f
arch_make_trampoline_arm	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^EXPORT_SYMBOL_GPL(arch_make_trampoline_arm);$/;"	v
arch_make_trampoline_arm	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^int arch_make_trampoline_arm(unsigned long addr, unsigned long insn,$/;"	f
arch_make_trampoline_thumb	swap/uprobe/arch/arm/swap-asm/swap_uprobes.c	/^static int arch_make_trampoline_thumb(unsigned long vaddr, unsigned long insn,$/;"	f	file:
arch_mod_section_prepend	module.c	/^unsigned int __weak arch_mod_section_prepend(struct module *mod,$/;"	f
arch_opcode_analysis_uretprobe	swap/uprobe/arch/arm/swap-asm/swap_uprobes.c	/^void arch_opcode_analysis_uretprobe(struct uretprobe *rp)$/;"	f
arch_opcode_analysis_uretprobe	swap/uprobe/arch/x86/swap-asm/swap_uprobes.h	/^static inline int arch_opcode_analysis_uretprobe(struct uretprobe *rp)$/;"	f
arch_perf_have_user_stack_dump	events/internal.h	/^static inline bool arch_perf_have_user_stack_dump(void)$/;"	f
arch_perf_out_copy_user	events/internal.h	126;"	d
arch_perf_update_userpage	events/core.c	/^void __weak arch_perf_update_userpage(struct perf_event_mmap_page *userpg, u64 now)$/;"	f
arch_prepare_uprobe	swap/uprobe/arch/arm/swap-asm/swap_uprobes.c	/^int arch_prepare_uprobe(struct uprobe *up)$/;"	f
arch_prepare_uprobe	swap/uprobe/arch/x86/swap-asm/swap_uprobes.c	/^int arch_prepare_uprobe(struct uprobe *up)$/;"	f
arch_prepare_uretprobe	swap/uprobe/arch/arm/swap-asm/swap_uprobes.c	/^int arch_prepare_uretprobe(struct uretprobe_instance *ri, struct pt_regs *regs)$/;"	f
arch_prepare_uretprobe	swap/uprobe/arch/x86/swap-asm/swap_uprobes.c	/^int arch_prepare_uretprobe(struct uretprobe_instance *ri, struct pt_regs *regs)$/;"	f
arch_probe_nr_irqs	softirq.c	/^int __init __weak arch_probe_nr_irqs(void)$/;"	f
arch_ptrace_attach	ptrace.c	993;"	d	file:
arch_release_task_struct	fork.c	/^void __weak arch_release_task_struct(struct task_struct *tsk)$/;"	f
arch_release_thread_info	fork.c	/^void __weak arch_release_thread_info(struct thread_info *ti)$/;"	f
arch_remove_reservations	resource.c	/^void __weak arch_remove_reservations(struct resource *avail)$/;"	f
arch_remove_uprobe	swap/uprobe/arch/arm/swap-asm/swap_uprobes.c	/^void arch_remove_uprobe(struct uprobe *up)$/;"	f
arch_remove_uprobe	swap/uprobe/arch/x86/swap-asm/swap_uprobes.c	/^void arch_remove_uprobe(struct uprobe *up)$/;"	f
arch_scale_freq_power	sched/fair.c	/^unsigned long __weak arch_scale_freq_power(struct sched_domain *sd, int cpu)$/;"	f
arch_scale_smt_power	sched/fair.c	/^unsigned long __weak arch_scale_smt_power(struct sched_domain *sd, int cpu)$/;"	f
arch_sd_sibling_asym_packing	sched/core.c	/^int __weak arch_sd_sibling_asym_packing(void)$/;"	f
arch_set_orig_ret_addr	swap/uprobe/arch/arm/swap-asm/swap_uprobes.c	/^void arch_set_orig_ret_addr(unsigned long orig_ret_addr, struct pt_regs *regs)$/;"	f
arch_set_orig_ret_addr	swap/uprobe/arch/x86/swap-asm/swap_uprobes.c	/^void arch_set_orig_ret_addr(unsigned long orig_ret_addr, struct pt_regs *regs)$/;"	f
arch_set_task_pc	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	/^static inline void arch_set_task_pc(struct task_struct *p, unsigned long val)$/;"	f
arch_set_task_pc	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	/^static inline void arch_set_task_pc(struct task_struct *p, unsigned long val)$/;"	f
arch_show_interrupts	irq/proc.c	/^int __weak arch_show_interrupts(struct seq_file *p, int prec)$/;"	f
arch_specific_insn	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	/^struct arch_specific_insn {$/;"	s
arch_specific_insn	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	/^struct arch_specific_insn {$/;"	s
arch_specific_tramp	swap/uprobe/arch/arm/swap-asm/swap_uprobes.h	/^struct arch_specific_tramp {$/;"	s
arch_specific_tramp	swap/uprobe/arch/x86/swap-asm/swap_uprobes.h	/^struct arch_specific_tramp {$/;"	s
arch_suspend_disable_irqs	power/suspend.c	/^void __attribute__ ((weak)) arch_suspend_disable_irqs(void)$/;"	f
arch_suspend_enable_irqs	power/suspend.c	/^void __attribute__ ((weak)) arch_suspend_enable_irqs(void)$/;"	f
arch_syscall_addr	trace/trace_syscalls.c	/^unsigned long __init __weak arch_syscall_addr(int nr)$/;"	f
arch_syscall_match_sym_name	trace/trace_syscalls.c	/^static inline bool arch_syscall_match_sym_name(const char *sym, const char *name)$/;"	f	file:
arch_task_cache_init	fork.c	/^void __init __weak arch_task_cache_init(void) { }$/;"	f
arch_tramp_by_ri	swap/uprobe/arch/arm/swap-asm/swap_uprobes.c	/^unsigned long arch_tramp_by_ri(struct uretprobe_instance *ri)$/;"	f
arch_tramp_by_ri	swap/uprobe/arch/x86/swap-asm/swap_uprobes.c	/^unsigned long arch_tramp_by_ri(struct uretprobe_instance *ri)$/;"	f
arch_ujprobe_return	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^void arch_ujprobe_return(void)$/;"	f
arch_ujprobe_return	swap/uprobe/arch/arm/swap-asm/swap_uprobes.h	/^static inline void arch_ujprobe_return(void)$/;"	f
arch_ujprobe_return	swap/uprobe/arch/x86/swap-asm/swap_uprobes.h	/^static inline void arch_ujprobe_return(void)$/;"	f
arch_unregister_hw_breakpoint	events/hw_breakpoint.c	/^__weak void arch_unregister_hw_breakpoint(struct perf_event *bp)$/;"	f
arch_update_cpu_topology	sched/core.c	/^int __attribute__((weak)) arch_update_cpu_topology(void)$/;"	f
arch_vma_name	signal.c	/^__attribute__((weak)) const char *arch_vma_name(struct vm_area_struct *vma)$/;"	f
arch_vtime_task_switch	sched/cputime.c	/^void arch_vtime_task_switch(struct task_struct *prev)$/;"	f
areas_overlap	swap/buffer/swap_buffer_module.c	/^static inline int areas_overlap(const void *area1,$/;"	f	file:
arg	workqueue.c	/^	void *arg;$/;"	m	struct:work_for_cpu	file:
arg0	swap/preload/preload_module.c	/^	unsigned long arg0;$/;"	m	struct:us_priv	file:
arg1	swap/preload/preload_module.c	/^	unsigned long arg1;$/;"	m	struct:us_priv	file:
argc	auditsc.c	/^	int argc;$/;"	m	struct:audit_aux_data_execve	file:
args	audit.h	/^			long args[6];$/;"	m	struct:audit_context::__anon15::__anon16
args	panic.c	/^	va_list args;$/;"	m	struct:slowpath_args	file:
args	swap/ks_features/file_ops.c	/^	const char *args;$/;"	m	struct:file_probe	file:
args	swap/ks_features/ks_features.c	/^	char *args;$/;"	m	struct:ks_probe	file:
args	swap/ks_features/ksf_msg.c	/^	char args[0];$/;"	m	struct:msg_sys_entry	file:
args	swap/retprobe/retprobe.h	/^	char *args;$/;"	m	struct:retprobe_info
args	swap/retprobe/rp_msg.c	/^	char args[0];$/;"	m	struct:msg_entry	file:
args	swap/uprobe/swap_uprobes.h	/^	char *args;             \/**< Function args format string *\/$/;"	m	struct:ujprobe
args	trace/trace.h	/^	unsigned long		args[];$/;"	m	struct:syscall_trace_enter
args	trace/trace_kprobe.c	/^	struct probe_arg	args[];$/;"	m	struct:trace_probe	typeref:struct:trace_probe::probe_arg	file:
args	trace/trace_uprobe.c	/^	struct probe_arg		args[];$/;"	m	struct:trace_uprobe	typeref:struct:trace_uprobe::probe_arg	file:
argv	audit.h	/^	unsigned long	    argv[4];    \/* syscall arguments *\/$/;"	m	struct:audit_context
arm_all_kprobes	kprobes.c	/^static void __kprobes arm_all_kprobes(void)$/;"	f	file:
arm_kprobe	kprobes.c	/^static void __kprobes arm_kprobe(struct kprobe *kp)$/;"	f	file:
arm_kprobe_ftrace	kprobes.c	/^static void __kprobes arm_kprobe_ftrace(struct kprobe *p)$/;"	f	file:
arm_kprobe_ftrace	kprobes.c	990;"	d	file:
arm_noret	swap/kprobe/swap_kprobes.h	/^	unsigned arm_noret:1;    \/**< No-return flag for ARM.*\/$/;"	m	struct:kretprobe
arm_noret	swap/uprobe/swap_uprobes.h	/^	unsigned arm_noret:1;               \/**< No-return flag for ARM *\/$/;"	m	struct:uretprobe
arm_timer	posix-cpu-timers.c	/^static void arm_timer(struct k_itimer *timer)$/;"	f	file:
arm_uprobe	swap/uprobe/swap_uprobes.c	/^static int arm_uprobe(struct uprobe *p)$/;"	f	file:
assert_manager_or_pool_lock	workqueue.c	354;"	d	file:
assert_manager_or_pool_lock	workqueue.c	360;"	d	file:
assert_rcu_or_pool_mutex	workqueue.c	343;"	d	file:
assert_rcu_or_wq_mutex	workqueue.c	348;"	d	file:
assign_cfs_rq_runtime	sched/fair.c	/^static int assign_cfs_rq_runtime(struct cfs_rq *cfs_rq)$/;"	f	file:
async_entry	async.c	/^struct async_entry {$/;"	s	file:
async_run_entry_fn	async.c	/^static void async_run_entry_fn(struct work_struct *work)$/;"	f	file:
async_schedule	async.c	/^EXPORT_SYMBOL_GPL(async_schedule);$/;"	v
async_schedule	async.c	/^async_cookie_t async_schedule(async_func_t func, void *data)$/;"	f
async_schedule_domain	async.c	/^EXPORT_SYMBOL_GPL(async_schedule_domain);$/;"	v
async_schedule_domain	async.c	/^async_cookie_t async_schedule_domain(async_func_t func, void *data,$/;"	f
async_synchronize_cookie	async.c	/^EXPORT_SYMBOL_GPL(async_synchronize_cookie);$/;"	v
async_synchronize_cookie	async.c	/^void async_synchronize_cookie(async_cookie_t cookie)$/;"	f
async_synchronize_cookie_domain	async.c	/^EXPORT_SYMBOL_GPL(async_synchronize_cookie_domain);$/;"	v
async_synchronize_cookie_domain	async.c	/^void async_synchronize_cookie_domain(async_cookie_t cookie, struct async_domain *domain)$/;"	f
async_synchronize_full	async.c	/^EXPORT_SYMBOL_GPL(async_synchronize_full);$/;"	v
async_synchronize_full	async.c	/^void async_synchronize_full(void)$/;"	f
async_synchronize_full_domain	async.c	/^EXPORT_SYMBOL_GPL(async_synchronize_full_domain);$/;"	v
async_synchronize_full_domain	async.c	/^void async_synchronize_full_domain(struct async_domain *domain)$/;"	f
async_unregister_domain	async.c	/^EXPORT_SYMBOL_GPL(async_unregister_domain);$/;"	v
async_unregister_domain	async.c	/^void async_unregister_domain(struct async_domain *domain)$/;"	f
atomic_dec_and_mutex_lock	mutex.c	/^EXPORT_SYMBOL(atomic_dec_and_mutex_lock);$/;"	v
atomic_dec_and_mutex_lock	mutex.c	/^int atomic_dec_and_mutex_lock(atomic_t *cnt, struct mutex *lock)$/;"	f
atomic_notifier_call_chain	notifier.c	/^EXPORT_SYMBOL_GPL(atomic_notifier_call_chain);$/;"	v
atomic_notifier_call_chain	notifier.c	/^int __kprobes atomic_notifier_call_chain(struct atomic_notifier_head *nh,$/;"	f
atomic_notifier_chain_register	notifier.c	/^EXPORT_SYMBOL_GPL(atomic_notifier_chain_register);$/;"	v
atomic_notifier_chain_register	notifier.c	/^int atomic_notifier_chain_register(struct atomic_notifier_head *nh,$/;"	f
atomic_notifier_chain_unregister	notifier.c	/^EXPORT_SYMBOL_GPL(atomic_notifier_chain_unregister);$/;"	v
atomic_notifier_chain_unregister	notifier.c	/^int atomic_notifier_chain_unregister(struct atomic_notifier_head *nh,$/;"	f
atramp	swap/uprobe/swap_uprobes.h	/^	struct arch_specific_tramp atramp;  \/**< Stores trampoline *\/$/;"	m	struct:uprobe	typeref:struct:uprobe::arch_specific_tramp
attach_in_progress	cpuset.c	/^	int attach_in_progress;$/;"	m	struct:cpuset	file:
attach_pid	pid.c	/^void attach_pid(struct task_struct *task, enum pid_type type,$/;"	f
attach_task_by_pid	cgroup.c	/^static int attach_task_by_pid(struct cgroup *cgrp, u64 pid, bool threadgroup)$/;"	f	file:
attempts	swap/preload/preload_pd.c	/^	long attempts;$/;"	m	struct:process_data	file:
attr	audit.h	/^			struct mq_attr		attr;$/;"	m	struct:audit_context::__anon15::__anon21	typeref:struct:audit_context::__anon15::__anon21::mq_attr
attr	padata.c	/^	struct attribute attr;$/;"	m	struct:padata_sysfs_entry	typeref:struct:padata_sysfs_entry::attribute	file:
attr	sched/fair.c	/^	struct attribute attr;$/;"	m	struct:hmp_global_attr	typeref:struct:hmp_global_attr::attribute	file:
attr	sched/fair.c	/^	struct hmp_global_attr attr[HMP_DATA_SYSFS_MAX];$/;"	m	struct:hmp_data_struct	typeref:struct:hmp_data_struct::hmp_global_attr	file:
attr2pentry	padata.c	905;"	d	file:
attr_group	power/fbearlysuspend.c	/^static struct attribute_group attr_group = {$/;"	v	typeref:struct:attribute_group	file:
attr_group	power/hibernate.c	/^static struct attribute_group attr_group = {$/;"	v	typeref:struct:attribute_group	file:
attr_group	power/main.c	/^static struct attribute_group attr_group = {$/;"	v	typeref:struct:attribute_group	file:
attr_group	power/wakeup_reason.c	/^static struct attribute_group attr_group = {$/;"	v	typeref:struct:attribute_group	file:
attr_group	sched/fair.c	/^	struct attribute_group attr_group;$/;"	m	struct:hmp_data_struct	typeref:struct:hmp_data_struct::attribute_group	file:
attributes	sched/fair.c	/^	struct attribute *attributes[HMP_DATA_SYSFS_MAX + 1];$/;"	m	struct:hmp_data_struct	typeref:struct:hmp_data_struct::attribute	file:
attrs	module.c	/^	struct bin_attribute attrs[0];$/;"	m	struct:module_notes_attrs	typeref:struct:module_notes_attrs::bin_attribute	file:
attrs	module.c	/^	struct module_sect_attr attrs[0];$/;"	m	struct:module_sect_attrs	typeref:struct:module_sect_attrs::module_sect_attr	file:
attrs	params.c	/^	struct param_attribute attrs[0];$/;"	m	struct:module_param_attrs	typeref:struct:module_param_attrs::param_attribute	file:
attrs	power/wakeup_reason.c	/^static struct attribute *attrs[] = {$/;"	v	typeref:struct:attribute	file:
attrs	workqueue.c	/^	struct workqueue_attrs	*attrs;		\/* I: worker attributes *\/$/;"	m	struct:worker_pool	typeref:struct:worker_pool::workqueue_attrs	file:
audit_add_rule	auditfilter.c	/^static inline int audit_add_rule(struct audit_entry *entry)$/;"	f	file:
audit_add_to_parent	audit_watch.c	/^static void audit_add_to_parent(struct audit_krule *krule,$/;"	f	file:
audit_add_tree_rule	audit.h	294;"	d
audit_add_tree_rule	audit_tree.c	/^int audit_add_tree_rule(struct audit_krule *rule)$/;"	f
audit_add_watch	audit.h	273;"	d
audit_add_watch	audit_watch.c	/^int audit_add_watch(struct audit_krule *krule, struct list_head **list)$/;"	f
audit_alloc	auditsc.c	/^int audit_alloc(struct task_struct *tsk)$/;"	f
audit_alloc_context	auditsc.c	/^static inline struct audit_context *audit_alloc_context(enum audit_state state)$/;"	f	file:
audit_alloc_name	auditsc.c	/^static struct audit_names *audit_alloc_name(struct audit_context *context,$/;"	f	file:
audit_aux_data	auditsc.c	/^struct audit_aux_data {$/;"	s	file:
audit_aux_data_bprm_fcaps	auditsc.c	/^struct audit_aux_data_bprm_fcaps {$/;"	s	file:
audit_aux_data_capset	auditsc.c	/^struct audit_aux_data_capset {$/;"	s	file:
audit_aux_data_execve	auditsc.c	/^struct audit_aux_data_execve {$/;"	s	file:
audit_aux_data_pids	auditsc.c	/^struct audit_aux_data_pids {$/;"	s	file:
audit_backlog_limit	audit.c	/^static int	audit_backlog_limit = 64;$/;"	v	file:
audit_backlog_wait_overflow	audit.c	/^static int	audit_backlog_wait_overflow = 0;$/;"	v	file:
audit_backlog_wait_time	audit.c	/^static int	audit_backlog_wait_time = AUDIT_BACKLOG_WAIT_TIME;$/;"	v	file:
audit_buffer	audit.c	/^struct audit_buffer {$/;"	s	file:
audit_buffer_alloc	audit.c	/^static struct audit_buffer * audit_buffer_alloc(struct audit_context *ctx,$/;"	f	file:
audit_buffer_free	audit.c	/^static void audit_buffer_free(struct audit_buffer *ab)$/;"	f	file:
audit_cap_data	audit.h	/^struct audit_cap_data {$/;"	s
audit_chunk	audit_tree.c	/^struct audit_chunk {$/;"	s	file:
audit_cmd_mutex	audit.c	/^DEFINE_MUTEX(audit_cmd_mutex);$/;"	v
audit_comparator	auditfilter.c	/^int audit_comparator(u32 left, u32 op, u32 right)$/;"	f
audit_compare_dname_path	auditfilter.c	/^int audit_compare_dname_path(const char *dname, const char *path, int parentlen)$/;"	f
audit_compare_gid	auditsc.c	/^static int audit_compare_gid(kgid_t gid,$/;"	f	file:
audit_compare_rule	auditfilter.c	/^static int audit_compare_rule(struct audit_krule *a, struct audit_krule *b)$/;"	f	file:
audit_compare_uid	auditsc.c	/^static int audit_compare_uid(kuid_t uid,$/;"	f	file:
audit_context	audit.h	/^struct audit_context {$/;"	s
audit_copy_fcaps	audit.c	/^static inline int audit_copy_fcaps(struct audit_names *name,$/;"	f	file:
audit_copy_inode	audit.c	/^void audit_copy_inode(struct audit_names *name, const struct dentry *dentry,$/;"	f
audit_core_dumps	auditsc.c	/^void audit_core_dumps(long signr)$/;"	f
audit_data_to_entry	auditfilter.c	/^static struct audit_entry *audit_data_to_entry(struct audit_rule_data *data,$/;"	f	file:
audit_default	audit.c	/^static int	audit_default;$/;"	v	file:
audit_del_rule	auditfilter.c	/^static inline int audit_del_rule(struct audit_entry *entry)$/;"	f	file:
audit_do_config_change	audit.c	/^static int audit_do_config_change(char *function_name, int *to_change, int new)$/;"	f	file:
audit_dupe_lsm_field	auditfilter.c	/^static inline int audit_dupe_lsm_field(struct audit_field *df,$/;"	f	file:
audit_dupe_rule	auditfilter.c	/^struct audit_entry *audit_dupe_rule(struct audit_krule *old)$/;"	f
audit_dupe_watch	audit_watch.c	/^static struct audit_watch *audit_dupe_watch(struct audit_watch *old)$/;"	f	file:
audit_enable	audit.c	/^static int __init audit_enable(char *str)$/;"	f	file:
audit_enabled	audit.c	/^EXPORT_SYMBOL_GPL(audit_enabled);$/;"	v
audit_enabled	audit.c	/^int		audit_enabled;$/;"	v
audit_entry	audit.h	/^struct audit_entry {$/;"	s
audit_ever_enabled	audit.c	/^int		audit_ever_enabled;$/;"	v
audit_expand	audit.c	/^static inline int audit_expand(struct audit_buffer *ab, int extra)$/;"	f	file:
audit_failure	audit.c	/^static int	audit_failure = AUDIT_FAIL_PRINTK;$/;"	v	file:
audit_field_compare	auditsc.c	/^static int audit_field_compare(struct task_struct *tsk,$/;"	f	file:
audit_field_valid	auditfilter.c	/^static int audit_field_valid(struct audit_entry *entry, struct audit_field *f)$/;"	f	file:
audit_filter_inode_name	auditsc.c	/^static int audit_filter_inode_name(struct task_struct *tsk,$/;"	f	file:
audit_filter_inodes	audit.h	322;"	d
audit_filter_inodes	auditsc.c	/^void audit_filter_inodes(struct task_struct *tsk, struct audit_context *ctx)$/;"	f
audit_filter_list	auditfilter.c	/^struct list_head audit_filter_list[AUDIT_NR_FILTERS] = {$/;"	v	typeref:struct:list_head
audit_filter_mutex	auditfilter.c	/^DEFINE_MUTEX(audit_filter_mutex);$/;"	v
audit_filter_rules	auditsc.c	/^static int audit_filter_rules(struct task_struct *tsk,$/;"	f	file:
audit_filter_syscall	auditsc.c	/^static enum audit_state audit_filter_syscall(struct task_struct *tsk,$/;"	f	file:
audit_filter_task	auditsc.c	/^static enum audit_state audit_filter_task(struct task_struct *tsk, char **key)$/;"	f	file:
audit_filter_type	auditfilter.c	/^int audit_filter_type(int type)$/;"	f
audit_filter_user	auditfilter.c	/^int audit_filter_user(int type)$/;"	f
audit_filter_user_rules	auditfilter.c	/^static int audit_filter_user_rules(struct audit_krule *rule, int type,$/;"	f	file:
audit_find_parent	audit_watch.c	/^static inline struct audit_parent *audit_find_parent(struct inode *inode)$/;"	f	file:
audit_find_rule	auditfilter.c	/^static struct audit_entry *audit_find_rule(struct audit_entry *entry,$/;"	f	file:
audit_free_aux	auditsc.c	/^static inline void audit_free_aux(struct audit_context *context)$/;"	f	file:
audit_free_context	auditsc.c	/^static inline void audit_free_context(struct audit_context *context)$/;"	f	file:
audit_free_names	auditsc.c	/^static inline void audit_free_names(struct audit_context *context)$/;"	f	file:
audit_free_parent	audit_watch.c	/^static void audit_free_parent(struct audit_parent *parent)$/;"	f	file:
audit_free_rule	auditfilter.c	/^static inline void audit_free_rule(struct audit_entry *e)$/;"	f	file:
audit_free_rule_rcu	auditfilter.c	/^void audit_free_rule_rcu(struct rcu_head *head)$/;"	f
audit_freelist_count	audit.c	/^static int	   audit_freelist_count;$/;"	v	file:
audit_get_context	auditsc.c	/^static inline struct audit_context *audit_get_context(struct task_struct *tsk,$/;"	f	file:
audit_get_nd	audit_watch.c	/^static int audit_get_nd(struct audit_watch *watch, struct path *parent)$/;"	f	file:
audit_get_parent	audit_watch.c	/^static void audit_get_parent(struct audit_parent *parent)$/;"	f	file:
audit_get_stamp	audit.c	/^static inline void audit_get_stamp(struct audit_context *ctx,$/;"	f	file:
audit_get_watch	audit.h	271;"	d
audit_get_watch	audit_watch.c	/^void audit_get_watch(struct audit_watch *watch)$/;"	f
audit_gid_comparator	auditfilter.c	/^int audit_gid_comparator(kgid_t left, u32 op, kgid_t right)$/;"	f
audit_hash_ino	audit.h	/^static inline int audit_hash_ino(u32 ino)$/;"	f
audit_hold_skb	audit.c	/^static void audit_hold_skb(struct sk_buff *skb)$/;"	f	file:
audit_in_mask	auditsc.c	/^static int audit_in_mask(const struct audit_krule *rule, unsigned long val)$/;"	f	file:
audit_init	audit.c	/^__initcall(audit_init);$/;"	v
audit_init	audit.c	/^static int __init audit_init(void)$/;"	f	file:
audit_init_entry	auditfilter.c	/^static inline struct audit_entry *audit_init_entry(u32 field_count)$/;"	f	file:
audit_init_parent	audit_watch.c	/^static struct audit_parent *audit_init_parent(struct path *path)$/;"	f	file:
audit_init_watch	audit_watch.c	/^static struct audit_watch *audit_init_watch(char *path)$/;"	f	file:
audit_initialized	audit.c	/^static int	audit_initialized;$/;"	v	file:
audit_inode_hash	audit.c	/^struct list_head audit_inode_hash[AUDIT_INODE_BUCKETS];$/;"	v	typeref:struct:list_head
audit_kill_trees	audit.h	300;"	d
audit_kill_trees	audit_tree.c	/^void audit_kill_trees(struct list_head *list)$/;"	f
audit_killed_trees	auditsc.c	/^struct list_head *audit_killed_trees(void)$/;"	f
audit_krule_to_data	auditfilter.c	/^static struct audit_rule_data *audit_krule_to_data(struct audit_krule *krule)$/;"	f	file:
audit_list_rules	auditfilter.c	/^static void audit_list_rules(int pid, int seq, struct sk_buff_head *q)$/;"	f	file:
audit_log	audit.c	/^EXPORT_SYMBOL(audit_log);$/;"	v
audit_log	audit.c	/^void audit_log(struct audit_context *ctx, gfp_t gfp_mask, int type,$/;"	f
audit_log_abend	auditsc.c	/^static void audit_log_abend(struct audit_buffer *ab, char *reason, long signr)$/;"	f	file:
audit_log_cap	audit.c	/^void audit_log_cap(struct audit_buffer *ab, char *prefix, kernel_cap_t *cap)$/;"	f
audit_log_common_recv_msg	audit.c	/^static int audit_log_common_recv_msg(struct audit_buffer **ab, u16 msg_type)$/;"	f	file:
audit_log_config_change	audit.c	/^static int audit_log_config_change(char *function_name, int new, int old,$/;"	f	file:
audit_log_d_path	audit.c	/^void audit_log_d_path(struct audit_buffer *ab, const char *prefix,$/;"	f
audit_log_end	audit.c	/^EXPORT_SYMBOL(audit_log_end);$/;"	v
audit_log_end	audit.c	/^void audit_log_end(struct audit_buffer *ab)$/;"	f
audit_log_execve_info	auditsc.c	/^static void audit_log_execve_info(struct audit_context *context,$/;"	f	file:
audit_log_exit	auditsc.c	/^static void audit_log_exit(struct audit_context *context, struct task_struct *tsk)$/;"	f	file:
audit_log_fcaps	audit.c	/^void audit_log_fcaps(struct audit_buffer *ab, struct audit_names *name)$/;"	f
audit_log_format	audit.c	/^EXPORT_SYMBOL(audit_log_format);$/;"	v
audit_log_format	audit.c	/^void audit_log_format(struct audit_buffer *ab, const char *fmt, ...)$/;"	f
audit_log_key	audit.c	/^void audit_log_key(struct audit_buffer *ab, char *key)$/;"	f
audit_log_link_denied	audit.c	/^void audit_log_link_denied(const char *operation, struct path *link)$/;"	f
audit_log_lost	audit.c	/^void audit_log_lost(const char *message)$/;"	f
audit_log_n_hex	audit.c	/^void audit_log_n_hex(struct audit_buffer *ab, const unsigned char *buf,$/;"	f
audit_log_n_string	audit.c	/^void audit_log_n_string(struct audit_buffer *ab, const char *string,$/;"	f
audit_log_n_untrustedstring	audit.c	/^void audit_log_n_untrustedstring(struct audit_buffer *ab, const char *string,$/;"	f
audit_log_name	audit.c	/^void audit_log_name(struct audit_context *context, struct audit_names *n,$/;"	f
audit_log_pid_context	auditsc.c	/^static int audit_log_pid_context(struct audit_context *context, pid_t pid,$/;"	f	file:
audit_log_remove_rule	audit_tree.c	/^static void audit_log_remove_rule(struct audit_krule *rule)$/;"	f	file:
audit_log_rule_change	auditfilter.c	/^static void audit_log_rule_change(char *action, struct audit_krule *rule, int res)$/;"	f	file:
audit_log_secctx	audit.c	/^EXPORT_SYMBOL(audit_log_secctx);$/;"	v
audit_log_secctx	audit.c	/^void audit_log_secctx(struct audit_buffer *ab, u32 secid)$/;"	f
audit_log_session_info	audit.c	/^void audit_log_session_info(struct audit_buffer *ab)$/;"	f
audit_log_single_execve_arg	auditsc.c	/^static int audit_log_single_execve_arg(struct audit_context *context,$/;"	f	file:
audit_log_start	audit.c	/^EXPORT_SYMBOL(audit_log_start);$/;"	v
audit_log_start	audit.c	/^struct audit_buffer *audit_log_start(struct audit_context *ctx, gfp_t gfp_mask,$/;"	f
audit_log_task	auditsc.c	/^static void audit_log_task(struct audit_buffer *ab)$/;"	f	file:
audit_log_task_context	audit.c	/^EXPORT_SYMBOL(audit_log_task_context);$/;"	v
audit_log_task_context	audit.c	/^int audit_log_task_context(struct audit_buffer *ab)$/;"	f
audit_log_task_info	audit.c	/^EXPORT_SYMBOL(audit_log_task_info);$/;"	v
audit_log_task_info	audit.c	/^void audit_log_task_info(struct audit_buffer *ab, struct task_struct *tsk)$/;"	f
audit_log_untrustedstring	audit.c	/^void audit_log_untrustedstring(struct audit_buffer *ab, const char *string)$/;"	f
audit_log_vformat	audit.c	/^static void audit_log_vformat(struct audit_buffer *ab, const char *fmt,$/;"	f	file:
audit_lost	audit.c	/^static atomic_t    audit_lost = ATOMIC_INIT(0);$/;"	v	file:
audit_make_reply	audit.c	/^struct sk_buff *audit_make_reply(int pid, int seq, int type, int done,$/;"	f
audit_make_tree	audit.h	295;"	d
audit_make_tree	audit_tree.c	/^int audit_make_tree(struct audit_krule *rule, char *pathname, u32 op)$/;"	f
audit_match_class	auditfilter.c	/^int audit_match_class(int class, unsigned syscall)$/;"	f
audit_match_class_bits	auditfilter.c	/^static inline int audit_match_class_bits(int class, u32 *mask)$/;"	f	file:
audit_match_filetype	auditsc.c	/^static int audit_match_filetype(struct audit_context *ctx, int val)$/;"	f	file:
audit_match_perm	auditsc.c	/^static int audit_match_perm(struct audit_context *ctx, int mask)$/;"	f	file:
audit_match_signal	auditfilter.c	/^static int audit_match_signal(struct audit_entry *entry)$/;"	f	file:
audit_n_rules	auditsc.c	/^int audit_n_rules;$/;"	v
audit_names	audit.h	/^struct audit_names {$/;"	s
audit_netlink_list	audit.h	/^struct audit_netlink_list {$/;"	s
audit_netlink_ok	audit.c	/^static int audit_netlink_ok(struct sk_buff *skb, u16 msg_type)$/;"	f	file:
audit_nlk_portid	audit.c	/^static int	audit_nlk_portid;$/;"	v	file:
audit_ops	auditfilter.c	/^static u32 audit_ops[] =$/;"	v	file:
audit_pack_string	auditfilter.c	/^static inline size_t audit_pack_string(void **bufp, const char *str)$/;"	f	file:
audit_panic	audit.c	/^void audit_panic(const char *message)$/;"	f
audit_parent	audit_watch.c	/^struct audit_parent {$/;"	s	file:
audit_pid	audit.c	/^int		audit_pid;$/;"	v
audit_printk_skb	audit.c	/^static void audit_printk_skb(struct sk_buff *skb)$/;"	f	file:
audit_put_chunk	audit_tree.c	/^void audit_put_chunk(struct audit_chunk *chunk)$/;"	f
audit_put_parent	audit_watch.c	/^static void audit_put_parent(struct audit_parent *parent)$/;"	f	file:
audit_put_tree	audit.h	297;"	d
audit_put_tree	audit_tree.c	/^void audit_put_tree(struct audit_tree *tree)$/;"	f
audit_put_watch	audit.h	270;"	d
audit_put_watch	audit_watch.c	/^void audit_put_watch(struct audit_watch *watch)$/;"	f
audit_putname	auditsc.c	/^void audit_putname(struct filename *name)$/;"	f
audit_rate_check	audit.c	/^static inline int audit_rate_check(void)$/;"	f	file:
audit_rate_limit	audit.c	/^static int	audit_rate_limit;$/;"	v	file:
audit_receive	audit.c	/^static void audit_receive(struct sk_buff  *skb)$/;"	f	file:
audit_receive_filter	auditfilter.c	/^int audit_receive_filter(int type, int pid, int seq, void *data, size_t datasz)$/;"	f
audit_receive_msg	audit.c	/^static int audit_receive_msg(struct sk_buff *skb, struct nlmsghdr *nlh)$/;"	f	file:
audit_receive_skb	audit.c	/^static void audit_receive_skb(struct sk_buff *skb)$/;"	f	file:
audit_register_class	auditfilter.c	/^int __init audit_register_class(int class, unsigned *list)$/;"	f
audit_remove_parent_watches	audit_watch.c	/^static void audit_remove_parent_watches(struct audit_parent *parent)$/;"	f	file:
audit_remove_tree_rule	audit.h	293;"	d
audit_remove_tree_rule	audit_tree.c	/^int audit_remove_tree_rule(struct audit_krule *rule)$/;"	f
audit_remove_watch	audit_watch.c	/^static void audit_remove_watch(struct audit_watch *watch)$/;"	f	file:
audit_remove_watch_rule	audit.h	274;"	d
audit_remove_watch_rule	audit_watch.c	/^void audit_remove_watch_rule(struct audit_krule *krule)$/;"	f
audit_reply	audit.c	/^struct audit_reply {$/;"	s	file:
audit_rules_list	auditfilter.c	/^static struct list_head audit_rules_list[AUDIT_NR_FILTERS] = {$/;"	v	typeref:struct:list_head	file:
audit_schedule_prune	audit_tree.c	/^static void audit_schedule_prune(void)$/;"	f	file:
audit_send_list	audit.c	/^int audit_send_list(void *_dest)$/;"	f
audit_send_reply	audit.c	/^static void audit_send_reply(int pid, int seq, int type, int done, int multi,$/;"	f	file:
audit_send_reply_thread	audit.c	/^static int audit_send_reply_thread(void *arg)$/;"	f	file:
audit_serial	audit.c	/^unsigned int audit_serial(void)$/;"	f
audit_set_auditable	auditsc.c	/^static void audit_set_auditable(struct audit_context *ctx)$/;"	f	file:
audit_set_backlog_limit	audit.c	/^static int audit_set_backlog_limit(int limit)$/;"	f	file:
audit_set_enabled	audit.c	/^static int audit_set_enabled(int state)$/;"	f	file:
audit_set_failure	audit.c	/^static int audit_set_failure(int state)$/;"	f	file:
audit_set_loginuid	auditsc.c	/^int audit_set_loginuid(kuid_t loginuid)$/;"	f
audit_set_pid	audit.c	/^static void audit_set_pid(struct audit_buffer *ab, pid_t pid)$/;"	f	file:
audit_set_rate_limit	audit.c	/^static int audit_set_rate_limit(int limit)$/;"	f	file:
audit_sig_pid	audit.c	/^pid_t		audit_sig_pid = -1;$/;"	v
audit_sig_sid	audit.c	/^u32		audit_sig_sid = 0;$/;"	v
audit_sig_uid	audit.c	/^kuid_t		audit_sig_uid = INVALID_UID;$/;"	v
audit_signal_info	audit.h	/^static inline int audit_signal_info(int sig, struct task_struct *t)$/;"	f
audit_signal_info	audit.h	321;"	d
audit_signals	auditsc.c	/^int audit_signals;$/;"	v
audit_skb_hold_queue	audit.c	/^static struct sk_buff_head audit_skb_hold_queue;$/;"	v	typeref:struct:sk_buff_head	file:
audit_skb_queue	audit.c	/^static struct sk_buff_head audit_skb_queue;$/;"	v	typeref:struct:sk_buff_head	file:
audit_sock	audit.c	/^static struct sock *audit_sock;$/;"	v	typeref:struct:sock	file:
audit_state	audit.h	/^enum audit_state {$/;"	g
audit_string_contains_control	audit.c	/^int audit_string_contains_control(const char *string, size_t len)$/;"	f
audit_tag_tree	audit.h	298;"	d
audit_tag_tree	audit_tree.c	/^int audit_tag_tree(char *old, char *new)$/;"	f
audit_to_entry_common	auditfilter.c	/^static inline struct audit_entry *audit_to_entry_common(struct audit_rule *rule)$/;"	f	file:
audit_to_inode	auditfilter.c	/^static inline int audit_to_inode(struct audit_krule *krule,$/;"	f	file:
audit_to_op	auditfilter.c	/^static u32 audit_to_op(u32 op)$/;"	f	file:
audit_to_watch	audit.h	272;"	d
audit_to_watch	audit_watch.c	/^int audit_to_watch(struct audit_krule *krule, char *path, int len, u32 op)$/;"	f
audit_tree	audit_tree.c	/^struct audit_tree {$/;"	s	file:
audit_tree_destroy_watch	audit_tree.c	/^static void audit_tree_destroy_watch(struct fsnotify_mark *entry)$/;"	f	file:
audit_tree_freeing_mark	audit_tree.c	/^static void audit_tree_freeing_mark(struct fsnotify_mark *entry, struct fsnotify_group *group)$/;"	f	file:
audit_tree_group	audit_tree.c	/^static struct fsnotify_group *audit_tree_group;$/;"	v	typeref:struct:fsnotify_group	file:
audit_tree_handle_event	audit_tree.c	/^static int audit_tree_handle_event(struct fsnotify_group *group,$/;"	f	file:
audit_tree_init	audit_tree.c	/^__initcall(audit_tree_init);$/;"	v
audit_tree_init	audit_tree.c	/^static int __init audit_tree_init(void)$/;"	f	file:
audit_tree_lookup	audit_tree.c	/^struct audit_chunk *audit_tree_lookup(const struct inode *inode)$/;"	f
audit_tree_match	audit_tree.c	/^int audit_tree_match(struct audit_chunk *chunk, struct audit_tree *tree)$/;"	f
audit_tree_ops	audit_tree.c	/^static const struct fsnotify_ops audit_tree_ops = {$/;"	v	typeref:struct:fsnotify_ops	file:
audit_tree_path	audit.h	299;"	d
audit_tree_path	audit_tree.c	/^const char *audit_tree_path(struct audit_tree *tree)$/;"	f
audit_tree_refs	auditsc.c	/^struct audit_tree_refs {$/;"	s	file:
audit_tree_send_event	audit_tree.c	/^static bool audit_tree_send_event(struct fsnotify_group *group, struct inode *inode,$/;"	f	file:
audit_trim_trees	audit.h	296;"	d
audit_trim_trees	audit_tree.c	/^void audit_trim_trees(void)$/;"	f
audit_uid_comparator	auditfilter.c	/^int audit_uid_comparator(kuid_t left, u32 op, kuid_t right)$/;"	f
audit_unpack_string	auditfilter.c	/^char *audit_unpack_string(void **bufp, size_t *remain, size_t len)$/;"	f
audit_update_lsm_rules	auditfilter.c	/^int audit_update_lsm_rules(void)$/;"	f
audit_update_watch	audit_watch.c	/^static void audit_update_watch(struct audit_parent *parent,$/;"	f	file:
audit_watch	audit_watch.c	/^struct audit_watch {$/;"	s	file:
audit_watch_compare	audit.h	276;"	d
audit_watch_compare	audit_watch.c	/^int audit_watch_compare(struct audit_watch *watch, unsigned long ino, dev_t dev)$/;"	f
audit_watch_free_mark	audit_watch.c	/^static void audit_watch_free_mark(struct fsnotify_mark *entry)$/;"	f	file:
audit_watch_fsnotify_ops	audit_watch.c	/^static const struct fsnotify_ops audit_watch_fsnotify_ops = {$/;"	v	typeref:struct:fsnotify_ops	file:
audit_watch_group	audit_watch.c	/^static struct fsnotify_group *audit_watch_group;$/;"	v	typeref:struct:fsnotify_group	file:
audit_watch_handle_event	audit_watch.c	/^static int audit_watch_handle_event(struct fsnotify_group *group,$/;"	f	file:
audit_watch_init	audit_watch.c	/^device_initcall(audit_watch_init);$/;"	v
audit_watch_init	audit_watch.c	/^static int __init audit_watch_init(void)$/;"	f	file:
audit_watch_log_rule_change	audit_watch.c	/^static void audit_watch_log_rule_change(struct audit_krule *r, struct audit_watch *w, char *op)$/;"	f	file:
audit_watch_path	audit.h	275;"	d
audit_watch_path	audit_watch.c	/^char *audit_watch_path(struct audit_watch *watch)$/;"	f
audit_watch_should_send_event	audit_watch.c	/^static bool audit_watch_should_send_event(struct fsnotify_group *group, struct inode *inode,$/;"	f	file:
auditsc_get_stamp	auditsc.c	/^int auditsc_get_stamp(struct audit_context *ctx,$/;"	f
autogroup	sched/auto_group.h	/^struct autogroup {$/;"	s
autogroup	sched/sched.h	/^	struct autogroup *autogroup;$/;"	m	struct:task_group	typeref:struct:task_group::autogroup
autogroup_create	sched/auto_group.c	/^static inline struct autogroup *autogroup_create(void)$/;"	f	file:
autogroup_default	sched/auto_group.c	/^static struct autogroup autogroup_default;$/;"	v	typeref:struct:autogroup	file:
autogroup_destroy	sched/auto_group.c	/^static inline void autogroup_destroy(struct kref *kref)$/;"	f	file:
autogroup_free	sched/auto_group.c	/^void autogroup_free(struct task_group *tg)$/;"	f
autogroup_free	sched/auto_group.h	/^static inline void autogroup_free(struct task_group *tg) { }$/;"	f
autogroup_init	sched/auto_group.c	/^void __init autogroup_init(struct task_struct *init_task)$/;"	f
autogroup_init	sched/auto_group.h	/^static inline void autogroup_init(struct task_struct *init_task) {  }$/;"	f
autogroup_kref_get	sched/auto_group.c	/^static inline struct autogroup *autogroup_kref_get(struct autogroup *ag)$/;"	f	file:
autogroup_kref_put	sched/auto_group.c	/^static inline void autogroup_kref_put(struct autogroup *ag)$/;"	f	file:
autogroup_move_group	sched/auto_group.c	/^autogroup_move_group(struct task_struct *p, struct autogroup *ag)$/;"	f	file:
autogroup_path	sched/auto_group.c	/^int autogroup_path(struct task_group *tg, char *buf, int buflen)$/;"	f
autogroup_path	sched/auto_group.h	/^static inline int autogroup_path(struct task_group *tg, char *buf, int buflen)$/;"	f
autogroup_seq_nr	sched/auto_group.c	/^static atomic_t autogroup_seq_nr;$/;"	v	file:
autogroup_task_get	sched/auto_group.c	/^static inline struct autogroup *autogroup_task_get(struct task_struct *p)$/;"	f	file:
autogroup_task_group	sched/auto_group.h	/^autogroup_task_group(struct task_struct *p, struct task_group *tg)$/;"	f
autoremove_wake_function	wait.c	/^EXPORT_SYMBOL(autoremove_wake_function);$/;"	v
autoremove_wake_function	wait.c	/^int autoremove_wake_function(wait_queue_t *wait, unsigned mode, int sync, void *key)$/;"	f
autosleep	power/main.c	/^power_attr(autosleep);$/;"	v
autosleep_show	power/main.c	/^static ssize_t autosleep_show(struct kobject *kobj,$/;"	f	file:
autosleep_state	power/autosleep.c	/^static suspend_state_t autosleep_state;$/;"	v	file:
autosleep_store	power/main.c	/^static ssize_t autosleep_store(struct kobject *kobj,$/;"	f	file:
autosleep_wq	power/autosleep.c	/^static struct workqueue_struct *autosleep_wq;$/;"	v	typeref:struct:workqueue_struct	file:
autosleep_ws	power/autosleep.c	/^static struct wakeup_source *autosleep_ws;$/;"	v	typeref:struct:wakeup_source	file:
aux	audit.h	/^	struct audit_aux_data *aux;$/;"	m	struct:audit_context	typeref:struct:audit_context::audit_aux_data
aux_pids	audit.h	/^	struct audit_aux_data *aux_pids;$/;"	m	struct:audit_context	typeref:struct:audit_context::audit_aux_data
avenrun	sched/core.c	/^EXPORT_SYMBOL(avenrun); \/* should be removed *\/$/;"	v
avenrun	sched/core.c	/^unsigned long avenrun[3];$/;"	v
avg	sched/sched.h	/^	struct sched_avg avg;$/;"	m	struct:rq	typeref:struct:rq::sched_avg
avg_idle	sched/sched.h	/^	u64 avg_idle;$/;"	m	struct:rq
avg_load	sched/fair.c	/^	unsigned long avg_load;	   \/* Average load across all groups in sd *\/$/;"	m	struct:sd_lb_stats	file:
avg_load	sched/fair.c	/^	unsigned long avg_load; \/*Avg load across the CPUs of the group *\/$/;"	m	struct:sg_lb_stats	file:
b_cond_insn_execbuf	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^EXPORT_SYMBOL_GPL(b_cond_insn_execbuf);$/;"	v
b_cond_insn_execbuf	swap/kprobe/arch/arm/swap-asm/trampoline_arm.S	/^b_cond_insn_execbuf:$/;"	l
b_cond_insn_execbuf_thumb	swap/uprobe/arch/arm/swap-asm/trampoline_thumb.S	/^b_cond_insn_execbuf_thumb:$/;"	l
b_off_insn_execbuf_thumb	swap/uprobe/arch/arm/swap-asm/trampoline_thumb.S	/^b_off_insn_execbuf_thumb:$/;"	l
b_r_insn_execbuf	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^EXPORT_SYMBOL_GPL(b_r_insn_execbuf);$/;"	v
b_r_insn_execbuf	swap/kprobe/arch/arm/swap-asm/trampoline_arm.S	/^b_r_insn_execbuf:$/;"	l
b_r_insn_execbuf_thumb	swap/uprobe/arch/arm/swap-asm/trampoline_thumb.S	/^b_r_insn_execbuf_thumb:$/;"	l
bacct_add_tsk	tsacct.c	/^void bacct_add_tsk(struct user_namespace *user_ns,$/;"	f
backtrace_regression_test	backtracetest.c	/^module_init(backtrace_regression_test);$/;"	v
backtrace_regression_test	backtracetest.c	/^static int backtrace_regression_test(void)$/;"	f	file:
backtrace_test_irq	backtracetest.c	/^static void backtrace_test_irq(void)$/;"	f	file:
backtrace_test_irq_callback	backtracetest.c	/^static void backtrace_test_irq_callback(unsigned long data)$/;"	f	file:
backtrace_test_normal	backtracetest.c	/^static void backtrace_test_normal(void)$/;"	f	file:
backtrace_test_saved	backtracetest.c	/^static void backtrace_test_saved(void)$/;"	f	file:
bad_action_ret	irq/spurious.c	/^static inline int bad_action_ret(irqreturn_t action_ret)$/;"	f	file:
balance_runtime	sched/rt.c	/^static inline int balance_runtime(struct rt_rq *rt_rq)$/;"	f	file:
balance_runtime	sched/rt.c	/^static int balance_runtime(struct rt_rq *rt_rq)$/;"	f	file:
barrier_cbs_count	rcutorture.c	/^static atomic_t barrier_cbs_count;	\/* Barrier callbacks registered. *\/$/;"	v	file:
barrier_cbs_invoked	rcutorture.c	/^static atomic_t barrier_cbs_invoked;	\/* Barrier callbacks invoked. *\/$/;"	v	file:
barrier_cbs_tasks	rcutorture.c	/^static struct task_struct **barrier_cbs_tasks;$/;"	v	typeref:struct:task_struct	file:
barrier_cbs_wq	rcutorture.c	/^static wait_queue_head_t *barrier_cbs_wq; \/* Coordinate barrier testing. *\/$/;"	v	file:
barrier_completion	rcutree.h	/^	struct completion barrier_completion;	\/* Wake at barrier end. *\/$/;"	m	struct:rcu_state	typeref:struct:rcu_state::completion
barrier_cpu_count	rcutree.h	/^	atomic_t barrier_cpu_count;		\/* # CPUs waiting on. *\/$/;"	m	struct:rcu_state
barrier_head	rcutree.h	/^	struct rcu_head barrier_head;$/;"	m	struct:rcu_data	typeref:struct:rcu_data::rcu_head
barrier_mutex	rcutree.h	/^	struct mutex barrier_mutex;		\/* Guards barrier fields. *\/$/;"	m	struct:rcu_state	typeref:struct:rcu_state::mutex
barrier_phase	rcutorture.c	/^static bool barrier_phase;		\/* Test phase. *\/$/;"	v	file:
barrier_task	rcutorture.c	/^static struct task_struct *barrier_task;$/;"	v	typeref:struct:task_struct	file:
base_clockid	time/alarmtimer.c	/^	clockid_t		base_clockid;$/;"	m	struct:alarm_base	file:
basic_msg_fmt	swap/parser/swap_msg_parser.c	/^struct basic_msg_fmt {$/;"	s	file:
battery	power/sleep_history.c	/^	struct battery_history battery;$/;"	m	struct:sleep_history	typeref:struct:sleep_history::battery_history	file:
battery_history	power/sleep_history.c	/^struct battery_history {$/;"	s	file:
bc_handler	time/tick-broadcast-hrtimer.c	/^static enum hrtimer_restart bc_handler(struct hrtimer *t)$/;"	f	file:
bc_set_mode	time/tick-broadcast-hrtimer.c	/^static void bc_set_mode(enum clock_event_mode mode,$/;"	f	file:
bc_set_next	time/tick-broadcast-hrtimer.c	/^static int bc_set_next(ktime_t expires, struct clock_event_device *bc)$/;"	f	file:
bctimer	time/tick-broadcast-hrtimer.c	/^static struct hrtimer bctimer;$/;"	v	typeref:struct:hrtimer	file:
bd	swap/uprobe/arch/arm/swap-asm/trampoline_thumb.S	/^bd:		nop			\/\/ branch displacement hi$/;"	l
bd2	swap/kprobe/arch/arm/swap-asm/trampoline_arm.S	/^bd2:		nop			\/\/ branch displacement$/;"	l
bd3	swap/kprobe/arch/arm/swap-asm/trampoline_arm.S	/^bd3:		nop			\/\/ branch displacement$/;"	l
bd3	swap/uprobe/arch/arm/swap-asm/trampoline_thumb.S	/^bd3:		nop			\/\/ branch displacement hi$/;"	l
bd4	swap/uprobe/arch/arm/swap-asm/trampoline_thumb.S	/^bd4:		nop			\/\/ branch displacement hi$/;"	l
bd5	swap/uprobe/arch/arm/swap-asm/trampoline_thumb.S	/^bd5:		nop			\/\/ branch displacement hi$/;"	l
beenonline	rcutree.h	/^	bool		beenonline;	\/* CPU online at least once. *\/$/;"	m	struct:rcu_data
begin	swap/parser/msg_buf.h	/^	char *begin;    \/**< Pointer to the beginning of the buffer. *\/$/;"	m	struct:msg_buf
begin	swap/us_manager/debugfs_us_manager.c	/^	char *begin;$/;"	m	struct:read_buf	file:
begin	swap/writer/debugfs_writer.c	/^	char *begin;$/;"	m	struct:read_buf	file:
begin_time	swap/nsp/nsp_msg.c	/^	u64 begin_time;$/;"	m	struct:nsp_msg_struct	file:
bin_add_file_ops	swap/preload/preload_debugfs.c	/^static const struct file_operations bin_add_file_ops = {$/;"	v	typeref:struct:file_operations	file:
bin_add_write	swap/preload/preload_debugfs.c	/^static ssize_t bin_add_write(struct file *file, const char __user *buf,$/;"	f	file:
bin_bus_isa_table	sysctl_binary.c	/^static const struct bin_table bin_bus_isa_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_bus_table	sysctl_binary.c	/^static const struct bin_table bin_bus_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_convert_t	sysctl_binary.c	/^typedef ssize_t bin_convert_t(struct file *file,$/;"	t	file:
bin_desc	swap/preload/preload_control.c	/^struct bin_desc {$/;"	s	file:
bin_dev_table	sysctl_binary.c	/^static const struct bin_table bin_dev_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_dir	sysctl_binary.c	/^static bin_convert_t bin_dir;$/;"	v	file:
bin_dir	sysctl_binary.c	/^static ssize_t bin_dir(struct file *file,$/;"	f	file:
bin_dn_node_address	sysctl_binary.c	/^static bin_convert_t bin_dn_node_address;$/;"	v	file:
bin_dn_node_address	sysctl_binary.c	/^static ssize_t bin_dn_node_address(struct file *file,$/;"	f	file:
bin_fs_ocfs2_nm_table	sysctl_binary.c	/^static const struct bin_table bin_fs_ocfs2_nm_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_fs_ocfs2_table	sysctl_binary.c	/^static const struct bin_table bin_fs_ocfs2_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_fs_quota_table	sysctl_binary.c	/^static const struct bin_table bin_fs_quota_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_fs_table	sysctl_binary.c	/^static const struct bin_table bin_fs_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_fs_xfs_table	sysctl_binary.c	/^static const struct bin_table bin_fs_xfs_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_info	swap/preload/preload_storage.h	/^struct bin_info {$/;"	s
bin_inotify_table	sysctl_binary.c	/^static const struct bin_table bin_inotify_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_intvec	sysctl_binary.c	/^static bin_convert_t bin_intvec;$/;"	v	file:
bin_intvec	sysctl_binary.c	/^static ssize_t bin_intvec(struct file *file,$/;"	f	file:
bin_ipmi_table	sysctl_binary.c	/^static const struct bin_table bin_ipmi_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_kern_table	sysctl_binary.c	/^static const struct bin_table bin_kern_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_list_file_ops	swap/preload/preload_debugfs.c	/^static const struct file_operations bin_list_file_ops = {$/;"	v	typeref:struct:file_operations	file:
bin_list_read	swap/preload/preload_debugfs.c	/^static ssize_t bin_list_read(struct file *file, char __user *usr_buf,$/;"	f	file:
bin_mac_hid_files	sysctl_binary.c	/^static const struct bin_table bin_mac_hid_files[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_atalk_table	sysctl_binary.c	/^static const struct bin_table bin_net_atalk_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_ax25_param_table	sysctl_binary.c	/^static const struct bin_table bin_net_ax25_param_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_ax25_table	sysctl_binary.c	/^static const struct bin_table bin_net_ax25_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_core_table	sysctl_binary.c	/^static const struct bin_table bin_net_core_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_decnet_conf	sysctl_binary.c	/^static const struct bin_table bin_net_decnet_conf[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_decnet_conf_vars	sysctl_binary.c	/^static const struct bin_table bin_net_decnet_conf_vars[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_decnet_table	sysctl_binary.c	/^static const struct bin_table bin_net_decnet_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_ipv4_conf_table	sysctl_binary.c	/^static const struct bin_table bin_net_ipv4_conf_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_ipv4_conf_vars_table	sysctl_binary.c	/^static const struct bin_table bin_net_ipv4_conf_vars_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_ipv4_netfilter_table	sysctl_binary.c	/^static const struct bin_table bin_net_ipv4_netfilter_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_ipv4_route_table	sysctl_binary.c	/^static const struct bin_table bin_net_ipv4_route_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_ipv4_table	sysctl_binary.c	/^static const struct bin_table bin_net_ipv4_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_ipv6_conf_table	sysctl_binary.c	/^static const struct bin_table bin_net_ipv6_conf_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_ipv6_conf_var_table	sysctl_binary.c	/^static const struct bin_table bin_net_ipv6_conf_var_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_ipv6_icmp_table	sysctl_binary.c	/^static const struct bin_table bin_net_ipv6_icmp_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_ipv6_route_table	sysctl_binary.c	/^static const struct bin_table bin_net_ipv6_route_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_ipv6_table	sysctl_binary.c	/^static const struct bin_table bin_net_ipv6_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_ipx_table	sysctl_binary.c	/^static const struct bin_table bin_net_ipx_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_irda_table	sysctl_binary.c	/^static const struct bin_table bin_net_irda_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_llc_llc2_table	sysctl_binary.c	/^static const struct bin_table bin_net_llc_llc2_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_llc_llc2_timeout_table	sysctl_binary.c	/^static const struct bin_table bin_net_llc_llc2_timeout_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_llc_station_table	sysctl_binary.c	/^static const struct bin_table bin_net_llc_station_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_llc_table	sysctl_binary.c	/^static const struct bin_table bin_net_llc_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_neigh_table	sysctl_binary.c	/^static const struct bin_table bin_net_neigh_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_neigh_vars_table	sysctl_binary.c	/^static const struct bin_table bin_net_neigh_vars_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_netfilter_table	sysctl_binary.c	/^static const struct bin_table bin_net_netfilter_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_netrom_table	sysctl_binary.c	/^static const struct bin_table bin_net_netrom_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_rose_table	sysctl_binary.c	/^static const struct bin_table bin_net_rose_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_sctp_table	sysctl_binary.c	/^static const struct bin_table bin_net_sctp_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_table	sysctl_binary.c	/^static const struct bin_table bin_net_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_tr_table	sysctl_binary.c	/^static const struct bin_table bin_net_tr_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_unix_table	sysctl_binary.c	/^static const struct bin_table bin_net_unix_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_net_x25_table	sysctl_binary.c	/^static const struct bin_table bin_net_x25_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_path	swap/parser/usm_msg.c	/^	char bin_path[0];$/;"	m	struct:proc_info_bottom	file:
bin_path	swap/parser/usm_msg.c	/^	char bin_path[0];$/;"	m	struct:proc_map	file:
bin_pm_table	sysctl_binary.c	/^static const struct bin_table bin_pm_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_pty_table	sysctl_binary.c	/^static const struct bin_table bin_pty_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_raid_table	sysctl_binary.c	/^static const struct bin_table bin_raid_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_random_table	sysctl_binary.c	/^static const struct bin_table bin_random_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_remove_file_ops	swap/preload/preload_debugfs.c	/^static const struct file_operations bin_remove_file_ops = {$/;"	v	typeref:struct:file_operations	file:
bin_remove_write	swap/preload/preload_debugfs.c	/^static ssize_t bin_remove_write(struct file *file, const char __user *buf,$/;"	f	file:
bin_root_table	sysctl_binary.c	/^static const struct bin_table bin_root_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_s390dbf_table	sysctl_binary.c	/^static const struct bin_table bin_s390dbf_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_scsi_table	sysctl_binary.c	/^static const struct bin_table bin_scsi_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_string	sysctl_binary.c	/^static bin_convert_t bin_string;$/;"	v	file:
bin_string	sysctl_binary.c	/^static ssize_t bin_string(struct file *file,$/;"	f	file:
bin_sunrpc_table	sysctl_binary.c	/^static const struct bin_table bin_sunrpc_table[] = {$/;"	v	typeref:struct:bin_table	file:
bin_table	sysctl_binary.c	/^struct bin_table {$/;"	s	file:
bin_ulongvec	sysctl_binary.c	/^static bin_convert_t bin_ulongvec;$/;"	v	file:
bin_ulongvec	sysctl_binary.c	/^static ssize_t bin_ulongvec(struct file *file,$/;"	f	file:
bin_uuid	sysctl_binary.c	/^static bin_convert_t bin_uuid;$/;"	v	file:
bin_uuid	sysctl_binary.c	/^static ssize_t bin_uuid(struct file *file,$/;"	f	file:
bin_vm_table	sysctl_binary.c	/^static const struct bin_table bin_vm_table[] = {$/;"	v	typeref:struct:bin_table	file:
binary_sysctl	sysctl_binary.c	/^static ssize_t binary_sysctl(const int *name, int nlen,$/;"	f	file:
binfmt_misc_table	sysctl.c	/^static struct ctl_table binfmt_misc_table[] = {$/;"	v	typeref:struct:ctl_table	file:
bit	panic.c	/^	u8	bit;$/;"	m	struct:tnt	file:
bit	power/snapshot.c	/^	int bit;$/;"	m	struct:bm_position	file:
bit	trace/trace.h	/^	u32		bit; \/* Mask assigned in val field in tracer_flags *\/$/;"	m	struct:tracer_opt
bit_waitqueue	wait.c	/^EXPORT_SYMBOL(bit_waitqueue);$/;"	v
bit_waitqueue	wait.c	/^wait_queue_head_t *bit_waitqueue(void *word, int bit)$/;"	f
bitfield_fetch_param	trace/trace_probe.c	/^struct bitfield_fetch_param {$/;"	s	file:
bitset	futex.c	/^	u32 bitset;$/;"	m	struct:futex_q	file:
blimit	rcutree.c	/^static long blimit = 10;	\/* Maximum callbacks per rcu_do_batch. *\/$/;"	v	file:
blimit	rcutree.h	/^	long		blimit;		\/* Upper limit on a processed batch *\/$/;"	m	struct:rcu_data
blk_add_driver_data	trace/blktrace.c	/^EXPORT_SYMBOL_GPL(blk_add_driver_data);$/;"	v
blk_add_driver_data	trace/blktrace.c	/^void blk_add_driver_data(struct request_queue *q,$/;"	f
blk_add_trace_bio	trace/blktrace.c	/^static void blk_add_trace_bio(struct request_queue *q, struct bio *bio,$/;"	f	file:
blk_add_trace_bio_backmerge	trace/blktrace.c	/^static void blk_add_trace_bio_backmerge(void *ignore,$/;"	f	file:
blk_add_trace_bio_bounce	trace/blktrace.c	/^static void blk_add_trace_bio_bounce(void *ignore,$/;"	f	file:
blk_add_trace_bio_complete	trace/blktrace.c	/^static void blk_add_trace_bio_complete(void *ignore,$/;"	f	file:
blk_add_trace_bio_frontmerge	trace/blktrace.c	/^static void blk_add_trace_bio_frontmerge(void *ignore,$/;"	f	file:
blk_add_trace_bio_queue	trace/blktrace.c	/^static void blk_add_trace_bio_queue(void *ignore,$/;"	f	file:
blk_add_trace_bio_remap	trace/blktrace.c	/^static void blk_add_trace_bio_remap(void *ignore,$/;"	f	file:
blk_add_trace_getrq	trace/blktrace.c	/^static void blk_add_trace_getrq(void *ignore,$/;"	f	file:
blk_add_trace_plug	trace/blktrace.c	/^static void blk_add_trace_plug(void *ignore, struct request_queue *q)$/;"	f	file:
blk_add_trace_rq	trace/blktrace.c	/^static void blk_add_trace_rq(struct request_queue *q, struct request *rq,$/;"	f	file:
blk_add_trace_rq_abort	trace/blktrace.c	/^static void blk_add_trace_rq_abort(void *ignore,$/;"	f	file:
blk_add_trace_rq_complete	trace/blktrace.c	/^static void blk_add_trace_rq_complete(void *ignore,$/;"	f	file:
blk_add_trace_rq_insert	trace/blktrace.c	/^static void blk_add_trace_rq_insert(void *ignore,$/;"	f	file:
blk_add_trace_rq_issue	trace/blktrace.c	/^static void blk_add_trace_rq_issue(void *ignore,$/;"	f	file:
blk_add_trace_rq_remap	trace/blktrace.c	/^static void blk_add_trace_rq_remap(void *ignore,$/;"	f	file:
blk_add_trace_rq_requeue	trace/blktrace.c	/^static void blk_add_trace_rq_requeue(void *ignore,$/;"	f	file:
blk_add_trace_sleeprq	trace/blktrace.c	/^static void blk_add_trace_sleeprq(void *ignore,$/;"	f	file:
blk_add_trace_split	trace/blktrace.c	/^static void blk_add_trace_split(void *ignore,$/;"	f	file:
blk_add_trace_unplug	trace/blktrace.c	/^static void blk_add_trace_unplug(void *ignore, struct request_queue *q,$/;"	f	file:
blk_create_buf_file_callback	trace/blktrace.c	/^static struct dentry *blk_create_buf_file_callback(const char *filename,$/;"	f	file:
blk_dropped_fops	trace/blktrace.c	/^static const struct file_operations blk_dropped_fops = {$/;"	v	typeref:struct:file_operations	file:
blk_dropped_read	trace/blktrace.c	/^static ssize_t blk_dropped_read(struct file *filp, char __user *buffer,$/;"	f	file:
blk_dump_cmd	trace/blktrace.c	/^void blk_dump_cmd(char *buf, struct request *rq)$/;"	f
blk_fill_rwbs	trace/blktrace.c	/^EXPORT_SYMBOL_GPL(blk_fill_rwbs);$/;"	v
blk_fill_rwbs	trace/blktrace.c	/^void blk_fill_rwbs(char *rwbs, u32 rw, int bytes)$/;"	f
blk_log_action	trace/blktrace.c	/^static int blk_log_action(struct trace_iterator *iter, const char *act)$/;"	f	file:
blk_log_action_classic	trace/blktrace.c	/^static int blk_log_action_classic(struct trace_iterator *iter, const char *act)$/;"	f	file:
blk_log_action_t	trace/blktrace.c	/^typedef int (blk_log_action_t) (struct trace_iterator *iter, const char *act);$/;"	t	file:
blk_log_dump_pdu	trace/blktrace.c	/^static int blk_log_dump_pdu(struct trace_seq *s, const struct trace_entry *ent)$/;"	f	file:
blk_log_generic	trace/blktrace.c	/^static int blk_log_generic(struct trace_seq *s, const struct trace_entry *ent)$/;"	f	file:
blk_log_msg	trace/blktrace.c	/^static int blk_log_msg(struct trace_seq *s, const struct trace_entry *ent)$/;"	f	file:
blk_log_plug	trace/blktrace.c	/^static int blk_log_plug(struct trace_seq *s, const struct trace_entry *ent)$/;"	f	file:
blk_log_remap	trace/blktrace.c	/^static int blk_log_remap(struct trace_seq *s, const struct trace_entry *ent)$/;"	f	file:
blk_log_split	trace/blktrace.c	/^static int blk_log_split(struct trace_seq *s, const struct trace_entry *ent)$/;"	f	file:
blk_log_unplug	trace/blktrace.c	/^static int blk_log_unplug(struct trace_seq *s, const struct trace_entry *ent)$/;"	f	file:
blk_log_with_error	trace/blktrace.c	/^static int blk_log_with_error(struct trace_seq *s,$/;"	f	file:
blk_msg_fops	trace/blktrace.c	/^static const struct file_operations blk_msg_fops = {$/;"	v	typeref:struct:file_operations	file:
blk_msg_write	trace/blktrace.c	/^static ssize_t blk_msg_write(struct file *filp, const char __user *buffer,$/;"	f	file:
blk_probes_ref	trace/blktrace.c	/^static atomic_t blk_probes_ref = ATOMIC_INIT(0);$/;"	v	file:
blk_register_tracepoints	trace/blktrace.c	/^static void blk_register_tracepoints(void)$/;"	f	file:
blk_relay_callbacks	trace/blktrace.c	/^static struct rchan_callbacks blk_relay_callbacks = {$/;"	v	typeref:struct:rchan_callbacks	file:
blk_remove_buf_file_callback	trace/blktrace.c	/^static int blk_remove_buf_file_callback(struct dentry *dentry)$/;"	f	file:
blk_subbuf_start_callback	trace/blktrace.c	/^static int blk_subbuf_start_callback(struct rchan_buf *buf, void *subbuf,$/;"	f	file:
blk_tr	trace/blktrace.c	/^static struct trace_array *blk_tr;$/;"	v	typeref:struct:trace_array	file:
blk_trace_attr_group	trace/blktrace.c	/^struct attribute_group blk_trace_attr_group = {$/;"	v	typeref:struct:attribute_group
blk_trace_attrs	trace/blktrace.c	/^static struct attribute *blk_trace_attrs[] = {$/;"	v	typeref:struct:attribute	file:
blk_trace_cleanup	trace/blktrace.c	/^static void blk_trace_cleanup(struct blk_trace *bt)$/;"	f	file:
blk_trace_event_print	trace/blktrace.c	/^static enum print_line_t blk_trace_event_print(struct trace_iterator *iter,$/;"	f	file:
blk_trace_event_print_binary	trace/blktrace.c	/^blk_trace_event_print_binary(struct trace_iterator *iter, int flags,$/;"	f	file:
blk_trace_free	trace/blktrace.c	/^static void blk_trace_free(struct blk_trace *bt)$/;"	f	file:
blk_trace_get_queue	trace/blktrace.c	/^static struct request_queue *blk_trace_get_queue(struct block_device *bdev)$/;"	f	file:
blk_trace_init_sysfs	trace/blktrace.c	/^int blk_trace_init_sysfs(struct device *dev)$/;"	f
blk_trace_ioctl	trace/blktrace.c	/^int blk_trace_ioctl(struct block_device *bdev, unsigned cmd, char __user *arg)$/;"	f
blk_trace_mask2str	trace/blktrace.c	/^static ssize_t blk_trace_mask2str(char *buf, int mask)$/;"	f	file:
blk_trace_remove	trace/blktrace.c	/^EXPORT_SYMBOL_GPL(blk_trace_remove);$/;"	v
blk_trace_remove	trace/blktrace.c	/^int blk_trace_remove(struct request_queue *q)$/;"	f
blk_trace_remove_queue	trace/blktrace.c	/^static int blk_trace_remove_queue(struct request_queue *q)$/;"	f	file:
blk_trace_remove_sysfs	trace/blktrace.c	/^void blk_trace_remove_sysfs(struct device *dev)$/;"	f
blk_trace_setup	trace/blktrace.c	/^EXPORT_SYMBOL_GPL(blk_trace_setup);$/;"	v
blk_trace_setup	trace/blktrace.c	/^int blk_trace_setup(struct request_queue *q, char *name, dev_t dev,$/;"	f
blk_trace_setup_lba	trace/blktrace.c	/^static void blk_trace_setup_lba(struct blk_trace *bt,$/;"	f	file:
blk_trace_setup_queue	trace/blktrace.c	/^static int blk_trace_setup_queue(struct request_queue *q,$/;"	f	file:
blk_trace_shutdown	trace/blktrace.c	/^void blk_trace_shutdown(struct request_queue *q)$/;"	f
blk_trace_startstop	trace/blktrace.c	/^EXPORT_SYMBOL_GPL(blk_trace_startstop);$/;"	v
blk_trace_startstop	trace/blktrace.c	/^int blk_trace_startstop(struct request_queue *q, int start)$/;"	f
blk_trace_str2mask	trace/blktrace.c	/^static int blk_trace_str2mask(const char *str)$/;"	f	file:
blk_trace_synthesize_old_trace	trace/blktrace.c	/^static int blk_trace_synthesize_old_trace(struct trace_iterator *iter)$/;"	f	file:
blk_tracer_flags	trace/blktrace.c	/^static struct tracer_flags blk_tracer_flags = {$/;"	v	typeref:struct:tracer_flags	file:
blk_tracer_init	trace/blktrace.c	/^static int blk_tracer_init(struct trace_array *tr)$/;"	f	file:
blk_tracer_opts	trace/blktrace.c	/^static struct tracer_opt blk_tracer_opts[] = {$/;"	v	typeref:struct:tracer_opt	file:
blk_tracer_print_header	trace/blktrace.c	/^static void blk_tracer_print_header(struct seq_file *m)$/;"	f	file:
blk_tracer_print_line	trace/blktrace.c	/^static enum print_line_t blk_tracer_print_line(struct trace_iterator *iter)$/;"	f	file:
blk_tracer_reset	trace/blktrace.c	/^static void blk_tracer_reset(struct trace_array *tr)$/;"	f	file:
blk_tracer_set_flag	trace/blktrace.c	/^static int blk_tracer_set_flag(u32 old_flags, u32 bit, int set)$/;"	f	file:
blk_tracer_start	trace/blktrace.c	/^static void blk_tracer_start(struct trace_array *tr)$/;"	f	file:
blk_tracer_stop	trace/blktrace.c	/^static void blk_tracer_stop(struct trace_array *tr)$/;"	f	file:
blk_tree_root	trace/blktrace.c	/^static struct dentry *blk_tree_root;$/;"	v	typeref:struct:dentry	file:
blk_unregister_tracepoints	trace/blktrace.c	/^static void blk_unregister_tracepoints(void)$/;"	f	file:
blkd_tasks	rcutiny_plugin.h	/^	struct list_head blkd_tasks;$/;"	m	struct:rcu_preempt_ctrlblk	typeref:struct:rcu_preempt_ctrlblk::list_head
blkd_tasks	rcutree.h	/^	struct list_head blkd_tasks;$/;"	m	struct:rcu_node	typeref:struct:rcu_node::list_head
block	power/snapshot.c	/^	struct bm_block *block;$/;"	m	struct:bm_position	typeref:struct:bm_position::bm_block	file:
block_all_signals	signal.c	/^EXPORT_SYMBOL(block_all_signals);$/;"	v
block_all_signals	signal.c	/^block_all_signals(int (*notifier)(void *priv), void *priv, sigset_t *mask)$/;"	f
blocked_load_avg	sched/sched.h	/^	u64 runnable_load_avg, blocked_load_avg;$/;"	m	struct:cfs_rq
blocking_notifier_call_chain	notifier.c	/^EXPORT_SYMBOL_GPL(blocking_notifier_call_chain);$/;"	v
blocking_notifier_call_chain	notifier.c	/^int blocking_notifier_call_chain(struct blocking_notifier_head *nh,$/;"	f
blocking_notifier_chain_cond_register	notifier.c	/^EXPORT_SYMBOL_GPL(blocking_notifier_chain_cond_register);$/;"	v
blocking_notifier_chain_cond_register	notifier.c	/^int blocking_notifier_chain_cond_register(struct blocking_notifier_head *nh,$/;"	f
blocking_notifier_chain_register	notifier.c	/^EXPORT_SYMBOL_GPL(blocking_notifier_chain_register);$/;"	v
blocking_notifier_chain_register	notifier.c	/^int blocking_notifier_chain_register(struct blocking_notifier_head *nh,$/;"	f
blocking_notifier_chain_unregister	notifier.c	/^EXPORT_SYMBOL_GPL(blocking_notifier_chain_unregister);$/;"	v
blocking_notifier_chain_unregister	notifier.c	/^int blocking_notifier_chain_unregister(struct blocking_notifier_head *nh,$/;"	f
blocks	power/snapshot.c	/^	struct list_head blocks;	\/* list of bitmap blocks *\/$/;"	m	struct:memory_bitmap	typeref:struct:memory_bitmap::list_head	file:
blx_off_insn_execbuf	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^EXPORT_SYMBOL_GPL(blx_off_insn_execbuf);$/;"	v
blx_off_insn_execbuf	swap/kprobe/arch/arm/swap-asm/trampoline_arm.S	/^blx_off_insn_execbuf:$/;"	l
blx_off_insn_execbuf_thumb	swap/uprobe/arch/arm/swap-asm/trampoline_thumb.S	/^blx_off_insn_execbuf_thumb:$/;"	l
bm_block	power/snapshot.c	/^struct bm_block {$/;"	s	file:
bm_block_bits	power/snapshot.c	/^static inline unsigned long bm_block_bits(struct bm_block *bb)$/;"	f	file:
bm_position	power/snapshot.c	/^struct bm_position {$/;"	s	file:
boost	rcutree.h	/^	u8	boost;				\/* Subject to priority boost. *\/$/;"	m	struct:rcu_state
boost_kthread_status	rcutree.h	/^	unsigned int boost_kthread_status;$/;"	m	struct:rcu_node
boost_kthread_task	rcutree.h	/^	struct task_struct *boost_kthread_task;$/;"	m	struct:rcu_node	typeref:struct:rcu_node::task_struct
boost_mutex	rcutorture.c	/^DEFINE_MUTEX(boost_mutex);		\/* protect setting boost_starttime *\/$/;"	v
boost_starttime	rcutorture.c	/^static unsigned long boost_starttime;	\/* jiffies of next boost test start. *\/$/;"	v	file:
boost_tasks	rcutiny_plugin.h	/^	struct list_head *boost_tasks;$/;"	m	struct:rcu_preempt_ctrlblk	typeref:struct:rcu_preempt_ctrlblk::list_head
boost_tasks	rcutorture.c	/^static struct task_struct *boost_tasks[NR_CPUS];$/;"	v	typeref:struct:task_struct	file:
boost_tasks	rcutree.h	/^	struct list_head *boost_tasks;$/;"	m	struct:rcu_node	typeref:struct:rcu_node::list_head
boost_time	rcutiny_plugin.h	/^	unsigned long boost_time; \/* When to start boosting (jiffies) *\/$/;"	m	struct:rcu_preempt_ctrlblk
boost_time	rcutree.h	/^	unsigned long boost_time;$/;"	m	struct:rcu_node
boostable	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	/^	int boostable;$/;"	m	struct:arch_specific_insn
boot_alloc_snapshot	trace/trace.c	/^static int __init boot_alloc_snapshot(char *str)$/;"	f	file:
boot_delay	printk.c	/^static int boot_delay; \/* msecs delay after each printk during bootup *\/$/;"	v	file:
boot_delay_msec	printk.c	/^static inline void boot_delay_msec(int level)$/;"	f	file:
boot_delay_msec	printk.c	/^static void boot_delay_msec(int level)$/;"	f	file:
boot_delay_setup	printk.c	/^static int __init boot_delay_setup(char *str)$/;"	f	file:
boot_override_clock	time/clocksource.c	/^static int __init boot_override_clock(char* str)$/;"	f	file:
boot_override_clocksource	time/clocksource.c	/^static int __init boot_override_clocksource(char* str)$/;"	f	file:
boot_tvec_bases	timer.c	/^EXPORT_SYMBOL(boot_tvec_bases);$/;"	v
boot_tvec_bases	timer.c	/^struct tvec_base boot_tvec_bases;$/;"	v	typeref:struct:tvec_base
bootmem_resource_free	resource.c	/^static struct resource *bootmem_resource_free;$/;"	v	typeref:struct:resource	file:
boottime	time/time_history.c	/^	struct timespec boottime;$/;"	m	struct:time_log_entry	typeref:struct:time_log_entry::timespec	file:
bottom_wake_up	swap/driver/device_driver.c	/^static void bottom_wake_up(struct work_struct *work)$/;"	f	file:
bp_addr	debug/kdb/kdb_private.h	/^	unsigned long	bp_addr;	\/* Address breakpoint is present at *\/$/;"	m	struct:_kdb_bp
bp_busy_slots	events/hw_breakpoint.c	/^struct bp_busy_slots {$/;"	s	file:
bp_delay	debug/kdb/kdb_private.h	/^	unsigned int	bp_delay:1;	\/* Do delayed bp handling *\/$/;"	m	struct:_kdb_bp
bp_delayed	debug/kdb/kdb_private.h	/^	unsigned int	bp_delayed:1;	\/* Delayed breakpoint *\/$/;"	m	struct:_kdb_bp
bp_enabled	debug/kdb/kdb_private.h	/^	unsigned int	bp_enabled:1;	\/* Breakpoint is active in register *\/$/;"	m	struct:_kdb_bp
bp_free	debug/kdb/kdb_private.h	/^	unsigned int	bp_free:1;	\/* This entry is available *\/$/;"	m	struct:_kdb_bp
bp_installed	debug/kdb/kdb_private.h	/^	unsigned int	bp_installed:1;	\/* Breakpoint is installed *\/$/;"	m	struct:_kdb_bp
bp_perf_event_destroy	events/hw_breakpoint.c	/^static void bp_perf_event_destroy(struct perf_event *event)$/;"	f	file:
bp_type	debug/kdb/kdb_private.h	/^	unsigned int	bp_type:4;	\/* Uses hardware register *\/$/;"	m	struct:_kdb_bp
bph_length	debug/kdb/kdb_private.h	/^	unsigned int	bph_length;	\/* HW break length *\/$/;"	m	struct:_kdb_bp
branch_cond_t16_dest	swap/uprobe/arch/arm/swap-asm/swap_uprobes.c	/^static inline long branch_cond_t16_dest(kprobe_opcode_t insn,$/;"	f	file:
branch_displacement	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	57;"	d	file:
branch_print_header	trace/trace_branch.c	/^static void branch_print_header(struct seq_file *s)$/;"	f	file:
branch_stat_show	trace/trace_branch.c	/^static int branch_stat_show(struct seq_file *m, void *v)$/;"	f	file:
branch_t16_dest	swap/uprobe/arch/arm/swap-asm/swap_uprobes.c	/^static inline long branch_t16_dest(kprobe_opcode_t insn, unsigned int insn_addr)$/;"	f	file:
branch_t32_dest	swap/uprobe/arch/arm/swap-asm/swap_uprobes.c	/^static inline long branch_t32_dest(kprobe_opcode_t insn, unsigned int insn_addr)$/;"	f	file:
branch_trace	trace/trace_branch.c	/^static struct tracer branch_trace;$/;"	v	typeref:struct:tracer	file:
branch_trace_init	trace/trace_branch.c	/^static int branch_trace_init(struct trace_array *tr)$/;"	f	file:
branch_trace_reset	trace/trace_branch.c	/^static void branch_trace_reset(struct trace_array *tr)$/;"	f	file:
branch_tracer	trace/trace_branch.c	/^static struct trace_array *branch_tracer;$/;"	v	typeref:struct:trace_array	file:
break_handler	swap/kprobe/swap_kprobes.h	/^	kprobe_break_handler_t				break_handler;$/;"	m	struct:kprobe
break_on_exception	debug/debug_core.c	/^static bool break_on_exception = true;$/;"	v	file:
break_on_panic	debug/debug_core.c	/^static bool break_on_panic = true;$/;"	v	file:
brl_options	printk.c	/^	char	*brl_options;			\/* Options for braille driver *\/$/;"	m	struct:console_cmdline	file:
broadcast_move_bc	time/tick-broadcast.c	/^static void broadcast_move_bc(int deadcpu)$/;"	f	file:
broadcast_needs_cpu	time/tick-broadcast.c	/^static int broadcast_needs_cpu(struct clock_event_device *bc, int cpu)$/;"	f	file:
broadcast_shutdown_local	time/tick-broadcast.c	/^static void broadcast_shutdown_local(struct clock_event_device *bc,$/;"	f	file:
brt_cnt	swap/energy/lcd/lcd_base.c	/^	brt_cnt = 10$/;"	e	enum:__anon44	file:
brt_no_init	swap/energy/lcd/lcd_base.c	/^	brt_no_init = -1,$/;"	e	enum:__anon44	file:
brt_old	swap/energy/lcd/lcd_base.c	/^	int brt_old;$/;"	m	struct:lcd_priv_data	file:
bsd_acct_struct	acct.c	/^struct bsd_acct_struct {$/;"	s	file:
buckets	trace/ftrace.c	/^	struct hlist_head	*buckets;$/;"	m	struct:ftrace_hash	typeref:struct:ftrace_hash::hlist_head	file:
buf	printk.c	/^	char buf[8192];$/;"	m	struct:devkmsg_user	file:
buf	printk.c	/^	char buf[LOG_LINE_MAX];$/;"	m	struct:cont	file:
buf	relay.c	/^	struct rchan_buf *buf;$/;"	m	struct:rchan_percpu_buf_dispatcher	typeref:struct:rchan_percpu_buf_dispatcher::rchan_buf	file:
buf	swap/energy/energy.c	/^	void *buf;$/;"	m	struct:cmd_pt	file:
buf	time/time_history.c	/^	struct time_log_entry *buf;$/;"	m	struct:time_history_log_buf	typeref:struct:time_history_log_buf::time_log_entry	file:
buf_mapped_default_callback	relay.c	/^static void buf_mapped_default_callback(struct rchan_buf *buf,$/;"	f	file:
buf_size	time/time_history.c	/^	int buf_size;$/;"	m	struct:time_history_log_buf	file:
buf_to_read	swap/driver/driver_to_buffer.c	/^static spinlock_t buf_to_read;$/;"	v	file:
buf_unmapped_default_callback	relay.c	/^static void buf_unmapped_default_callback(struct rchan_buf *buf,$/;"	f	file:
buffer	power/power.h	/^	void		*buffer;	\/* address of the block to read from$/;"	m	struct:snapshot_handle
buffer	power/snapshot.c	/^static void *buffer;$/;"	v	file:
buffer	trace/ring_buffer.c	/^	struct ring_buffer		*buffer;$/;"	m	struct:ring_buffer_per_cpu	typeref:struct:ring_buffer_per_cpu::ring_buffer	file:
buffer	trace/ring_buffer.c	/^	struct ring_buffer	*buffer;$/;"	m	struct:rb_test_data	typeref:struct:rb_test_data::ring_buffer	file:
buffer	trace/ring_buffer_benchmark.c	/^static struct ring_buffer *buffer;$/;"	v	typeref:struct:ring_buffer	file:
buffer	trace/trace.c	/^	char buffer[TRACE_BUF_SIZE];$/;"	m	struct:trace_buffer_struct	file:
buffer	trace/trace.c	/^	struct ring_buffer	*buffer;$/;"	m	struct:buffer_ref	typeref:struct:buffer_ref::ring_buffer	file:
buffer	trace/trace.h	/^	char		*buffer;$/;"	m	struct:trace_parser
buffer	trace/trace.h	/^	struct ring_buffer		*buffer;$/;"	m	struct:trace_buffer	typeref:struct:trace_buffer::ring_buffer
buffer_address	swap/buffer/kernel_operations.h	165;"	d
buffer_allocation	swap/buffer/kernel_operations.h	153;"	d
buffer_busy_sync	swap/buffer/buffer_queue.c	/^static struct sync_t buffer_busy_sync = {$/;"	v	typeref:struct:sync_t	file:
buffer_data_page	trace/ring_buffer.c	/^struct buffer_data_page {$/;"	s	file:
buffer_disabled	trace/trace.h	/^	int			buffer_disabled;$/;"	m	struct:trace_array
buffer_free	swap/buffer/kernel_operations.h	159;"	d
buffer_ftrace_now	trace/trace.c	/^cycle_t buffer_ftrace_now(struct trace_buffer *buf, int cpu)$/;"	f
buffer_init_t	swap/buffer/swap_buffer_module.h	/^struct buffer_init_t {$/;"	s
buffer_initialize	swap/driver/swap_ioctl.h	/^struct buffer_initialize {$/;"	s
buffer_page	trace/ring_buffer.c	/^struct buffer_page {$/;"	s	file:
buffer_page	trace/trace.h	/^	void			*buffer_page;	\/* ring buffer spare *\/$/;"	m	struct:trace_array_cpu
buffer_pipe_buf_get	trace/trace.c	/^static void buffer_pipe_buf_get(struct pipe_inode_info *pipe,$/;"	f	file:
buffer_pipe_buf_ops	trace/trace.c	/^static const struct pipe_buf_operations buffer_pipe_buf_ops = {$/;"	v	typeref:struct:pipe_buf_operations	file:
buffer_pipe_buf_release	trace/trace.c	/^static void buffer_pipe_buf_release(struct pipe_inode_info *pipe,$/;"	f	file:
buffer_queue_allocation	swap/buffer/buffer_queue.c	/^int buffer_queue_allocation(size_t subbuffer_size,$/;"	f
buffer_queue_flush	swap/buffer/buffer_queue.c	/^void buffer_queue_flush(void)$/;"	f
buffer_queue_free	swap/buffer/buffer_queue.c	/^void buffer_queue_free(void)$/;"	f
buffer_queue_reset	swap/buffer/buffer_queue.c	/^int buffer_queue_reset(void)$/;"	f
buffer_ref	trace/trace.c	/^struct buffer_ref {$/;"	s	file:
buffer_spd_release	trace/trace.c	/^static void buffer_spd_release(struct splice_pipe_desc *spd, unsigned int i)$/;"	f	file:
buffer_sync	swap/buffer/buffer_description.h	/^	struct sync_t buffer_sync;$/;"	m	struct:swap_subbuffer	typeref:struct:swap_subbuffer::sync_t
bufferram	sys.c	/^	u32 bufferram;$/;"	m	struct:compat_sysinfo	file:
buffers	trace/ring_buffer.c	/^	struct ring_buffer_per_cpu	**buffers;$/;"	m	struct:ring_buffer	typeref:struct:ring_buffer::ring_buffer_per_cpu	file:
buffers_allocated	trace/trace.c	/^static int buffers_allocated;$/;"	v	file:
buffers_to_read	swap/driver/driver_to_buffer.c	/^static int buffers_to_read;$/;"	v	file:
build_group_mask	sched/core.c	/^static void build_group_mask(struct sched_domain *sd, struct sched_group *sg)$/;"	f	file:
build_map_info	events/uprobes.c	/^build_map_info(struct address_space *mapping, loff_t offset, bool is_register)$/;"	f	file:
build_overlap_sched_groups	sched/core.c	/^build_overlap_sched_groups(struct sched_domain *sd, int cpu)$/;"	f	file:
build_probe_list	events/uprobes.c	/^static void build_probe_list(struct inode *inode,$/;"	f	file:
build_sched_domain	sched/core.c	/^struct sched_domain *build_sched_domain(struct sched_domain_topology_level *tl,$/;"	f
build_sched_domains	sched/core.c	/^static int build_sched_domains(const struct cpumask *cpu_map,$/;"	f	file:
build_sched_groups	sched/core.c	/^build_sched_groups(struct sched_domain *sd, int cpu)$/;"	f	file:
bump_cpu_timer	posix-cpu-timers.c	/^static void bump_cpu_timer(struct k_itimer *timer,$/;"	f	file:
bus_throughput_pm_qos	power/qos.c	/^static struct pm_qos_object bus_throughput_pm_qos = {$/;"	v	typeref:struct:pm_qos_object	file:
bus_tput_constraints	power/qos.c	/^static struct pm_qos_constraints bus_tput_constraints = {$/;"	v	typeref:struct:pm_qos_constraints	file:
busiest	sched/fair.c	/^	struct sched_group *busiest; \/* Busiest group in this sd *\/$/;"	m	struct:sd_lb_stats	typeref:struct:sd_lb_stats::sched_group	file:
busiest_group_capacity	sched/fair.c	/^	unsigned long busiest_group_capacity;$/;"	m	struct:sd_lb_stats	file:
busiest_group_weight	sched/fair.c	/^	unsigned int  busiest_group_weight;$/;"	m	struct:sd_lb_stats	file:
busiest_has_capacity	sched/fair.c	/^	unsigned long busiest_has_capacity;$/;"	m	struct:sd_lb_stats	file:
busiest_idle_cpus	sched/fair.c	/^	unsigned int  busiest_idle_cpus;$/;"	m	struct:sd_lb_stats	file:
busiest_load_per_task	sched/fair.c	/^	unsigned long busiest_load_per_task;$/;"	m	struct:sd_lb_stats	file:
busiest_nr_running	sched/fair.c	/^	unsigned long busiest_nr_running;$/;"	m	struct:sd_lb_stats	file:
busy_buffer	swap/driver/driver_to_buffer.c	/^static struct swap_subbuffer *busy_buffer;$/;"	v	typeref:struct:swap_subbuffer	file:
bx	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^	unsigned long bx;$/;"	m	struct:cb_data	file:
bytes_alloc	trace/ring_buffer.c	/^	unsigned long		bytes_alloc;$/;"	m	struct:rb_test_data	file:
bytes_alloc_nested	trace/ring_buffer.c	/^	unsigned long		bytes_alloc_nested;$/;"	m	struct:rb_test_data	file:
bytes_dropped	trace/ring_buffer.c	/^	unsigned long		bytes_dropped;$/;"	m	struct:rb_test_data	file:
bytes_dropped_nested	trace/ring_buffer.c	/^	unsigned long		bytes_dropped_nested;$/;"	m	struct:rb_test_data	file:
bytes_read	swap/energy/energy.c	/^	atomic64_t bytes_read;$/;"	m	struct:energy_data	file:
bytes_written	swap/energy/energy.c	/^	atomic64_t bytes_written;$/;"	m	struct:energy_data	file:
bytes_written	trace/ring_buffer.c	/^	unsigned long		bytes_written;$/;"	m	struct:rb_test_data	file:
bytes_written_nested	trace/ring_buffer.c	/^	unsigned long		bytes_written_nested;$/;"	m	struct:rb_test_data	file:
c	auditsc.c	/^	struct audit_chunk *c[31];$/;"	m	struct:audit_tree_refs	typeref:struct:audit_tree_refs::audit_chunk	file:
cache_read	trace/ring_buffer.c	/^	unsigned long			cache_read;$/;"	m	struct:ring_buffer_iter	file:
cache_reader_page	trace/ring_buffer.c	/^	struct buffer_page		*cache_reader_page;$/;"	m	struct:ring_buffer_iter	typeref:struct:ring_buffer_iter::buffer_page	file:
cachep	pid_namespace.c	/^	struct kmem_cache *cachep;$/;"	m	struct:pid_cache	typeref:struct:pid_cache::kmem_cache	file:
cad_pid	sys.c	/^EXPORT_SYMBOL(cad_pid);$/;"	v
cad_pid	sys.c	/^struct pid *cad_pid;$/;"	v	typeref:struct:pid
calc_cfs_shares	sched/fair.c	/^static inline long calc_cfs_shares(struct cfs_rq *cfs_rq, struct task_group *tg)$/;"	f	file:
calc_cfs_shares	sched/fair.c	/^static long calc_cfs_shares(struct cfs_rq *cfs_rq, struct task_group *tg)$/;"	f	file:
calc_delta_fair	sched/fair.c	/^calc_delta_fair(unsigned long delta, struct sched_entity *se)$/;"	f	file:
calc_delta_mine	sched/fair.c	/^calc_delta_mine(unsigned long delta_exec, unsigned long weight,$/;"	f	file:
calc_global_load	sched/core.c	/^void calc_global_load(unsigned long ticks)$/;"	f
calc_global_nohz	sched/core.c	/^static inline void calc_global_nohz(void) { }$/;"	f	file:
calc_global_nohz	sched/core.c	/^static void calc_global_nohz(void)$/;"	f	file:
calc_load	sched/core.c	/^calc_load(unsigned long load, unsigned long exp, unsigned long active)$/;"	f	file:
calc_load_account_active	sched/core.c	/^static void calc_load_account_active(struct rq *this_rq)$/;"	f	file:
calc_load_active	sched/sched.h	/^	long calc_load_active;$/;"	m	struct:rq
calc_load_enter_idle	sched/core.c	/^void calc_load_enter_idle(void)$/;"	f
calc_load_exit_idle	sched/core.c	/^void calc_load_exit_idle(void)$/;"	f
calc_load_fold_active	sched/core.c	/^static long calc_load_fold_active(struct rq *this_rq)$/;"	f	file:
calc_load_fold_idle	sched/core.c	/^static inline long calc_load_fold_idle(void) { return 0; }$/;"	f	file:
calc_load_fold_idle	sched/core.c	/^static long calc_load_fold_idle(void)$/;"	f	file:
calc_load_idle	sched/core.c	/^static atomic_long_t calc_load_idle[2];$/;"	v	file:
calc_load_idx	sched/core.c	/^static int calc_load_idx;$/;"	v	file:
calc_load_migrate	sched/core.c	/^static void calc_load_migrate(struct rq *rq)$/;"	f	file:
calc_load_n	sched/core.c	/^calc_load_n(unsigned long load, unsigned long exp,$/;"	f	file:
calc_load_read_idx	sched/core.c	/^static inline int calc_load_read_idx(void)$/;"	f	file:
calc_load_tasks	sched/core.c	/^static atomic_long_t calc_load_tasks;$/;"	v	file:
calc_load_update	sched/core.c	/^static unsigned long calc_load_update;$/;"	v	file:
calc_load_update	sched/sched.h	/^	unsigned long calc_load_update;$/;"	m	struct:rq
calc_load_write_idx	sched/core.c	/^static inline int calc_load_write_idx(void)$/;"	f	file:
calc_tg_weight	sched/fair.c	/^static inline long calc_tg_weight(struct task_group *tg, struct cfs_rq *cfs_rq)$/;"	f	file:
calc_timer_values	events/core.c	/^static void calc_timer_values(struct perf_event *event,$/;"	f	file:
calculate_imbalance	sched/fair.c	/^static inline void calculate_imbalance(struct lb_env *env, struct sd_lb_stats *sds)$/;"	f	file:
calculation_hash_bits	swap/us_manager/sspt/sspt_file.c	/^static int calculation_hash_bits(int cnt)$/;"	f	file:
call	rcutorture.c	/^	void (*call)(struct rcu_head *head, void (*func)(struct rcu_head *rcu));$/;"	m	struct:rcu_torture_ops	file:
call	rcutree.h	/^	void (*call)(struct rcu_head *head,	\/* call_rcu() flavor. *\/$/;"	m	struct:rcu_state
call	swap/us_manager/pf/proc_filters.h	/^	struct task_struct *(*call)(struct proc_filter *self,$/;"	m	struct:proc_filter	typeref:struct:proc_filter::call
call	trace/trace_kprobe.c	/^	struct ftrace_event_call	call;$/;"	m	struct:trace_probe	typeref:struct:trace_probe::ftrace_event_call	file:
call	trace/trace_uprobe.c	/^	struct ftrace_event_call	call;$/;"	m	struct:trace_uprobe	typeref:struct:trace_uprobe::ftrace_event_call	file:
call_by_comm	swap/us_manager/pf/proc_filters.c	/^static struct task_struct *call_by_comm(struct proc_filter *self,$/;"	f	file:
call_by_dentry	swap/us_manager/pf/proc_filters.c	/^static struct task_struct *call_by_dentry(struct proc_filter *self,$/;"	f	file:
call_by_tgid	swap/us_manager/pf/proc_filters.c	/^static struct task_struct *call_by_tgid(struct proc_filter *self,$/;"	f	file:
call_console_drivers	printk.c	/^static void call_console_drivers(int level, const char *text, size_t len) {}$/;"	f	file:
call_console_drivers	printk.c	/^static void call_console_drivers(int level, const char *text, size_t len)$/;"	f	file:
call_dumb	swap/us_manager/pf/proc_filters.c	/^static struct task_struct *call_dumb(struct proc_filter *self,$/;"	f	file:
call_fetch	trace/trace_probe.h	/^static inline __kprobes void call_fetch(struct fetch_param *fprm,$/;"	f
call_function_data	smp.c	/^struct call_function_data {$/;"	s	file:
call_function_init	smp.c	/^void __init call_function_init(void)$/;"	f
call_helper	kmod.c	/^static int call_helper(void *data)$/;"	f	file:
call_lcd	swap/energy/lcd/lcd_base.h	/^typedef int (*call_lcd)(struct lcd_ops *ops);$/;"	t
call_mm_release	swap/us_manager/pf/pf_group.c	/^void call_mm_release(struct task_struct *task)$/;"	f
call_modprobe	kmod.c	/^static int call_modprobe(char *module_name, int wait)$/;"	f	file:
call_page_fault	swap/us_manager/pf/pf_group.c	/^void call_page_fault(struct task_struct *task, unsigned long page_addr)$/;"	f
call_rcu	rcutiny_plugin.h	/^EXPORT_SYMBOL_GPL(call_rcu);$/;"	v
call_rcu	rcutiny_plugin.h	/^void call_rcu(struct rcu_head *head, void (*func)(struct rcu_head *rcu))$/;"	f
call_rcu	rcutree_plugin.h	/^EXPORT_SYMBOL_GPL(call_rcu);$/;"	v
call_rcu	rcutree_plugin.h	/^void call_rcu(struct rcu_head *head, void (*func)(struct rcu_head *rcu))$/;"	f
call_rcu_bh	rcutiny.c	/^EXPORT_SYMBOL_GPL(call_rcu_bh);$/;"	v
call_rcu_bh	rcutiny.c	/^void call_rcu_bh(struct rcu_head *head, void (*func)(struct rcu_head *rcu))$/;"	f
call_rcu_bh	rcutree.c	/^EXPORT_SYMBOL_GPL(call_rcu_bh);$/;"	v
call_rcu_bh	rcutree.c	/^void call_rcu_bh(struct rcu_head *head, void (*func)(struct rcu_head *rcu))$/;"	f
call_rcu_sched	rcutiny.c	/^EXPORT_SYMBOL_GPL(call_rcu_sched);$/;"	v
call_rcu_sched	rcutiny.c	/^void call_rcu_sched(struct rcu_head *head, void (*func)(struct rcu_head *rcu))$/;"	f
call_rcu_sched	rcutree.c	/^EXPORT_SYMBOL_GPL(call_rcu_sched);$/;"	v
call_rcu_sched	rcutree.c	/^void call_rcu_sched(struct rcu_head *head, void (*func)(struct rcu_head *rcu))$/;"	f
call_single_queue	smp.c	/^struct call_single_queue {$/;"	s	file:
call_srcu	srcu.c	/^EXPORT_SYMBOL_GPL(call_srcu);$/;"	v
call_srcu	srcu.c	/^void call_srcu(struct srcu_struct *sp, struct rcu_head *head,$/;"	f
call_timer_fn	timer.c	/^static void call_timer_fn(struct timer_list *timer, void (*fn)(unsigned long),$/;"	f	file:
call_type	swap/preload/preload_threads.c	/^	unsigned char call_type;$/;"	m	struct:thread_slot	file:
call_usermodehelper	kmod.c	/^EXPORT_SYMBOL(call_usermodehelper);$/;"	v
call_usermodehelper	kmod.c	/^int call_usermodehelper(char *path, char **argv, char **envp, int wait)$/;"	f
call_usermodehelper_exec	kmod.c	/^EXPORT_SYMBOL(call_usermodehelper_exec);$/;"	v
call_usermodehelper_exec	kmod.c	/^int call_usermodehelper_exec(struct subprocess_info *sub_info, int wait)$/;"	f
call_usermodehelper_freeinfo	kmod.c	/^static void call_usermodehelper_freeinfo(struct subprocess_info *info)$/;"	f	file:
call_usermodehelper_setup	kmod.c	/^EXPORT_SYMBOL(call_usermodehelper_setup);$/;"	v
call_usermodehelper_setup	kmod.c	/^struct subprocess_info *call_usermodehelper_setup(char *path, char **argv,$/;"	f
callback_for_proc	swap/energy/energy.c	/^static void callback_for_proc(struct sspt_proc *proc, void *data)$/;"	f	file:
callback_t	swap/us_manager/callbacks.h	/^enum callback_t {$/;"	g
callchain_cpus_entries	events/callchain.c	/^static struct callchain_cpus_entries *callchain_cpus_entries;$/;"	v	typeref:struct:callchain_cpus_entries	file:
callchain_cpus_entries	events/callchain.c	/^struct callchain_cpus_entries {$/;"	s	file:
caller	debug/kdb/kdb_support.c	/^	void *caller;$/;"	m	struct:debug_alloc_header	file:
caller	swap/preload/preload_threads.c	/^	unsigned long caller;$/;"	m	struct:thread_slot	file:
caller	time/time_history.c	/^	void *caller;$/;"	m	struct:alarm_info	file:
caller	time/time_history.c	/^	void *caller;$/;"	m	struct:time_log_entry	file:
caller_pc_addr	swap/ks_features/ksf_msg.c	/^	u64 caller_pc_addr;$/;"	m	struct:msg_sys_header	file:
caller_pc_addr	swap/retprobe/rp_msg.c	/^	u64 caller_pc_addr;$/;"	m	struct:msg_entry	file:
caller_pc_addr	swap/retprobe/rp_msg.c	/^	u64 caller_pc_addr;$/;"	m	struct:msg_exit	file:
calls	trace/trace.c	/^	unsigned long		calls[FTRACE_STACK_MAX_ENTRIES];$/;"	m	struct:ftrace_stack	file:
can_be_ready	swap/preload/preload_probe.c	/^static inline bool can_be_ready(void)$/;"	f	file:
can_boost	rcutorture.c	/^	int can_boost;$/;"	m	struct:rcu_torture_ops	file:
can_migrate_task	sched/fair.c	/^int can_migrate_task(struct task_struct *p, struct lb_env *env)$/;"	f	file:
can_nice	sched/core.c	/^int can_nice(const struct task_struct *p, const int nice)$/;"	f
can_request_irq	irq/manage.c	/^int can_request_irq(unsigned int irq, unsigned long irqflags)$/;"	f
can_skip_sstep	events/uprobes.c	/^static bool can_skip_sstep(struct uprobe *uprobe, struct pt_regs *regs)$/;"	f	file:
can_stop_full_tick	time/tick-sched.c	/^static bool can_stop_full_tick(void)$/;"	f	file:
can_stop_idle_tick	time/tick-sched.c	/^static bool can_stop_idle_tick(int cpu, struct tick_sched *ts)$/;"	f	file:
can_use_console	printk.c	/^static inline int can_use_console(unsigned int cpu)$/;"	f	file:
cancel_delayed_work	workqueue.c	/^EXPORT_SYMBOL(cancel_delayed_work);$/;"	v
cancel_delayed_work	workqueue.c	/^bool cancel_delayed_work(struct delayed_work *dwork)$/;"	f
cancel_delayed_work_sync	workqueue.c	/^EXPORT_SYMBOL(cancel_delayed_work_sync);$/;"	v
cancel_delayed_work_sync	workqueue.c	/^bool cancel_delayed_work_sync(struct delayed_work *dwork)$/;"	f
cancel_work_sync	workqueue.c	/^EXPORT_SYMBOL_GPL(cancel_work_sync);$/;"	v
cancel_work_sync	workqueue.c	/^bool cancel_work_sync(struct work_struct *work)$/;"	f
cap	audit.h	/^			struct audit_cap_data	cap;$/;"	m	struct:audit_context::__anon15::__anon22	typeref:struct:audit_context::__anon15::__anon22::audit_cap_data
cap	auditsc.c	/^	struct audit_cap_data	cap;$/;"	m	struct:audit_aux_data_capset	typeref:struct:audit_aux_data_capset::audit_cap_data	file:
cap_get_target_pid	capability.c	/^static inline int cap_get_target_pid(pid_t pid, kernel_cap_t *pEp,$/;"	f	file:
cap_last_cap	sysctl.c	/^static const int cap_last_cap = CAP_LAST_CAP;$/;"	v	file:
cap_validate_magic	capability.c	/^static int cap_validate_magic(cap_user_header_t header, unsigned *tocopy)$/;"	f	file:
capable	capability.c	/^EXPORT_SYMBOL(capable);$/;"	v
capable	capability.c	/^bool capable(int cap)$/;"	f
capable_wrt_inode_uidgid	capability.c	/^bool capable_wrt_inode_uidgid(const struct inode *inode, int cap)$/;"	f
capacity	power/sleep_history.c	/^	int capacity;$/;"	m	struct:battery_history	file:
capset	audit.h	/^		} capset;$/;"	m	union:audit_context::__anon15	typeref:struct:audit_context::__anon15::__anon22
cascade	timer.c	/^static int cascade(struct tvec_base *base, struct tvec *tv, int index)$/;"	f	file:
cb	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^	jumper_cb_t cb;$/;"	m	struct:cb_data	file:
cb	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^	jumper_cb_t cb;$/;"	m	struct:kj_cb_data	file:
cb	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^	jumper_cb_t cb;$/;"	m	struct:cb_data	file:
cb	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^	jumper_cb_t cb;$/;"	m	struct:kj_cb_data	file:
cb_barrier	rcutorture.c	/^	void (*cb_barrier)(void);$/;"	m	struct:rcu_torture_ops	file:
cb_check_and_install	swap/us_manager/helper.c	/^static unsigned long cb_check_and_install(void *data)$/;"	f	file:
cb_clean_child	swap/us_manager/helper.c	/^static unsigned long cb_clean_child(void *data)$/;"	f	file:
cb_data	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^struct cb_data {$/;"	s	file:
cb_data	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^struct cb_data {$/;"	s	file:
cb_item	swap/us_manager/callbacks.c	/^struct cb_item {$/;"	s	file:
cb_pf	swap/us_manager/helper.c	/^static unsigned long cb_pf(void *data)$/;"	f	file:
cbz_insn_execbuf_thumb	swap/uprobe/arch/arm/swap-asm/trampoline_thumb.S	/^cbz_insn_execbuf_thumb:$/;"	l
cbz_t16_dest	swap/uprobe/arch/arm/swap-asm/swap_uprobes.c	/^static inline long cbz_t16_dest(kprobe_opcode_t insn, unsigned int insn_addr)$/;"	f	file:
ccflags-y	gcov/Makefile	/^ccflags-y := -DSRCTREE='"$(srctree)"' -DOBJTREE='"$(objtree)"'$/;"	m
ccflags-y	swap/buffer/Makefile	/^ccflags-y := -Ikernel\/swap$/;"	m
ccflags-y	swap/driver/Makefile	/^ccflags-y := -Ikernel\/swap$/;"	m
ccflags-y	swap/energy/Makefile	/^ccflags-y := -Ikernel\/swap$/;"	m
ccflags-y	swap/fbiprobe/Makefile	/^ccflags-y := -Ikernel\/swap$/;"	m
ccflags-y	swap/kprobe/Makefile	/^ccflags-y := -Ikernel\/swap$/;"	m
ccflags-y	swap/ks_features/Makefile	/^ccflags-y := -Ikernel\/swap$/;"	m
ccflags-y	swap/ksyms/Makefile	/^ccflags-y := -Ikernel\/swap$/;"	m
ccflags-y	swap/master/Makefile	/^ccflags-y := -Ikernel\/swap$/;"	m
ccflags-y	swap/nsp/Makefile	/^ccflags-y := -Ikernel\/swap$/;"	m
ccflags-y	swap/parser/Makefile	/^ccflags-y := -Ikernel\/swap$/;"	m
ccflags-y	swap/preload/Makefile	/^ccflags-y := -Ikernel\/swap$/;"	m
ccflags-y	swap/retprobe/Makefile	/^ccflags-y := -Ikernel\/swap$/;"	m
ccflags-y	swap/sampler/Makefile	/^ccflags-y := -Ikernel\/swap$/;"	m
ccflags-y	swap/task_data/Makefile	/^ccflags-y := -Ikernel\/swap$/;"	m
ccflags-y	swap/uprobe/Makefile	/^ccflags-y := -Ikernel\/swap$/;"	m
ccflags-y	swap/us_manager/Makefile	/^ccflags-y := -Ikernel\/swap$/;"	m
ccflags-y	swap/webprobe/Makefile	/^ccflags-y := -Ikernel\/swap$/;"	m
ccflags-y	swap/writer/Makefile	/^ccflags-y := -Ikernel\/swap$/;"	m
ccflags-y	swap/wsp/Makefile	/^ccflags-y := -Ikernel\/swap$/;"	m
ce_broadcast_hrtimer	time/tick-broadcast-hrtimer.c	/^static struct clock_event_device ce_broadcast_hrtimer = {$/;"	v	typeref:struct:clock_event_device	file:
cev_delta2ns	time/clockevents.c	/^static u64 cev_delta2ns(unsigned long latch, struct clock_event_device *evt,$/;"	f	file:
cfent	cgroup.c	/^struct cfent {$/;"	s	file:
cfs	sched/sched.h	/^	struct cfs_rq cfs;$/;"	m	struct:rq	typeref:struct:rq::cfs_rq
cfs_bandwidth	sched/sched.h	/^	struct cfs_bandwidth cfs_bandwidth;$/;"	m	struct:task_group	typeref:struct:task_group::cfs_bandwidth
cfs_bandwidth	sched/sched.h	/^struct cfs_bandwidth { };$/;"	s
cfs_bandwidth	sched/sched.h	/^struct cfs_bandwidth {$/;"	s
cfs_bandwidth_slack_period	sched/fair.c	/^static const u64 cfs_bandwidth_slack_period = 5 * NSEC_PER_MSEC;$/;"	v	file:
cfs_bandwidth_usage_dec	sched/fair.c	/^void cfs_bandwidth_usage_dec(void) {}$/;"	f
cfs_bandwidth_usage_dec	sched/fair.c	/^void cfs_bandwidth_usage_dec(void)$/;"	f
cfs_bandwidth_usage_inc	sched/fair.c	/^void cfs_bandwidth_usage_inc(void) {}$/;"	f
cfs_bandwidth_usage_inc	sched/fair.c	/^void cfs_bandwidth_usage_inc(void)$/;"	f
cfs_bandwidth_used	sched/fair.c	/^static bool cfs_bandwidth_used(void)$/;"	f	file:
cfs_bandwidth_used	sched/fair.c	/^static inline bool cfs_bandwidth_used(void)$/;"	f	file:
cfs_rq	sched/sched.h	/^	struct cfs_rq **cfs_rq;$/;"	m	struct:task_group	typeref:struct:task_group::cfs_rq
cfs_rq	sched/sched.h	/^struct cfs_rq {$/;"	s
cfs_rq_clock_task	sched/fair.c	/^static inline u64 cfs_rq_clock_task(struct cfs_rq *cfs_rq)$/;"	f	file:
cfs_rq_of	sched/fair.c	/^static inline struct cfs_rq *cfs_rq_of(struct sched_entity *se)$/;"	f	file:
cfs_rq_throttled	sched/fair.c	/^static inline int cfs_rq_throttled(struct cfs_rq *cfs_rq)$/;"	f	file:
cfs_schedulable_data	sched/core.c	/^struct cfs_schedulable_data {$/;"	s	file:
cfs_tasks	sched/sched.h	/^	struct list_head cfs_tasks;$/;"	m	struct:rq	typeref:struct:rq::list_head
cft	cgroup.c	/^	struct cftype *cft;$/;"	m	struct:cgroup_event	typeref:struct:cgroup_event::cftype	file:
cft	cgroup.c	/^	struct cftype *cft;$/;"	m	struct:cgroup_seqfile_state	typeref:struct:cgroup_seqfile_state::cftype	file:
cg	cgroup.c	/^	struct css_set		*cg;$/;"	m	struct:task_and_cgroup	typeref:struct:task_and_cgroup::css_set	file:
cg	cgroup.c	/^	struct css_set *cg;$/;"	m	struct:cg_cgroup_link	typeref:struct:cg_cgroup_link::css_set	file:
cg_cgroup_link	cgroup.c	/^struct cg_cgroup_link {$/;"	s	file:
cg_link_list	cgroup.c	/^	struct list_head cg_link_list;$/;"	m	struct:cg_cgroup_link	typeref:struct:cg_cgroup_link::list_head	file:
cgroup	cgroup.c	/^	struct cgroup *cgroup;$/;"	m	struct:cgroup_seqfile_state	typeref:struct:cgroup_seqfile_state::cgroup	file:
cgroup_add_cftypes	cgroup.c	/^EXPORT_SYMBOL_GPL(cgroup_add_cftypes);$/;"	v
cgroup_add_cftypes	cgroup.c	/^int cgroup_add_cftypes(struct cgroup_subsys *ss, struct cftype *cfts)$/;"	f
cgroup_add_file	cgroup.c	/^static int cgroup_add_file(struct cgroup *cgrp, struct cgroup_subsys *subsys,$/;"	f	file:
cgroup_addrm_files	cgroup.c	/^static int cgroup_addrm_files(struct cgroup *cgrp, struct cgroup_subsys *subsys,$/;"	f	file:
cgroup_advance_iter	cgroup.c	/^static void cgroup_advance_iter(struct cgroup *cgrp,$/;"	f	file:
cgroup_alloc_name	cgroup.c	/^static struct cgroup_name *cgroup_alloc_name(struct dentry *dentry)$/;"	f	file:
cgroup_allow_attach	cgroup.c	/^static int cgroup_allow_attach(struct cgroup *cgrp, struct cgroup_taskset *tset)$/;"	f	file:
cgroup_attach_task	cgroup.c	/^static int cgroup_attach_task(struct cgroup *cgrp, struct task_struct *tsk,$/;"	f	file:
cgroup_attach_task_all	cgroup.c	/^EXPORT_SYMBOL_GPL(cgroup_attach_task_all);$/;"	v
cgroup_attach_task_all	cgroup.c	/^int cgroup_attach_task_all(struct task_struct *from, struct task_struct *tsk)$/;"	f
cgroup_backing_dev_info	cgroup.c	/^static struct backing_dev_info cgroup_backing_dev_info = {$/;"	v	typeref:struct:backing_dev_info	file:
cgroup_ca	sched/cpuacct.c	/^static inline struct cpuacct *cgroup_ca(struct cgroup *cgrp)$/;"	f	file:
cgroup_clear_directory	cgroup.c	/^static void cgroup_clear_directory(struct dentry *dir, bool base_files,$/;"	f	file:
cgroup_clone_children_read	cgroup.c	/^static u64 cgroup_clone_children_read(struct cgroup *cgrp,$/;"	f	file:
cgroup_clone_children_write	cgroup.c	/^static int cgroup_clone_children_write(struct cgroup *cgrp,$/;"	f	file:
cgroup_create	cgroup.c	/^static long cgroup_create(struct cgroup *parent, struct dentry *dentry,$/;"	f	file:
cgroup_create_file	cgroup.c	/^static int cgroup_create_file(struct dentry *dentry, umode_t mode,$/;"	f	file:
cgroup_cs	cpuset.c	/^static inline struct cpuset *cgroup_cs(struct cgroup *cont)$/;"	f	file:
cgroup_css_from_dir	cgroup.c	/^struct cgroup_subsys_state *cgroup_css_from_dir(struct file *f, int id)$/;"	f
cgroup_css_links_read	cgroup.c	/^static int cgroup_css_links_read(struct cgroup *cont,$/;"	f	file:
cgroup_d_remove_dir	cgroup.c	/^static void cgroup_d_remove_dir(struct dentry *dentry)$/;"	f	file:
cgroup_delete	cgroup.c	/^static int cgroup_delete(const struct dentry *d)$/;"	f	file:
cgroup_destroy_wq	cgroup.c	/^static struct workqueue_struct *cgroup_destroy_wq;$/;"	v	typeref:struct:workqueue_struct	file:
cgroup_diput	cgroup.c	/^static void cgroup_diput(struct dentry *dentry, struct inode *inode)$/;"	f	file:
cgroup_dir_inode_operations	cgroup.c	/^static const struct inode_operations cgroup_dir_inode_operations = {$/;"	v	typeref:struct:inode_operations	file:
cgroup_dir_inode_operations	cgroup.c	/^static const struct inode_operations cgroup_dir_inode_operations;$/;"	v	typeref:struct:inode_operations	file:
cgroup_disable	cgroup.c	/^static int __init cgroup_disable(char *str)$/;"	f	file:
cgroup_dput	cgroup.c	/^static void cgroup_dput(struct cgroup *cgrp)$/;"	f	file:
cgroup_drop_root	cgroup.c	/^static void cgroup_drop_root(struct cgroupfs_root *root)$/;"	f	file:
cgroup_enable_task_cg_lists	cgroup.c	/^static void cgroup_enable_task_cg_lists(void)$/;"	f	file:
cgroup_event	cgroup.c	/^struct cgroup_event {$/;"	s	file:
cgroup_event_ptable_queue_proc	cgroup.c	/^static void cgroup_event_ptable_queue_proc(struct file *file,$/;"	f	file:
cgroup_event_remove	cgroup.c	/^static void cgroup_event_remove(struct work_struct *work)$/;"	f	file:
cgroup_event_wake	cgroup.c	/^static int cgroup_event_wake(wait_queue_t *wait, unsigned mode,$/;"	f	file:
cgroup_exit	cgroup.c	/^void cgroup_exit(struct task_struct *tsk, int run_callbacks)$/;"	f
cgroup_file_inode_operations	cgroup.c	/^static const struct inode_operations cgroup_file_inode_operations = {$/;"	v	typeref:struct:inode_operations	file:
cgroup_file_mode	cgroup.c	/^static umode_t cgroup_file_mode(const struct cftype *cft)$/;"	f	file:
cgroup_file_open	cgroup.c	/^static int cgroup_file_open(struct inode *inode, struct file *file)$/;"	f	file:
cgroup_file_operations	cgroup.c	/^static const struct file_operations cgroup_file_operations = {$/;"	v	typeref:struct:file_operations	file:
cgroup_file_read	cgroup.c	/^static ssize_t cgroup_file_read(struct file *file, char __user *buf,$/;"	f	file:
cgroup_file_release	cgroup.c	/^static int cgroup_file_release(struct inode *inode, struct file *file)$/;"	f	file:
cgroup_file_write	cgroup.c	/^static ssize_t cgroup_file_write(struct file *file, const char __user *buf,$/;"	f	file:
cgroup_filetype	cgroup.c	/^enum cgroup_filetype {$/;"	g	file:
cgroup_fork	cgroup.c	/^void cgroup_fork(struct task_struct *child)$/;"	f
cgroup_free_fn	cgroup.c	/^static void cgroup_free_fn(struct work_struct *work)$/;"	f	file:
cgroup_free_rcu	cgroup.c	/^static void cgroup_free_rcu(struct rcu_head *head)$/;"	f	file:
cgroup_freezer	cgroup_freezer.c	/^static inline struct freezer *cgroup_freezer(struct cgroup *cgroup)$/;"	f	file:
cgroup_freezing	cgroup_freezer.c	/^bool cgroup_freezing(struct task_struct *task)$/;"	f
cgroup_fs_type	cgroup.c	/^static struct file_system_type cgroup_fs_type = {$/;"	v	typeref:struct:file_system_type	file:
cgroup_get_rootdir	cgroup.c	/^static int cgroup_get_rootdir(struct super_block *sb)$/;"	f	file:
cgroup_getxattr	cgroup.c	/^static ssize_t cgroup_getxattr(struct dentry *dentry, const char *name,$/;"	f	file:
cgroup_init	cgroup.c	/^int __init cgroup_init(void)$/;"	f
cgroup_init_cftsets	cgroup.c	/^static void __init_or_module cgroup_init_cftsets(struct cgroup_subsys *ss)$/;"	f	file:
cgroup_init_early	cgroup.c	/^int __init cgroup_init_early(void)$/;"	f
cgroup_init_idr	cgroup.c	/^static int __init_or_module cgroup_init_idr(struct cgroup_subsys *ss,$/;"	f	file:
cgroup_init_subsys	cgroup.c	/^static void __init cgroup_init_subsys(struct cgroup_subsys *ss)$/;"	f	file:
cgroup_is_descendant	cgroup.c	/^EXPORT_SYMBOL_GPL(cgroup_is_descendant);$/;"	v
cgroup_is_descendant	cgroup.c	/^bool cgroup_is_descendant(struct cgroup *cgrp, struct cgroup *ancestor)$/;"	f
cgroup_is_releasable	cgroup.c	/^static int cgroup_is_releasable(const struct cgroup *cgrp)$/;"	f	file:
cgroup_is_removed	cgroup.c	/^inline int cgroup_is_removed(const struct cgroup *cgrp)$/;"	f
cgroup_iter_next	cgroup.c	/^struct task_struct *cgroup_iter_next(struct cgroup *cgrp,$/;"	f
cgroup_kill_sb	cgroup.c	/^static void cgroup_kill_sb(struct super_block *sb) {$/;"	f	file:
cgroup_kobj	cgroup.c	/^static struct kobject *cgroup_kobj;$/;"	v	typeref:struct:kobject	file:
cgroup_leftmost_descendant	cgroup.c	/^static struct cgroup *cgroup_leftmost_descendant(struct cgroup *pos)$/;"	f	file:
cgroup_listxattr	cgroup.c	/^static ssize_t cgroup_listxattr(struct dentry *dentry, char *buf, size_t size)$/;"	f	file:
cgroup_load_subsys	cgroup.c	/^EXPORT_SYMBOL_GPL(cgroup_load_subsys);$/;"	v
cgroup_load_subsys	cgroup.c	/^int __init_or_module cgroup_load_subsys(struct cgroup_subsys *ss)$/;"	f
cgroup_lock_live_group	cgroup.c	/^static bool cgroup_lock_live_group(struct cgroup *cgrp)$/;"	f	file:
cgroup_lookup	cgroup.c	/^static struct dentry *cgroup_lookup(struct inode *dir, struct dentry *dentry, unsigned int flags)$/;"	f	file:
cgroup_map_add	cgroup.c	/^static int cgroup_map_add(struct cgroup_map_cb *cb, const char *key, u64 value)$/;"	f	file:
cgroup_mkdir	cgroup.c	/^static int cgroup_mkdir(struct inode *dir, struct dentry *dentry, umode_t mode)$/;"	f	file:
cgroup_mount	cgroup.c	/^static struct dentry *cgroup_mount(struct file_system_type *fs_type,$/;"	f	file:
cgroup_mutex	cgroup.c	/^DEFINE_MUTEX(cgroup_mutex);$/;"	v
cgroup_mutex	cgroup.c	/^EXPORT_SYMBOL_GPL(cgroup_mutex);	\/* only for task_subsys_state_check() *\/$/;"	v
cgroup_new_inode	cgroup.c	/^static struct inode *cgroup_new_inode(umode_t mode, struct super_block *sb)$/;"	f	file:
cgroup_next_descendant_post	cgroup.c	/^EXPORT_SYMBOL_GPL(cgroup_next_descendant_post);$/;"	v
cgroup_next_descendant_post	cgroup.c	/^struct cgroup *cgroup_next_descendant_post(struct cgroup *pos,$/;"	f
cgroup_next_descendant_pre	cgroup.c	/^EXPORT_SYMBOL_GPL(cgroup_next_descendant_pre);$/;"	v
cgroup_next_descendant_pre	cgroup.c	/^struct cgroup *cgroup_next_descendant_pre(struct cgroup *pos,$/;"	f
cgroup_ops	cgroup.c	/^static const struct super_operations cgroup_ops = {$/;"	v	typeref:struct:super_operations	file:
cgroup_path	cgroup.c	/^EXPORT_SYMBOL_GPL(cgroup_path);$/;"	v
cgroup_path	cgroup.c	/^int cgroup_path(const struct cgroup *cgrp, char *buf, int buflen)$/;"	f
cgroup_pidlist	cgroup.c	/^struct cgroup_pidlist {$/;"	s	file:
cgroup_pidlist_find	cgroup.c	/^static struct cgroup_pidlist *cgroup_pidlist_find(struct cgroup *cgrp,$/;"	f	file:
cgroup_pidlist_next	cgroup.c	/^static void *cgroup_pidlist_next(struct seq_file *s, void *v, loff_t *pos)$/;"	f	file:
cgroup_pidlist_open	cgroup.c	/^static int cgroup_pidlist_open(struct file *file, enum cgroup_filetype type)$/;"	f	file:
cgroup_pidlist_operations	cgroup.c	/^static const struct file_operations cgroup_pidlist_operations = {$/;"	v	typeref:struct:file_operations	file:
cgroup_pidlist_release	cgroup.c	/^static int cgroup_pidlist_release(struct inode *inode, struct file *file)$/;"	f	file:
cgroup_pidlist_seq_operations	cgroup.c	/^static const struct seq_operations cgroup_pidlist_seq_operations = {$/;"	v	typeref:struct:seq_operations	file:
cgroup_pidlist_show	cgroup.c	/^static int cgroup_pidlist_show(struct seq_file *s, void *v)$/;"	f	file:
cgroup_pidlist_start	cgroup.c	/^static void *cgroup_pidlist_start(struct seq_file *s, loff_t *pos)$/;"	f	file:
cgroup_pidlist_stop	cgroup.c	/^static void cgroup_pidlist_stop(struct seq_file *s, void *v)$/;"	f	file:
cgroup_populate_dir	cgroup.c	/^static int cgroup_populate_dir(struct cgroup *cgrp, bool base_files,$/;"	f	file:
cgroup_post_fork	cgroup.c	/^void cgroup_post_fork(struct task_struct *child)$/;"	f
cgroup_procs_open	cgroup.c	/^static int cgroup_procs_open(struct inode *unused, struct file *file)$/;"	f	file:
cgroup_procs_write	cgroup.c	/^static int cgroup_procs_write(struct cgroup *cgrp, struct cftype *cft, u64 tgid)$/;"	f	file:
cgroup_read_notify_on_release	cgroup.c	/^static u64 cgroup_read_notify_on_release(struct cgroup *cgrp,$/;"	f	file:
cgroup_read_s64	cgroup.c	/^static ssize_t cgroup_read_s64(struct cgroup *cgrp, struct cftype *cft,$/;"	f	file:
cgroup_read_u64	cgroup.c	/^static ssize_t cgroup_read_u64(struct cgroup *cgrp, struct cftype *cft,$/;"	f	file:
cgroup_refcount_read	cgroup.c	/^static u64 cgroup_refcount_read(struct cgroup *cont, struct cftype *cft)$/;"	f	file:
cgroup_release_agent	cgroup.c	/^static void cgroup_release_agent(struct work_struct *work)$/;"	f	file:
cgroup_release_agent_show	cgroup.c	/^static int cgroup_release_agent_show(struct cgroup *cgrp, struct cftype *cft,$/;"	f	file:
cgroup_release_agent_write	cgroup.c	/^static int cgroup_release_agent_write(struct cgroup *cgrp, struct cftype *cft,$/;"	f	file:
cgroup_release_pid_array	cgroup.c	/^static void cgroup_release_pid_array(struct cgroup_pidlist *l)$/;"	f	file:
cgroup_remount	cgroup.c	/^static int cgroup_remount(struct super_block *sb, int *flags, char *data)$/;"	f	file:
cgroup_removexattr	cgroup.c	/^static int cgroup_removexattr(struct dentry *dentry, const char *name)$/;"	f	file:
cgroup_rename	cgroup.c	/^static int cgroup_rename(struct inode *old_dir, struct dentry *old_dentry,$/;"	f	file:
cgroup_rightmost_descendant	cgroup.c	/^EXPORT_SYMBOL_GPL(cgroup_rightmost_descendant);$/;"	v
cgroup_rightmost_descendant	cgroup.c	/^struct cgroup *cgroup_rightmost_descendant(struct cgroup *pos)$/;"	f
cgroup_rm_cftypes	cgroup.c	/^int cgroup_rm_cftypes(struct cgroup_subsys *ss, struct cftype *cfts)$/;"	f
cgroup_rm_file	cgroup.c	/^static void cgroup_rm_file(struct cgroup *cgrp, const struct cftype *cft)$/;"	f	file:
cgroup_rmdir	cgroup.c	/^static int cgroup_rmdir(struct inode *unused_dir, struct dentry *dentry)$/;"	f	file:
cgroup_root_from_opts	cgroup.c	/^static struct cgroupfs_root *cgroup_root_from_opts(struct cgroup_sb_opts *opts)$/;"	f	file:
cgroup_sane_behavior_show	cgroup.c	/^static int cgroup_sane_behavior_show(struct cgroup *cgrp, struct cftype *cft,$/;"	f	file:
cgroup_sb_opts	cgroup.c	/^struct cgroup_sb_opts {$/;"	s	file:
cgroup_scan_tasks	cgroup.c	/^int cgroup_scan_tasks(struct cgroup_scanner *scan)$/;"	f
cgroup_seqfile_operations	cgroup.c	/^static const struct file_operations cgroup_seqfile_operations = {$/;"	v	typeref:struct:file_operations	file:
cgroup_seqfile_release	cgroup.c	/^static int cgroup_seqfile_release(struct inode *inode, struct file *file)$/;"	f	file:
cgroup_seqfile_show	cgroup.c	/^static int cgroup_seqfile_show(struct seq_file *m, void *arg)$/;"	f	file:
cgroup_seqfile_state	cgroup.c	/^struct cgroup_seqfile_state {$/;"	s	file:
cgroup_set_super	cgroup.c	/^static int cgroup_set_super(struct super_block *sb, void *data)$/;"	f	file:
cgroup_setxattr	cgroup.c	/^static int cgroup_setxattr(struct dentry *dentry, const char *name,$/;"	f	file:
cgroup_show_options	cgroup.c	/^static int cgroup_show_options(struct seq_file *seq, struct dentry *dentry)$/;"	f	file:
cgroup_task_count	cgroup.c	/^int cgroup_task_count(const struct cgroup *cgrp)$/;"	f
cgroup_task_migrate	cgroup.c	/^static void cgroup_task_migrate(struct cgroup *oldcgrp,$/;"	f	file:
cgroup_tasks_open	cgroup.c	/^static int cgroup_tasks_open(struct inode *unused, struct file *file)$/;"	f	file:
cgroup_tasks_write	cgroup.c	/^static int cgroup_tasks_write(struct cgroup *cgrp, struct cftype *cft, u64 pid)$/;"	f	file:
cgroup_taskset	cgroup.c	/^struct cgroup_taskset {$/;"	s	file:
cgroup_taskset_cur_cgroup	cgroup.c	/^EXPORT_SYMBOL_GPL(cgroup_taskset_cur_cgroup);$/;"	v
cgroup_taskset_cur_cgroup	cgroup.c	/^struct cgroup *cgroup_taskset_cur_cgroup(struct cgroup_taskset *tset)$/;"	f
cgroup_taskset_first	cgroup.c	/^EXPORT_SYMBOL_GPL(cgroup_taskset_first);$/;"	v
cgroup_taskset_first	cgroup.c	/^struct task_struct *cgroup_taskset_first(struct cgroup_taskset *tset)$/;"	f
cgroup_taskset_next	cgroup.c	/^EXPORT_SYMBOL_GPL(cgroup_taskset_next);$/;"	v
cgroup_taskset_next	cgroup.c	/^struct task_struct *cgroup_taskset_next(struct cgroup_taskset *tset)$/;"	f
cgroup_taskset_size	cgroup.c	/^EXPORT_SYMBOL_GPL(cgroup_taskset_size);$/;"	v
cgroup_taskset_size	cgroup.c	/^int cgroup_taskset_size(struct cgroup_taskset *tset)$/;"	f
cgroup_test_super	cgroup.c	/^static int cgroup_test_super(struct super_block *sb, void *data)$/;"	f	file:
cgroup_tg	sched/core.c	/^static inline struct task_group *cgroup_tg(struct cgroup *cgrp)$/;"	f	file:
cgroup_transfer_one_task	cgroup.c	/^static void cgroup_transfer_one_task(struct task_struct *task,$/;"	f	file:
cgroup_transfer_tasks	cgroup.c	/^int cgroup_transfer_tasks(struct cgroup *to, struct cgroup *from)$/;"	f
cgroup_unload_subsys	cgroup.c	/^EXPORT_SYMBOL_GPL(cgroup_unload_subsys);$/;"	v
cgroup_unload_subsys	cgroup.c	/^void cgroup_unload_subsys(struct cgroup_subsys *ss)$/;"	f
cgroup_wq_init	cgroup.c	/^core_initcall(cgroup_wq_init);$/;"	v
cgroup_wq_init	cgroup.c	/^static int __init cgroup_wq_init(void)$/;"	f	file:
cgroup_write_X64	cgroup.c	/^static ssize_t cgroup_write_X64(struct cgroup *cgrp, struct cftype *cft,$/;"	f	file:
cgroup_write_event_control	cgroup.c	/^static int cgroup_write_event_control(struct cgroup *cgrp, struct cftype *cft,$/;"	f	file:
cgroup_write_notify_on_release	cgroup.c	/^static int cgroup_write_notify_on_release(struct cgroup *cgrp,$/;"	f	file:
cgroup_write_string	cgroup.c	/^static ssize_t cgroup_write_string(struct cgroup *cgrp, struct cftype *cft,$/;"	f	file:
cgroupstats_build	cgroup.c	/^int cgroupstats_build(struct cgroupstats *stats, struct dentry *dentry)$/;"	f
cgroupstats_cmd_get_policy	taskstats.c	/^static const struct nla_policy cgroupstats_cmd_get_policy[CGROUPSTATS_CMD_ATTR_MAX+1] = {$/;"	v	typeref:struct:nla_policy	file:
cgroupstats_open	cgroup.c	/^static int cgroupstats_open(struct inode *inode, struct file *file)$/;"	f	file:
cgroupstats_ops	taskstats.c	/^static struct genl_ops cgroupstats_ops = {$/;"	v	typeref:struct:genl_ops	file:
cgroupstats_user_cmd	taskstats.c	/^static int cgroupstats_user_cmd(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
cgrp	cgroup.c	/^	struct cgroup		*cgrp;$/;"	m	struct:task_and_cgroup	typeref:struct:task_and_cgroup::cgroup	file:
cgrp	cgroup.c	/^	struct cgroup *cgrp;$/;"	m	struct:cg_cgroup_link	typeref:struct:cg_cgroup_link::cgroup	file:
cgrp	cgroup.c	/^	struct cgroup *cgrp;$/;"	m	struct:cgroup_event	typeref:struct:cgroup_event::cgroup	file:
cgrp_link_list	cgroup.c	/^	struct list_head cgrp_link_list;$/;"	m	struct:cg_cgroup_link	typeref:struct:cg_cgroup_link::list_head	file:
chain	futex.c	/^	struct plist_head chain;$/;"	m	struct:futex_hash_bucket	typeref:struct:futex_hash_bucket::plist_head	file:
chain	power/snapshot.c	/^	struct linked_page *chain;	\/* the chain *\/$/;"	m	struct:chain_allocator	typeref:struct:chain_allocator::linked_page	file:
chain_alloc	power/snapshot.c	/^static void *chain_alloc(struct chain_allocator *ca, unsigned int size)$/;"	f	file:
chain_allocator	power/snapshot.c	/^struct chain_allocator {$/;"	s	file:
chain_hlocks	lockdep.c	/^static u16 chain_hlocks[MAX_LOCKDEP_CHAIN_HLOCKS];$/;"	v	file:
chain_init	power/snapshot.c	/^chain_init(struct chain_allocator *ca, gfp_t gfp_mask, int safe_needed)$/;"	f	file:
chain_lookup_hits	lockdep_internals.h	/^	int	chain_lookup_hits;$/;"	m	struct:lockdep_stats
chain_lookup_misses	lockdep_internals.h	/^	int	chain_lookup_misses;$/;"	m	struct:lockdep_stats
chained	events/uprobes.c	/^	bool			chained;	\/* true, if instance is nested *\/$/;"	m	struct:return_instance	file:
chainhash_table	lockdep.c	/^static struct list_head chainhash_table[CHAINHASH_SIZE];$/;"	v	typeref:struct:list_head	file:
chainhashentry	lockdep.c	304;"	d	file:
change_clocksource	time/timekeeping.c	/^static int change_clocksource(void *data)$/;"	f	file:
change_pid	pid.c	/^void change_pid(struct task_struct *task, enum pid_type type,$/;"	f
check	swap/energy/lcd/lcd_base.h	/^	call_lcd check;			\/**< LCD check on device *\/$/;"	m	struct:lcd_ops
check_asym_packing	sched/fair.c	/^static int check_asym_packing(struct lb_env *env, struct sd_lb_stats *sds)$/;"	f	file:
check_cfs_rq_runtime	sched/fair.c	/^static void check_cfs_rq_runtime(struct cfs_rq *cfs_rq) {}$/;"	f	file:
check_cfs_rq_runtime	sched/fair.c	/^static void check_cfs_rq_runtime(struct cfs_rq *cfs_rq)$/;"	f	file:
check_chain_key	lockdep.c	/^static void check_chain_key(struct task_struct *curr)$/;"	f	file:
check_class_changed	sched/core.c	/^static inline void check_class_changed(struct rq *rq, struct task_struct *p,$/;"	f	file:
check_clock	posix-cpu-timers.c	/^static int check_clock(const clockid_t which_clock)$/;"	f	file:
check_cpu_itimer	posix-cpu-timers.c	/^static void check_cpu_itimer(struct task_struct *tsk, struct cpu_itimer *it,$/;"	f	file:
check_cpu_stall	rcutiny_plugin.h	/^static void check_cpu_stall(struct rcu_ctrlblk *rcp)$/;"	f
check_cpu_stall	rcutree.c	/^static void check_cpu_stall(struct rcu_state *rsp, struct rcu_data *rdp)$/;"	f	file:
check_cpu_stall_init	rcupdate.c	/^early_initcall(check_cpu_stall_init);$/;"	v
check_cpu_stall_init	rcupdate.c	/^static int __init check_cpu_stall_init(void)$/;"	f	file:
check_cpu_stall_preempt	rcutiny_plugin.h	/^static void check_cpu_stall_preempt(void)$/;"	f
check_cpu_stalls	rcutiny_plugin.h	/^static void check_cpu_stalls(void)$/;"	f
check_critical_timing	trace/trace_irqsoff.c	/^check_critical_timing(struct trace_array *tr,$/;"	f	file:
check_deadlock	lockdep.c	/^check_deadlock(struct task_struct *curr, struct held_lock *next,$/;"	f	file:
check_dentry	swap/us_manager/pf/proc_filters.c	/^static int check_dentry(struct task_struct *task, struct dentry *dentry)$/;"	f	file:
check_enqueue_throttle	sched/fair.c	/^static void check_enqueue_throttle(struct cfs_rq *cfs_rq) {}$/;"	f	file:
check_enqueue_throttle	sched/fair.c	/^static void check_enqueue_throttle(struct cfs_rq *cfs_rq)$/;"	f	file:
check_event	swap/writer/event_filter.c	/^EXPORT_SYMBOL_GPL(check_event);$/;"	v
check_event	swap/writer/event_filter.c	/^int check_event(struct task_struct *task)$/;"	f
check_file	swap/energy/energy.c	/^static int check_file(int fd)$/;"	f	file:
check_flags	lockdep.c	/^static void check_flags(unsigned long flags)$/;"	f	file:
check_for_new_grace_period	rcutree.c	/^check_for_new_grace_period(struct rcu_state *rsp, struct rcu_data *rdp)$/;"	f	file:
check_for_release	cgroup.c	/^static void check_for_release(struct cgroup *cgrp)$/;"	f	file:
check_for_tasks	cpu.c	/^static inline void check_for_tasks(int cpu)$/;"	f	file:
check_free_space	acct.c	/^static int check_free_space(struct bsd_acct_struct *acct, struct file *file)$/;"	f	file:
check_frozen_processes	power/process.c	/^static bool check_frozen_processes(void)$/;"	f	file:
check_fs	swap/energy/energy.c	/^static int check_fs(unsigned long magic)$/;"	f	file:
check_ftype	swap/energy/energy.c	/^static int check_ftype(int fd)$/;"	f	file:
check_header	power/snapshot.c	/^static int check_header(struct swsusp_info *info)$/;"	f	file:
check_hung_task	hung_task.c	/^static void check_hung_task(struct task_struct *t, unsigned long timeout)$/;"	f	file:
check_hung_uninterruptible_tasks	hung_task.c	/^static void check_hung_uninterruptible_tasks(unsigned long timeout)$/;"	f	file:
check_image_kernel	power/power.h	/^static inline char *check_image_kernel(struct swsusp_info *info)$/;"	f
check_image_kernel	power/snapshot.c	/^static char *check_image_kernel(struct swsusp_info *info)$/;"	f	file:
check_irq_entry	trace/trace_functions_graph.c	/^check_irq_entry(struct trace_iterator *iter, u32 flags,$/;"	f	file:
check_irq_resend	irq/resend.c	/^void check_irq_resend(struct irq_desc *desc, unsigned int irq)$/;"	f
check_irq_return	trace/trace_functions_graph.c	/^check_irq_return(struct trace_iterator *iter, u32 flags, int depth)$/;"	f	file:
check_irq_usage	lockdep.c	/^static int check_irq_usage(struct task_struct *curr, struct held_lock *prev,$/;"	f	file:
check_kill_permission	signal.c	/^static int check_kill_permission(int sig, struct siginfo *info,$/;"	f	file:
check_kprobe_address_safe	kprobes.c	/^static __kprobes int check_kprobe_address_safe(struct kprobe *p,$/;"	f	file:
check_kprobe_rereg	kprobes.c	/^static inline int check_kprobe_rereg(struct kprobe *p)$/;"	f	file:
check_mm	fork.c	/^static void check_mm(struct mm_struct *mm)$/;"	f	file:
check_modinfo	module.c	/^static int check_modinfo(struct module *mod, struct load_info *info, int flags)$/;"	f	file:
check_modstruct_version	module.c	/^static inline int check_modstruct_version(Elf_Shdr *sechdrs,$/;"	f	file:
check_module_license_and_versions	module.c	/^static int check_module_license_and_versions(struct module *mod)$/;"	f	file:
check_noncircular	lockdep.c	/^check_noncircular(struct lock_list *root, struct lock_class *target,$/;"	f	file:
check_pf_by_comm	swap/us_manager/pf/proc_filters.c	/^int check_pf_by_comm(struct proc_filter *filter, char *comm)$/;"	f
check_pf_by_dentry	swap/us_manager/pf/proc_filters.c	/^int check_pf_by_dentry(struct proc_filter *filter, struct dentry *dentry)$/;"	f
check_pf_by_tgid	swap/us_manager/pf/proc_filters.c	/^int check_pf_by_tgid(struct proc_filter *filter, pid_t tgid)$/;"	f
check_pf_dumb	swap/us_manager/pf/proc_filters.c	/^int check_pf_dumb(struct proc_filter *filter)$/;"	f
check_pred_data	trace/trace_events_filter.c	/^struct check_pred_data {$/;"	s	file:
check_pred_tree	trace/trace_events_filter.c	/^static int check_pred_tree(struct event_filter *filter,$/;"	f	file:
check_pred_tree_cb	trace/trace_events_filter.c	/^static int check_pred_tree_cb(enum move_type move, struct filter_pred *pred,$/;"	f	file:
check_preds	trace/trace_events_filter.c	/^static int check_preds(struct filter_parse_state *ps)$/;"	f	file:
check_preempt_curr	sched/core.c	/^void check_preempt_curr(struct rq *rq, struct task_struct *p, int flags)$/;"	f
check_preempt_curr	sched/sched.h	/^	void (*check_preempt_curr) (struct rq *rq, struct task_struct *p, int flags);$/;"	m	struct:sched_class
check_preempt_curr_idle	sched/idle_task.c	/^static void check_preempt_curr_idle(struct rq *rq, struct task_struct *p, int flags)$/;"	f	file:
check_preempt_curr_rt	sched/rt.c	/^static void check_preempt_curr_rt(struct rq *rq, struct task_struct *p, int flags)$/;"	f	file:
check_preempt_curr_stop	sched/stop_task.c	/^check_preempt_curr_stop(struct rq *rq, struct task_struct *p, int flags)$/;"	f	file:
check_preempt_equal_prio	sched/rt.c	/^static void check_preempt_equal_prio(struct rq *rq, struct task_struct *p)$/;"	f	file:
check_preempt_tick	sched/fair.c	/^check_preempt_tick(struct cfs_rq *cfs_rq, struct sched_entity *curr)$/;"	f	file:
check_preempt_wakeup	sched/fair.c	/^static void check_preempt_wakeup(struct rq *rq, struct task_struct *p, int wake_flags)$/;"	f	file:
check_prev_add	lockdep.c	/^check_prev_add(struct task_struct *curr, struct held_lock *prev,$/;"	f	file:
check_prev_add_irq	lockdep.c	/^check_prev_add_irq(struct task_struct *curr, struct held_lock *prev,$/;"	f	file:
check_prevs_add	lockdep.c	/^check_prevs_add(struct task_struct *curr, struct held_lock *next)$/;"	f	file:
check_prlimit_permission	sys.c	/^static int check_prlimit_permission(struct task_struct *task)$/;"	f	file:
check_process_timers	posix-cpu-timers.c	/^static void check_process_timers(struct task_struct *tsk,$/;"	f	file:
check_prot	swap/preload/preload_module.c	/^static inline bool check_prot(unsigned long prot)$/;"	f	file:
check_same_owner	sched/core.c	/^static bool check_same_owner(struct task_struct *p)$/;"	f	file:
check_spread	sched/fair.c	/^static void check_spread(struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f	file:
check_stack	trace/trace_stack.c	/^check_stack(unsigned long ip, unsigned long *stack)$/;"	f	file:
check_stack_usage	exit.c	/^static inline void check_stack_usage(void) {}$/;"	f	file:
check_stack_usage	exit.c	/^static void check_stack_usage(void)$/;"	f	file:
check_symbol	module.c	/^static bool check_symbol(const struct symsearch *syms,$/;"	f	file:
check_syslog_permissions	printk.c	/^static int check_syslog_permissions(int type, bool from_file)$/;"	f	file:
check_task_and_install	swap/us_manager/pf/pf_group.c	/^void check_task_and_install(struct task_struct *task)$/;"	f
check_task_f	swap/us_manager/pf/proc_filters.h	52;"	d
check_task_on_filters	swap/us_manager/pf/pf_group.c	/^int check_task_on_filters(struct task_struct *task)$/;"	f
check_thread_timers	posix-cpu-timers.c	/^static void check_thread_timers(struct task_struct *tsk,$/;"	f	file:
check_unlock	lockdep.c	/^static int check_unlock(struct task_struct *curr, struct lockdep_map *lock,$/;"	f	file:
check_unshare_flags	fork.c	/^static int check_unshare_flags(unsigned long unshare_flags)$/;"	f	file:
check_usage	lockdep.c	/^check_usage(struct task_struct *curr, struct held_lock *prev,$/;"	f	file:
check_usage_backwards	lockdep.c	/^check_usage_backwards(struct task_struct *curr, struct held_lock *this,$/;"	f	file:
check_usage_f	lockdep.c	/^typedef int (*check_usage_f)(struct task_struct *, struct held_lock *,$/;"	t	file:
check_usage_forwards	lockdep.c	/^check_usage_forwards(struct task_struct *curr, struct held_lock *this,$/;"	f	file:
check_version	module.c	/^static inline int check_version(Elf_Shdr *sechdrs,$/;"	f	file:
check_version	module.c	/^static int check_version(Elf_Shdr *sechdrs,$/;"	f	file:
check_vma	swap/preload/preload_pd.c	/^static inline bool check_vma(struct vm_area_struct *vma, struct dentry *dentry)$/;"	f	file:
check_vma	swap/us_manager/sspt/sspt.h	/^static inline int check_vma(struct vm_area_struct *vma)$/;"	f
check_wakeup_irqs	irq/pm.c	/^int check_wakeup_irqs(void)$/;"	f
check_wakeup_reason	power/wakeup_reason.c	/^int check_wakeup_reason(int irq)$/;"	f
checksum	gcov/gcov.h	/^	unsigned int checksum;$/;"	m	struct:gcov_fn_info
child	sysctl_binary.c	/^	const struct bin_table	*child;$/;"	m	struct:bin_table	typeref:struct:bin_table::bin_table	file:
child_wait	exit.c	/^	wait_queue_t		child_wait;$/;"	m	struct:wait_opts	file:
child_wait_callback	exit.c	/^static int child_wait_callback(wait_queue_t *wait, unsigned mode,$/;"	f	file:
children	gcov/fs.c	/^	struct list_head children;$/;"	m	struct:gcov_node	typeref:struct:gcov_node::list_head	file:
children	sched/sched.h	/^	struct list_head children;$/;"	m	struct:task_group	typeref:struct:task_group::list_head
children	trace/trace_events_filter.c	/^	int children;$/;"	m	struct:fold_pred_data	file:
chip_bus_lock	irq/internals.h	/^static inline void chip_bus_lock(struct irq_desc *desc)$/;"	f
chip_bus_sync_unlock	irq/internals.h	/^static inline void chip_bus_sync_unlock(struct irq_desc *desc)$/;"	f
chunk	swap/kprobe/swap_slots.c	/^	struct chunk chunk;$/;"	m	struct:fixed_alloc	typeref:struct:fixed_alloc::chunk	file:
chunk	swap/kprobe/swap_slots.c	/^struct chunk {$/;"	s	file:
chunk_allocate	swap/kprobe/swap_slots.c	/^static void *chunk_allocate(struct chunk *chunk, size_t size_block)$/;"	f	file:
chunk_check_ptr	swap/kprobe/swap_slots.c	/^static inline int chunk_check_ptr(struct chunk *chunk, void *p, size_t size)$/;"	f	file:
chunk_deallocate	swap/kprobe/swap_slots.c	/^static void chunk_deallocate(struct chunk *chunk, void *p, size_t size_block)$/;"	f	file:
chunk_free	swap/kprobe/swap_slots.c	/^static inline int chunk_free(struct chunk *chunk)$/;"	f	file:
chunk_hash	audit_tree.c	/^static inline struct list_head *chunk_hash(const struct inode *inode)$/;"	f	file:
chunk_hash_heads	audit_tree.c	/^static struct list_head chunk_hash_heads[HASH_SIZE];$/;"	v	typeref:struct:list_head	file:
chunk_init	swap/kprobe/swap_slots.c	/^static int chunk_init(struct chunk *chunk, void *data,$/;"	f	file:
chunk_uninit	swap/kprobe/swap_slots.c	/^static void chunk_uninit(struct chunk *chunk)$/;"	f	file:
chunks	audit_tree.c	/^	struct list_head chunks;$/;"	m	struct:audit_tree	typeref:struct:audit_tree::list_head	file:
circular_queue	lockdep.c	/^struct circular_queue {$/;"	s	file:
claim_allocations	sched/core.c	/^static void claim_allocations(int cpu, struct sched_domain *sd)$/;"	f	file:
class	lockdep_proc.c	/^	struct lock_class *class;$/;"	m	struct:lock_stat_data	typeref:struct:lock_stat_data::lock_class	file:
class	trace/trace_kprobe.c	/^	struct ftrace_event_class	class;$/;"	m	struct:trace_probe	typeref:struct:trace_probe::ftrace_event_class	file:
class	trace/trace_uprobe.c	/^	struct ftrace_event_class	class;$/;"	m	struct:trace_uprobe	typeref:struct:trace_uprobe::ftrace_event_class	file:
class_equal	lockdep.c	/^static inline int class_equal(struct lock_list *entry, void *data)$/;"	f	file:
class_filter	lockdep.c	/^static int class_filter(struct lock_class *class)$/;"	f	file:
classes	auditfilter.c	/^static __u32 *classes[AUDIT_SYSCALL_CLASSES];$/;"	v	file:
classhash_table	lockdep.c	/^static struct list_head classhash_table[CLASSHASH_SIZE];$/;"	v	typeref:struct:list_head	file:
classhashentry	lockdep.c	293;"	d	file:
clean-files	debug/kdb/Makefile	/^clean-files := gen-kdb_cmds.c$/;"	m
clean_brightness	swap/energy/lcd/lcd_base.c	/^static void clean_brightness(struct lcd_ops *ops)$/;"	f	file:
clean_data	swap/us_manager/helper.c	/^struct clean_data {$/;"	s	file:
clean_loader_info	swap/preload/preload_debugfs.c	/^static void clean_loader_info(void)$/;"	f	file:
clean_sort_range	range.c	/^int clean_sort_range(struct range *range, int az)$/;"	f
cleanup	swap/us_manager/probes/register_probes.h	/^	void (*cleanup)(struct probe_info *);$/;"	m	struct:probe_iface
cleanup_all_probes	trace/trace_uprobe.c	/^static int cleanup_all_probes(void)$/;"	f	file:
cleanup_rp_inst	kprobes.c	/^static void __kprobes cleanup_rp_inst(struct kretprobe *rp)$/;"	f	file:
cleanup_srcu_struct	srcu.c	/^EXPORT_SYMBOL_GPL(cleanup_srcu_struct);$/;"	v
cleanup_srcu_struct	srcu.c	/^void cleanup_srcu_struct(struct srcu_struct *sp)$/;"	f
cleanup_timers	posix-cpu-timers.c	/^static void cleanup_timers(struct list_head *head,$/;"	f	file:
clear	swap/ks_features/ks_map.c	/^void clear(struct map *map, act_func_t destructor, void *arg)$/;"	f
clear_all_latency_tracing	latencytop.c	/^void clear_all_latency_tracing(struct task_struct *p)$/;"	f
clear_boot_tracer	trace/trace.c	/^__init static int clear_boot_tracer(void)$/;"	f	file:
clear_boot_tracer	trace/trace.c	/^late_initcall(clear_boot_tracer);$/;"	v
clear_buddies	sched/fair.c	/^static void clear_buddies(struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f	file:
clear_dead_task	posix-cpu-timers.c	/^static void clear_dead_task(struct k_itimer *timer, union cpu_time_count now)$/;"	f	file:
clear_ftrace_function	trace/ftrace.c	/^void clear_ftrace_function(void)$/;"	f
clear_ftrace_pid	trace/ftrace.c	/^static void clear_ftrace_pid(struct pid *pid)$/;"	f	file:
clear_ftrace_pid_task	trace/ftrace.c	/^static void clear_ftrace_pid_task(struct pid *pid)$/;"	f	file:
clear_ftrace_swapper	trace/ftrace.c	/^static void clear_ftrace_swapper(void)$/;"	f	file:
clear_global_latency_tracing	latencytop.c	/^static void clear_global_latency_tracing(void)$/;"	f	file:
clear_idx	printk.c	/^static u32 clear_idx;$/;"	v	file:
clear_lock_stats	lockdep.c	/^void clear_lock_stats(struct lock_class *class)$/;"	f
clear_operand_string	trace/trace_events_filter.c	/^static inline void clear_operand_string(struct filter_parse_state *ps)$/;"	f	file:
clear_rt_mutex_waiters	rtmutex.c	/^static inline void clear_rt_mutex_waiters(struct rt_mutex *lock)$/;"	f	file:
clear_seq	printk.c	/^static u64 clear_seq;$/;"	v	file:
clear_tasks_mm_cpumask	cpu.c	/^void clear_tasks_mm_cpumask(int cpu)$/;"	f
clear_work_data	workqueue.c	/^static void clear_work_data(struct work_struct *work)$/;"	f	file:
clk	time/posix-clock.c	/^	struct posix_clock *clk;$/;"	m	struct:posix_clock_desc	typeref:struct:posix_clock_desc::posix_clock	file:
clock	sched/clock.c	/^	u64			clock;$/;"	m	struct:sched_clock_data	file:
clock	sched/sched.h	/^	u64 clock;$/;"	m	struct:rq
clock	trace/ring_buffer.c	/^	u64				(*clock)(void);$/;"	m	struct:ring_buffer	file:
clock2alarm	time/alarmtimer.c	/^static enum alarmtimer_type clock2alarm(clockid_t clockid)$/;"	f	file:
clock_id	trace/trace.h	/^	int			clock_id;$/;"	m	struct:trace_array
clock_nanosleep_restart	posix-timers.c	/^long clock_nanosleep_restart(struct restart_block *restart_block)$/;"	f
clock_posix_cpu	posix-cpu-timers.c	/^struct k_clock clock_posix_cpu = {$/;"	v	typeref:struct:k_clock
clock_posix_dynamic	time/posix-clock.c	/^struct k_clock clock_posix_dynamic = {$/;"	v	typeref:struct:k_clock
clock_t_to_compat_clock_t	compat.c	/^static compat_clock_t clock_t_to_compat_clock_t(clock_t x)$/;"	f	file:
clock_t_to_jiffies	time.c	/^EXPORT_SYMBOL(clock_t_to_jiffies);$/;"	v
clock_t_to_jiffies	time.c	/^unsigned long clock_t_to_jiffies(unsigned long x)$/;"	f
clock_task	sched/sched.h	/^	u64 clock_task;$/;"	m	struct:rq
clock_was_set	hrtimer.c	/^void clock_was_set(void)$/;"	f
clock_was_set_delayed	hrtimer.c	/^void clock_was_set_delayed(void)$/;"	f
clock_was_set_work	hrtimer.c	/^static void clock_was_set_work(struct work_struct *work)$/;"	f	file:
clockevent_delta2ns	time/clockevents.c	/^EXPORT_SYMBOL_GPL(clockevent_delta2ns);$/;"	v
clockevent_delta2ns	time/clockevents.c	/^u64 clockevent_delta2ns(unsigned long latch, struct clock_event_device *evt)$/;"	f
clockevents_config	time/clockevents.c	/^void clockevents_config(struct clock_event_device *dev, u32 freq)$/;"	f
clockevents_config_and_register	time/clockevents.c	/^EXPORT_SYMBOL_GPL(clockevents_config_and_register);$/;"	v
clockevents_config_and_register	time/clockevents.c	/^void clockevents_config_and_register(struct clock_event_device *dev,$/;"	f
clockevents_exchange_device	time/clockevents.c	/^void clockevents_exchange_device(struct clock_event_device *old,$/;"	f
clockevents_handle_noop	time/clockevents.c	/^void clockevents_handle_noop(struct clock_event_device *dev)$/;"	f
clockevents_increase_min_delta	time/clockevents.c	/^static int clockevents_increase_min_delta(struct clock_event_device *dev)$/;"	f	file:
clockevents_notify	time/clockevents.c	/^EXPORT_SYMBOL_GPL(clockevents_notify);$/;"	v
clockevents_notify	time/clockevents.c	/^int clockevents_notify(unsigned long reason, void *arg)$/;"	f
clockevents_notify_released	time/clockevents.c	/^static void clockevents_notify_released(void)$/;"	f	file:
clockevents_program_event	time/clockevents.c	/^int clockevents_program_event(struct clock_event_device *dev, ktime_t expires,$/;"	f
clockevents_program_min_delta	time/clockevents.c	/^static int clockevents_program_min_delta(struct clock_event_device *dev)$/;"	f	file:
clockevents_register_device	time/clockevents.c	/^EXPORT_SYMBOL_GPL(clockevents_register_device);$/;"	v
clockevents_register_device	time/clockevents.c	/^void clockevents_register_device(struct clock_event_device *dev)$/;"	f
clockevents_resume	time/clockevents.c	/^void clockevents_resume(void)$/;"	f
clockevents_set_mode	time/clockevents.c	/^void clockevents_set_mode(struct clock_event_device *dev,$/;"	f
clockevents_shutdown	time/clockevents.c	/^void clockevents_shutdown(struct clock_event_device *dev)$/;"	f
clockevents_suspend	time/clockevents.c	/^void clockevents_suspend(void)$/;"	f
clockevents_update_freq	time/clockevents.c	/^int clockevents_update_freq(struct clock_event_device *dev, u32 freq)$/;"	f
clockid_to_kclock	posix-timers.c	/^static struct k_clock *clockid_to_kclock(const clockid_t id)$/;"	f	file:
clocks_calc_mult_shift	time/clocksource.c	/^clocks_calc_mult_shift(u32 *mult, u32 *shift, u32 from, u32 to, u32 maxsec)$/;"	f
clocksource_change_rating	time/clocksource.c	/^EXPORT_SYMBOL(clocksource_change_rating);$/;"	v
clocksource_change_rating	time/clocksource.c	/^void clocksource_change_rating(struct clocksource *cs, int rating)$/;"	f
clocksource_default_clock	time/jiffies.c	/^struct clocksource * __init __weak clocksource_default_clock(void)$/;"	f
clocksource_dequeue_watchdog	time/clocksource.c	/^static inline void clocksource_dequeue_watchdog(struct clocksource *cs) { }$/;"	f	file:
clocksource_dequeue_watchdog	time/clocksource.c	/^static void clocksource_dequeue_watchdog(struct clocksource *cs)$/;"	f	file:
clocksource_done_booting	time/clocksource.c	/^fs_initcall(clocksource_done_booting);$/;"	v
clocksource_done_booting	time/clocksource.c	/^static int __init clocksource_done_booting(void)$/;"	f	file:
clocksource_enqueue	time/clocksource.c	/^static void clocksource_enqueue(struct clocksource *cs)$/;"	f	file:
clocksource_enqueue_watchdog	time/clocksource.c	/^static void clocksource_enqueue_watchdog(struct clocksource *cs)$/;"	f	file:
clocksource_jiffies	time/jiffies.c	/^static struct clocksource clocksource_jiffies = {$/;"	v	typeref:struct:clocksource	file:
clocksource_mark_unstable	time/clocksource.c	/^void clocksource_mark_unstable(struct clocksource *cs)$/;"	f
clocksource_max_adjustment	time/clocksource.c	/^static u32 clocksource_max_adjustment(struct clocksource *cs)$/;"	f	file:
clocksource_max_deferment	time/clocksource.c	/^static u64 clocksource_max_deferment(struct clocksource *cs)$/;"	f	file:
clocksource_register	time/clocksource.c	/^EXPORT_SYMBOL(clocksource_register);$/;"	v
clocksource_register	time/clocksource.c	/^int clocksource_register(struct clocksource *cs)$/;"	f
clocksource_reset_watchdog	time/clocksource.c	/^static inline void clocksource_reset_watchdog(void)$/;"	f	file:
clocksource_resume	time/clocksource.c	/^void clocksource_resume(void)$/;"	f
clocksource_resume_watchdog	time/clocksource.c	/^static inline void clocksource_resume_watchdog(void) { }$/;"	f	file:
clocksource_resume_watchdog	time/clocksource.c	/^static void clocksource_resume_watchdog(void)$/;"	f	file:
clocksource_select	time/clocksource.c	/^static inline void clocksource_select(void) { }$/;"	f	file:
clocksource_select	time/clocksource.c	/^static void clocksource_select(void)$/;"	f	file:
clocksource_start_watchdog	time/clocksource.c	/^static inline void clocksource_start_watchdog(void)$/;"	f	file:
clocksource_stop_watchdog	time/clocksource.c	/^static inline void clocksource_stop_watchdog(void)$/;"	f	file:
clocksource_subsys	time/clocksource.c	/^static struct bus_type clocksource_subsys = {$/;"	v	typeref:struct:bus_type	file:
clocksource_suspend	time/clocksource.c	/^void clocksource_suspend(void)$/;"	f
clocksource_touch_watchdog	time/clocksource.c	/^void clocksource_touch_watchdog(void)$/;"	f
clocksource_unregister	time/clocksource.c	/^EXPORT_SYMBOL(clocksource_unregister);$/;"	v
clocksource_unregister	time/clocksource.c	/^void clocksource_unregister(struct clocksource *cs)$/;"	f
clocksource_unstable	time/clocksource.c	/^static void clocksource_unstable(struct clocksource *cs, int64_t delta)$/;"	f	file:
clocksource_watchdog	time/clocksource.c	/^static void clocksource_watchdog(unsigned long data)$/;"	f	file:
clocksource_watchdog_kthread	time/clocksource.c	/^static inline int clocksource_watchdog_kthread(void *data) { return 0; }$/;"	f	file:
clocksource_watchdog_kthread	time/clocksource.c	/^static int clocksource_watchdog_kthread(void *data)$/;"	f	file:
clocksource_watchdog_work	time/clocksource.c	/^static void clocksource_watchdog_work(struct work_struct *work)$/;"	f	file:
clone_uts_ns	utsname.c	/^static struct uts_namespace *clone_uts_ns(struct user_namespace *user_ns,$/;"	f	file:
close	trace/trace.h	/^	void			(*close)(struct trace_iterator *iter);$/;"	m	struct:tracer
cmd_attr_deregister_cpumask	taskstats.c	/^static int cmd_attr_deregister_cpumask(struct genl_info *info)$/;"	f	file:
cmd_attr_pid	taskstats.c	/^static int cmd_attr_pid(struct genl_info *info)$/;"	f	file:
cmd_attr_register_cpumask	taskstats.c	/^static int cmd_attr_register_cpumask(struct genl_info *info)$/;"	f	file:
cmd_attr_tgid	taskstats.c	/^static int cmd_attr_tgid(struct genl_info *info)$/;"	f	file:
cmd_bc	Makefile	/^      cmd_bc  = bc -q $(filter-out FORCE,$^) > $@$/;"	m
cmd_cur	debug/kdb/kdb_main.c	/^static char cmd_cur[CMD_BUFLEN];$/;"	v	file:
cmd_flags	debug/kdb/kdb_private.h	/^	short    cmd_flags;		\/* Parsing flags *\/$/;"	m	struct:_kdbtab
cmd_func	debug/kdb/kdb_private.h	/^	kdb_func_t cmd_func;		\/* Function to execute command *\/$/;"	m	struct:_kdbtab
cmd_gen-kdb	debug/kdb/Makefile	/^      cmd_gen-kdb = $(AWK) 'BEGIN {print "\\#include <linux\/stddef.h>"; print "\\#include <linux\/init.h>"} \\$/;"	m
cmd_head	debug/kdb/kdb_main.c	/^static unsigned int cmd_head, cmd_tail;$/;"	v	file:
cmd_help	debug/kdb/kdb_private.h	/^	char    *cmd_help;		\/* Help message for this command *\/$/;"	m	struct:_kdbtab
cmd_hist	debug/kdb/kdb_main.c	/^static char cmd_hist[KDB_CMD_HISTORY_COUNT][CMD_BUFLEN];$/;"	v	file:
cmd_hzfile	Makefile	/^      cmd_hzfile = echo "hz=$(CONFIG_HZ)" > $@$/;"	m
cmd_minlen	debug/kdb/kdb_private.h	/^	short    cmd_minlen;		\/* Minimum legal # command$/;"	m	struct:_kdbtab
cmd_name	debug/kdb/kdb_private.h	/^	char    *cmd_name;		\/* Command name *\/$/;"	m	struct:_kdbtab
cmd_pt	swap/energy/energy.c	/^struct cmd_pt {$/;"	s	file:
cmd_repeat	debug/kdb/kdb_private.h	/^	kdb_repeat_t cmd_repeat;	\/* Does command auto repeat on enter? *\/$/;"	m	struct:_kdbtab
cmd_tail	debug/kdb/kdb_main.c	/^static unsigned int cmd_head, cmd_tail;$/;"	v	file:
cmd_touch	Makefile	/^      cmd_touch = touch   $@$/;"	m
cmd_usage	debug/kdb/kdb_private.h	/^	char    *cmd_usage;		\/* Usage String for this command *\/$/;"	m	struct:_kdbtab
cmdline_idx	trace/trace.c	/^static int cmdline_idx;$/;"	v	file:
cmdptr	debug/kdb/kdb_main.c	/^static unsigned int cmdptr;$/;"	v	file:
cmp	power/swap.c	/^	unsigned char cmp[LZO_CMP_SIZE];          \/* compressed buffer *\/$/;"	m	struct:cmp_data	file:
cmp	power/swap.c	/^	unsigned char cmp[LZO_CMP_SIZE];          \/* compressed buffer *\/$/;"	m	struct:dec_data	file:
cmp_data	power/swap.c	/^struct cmp_data {$/;"	s	file:
cmp_f	swap/ks_features/ks_map.h	/^	cmp_func_t cmp_f;$/;"	m	struct:map
cmp_func_t	swap/ks_features/ks_map.h	/^typedef int (*cmp_func_t)(void *, void *);$/;"	t
cmp_len	power/swap.c	/^	size_t cmp_len;                           \/* compressed length *\/$/;"	m	struct:cmp_data	file:
cmp_len	power/swap.c	/^	size_t cmp_len;                           \/* compressed length *\/$/;"	m	struct:dec_data	file:
cmp_mb	swap/parser/msg_buf.c	/^int cmp_mb(struct msg_buf *mb, size_t size)$/;"	f
cmp_name	module.c	/^static int cmp_name(const void *va, const void *vb)$/;"	f	file:
cmp_next_hrtimer_event	timer.c	/^static unsigned long cmp_next_hrtimer_event(unsigned long now,$/;"	f	file:
cmp_range	range.c	/^static int cmp_range(const void *x1, const void *x2)$/;"	f	file:
cmp_stat_t	trace/trace_stat.c	/^typedef int (*cmp_stat_t)(void *, void *);$/;"	t	file:
cmppid	cgroup.c	/^static int cmppid(const void *a, const void *b)$/;"	f	file:
cmpxchg_futex_value_locked	futex.c	/^static int cmpxchg_futex_value_locked(u32 *curval, u32 __user *uaddr,$/;"	f	file:
cn_swap_id	swap/driver/us_interaction.c	/^static struct cb_id cn_swap_id = {CN_SWAP_IDX, CN_SWAP_VAL};$/;"	v	typeref:struct:cb_id	file:
cn_swap_name	swap/driver/us_interaction.c	/^static const char cn_swap_name[] = "cn_swap";$/;"	v	file:
cnt	cpuset.c	/^	int cnt;		\/* unprocessed events count *\/$/;"	m	struct:fmeter	file:
cnt	swap/ks_features/features_data.c	/^	size_t cnt;$/;"	m	struct:feature	file:
cnt	swap/parser/msg_parser.h	/^	u32 cnt;                            \/**< Apps count. *\/$/;"	m	struct:us_inst_data
cnt	swap/wsp/wsp.c	/^	unsigned long cnt;$/;"	m	struct:wsp_bin	file:
cnt	time/time_history.c	/^	u64 cnt;$/;"	m	struct:time_history_log_buf	file:
cnt	trace/ring_buffer.c	/^	int			cnt;$/;"	m	struct:rb_test_data	file:
cnt	trace/trace_events_filter.c	/^		unsigned int cnt;$/;"	m	struct:filter_parse_state::__anon90	file:
cnt_args	swap/ks_features/ksf_msg.c	/^	u32 cnt_args;$/;"	m	struct:msg_sys_entry	file:
cnt_args	swap/retprobe/rp_msg.c	/^	u32 cnt_args;$/;"	m	struct:msg_entry	file:
cnt_func	swap/parser/msg_parser.h	/^	u32 cnt_func;                       \/**< Function probes count in app. *\/$/;"	m	struct:app_inst_data
cnt_func	swap/parser/msg_parser.h	/^	u32 cnt_func;               \/**< Function probes count in this library. *\/$/;"	m	struct:lib_inst_data
cnt_init_sm	swap/ksyms/no_ksyms.c	/^static int cnt_init_sm;$/;"	v	file:
cnt_init_sm_lock	swap/ksyms/no_ksyms.c	/^DEFINE_SEMAPHORE(cnt_init_sm_lock);$/;"	v
cnt_lib	swap/parser/msg_parser.h	/^	u32 cnt_lib;                        \/**< Libs count. *\/$/;"	m	struct:app_inst_data
coef	swap/energy/debugfs_energy.c	/^	struct rational *coef;$/;"	m	struct:param_data	typeref:struct:param_data::rational	file:
collect_garbage_slots	kprobes.c	/^static int __kprobes collect_garbage_slots(struct kprobe_insn_cache *c)$/;"	f	file:
collect_one_slot	kprobes.c	/^static int __kprobes collect_one_slot(struct kprobe_insn_page *kip, int idx)$/;"	f	file:
collect_signal	signal.c	/^static void collect_signal(int sig, struct sigpending *list, siginfo_t *info)$/;"	f	file:
comm	events/core.c	/^	char			*comm;$/;"	m	struct:perf_comm_event	file:
comm	swap/parser/usm_msg.c	/^	char comm[0];$/;"	m	struct:proc_comm	file:
comm	swap/parser/usm_msg.c	/^	char comm[0];$/;"	m	struct:proc_info_top	file:
comm	time/time_history.c	/^	char comm[TASK_COMM_LEN + 1];$/;"	m	struct:time_log_entry	file:
comm	time/timer_stats.c	/^	char			comm[TASK_COMM_LEN + 1];$/;"	m	struct:entry	file:
comm	trace/trace.h	/^	char			comm[TASK_COMM_LEN];$/;"	m	struct:trace_array_cpu
comm	trace/trace_probe.h	/^	const char		*comm;	\/* Command of this argument *\/$/;"	m	struct:probe_arg
comm_data	swap/us_manager/helper.c	/^struct comm_data {$/;"	s	file:
comm_kretprobe	swap/us_manager/helper.c	/^static struct kretprobe comm_kretprobe = {$/;"	v	typeref:struct:kretprobe	file:
comm_size	events/core.c	/^	int			comm_size;$/;"	m	struct:perf_comm_event	file:
command	debug/kdb/kdb_main.c	/^	char **command;$/;"	m	struct:defcmd_set	file:
commit	trace/ring_buffer.c	/^	local_t		 commit;	\/* write committed index *\/$/;"	m	struct:buffer_data_page	file:
commit	trace/ring_buffer_benchmark.c	/^	local_t		commit;$/;"	m	struct:rb_page	file:
commit_creds	cred.c	/^EXPORT_SYMBOL(commit_creds);$/;"	v
commit_creds	cred.c	/^int commit_creds(struct cred *new)$/;"	f
commit_overrun	trace/ring_buffer.c	/^	local_t				commit_overrun;$/;"	m	struct:ring_buffer_per_cpu	file:
commit_page	trace/ring_buffer.c	/^	struct buffer_page		*commit_page;	\/* committed pages *\/$/;"	m	struct:ring_buffer_per_cpu	typeref:struct:ring_buffer_per_cpu::buffer_page	file:
commits	trace/ring_buffer.c	/^	local_t				commits;$/;"	m	struct:ring_buffer_per_cpu	file:
committing	trace/ring_buffer.c	/^	local_t				committing;$/;"	m	struct:ring_buffer_per_cpu	file:
common_buf	swap/writer/debugfs_writer.c	/^static char *common_buf;$/;"	v	file:
common_buf_size	swap/writer/debugfs_writer.c	/^enum { common_buf_size = subbuf_size * NR_CPUS };$/;"	e	enum:__anon63	file:
common_nsleep	posix-timers.c	/^static int common_nsleep(const clockid_t which_clock, int flags,$/;"	f	file:
common_timer_create	posix-timers.c	/^static int common_timer_create(struct k_itimer *new_timer)$/;"	f	file:
common_timer_del	posix-timers.c	/^static int common_timer_del(struct k_itimer *timer)$/;"	f	file:
common_timer_get	posix-timers.c	/^common_timer_get(struct k_itimer *timr, struct itimerspec *cur_setting)$/;"	f	file:
common_timer_set	posix-timers.c	/^common_timer_set(struct k_itimer *timr, int flags,$/;"	f	file:
comp_idx	time/time_history.c	/^	int comp_idx;$/;"	m	struct:time_history_iter	file:
comp_log	time/time_history.c	/^	struct time_history_log_buf *comp_log;$/;"	m	struct:time_history_iter	typeref:struct:time_history_iter::time_history_log_buf	file:
compare_css_sets	cgroup.c	/^static bool compare_css_sets(struct css_set *cg,$/;"	f	file:
compare_root	audit_tree.c	/^static int compare_root(struct vfsmount *mnt, void *arg)$/;"	f	file:
compat_alloc_user_space	compat.c	/^EXPORT_SYMBOL_GPL(compat_alloc_user_space);$/;"	v
compat_alloc_user_space	compat.c	/^void __user *compat_alloc_user_space(unsigned long len)$/;"	f
compat_blk_trace_setup	trace/blktrace.c	/^static int compat_blk_trace_setup(struct request_queue *q, char *name,$/;"	f	file:
compat_clock_nanosleep_restart	compat.c	/^static long compat_clock_nanosleep_restart(struct restart_block *restart)$/;"	f	file:
compat_exit_robust_list	futex_compat.c	/^void compat_exit_robust_list(struct task_struct *curr)$/;"	f
compat_get_bitmap	compat.c	/^long compat_get_bitmap(unsigned long *mask, const compat_ulong_t __user *umask,$/;"	f
compat_get_timespec	compat.c	/^EXPORT_SYMBOL_GPL(compat_get_timespec);$/;"	v
compat_get_timespec	compat.c	/^int compat_get_timespec(struct timespec *ts, const void __user *uts)$/;"	f
compat_get_timeval	compat.c	/^EXPORT_SYMBOL_GPL(compat_get_timeval);$/;"	v
compat_get_timeval	compat.c	/^int compat_get_timeval(struct timeval *tv, const void __user *utv)$/;"	f
compat_get_timeval_convert	compat.c	/^static int compat_get_timeval_convert(struct timespec *o,$/;"	f	file:
compat_get_timex	compat.c	/^static int compat_get_timex(struct timex *txc, struct compat_timex __user *utp)$/;"	f	file:
compat_get_user_cpu_mask	compat.c	/^static int compat_get_user_cpu_mask(compat_ulong_t __user *user_mask_ptr,$/;"	f	file:
compat_nanosleep_restart	compat.c	/^static long compat_nanosleep_restart(struct restart_block *restart)$/;"	f	file:
compat_ptrace_request	ptrace.c	/^int compat_ptrace_request(struct task_struct *child, compat_long_t request,$/;"	f
compat_put_bitmap	compat.c	/^long compat_put_bitmap(compat_ulong_t __user *umask, unsigned long *mask,$/;"	f
compat_put_timespec	compat.c	/^EXPORT_SYMBOL_GPL(compat_put_timespec);$/;"	v
compat_put_timespec	compat.c	/^int compat_put_timespec(const struct timespec *ts, void __user *uts)$/;"	f
compat_put_timeval	compat.c	/^EXPORT_SYMBOL_GPL(compat_put_timeval);$/;"	v
compat_put_timeval	compat.c	/^int compat_put_timeval(const struct timeval *tv, void __user *utv)$/;"	f
compat_put_timeval_convert	compat.c	/^static int compat_put_timeval_convert(struct compat_timeval __user *o,$/;"	f	file:
compat_put_timex	compat.c	/^static int compat_put_timex(struct compat_timex __user *utp, struct timex *txc)$/;"	f	file:
compat_restore_altstack	signal.c	/^int compat_restore_altstack(const compat_stack_t __user *uss)$/;"	f
compat_resume_swap_area	power/user.c	/^struct compat_resume_swap_area {$/;"	s	file:
compat_sig_setmask	compat.c	/^static inline void compat_sig_setmask(sigset_t *blocked, compat_sigset_word set)$/;"	f	file:
compat_sys_adjtimex	compat.c	/^asmlinkage long compat_sys_adjtimex(struct compat_timex __user *utp)$/;"	f
compat_sys_clock_adjtime	compat.c	/^long compat_sys_clock_adjtime(clockid_t which_clock,$/;"	f
compat_sys_clock_getres	compat.c	/^long compat_sys_clock_getres(clockid_t which_clock,$/;"	f
compat_sys_clock_gettime	compat.c	/^long compat_sys_clock_gettime(clockid_t which_clock,$/;"	f
compat_sys_clock_nanosleep	compat.c	/^long compat_sys_clock_nanosleep(clockid_t which_clock, int flags,$/;"	f
compat_sys_clock_settime	compat.c	/^long compat_sys_clock_settime(clockid_t which_clock,$/;"	f
compat_sys_epoll_pwait	sys_ni.c	/^cond_syscall(compat_sys_epoll_pwait);$/;"	v
compat_sys_fanotify_mark	sys_ni.c	/^cond_syscall(compat_sys_fanotify_mark);$/;"	v
compat_sys_futex	sys_ni.c	/^cond_syscall(compat_sys_futex);$/;"	v
compat_sys_get_mempolicy	sys_ni.c	/^cond_syscall(compat_sys_get_mempolicy);$/;"	v
compat_sys_get_robust_list	sys_ni.c	/^cond_syscall(compat_sys_get_robust_list);$/;"	v
compat_sys_getrlimit	compat.c	/^asmlinkage long compat_sys_getrlimit(unsigned int resource,$/;"	f
compat_sys_getsockopt	sys_ni.c	/^cond_syscall(compat_sys_getsockopt);$/;"	v
compat_sys_gettimeofday	compat.c	/^asmlinkage long compat_sys_gettimeofday(struct compat_timeval __user *tv,$/;"	f
compat_sys_ipc	sys_ni.c	/^cond_syscall(compat_sys_ipc);$/;"	v
compat_sys_kexec_load	kexec.c	/^asmlinkage long compat_sys_kexec_load(unsigned long entry,$/;"	f
compat_sys_kexec_load	sys_ni.c	/^cond_syscall(compat_sys_kexec_load);$/;"	v
compat_sys_keyctl	sys_ni.c	/^cond_syscall(compat_sys_keyctl);$/;"	v
compat_sys_lookup_dcookie	sys_ni.c	/^cond_syscall(compat_sys_lookup_dcookie);$/;"	v
compat_sys_mbind	sys_ni.c	/^cond_syscall(compat_sys_mbind);$/;"	v
compat_sys_migrate_pages	compat.c	/^asmlinkage long compat_sys_migrate_pages(compat_pid_t pid,$/;"	f
compat_sys_migrate_pages	sys_ni.c	/^cond_syscall(compat_sys_migrate_pages);$/;"	v
compat_sys_move_pages	compat.c	/^asmlinkage long compat_sys_move_pages(pid_t pid, unsigned long nr_pages,$/;"	f
compat_sys_move_pages	sys_ni.c	/^cond_syscall(compat_sys_move_pages);$/;"	v
compat_sys_mq_getsetattr	sys_ni.c	/^cond_syscall(compat_sys_mq_getsetattr);$/;"	v
compat_sys_mq_notify	sys_ni.c	/^cond_syscall(compat_sys_mq_notify);$/;"	v
compat_sys_mq_open	sys_ni.c	/^cond_syscall(compat_sys_mq_open);$/;"	v
compat_sys_mq_timedreceive	sys_ni.c	/^cond_syscall(compat_sys_mq_timedreceive);$/;"	v
compat_sys_mq_timedsend	sys_ni.c	/^cond_syscall(compat_sys_mq_timedsend);$/;"	v
compat_sys_msgctl	sys_ni.c	/^cond_syscall(compat_sys_msgctl);$/;"	v
compat_sys_msgrcv	sys_ni.c	/^cond_syscall(compat_sys_msgrcv);$/;"	v
compat_sys_msgsnd	sys_ni.c	/^cond_syscall(compat_sys_msgsnd);$/;"	v
compat_sys_nanosleep	compat.c	/^asmlinkage long compat_sys_nanosleep(struct compat_timespec __user *rqtp,$/;"	f
compat_sys_old_getrlimit	compat.c	/^asmlinkage long compat_sys_old_getrlimit(unsigned int resource,$/;"	f
compat_sys_open_by_handle_at	sys_ni.c	/^cond_syscall(compat_sys_open_by_handle_at);$/;"	v
compat_sys_process_vm_readv	sys_ni.c	/^cond_syscall(compat_sys_process_vm_readv);$/;"	v
compat_sys_process_vm_writev	sys_ni.c	/^cond_syscall(compat_sys_process_vm_writev);$/;"	v
compat_sys_ptrace	ptrace.c	/^asmlinkage long compat_sys_ptrace(compat_long_t request, compat_long_t pid,$/;"	f
compat_sys_recv	sys_ni.c	/^cond_syscall(compat_sys_recv);$/;"	v
compat_sys_recvfrom	sys_ni.c	/^cond_syscall(compat_sys_recvfrom);$/;"	v
compat_sys_recvmmsg	sys_ni.c	/^cond_syscall(compat_sys_recvmmsg);$/;"	v
compat_sys_recvmsg	sys_ni.c	/^cond_syscall(compat_sys_recvmsg);$/;"	v
compat_sys_s390_ipc	sys_ni.c	/^cond_syscall(compat_sys_s390_ipc);$/;"	v
compat_sys_sched_getaffinity	compat.c	/^asmlinkage long compat_sys_sched_getaffinity(compat_pid_t pid, unsigned int len,$/;"	f
compat_sys_sched_setaffinity	compat.c	/^asmlinkage long compat_sys_sched_setaffinity(compat_pid_t pid,$/;"	f
compat_sys_semctl	sys_ni.c	/^cond_syscall(compat_sys_semctl);$/;"	v
compat_sys_semtimedop	sys_ni.c	/^cond_syscall(compat_sys_semtimedop);$/;"	v
compat_sys_sendmmsg	sys_ni.c	/^cond_syscall(compat_sys_sendmmsg);$/;"	v
compat_sys_sendmsg	sys_ni.c	/^cond_syscall(compat_sys_sendmsg);$/;"	v
compat_sys_set_mempolicy	sys_ni.c	/^cond_syscall(compat_sys_set_mempolicy);$/;"	v
compat_sys_set_robust_list	sys_ni.c	/^cond_syscall(compat_sys_set_robust_list);$/;"	v
compat_sys_setrlimit	compat.c	/^asmlinkage long compat_sys_setrlimit(unsigned int resource,$/;"	f
compat_sys_setsockopt	sys_ni.c	/^cond_syscall(compat_sys_setsockopt);$/;"	v
compat_sys_settimeofday	compat.c	/^asmlinkage long compat_sys_settimeofday(struct compat_timeval __user *tv,$/;"	f
compat_sys_shmat	sys_ni.c	/^cond_syscall(compat_sys_shmat);$/;"	v
compat_sys_shmctl	sys_ni.c	/^cond_syscall(compat_sys_shmctl);$/;"	v
compat_sys_signalfd	sys_ni.c	/^cond_syscall(compat_sys_signalfd);$/;"	v
compat_sys_signalfd4	sys_ni.c	/^cond_syscall(compat_sys_signalfd4);$/;"	v
compat_sys_sigpending	compat.c	/^asmlinkage long compat_sys_sigpending(compat_old_sigset_t __user *set)$/;"	f
compat_sys_socketcall	sys_ni.c	/^cond_syscall(compat_sys_socketcall);$/;"	v
compat_sys_stime	compat.c	/^asmlinkage long compat_sys_stime(compat_time_t __user *tptr)$/;"	f
compat_sys_sysctl	sys_ni.c	/^cond_syscall(compat_sys_sysctl);$/;"	v
compat_sys_time	compat.c	/^asmlinkage long compat_sys_time(compat_time_t __user * tloc)$/;"	f
compat_sys_timer_create	compat.c	/^long compat_sys_timer_create(clockid_t which_clock,$/;"	f
compat_sys_timer_gettime	compat.c	/^long compat_sys_timer_gettime(timer_t timer_id,$/;"	f
compat_sys_timer_settime	compat.c	/^long compat_sys_timer_settime(timer_t timer_id, int flags,$/;"	f
compat_sys_timerfd_gettime	sys_ni.c	/^cond_syscall(compat_sys_timerfd_gettime);$/;"	v
compat_sys_timerfd_settime	sys_ni.c	/^cond_syscall(compat_sys_timerfd_settime);$/;"	v
compat_sys_times	compat.c	/^asmlinkage long compat_sys_times(struct compat_tms __user *tbuf)$/;"	f
compat_sysctl_args	sysctl_binary.c	/^struct compat_sysctl_args {$/;"	s	file:
compat_sysinfo	sys.c	/^struct compat_sysinfo {$/;"	s	file:
complete	sched/core.c	/^EXPORT_SYMBOL(complete);$/;"	v
complete	sched/core.c	/^void complete(struct completion *x)$/;"	f
complete_all	sched/core.c	/^EXPORT_SYMBOL(complete_all);$/;"	v
complete_all	sched/core.c	/^void complete_all(struct completion *x)$/;"	f
complete_and_exit	exit.c	/^EXPORT_SYMBOL(complete_and_exit);$/;"	v
complete_and_exit	exit.c	/^void complete_and_exit(struct completion *comp, long code)$/;"	f
complete_formation	module.c	/^static int complete_formation(struct module *mod, struct load_info *info)$/;"	f	file:
complete_signal	signal.c	/^static void complete_signal(int sig, struct task_struct *p, int group)$/;"	f	file:
complete_vfork_done	fork.c	/^static void complete_vfork_done(struct task_struct *tsk)$/;"	f	file:
completed	rcutiny_plugin.h	/^	u8 completed;		\/* Last grace period completed. *\/$/;"	m	struct:rcu_preempt_ctrlblk
completed	rcutorture.c	/^	int (*completed)(void);$/;"	m	struct:rcu_torture_ops	file:
completed	rcutree.h	/^	unsigned long	completed;	\/* Track rsp->completed gp number *\/$/;"	m	struct:rcu_data
completed	rcutree.h	/^	unsigned long completed;		\/* # of last completed gp. *\/$/;"	m	struct:rcu_state
completed	rcutree.h	/^	unsigned long completed; \/* Last GP completed for this node. *\/$/;"	m	struct:rcu_node
completion	rcupdate.c	/^	struct completion completion;$/;"	m	struct:rcu_synchronize	typeref:struct:rcu_synchronize::completion	file:
completion	srcu.c	/^	struct completion completion;$/;"	m	struct:rcu_synchronize	typeref:struct:rcu_synchronize::completion	file:
completion	stop_machine.c	/^	struct completion	completion;	\/* fired if nr_todo reaches 0 *\/$/;"	m	struct:cpu_stop_done	typeref:struct:cpu_stop_done::completion	file:
completion_done	sched/core.c	/^EXPORT_SYMBOL(completion_done);$/;"	v
completion_done	sched/core.c	/^bool completion_done(struct completion *x)$/;"	f
cond_unmask_irq	irq/chip.c	/^static void cond_unmask_irq(struct irq_desc *desc)$/;"	f	file:
condway	swap/kprobe/arch/arm/swap-asm/trampoline_arm.S	/^condway:	ldr	pc, bd2$/;"	l
condway	swap/uprobe/arch/arm/swap-asm/trampoline_thumb.S	/^condway:	push {r0,r1}$/;"	l
conf_data	swap/parser/msg_parser.h	/^struct conf_data {$/;"	s
config	swap/parser/msg_parser.c	/^static struct conf_data config;$/;"	v	typeref:struct:conf_data	file:
cons	printk.c	/^	size_t cons;			\/* bytes written to console *\/$/;"	m	struct:cont	file:
cons	printk.c	/^	size_t cons;$/;"	m	struct:cont	file:
console_cmdline	printk.c	/^static struct console_cmdline console_cmdline[MAX_CMDLINECONSOLES];$/;"	v	typeref:struct:console_cmdline	file:
console_cmdline	printk.c	/^struct console_cmdline$/;"	s	file:
console_conditional_schedule	printk.c	/^EXPORT_SYMBOL(console_conditional_schedule);$/;"	v
console_conditional_schedule	printk.c	/^void __sched console_conditional_schedule(void)$/;"	f
console_cont_flush	printk.c	/^static void console_cont_flush(char *text, size_t size)$/;"	f	file:
console_cpu_notify	printk.c	/^static int __cpuinit console_cpu_notify(struct notifier_block *self,$/;"	f	file:
console_device	printk.c	/^struct tty_driver *console_device(int *index)$/;"	f
console_drivers	printk.c	/^EXPORT_SYMBOL_GPL(console_drivers);$/;"	v
console_drivers	printk.c	/^struct console *console_drivers;$/;"	v	typeref:struct:console
console_early_suspend	power/consoleearlysuspend.c	/^static void console_early_suspend(struct early_suspend *h)$/;"	f	file:
console_early_suspend_desc	power/consoleearlysuspend.c	/^static struct early_suspend console_early_suspend_desc = {$/;"	v	typeref:struct:early_suspend	file:
console_early_suspend_exit	power/consoleearlysuspend.c	/^module_exit(console_early_suspend_exit);$/;"	v
console_early_suspend_exit	power/consoleearlysuspend.c	/^static void  __exit console_early_suspend_exit(void)$/;"	f	file:
console_early_suspend_init	power/consoleearlysuspend.c	/^module_init(console_early_suspend_init);$/;"	v
console_early_suspend_init	power/consoleearlysuspend.c	/^static int __init console_early_suspend_init(void)$/;"	f	file:
console_idx	printk.c	/^static u32 console_idx;$/;"	v	file:
console_late_resume	power/consoleearlysuspend.c	/^static void console_late_resume(struct early_suspend *h)$/;"	f	file:
console_lock	printk.c	/^EXPORT_SYMBOL(console_lock);$/;"	v
console_lock	printk.c	/^void console_lock(void)$/;"	f
console_lock_dep_map	printk.c	/^static struct lockdep_map console_lock_dep_map = {$/;"	v	typeref:struct:lockdep_map	file:
console_locked	printk.c	/^static int console_locked, console_suspended;$/;"	v	file:
console_may_schedule	printk.c	/^static int console_may_schedule;$/;"	v	file:
console_prev	printk.c	/^static enum log_flags console_prev;$/;"	v	typeref:enum:log_flags	file:
console_printk	printk.c	/^int console_printk[4] = {$/;"	v
console_seq	printk.c	/^static u64 console_seq;$/;"	v	file:
console_set_on_cmdline	printk.c	/^EXPORT_SYMBOL(console_set_on_cmdline);$/;"	v
console_set_on_cmdline	printk.c	/^int console_set_on_cmdline;$/;"	v
console_setup	printk.c	/^static int __init console_setup(char *str)$/;"	f	file:
console_start	printk.c	/^EXPORT_SYMBOL(console_start);$/;"	v
console_start	printk.c	/^void console_start(struct console *console)$/;"	f
console_stop	printk.c	/^EXPORT_SYMBOL(console_stop);$/;"	v
console_stop	printk.c	/^void console_stop(struct console *console)$/;"	f
console_suspend_disable	printk.c	/^static int __init console_suspend_disable(char *str)$/;"	f	file:
console_suspend_enabled	printk.c	/^EXPORT_SYMBOL(console_suspend_enabled);$/;"	v
console_suspend_enabled	printk.c	/^bool console_suspend_enabled = 1;$/;"	v
console_suspended	printk.c	/^static int console_locked, console_suspended;$/;"	v	file:
console_trylock	printk.c	/^EXPORT_SYMBOL(console_trylock);$/;"	v
console_trylock	printk.c	/^int console_trylock(void)$/;"	f
console_unblank	printk.c	/^void console_unblank(void)$/;"	f
console_unlock	printk.c	/^EXPORT_SYMBOL(console_unlock);$/;"	v
console_unlock	printk.c	/^void console_unlock(void)$/;"	f
const_debug	sched/sched.h	727;"	d
const_debug	sched/sched.h	729;"	d
constraints	power/qos.c	/^	struct pm_qos_constraints *constraints;$/;"	m	struct:pm_qos_object	typeref:struct:pm_qos_object::pm_qos_constraints	file:
constraints_initialized	events/hw_breakpoint.c	/^static int constraints_initialized;$/;"	v	file:
consumer	trace/ring_buffer_benchmark.c	/^static struct task_struct *consumer;$/;"	v	typeref:struct:task_struct	file:
consumer	trace/trace_uprobe.c	/^	struct uprobe_consumer		consumer;$/;"	m	struct:trace_uprobe	typeref:struct:trace_uprobe::uprobe_consumer	file:
consumer_add	events/uprobes.c	/^static void consumer_add(struct uprobe *uprobe, struct uprobe_consumer *uc)$/;"	f	file:
consumer_del	events/uprobes.c	/^static bool consumer_del(struct uprobe *uprobe, struct uprobe_consumer *uc)$/;"	f	file:
consumer_fifo	trace/ring_buffer_benchmark.c	/^static int consumer_fifo = -1;$/;"	v	file:
consumer_filter	events/uprobes.c	/^static inline bool consumer_filter(struct uprobe_consumer *uc,$/;"	f	file:
consumer_nice	trace/ring_buffer_benchmark.c	/^static int consumer_nice = 19;$/;"	v	file:
consumer_rwsem	events/uprobes.c	/^	struct rw_semaphore	consumer_rwsem;$/;"	m	struct:uprobe	typeref:struct:uprobe::rw_semaphore	file:
consumers	events/uprobes.c	/^	struct uprobe_consumer	*consumers;$/;"	m	struct:uprobe	typeref:struct:uprobe::uprobe_consumer	file:
cont	printk.c	/^static struct cont {$/;"	s	file:
cont	printk.c	/^} cont;$/;"	v	typeref:struct:cont	file:
cont	trace/trace.h	/^	bool		cont;$/;"	m	struct:trace_parser
cont_add	printk.c	/^static bool cont_add(int facility, int level, const char *text, size_t len)$/;"	f	file:
cont_flush	printk.c	/^static void cont_flush(enum log_flags flags)$/;"	f	file:
cont_print_text	printk.c	/^static size_t cont_print_text(char *text, size_t size) { return 0; }$/;"	f	file:
cont_print_text	printk.c	/^static size_t cont_print_text(char *text, size_t size)$/;"	f	file:
context_equiv	events/core.c	/^static int context_equiv(struct perf_event_context *ctx1,$/;"	f	file:
context_switch	sched/core.c	/^context_switch(struct rq *rq, struct task_struct *prev,$/;"	f	file:
context_switch	swap/ks_features/ksf_msg.c	/^static void context_switch(struct pt_regs *regs, enum swap_msg_id id)$/;"	f	file:
context_switch	swap/parser/features.c	/^	context_switch	= (1 << 16),	\/**< Context switch tracing *\/$/;"	e	enum:features_list	file:
context_tracking_task_switch	context_tracking.c	/^void context_tracking_task_switch(struct task_struct *prev,$/;"	f
control_ops	trace/ftrace.c	/^static struct ftrace_ops control_ops = {$/;"	v	typeref:struct:ftrace_ops	file:
control_ops	trace/ftrace.c	/^static struct ftrace_ops control_ops;$/;"	v	typeref:struct:ftrace_ops	file:
control_ops_alloc	trace/ftrace.c	/^static int control_ops_alloc(struct ftrace_ops *ops)$/;"	f	file:
control_ops_disable_all	trace/ftrace.c	/^static void control_ops_disable_all(struct ftrace_ops *ops)$/;"	f	file:
control_ops_free	trace/ftrace.c	/^static void control_ops_free(struct ftrace_ops *ops)$/;"	f	file:
convert	sysctl_binary.c	/^	bin_convert_t		*convert;$/;"	m	struct:bin_table	file:
convert_kthread_status	rcutree_trace.c	/^static char convert_kthread_status(unsigned int kthread_status)$/;"	f	file:
convert_prio	sched/cpupri.c	/^static int convert_prio(int prio)$/;"	f	file:
convert_rloc_to_loc	trace/trace_probe.h	82;"	d
cookie	async.c	/^	async_cookie_t		cookie;$/;"	m	struct:async_entry	file:
copy	swap/us_manager/probes/register_probes.h	/^	int (*copy)(struct probe_info *, const struct probe_info *);$/;"	m	struct:probe_iface
copy_bm	power/snapshot.c	/^static struct memory_bitmap copy_bm;$/;"	v	typeref:struct:memory_bitmap	file:
copy_creds	cred.c	/^int copy_creds(struct task_struct *p, unsigned long clone_flags)$/;"	f
copy_data_page	power/snapshot.c	/^static inline void copy_data_page(unsigned long dst_pfn, unsigned long src_pfn)$/;"	f	file:
copy_data_page	power/snapshot.c	/^static void copy_data_page(unsigned long dst_pfn, unsigned long src_pfn)$/;"	f	file:
copy_data_pages	power/snapshot.c	/^copy_data_pages(struct memory_bitmap *copy_bm, struct memory_bitmap *orig_bm)$/;"	f	file:
copy_files	fork.c	/^static int copy_files(unsigned long clone_flags, struct task_struct *tsk)$/;"	f	file:
copy_flags	fork.c	/^static void copy_flags(unsigned long clone_flags, struct task_struct *p)$/;"	f	file:
copy_from_page	events/uprobes.c	/^static void copy_from_page(struct page *page, unsigned long vaddr, void *dst, int len)$/;"	f	file:
copy_fs	fork.c	/^static int copy_fs(unsigned long clone_flags, struct task_struct *tsk)$/;"	f	file:
copy_history_data	power/sleep_history.c	/^static struct sleep_history_data copy_history_data;$/;"	v	typeref:struct:sleep_history_data	file:
copy_insn	events/uprobes.c	/^static int copy_insn(struct uprobe *uprobe, struct file *filp)$/;"	f	file:
copy_io	fork.c	/^static int copy_io(unsigned long clone_flags, struct task_struct *tsk)$/;"	f	file:
copy_kprobe	kprobes.c	/^static inline void copy_kprobe(struct kprobe *ap, struct kprobe *p)$/;"	f	file:
copy_kprobe	swap/kprobe/swap_kprobes.c	/^static inline void copy_kprobe(struct kprobe *old_p, struct kprobe *p)$/;"	f	file:
copy_last_highmem_page	power/snapshot.c	/^static inline void copy_last_highmem_page(void) {}$/;"	f	file:
copy_last_highmem_page	power/snapshot.c	/^static void copy_last_highmem_page(void)$/;"	f	file:
copy_mm	fork.c	/^static int copy_mm(unsigned long clone_flags, struct task_struct *tsk)$/;"	f	file:
copy_module_from_fd	module.c	/^static int copy_module_from_fd(int fd, struct load_info *info)$/;"	f	file:
copy_module_from_user	module.c	/^static int copy_module_from_user(const void __user *umod, unsigned long len,$/;"	f	file:
copy_namespaces	nsproxy.c	/^int copy_namespaces(unsigned long flags, struct task_struct *tsk)$/;"	f
copy_page	power/snapshot.c	/^	struct page *copy_page;	\/* data is here now *\/$/;"	m	struct:highmem_pbe	typeref:struct:highmem_pbe::page	file:
copy_pid_ns	pid_namespace.c	/^struct pid_namespace *copy_pid_ns(unsigned long flags,$/;"	f
copy_process	fork.c	/^static struct task_struct *copy_process(unsigned long clone_flags,$/;"	f	file:
copy_process_cnt	swap/us_manager/helper.c	/^static atomic_t copy_process_cnt = ATOMIC_INIT(0);$/;"	v	file:
copy_process_ret_handler	swap/task_data/task_data.c	/^static int copy_process_ret_handler(struct kretprobe_instance *ri,$/;"	f	file:
copy_process_rp	swap/task_data/task_data.c	/^static struct kretprobe copy_process_rp = {$/;"	v	typeref:struct:kretprobe	file:
copy_seccomp	fork.c	/^static void copy_seccomp(struct task_struct *p)$/;"	f	file:
copy_sighand	fork.c	/^static int copy_sighand(unsigned long clone_flags, struct task_struct *tsk)$/;"	f	file:
copy_siginfo_to_user	signal.c	/^int copy_siginfo_to_user(siginfo_t __user *to, siginfo_t *from)$/;"	f
copy_signal	fork.c	/^static int copy_signal(unsigned long clone_flags, struct task_struct *tsk)$/;"	f	file:
copy_to_page	events/uprobes.c	/^static void copy_to_page(struct page *page, unsigned long vaddr, const void *src, int len)$/;"	f	file:
copy_uprobe	swap/uprobe/swap_uprobes.c	/^static inline void copy_uprobe(struct kprobe *old_p, struct kprobe *p)$/;"	f	file:
copy_utsname	utsname.c	/^struct uts_namespace *copy_utsname(unsigned long flags,$/;"	f
copy_workqueue_attrs	workqueue.c	/^static void copy_workqueue_attrs(struct workqueue_attrs *to,$/;"	f	file:
core_exit	swap/writer/swap_writer_module.c	/^static void core_exit(void)$/;"	f	file:
core_flag	swap/master/swap_initializer.h	/^	unsigned core_flag:1;$/;"	m	struct:swap_init_struct
core_init	swap/master/swap_initializer.h	/^	swap_init_t core_init;$/;"	m	struct:swap_init_struct
core_init	swap/writer/swap_writer_module.c	/^static int core_init(void)$/;"	f	file:
core_kernel_data	extable.c	/^int core_kernel_data(unsigned long addr)$/;"	f
core_kernel_text	extable.c	/^int core_kernel_text(unsigned long addr)$/;"	f
core_uninit	swap/ks_features/ks_features.c	/^static void core_uninit(void)$/;"	f	file:
core_uninit	swap/master/swap_initializer.h	/^	swap_uninit_t core_uninit;$/;"	m	struct:swap_init_struct
coredump_filter_setup	fork.c	/^static int __init coredump_filter_setup(char *s)$/;"	f	file:
correct_probe_type	swap/us_manager/probes/probes.c	/^static inline int correct_probe_type(enum probe_t probe_type)$/;"	f	file:
count	audit_tree.c	/^	atomic_t count;$/;"	m	struct:audit_tree	file:
count	audit_tree.c	/^	int count;$/;"	m	struct:audit_chunk	file:
count	audit_watch.c	/^	atomic_t		count;	\/* reference count *\/$/;"	m	struct:audit_watch	file:
count	debug/kdb/kdb_main.c	/^	int count;$/;"	m	struct:defcmd_set	file:
count	gcov/gcc_3_4.c	/^	unsigned int count;$/;"	m	struct:gcov_iterator	file:
count	sched/cpupri.h	/^	atomic_t	count;$/;"	m	struct:cpupri_vec
count	swap/driver/swap_ioctl.h	/^	unsigned int count;$/;"	m	struct:buffer_initialize
count	time/timer_stats.c	/^	unsigned long		count;$/;"	m	struct:entry	file:
count	trace/ftrace.c	/^	unsigned long		count;$/;"	m	struct:ftrace_hash	file:
count	trace/trace_events.c	/^	unsigned long			count;$/;"	m	struct:event_probe_data	file:
count	trace/trace_events_filter.c	/^	int count;$/;"	m	struct:check_pred_data	file:
count	trace/trace_events_filter.c	/^	int count;$/;"	m	struct:fold_pred_data	file:
count_available	swap/kprobe/swap_slots.c	/^	unsigned long count_available;$/;"	m	struct:chunk	file:
count_data_pages	power/snapshot.c	/^static unsigned int count_data_pages(void)$/;"	f	file:
count_free_highmem_pages	power/snapshot.c	/^static unsigned int count_free_highmem_pages(void)$/;"	f	file:
count_highmem_image_pages	power/snapshot.c	/^count_highmem_image_pages(struct memory_bitmap *bm) { return 0; }$/;"	f	file:
count_highmem_image_pages	power/snapshot.c	/^static unsigned int count_highmem_image_pages(struct memory_bitmap *bm)$/;"	f	file:
count_highmem_pages	power/power.h	/^static inline unsigned int count_highmem_pages(void) { return 0; }$/;"	f
count_highmem_pages	power/snapshot.c	/^static unsigned int count_highmem_pages(void)$/;"	f	file:
count_leafs	trace/trace_events_filter.c	/^static int count_leafs(struct filter_pred *preds, struct filter_pred *root)$/;"	f	file:
count_leafs_cb	trace/trace_events_filter.c	/^static int count_leafs_cb(enum move_type move, struct filter_pred *pred,$/;"	f	file:
count_matching_names	lockdep.c	/^static int count_matching_names(struct lock_class *new_class)$/;"	f	file:
count_overruns	trace/trace_mmiotrace.c	/^static unsigned long count_overruns(struct trace_iterator *iter)$/;"	f	file:
count_pages_for_highmem	power/snapshot.c	/^count_pages_for_highmem(unsigned int nr_highmem) { return 0; }$/;"	f	file:
count_pages_for_highmem	power/snapshot.c	/^static unsigned int count_pages_for_highmem(unsigned int nr_highmem)$/;"	f	file:
count_preds	trace/trace_events_filter.c	/^static int count_preds(struct filter_parse_state *ps)$/;"	f	file:
counter	swap/ks_features/ks_features.c	/^	int counter;$/;"	m	struct:ks_probe	file:
counter	trace/ftrace.c	/^	unsigned long			counter;$/;"	m	struct:ftrace_profile	file:
counter_active	gcov/gcc_3_4.c	/^static int counter_active(struct gcov_info *info, unsigned int type)$/;"	f	file:
counts	gcov/gcov.h	/^	struct gcov_ctr_info		counts[0];$/;"	m	struct:gcov_info	typeref:struct:gcov_info::gcov_ctr_info
cp_cb	swap/us_manager/helper.c	/^static unsigned long cp_cb(void *data)$/;"	f	file:
cp_kprobe	swap/us_manager/helper.c	/^static struct kprobe cp_kprobe = {$/;"	v	typeref:struct:kprobe	file:
cp_kretprobe	swap/us_manager/helper.c	/^static struct kretprobe cp_kretprobe = {$/;"	v	typeref:struct:kretprobe	file:
cpu	debug/debug_core.h	/^	int			cpu;$/;"	m	struct:kgdb_state
cpu	kthread.c	/^	unsigned int cpu;$/;"	m	struct:kthread	file:
cpu	printk.c	/^	int cpu;			\/* the print cpu *\/$/;"	m	struct:log	file:
cpu	printk.c	/^	int cpu;$/;"	m	struct:cont	file:
cpu	printk.c	/^	u16 cpu;			\/* cpu core number CONFIG_PRINTK_PROCESS *\/$/;"	m	struct:log	file:
cpu	rcutree.h	/^	int cpu;$/;"	m	struct:rcu_data
cpu	sched/sched.h	/^	int cpu;$/;"	m	struct:rq
cpu	smpboot.c	/^	unsigned int			cpu;$/;"	m	struct:smpboot_thread_data	file:
cpu	time/timer_list.c	/^	int cpu;$/;"	m	struct:timer_list_iter	file:
cpu	trace/ring_buffer.c	/^	int				cpu;$/;"	m	struct:ring_buffer_per_cpu	file:
cpu	trace/ring_buffer.c	/^	int			cpu;$/;"	m	struct:rb_test_data	file:
cpu	trace/trace.h	/^	int				cpu;$/;"	m	struct:trace_buffer
cpu	trace/trace.h	/^	int			cpu;$/;"	m	struct:trace_cpu
cpu	trace/trace_functions_graph.c	/^	int				cpu;$/;"	m	struct:fgraph_data	file:
cpu	workqueue.c	/^	int			cpu;		\/* I: the associated cpu *\/$/;"	m	struct:worker_pool	file:
cpu0_err	watchdog.c	/^static unsigned long cpu0_err;$/;"	v	file:
cpu_active_mask	cpu.c	/^EXPORT_SYMBOL(cpu_active_mask);$/;"	v
cpu_active_mask	cpu.c	/^const struct cpumask *const cpu_active_mask = to_cpumask(cpu_active_bits);$/;"	v
cpu_all_bits	cpu.c	/^EXPORT_SYMBOL(cpu_all_bits);$/;"	v
cpu_apps	swap/energy/debugfs_energy.c	/^static u64 cpu_apps(void)$/;"	f	file:
cpu_attach_domain	sched/core.c	/^cpu_attach_domain(struct sched_domain *sd, struct root_domain *rd, int cpu)$/;"	f	file:
cpu_avg_load_per_task	sched/fair.c	/^static unsigned long cpu_avg_load_per_task(int cpu)$/;"	f	file:
cpu_bit_bitmap	cpu.c	/^EXPORT_SYMBOL_GPL(cpu_bit_bitmap);$/;"	v
cpu_bit_bitmap	cpu.c	/^const unsigned long cpu_bit_bitmap[BITS_PER_LONG+1][BITS_TO_LONGS(NR_CPUS)] = {$/;"	v
cpu_buf	swap/writer/swap_msg.c	/^static char *cpu_buf[NR_CPUS];$/;"	v	file:
cpu_buffer	trace/ring_buffer.c	/^	struct ring_buffer_per_cpu	*cpu_buffer;$/;"	m	struct:ring_buffer_iter	typeref:struct:ring_buffer_iter::ring_buffer_per_cpu	file:
cpu_callback	softirq.c	/^static int __cpuinit cpu_callback(struct notifier_block *nfb,$/;"	f	file:
cpu_cfs_period_read_u64	sched/core.c	/^static u64 cpu_cfs_period_read_u64(struct cgroup *cgrp, struct cftype *cft)$/;"	f	file:
cpu_cfs_period_write_u64	sched/core.c	/^static int cpu_cfs_period_write_u64(struct cgroup *cgrp, struct cftype *cftype,$/;"	f	file:
cpu_cfs_quota_read_s64	sched/core.c	/^static s64 cpu_cfs_quota_read_s64(struct cgroup *cgrp, struct cftype *cft)$/;"	f	file:
cpu_cfs_quota_write_s64	sched/core.c	/^static int cpu_cfs_quota_write_s64(struct cgroup *cgrp, struct cftype *cftype,$/;"	f	file:
cpu_cgroup_attach	sched/core.c	/^static void cpu_cgroup_attach(struct cgroup *cgrp,$/;"	f	file:
cpu_cgroup_can_attach	sched/core.c	/^static int cpu_cgroup_can_attach(struct cgroup *cgrp,$/;"	f	file:
cpu_cgroup_css_alloc	sched/core.c	/^static struct cgroup_subsys_state *cpu_cgroup_css_alloc(struct cgroup *cgrp)$/;"	f	file:
cpu_cgroup_css_free	sched/core.c	/^static void cpu_cgroup_css_free(struct cgroup *cgrp)$/;"	f	file:
cpu_cgroup_css_offline	sched/core.c	/^static void cpu_cgroup_css_offline(struct cgroup *cgrp)$/;"	f	file:
cpu_cgroup_css_online	sched/core.c	/^static int cpu_cgroup_css_online(struct cgroup *cgrp)$/;"	f	file:
cpu_cgroup_exit	sched/core.c	/^cpu_cgroup_exit(struct cgroup *cgrp, struct cgroup *old_cgrp,$/;"	f	file:
cpu_cgroup_subsys	sched/core.c	/^struct cgroup_subsys cpu_cgroup_subsys = {$/;"	v	typeref:struct:cgroup_subsys
cpu_clock	sched/clock.c	/^EXPORT_SYMBOL_GPL(cpu_clock);$/;"	v
cpu_clock	sched/clock.c	/^u64 cpu_clock(int cpu)$/;"	f
cpu_clock_event_add	events/core.c	/^static int cpu_clock_event_add(struct perf_event *event, int flags)$/;"	f	file:
cpu_clock_event_del	events/core.c	/^static void cpu_clock_event_del(struct perf_event *event, int flags)$/;"	f	file:
cpu_clock_event_init	events/core.c	/^static int cpu_clock_event_init(struct perf_event *event)$/;"	f	file:
cpu_clock_event_read	events/core.c	/^static void cpu_clock_event_read(struct perf_event *event)$/;"	f	file:
cpu_clock_event_start	events/core.c	/^static void cpu_clock_event_start(struct perf_event *event, int flags)$/;"	f	file:
cpu_clock_event_stop	events/core.c	/^static void cpu_clock_event_stop(struct perf_event *event, int flags)$/;"	f	file:
cpu_clock_event_update	events/core.c	/^static void cpu_clock_event_update(struct perf_event *event)$/;"	f	file:
cpu_clock_sample	posix-cpu-timers.c	/^static int cpu_clock_sample(const clockid_t which_clock, struct task_struct *p,$/;"	f	file:
cpu_clock_sample_group	posix-cpu-timers.c	/^static int cpu_clock_sample_group(const clockid_t which_clock,$/;"	f	file:
cpu_cluster_pm_enter	cpu_pm.c	/^EXPORT_SYMBOL_GPL(cpu_cluster_pm_enter);$/;"	v
cpu_cluster_pm_enter	cpu_pm.c	/^int cpu_cluster_pm_enter(void)$/;"	f
cpu_cluster_pm_exit	cpu_pm.c	/^EXPORT_SYMBOL_GPL(cpu_cluster_pm_exit);$/;"	v
cpu_cluster_pm_exit	cpu_pm.c	/^int cpu_cluster_pm_exit(void)$/;"	f
cpu_cpu_mask	sched/core.c	/^static const struct cpumask *cpu_cpu_mask(int cpu)$/;"	f	file:
cpu_ctx_sched_in	events/core.c	/^static void cpu_ctx_sched_in(struct perf_cpu_context *cpuctx,$/;"	f	file:
cpu_ctx_sched_out	events/core.c	/^static void cpu_ctx_sched_out(struct perf_cpu_context *cpuctx,$/;"	f	file:
cpu_curr	sched/sched.h	544;"	d
cpu_data	trace/trace_functions_graph.c	/^	struct fgraph_cpu_data __percpu *cpu_data;$/;"	m	struct:fgraph_data	typeref:struct:fgraph_data::__percpu	file:
cpu_dma_constraints	power/qos.c	/^static struct pm_qos_constraints cpu_dma_constraints = {$/;"	v	typeref:struct:pm_qos_constraints	file:
cpu_dma_pm_qos	power/qos.c	/^static struct pm_qos_object cpu_dma_pm_qos = {$/;"	v	typeref:struct:pm_qos_object	file:
cpu_down	cpu.c	/^EXPORT_SYMBOL(cpu_down);$/;"	v
cpu_down	cpu.c	/^int __ref cpu_down(unsigned int cpu)$/;"	f
cpu_entries	events/callchain.c	/^	struct perf_callchain_entry	*cpu_entries[0];$/;"	m	struct:callchain_cpus_entries	typeref:struct:callchain_cpus_entries::perf_callchain_entry	file:
cpu_files	sched/core.c	/^static struct cftype cpu_files[] = {$/;"	v	typeref:struct:cftype	file:
cpu_freq_max_constraints	power/qos.c	/^static struct pm_qos_constraints cpu_freq_max_constraints = {$/;"	v	typeref:struct:pm_qos_constraints	file:
cpu_freq_max_pm_qos	power/qos.c	/^static struct pm_qos_object cpu_freq_max_pm_qos = {$/;"	v	typeref:struct:pm_qos_object	file:
cpu_freq_min_constraints	power/qos.c	/^static struct pm_qos_constraints cpu_freq_min_constraints = {$/;"	v	typeref:struct:pm_qos_constraints	file:
cpu_freq_min_pm_qos	power/qos.c	/^static struct pm_qos_object cpu_freq_min_pm_qos = {$/;"	v	typeref:struct:pm_qos_object	file:
cpu_freq_up_threshold_constraints	power/qos.c	/^static struct pm_qos_constraints cpu_freq_up_threshold_constraints = {$/;"	v	typeref:struct:pm_qos_constraints	file:
cpu_freq_up_threshold_pm_qos	power/qos.c	/^static struct pm_qos_object cpu_freq_up_threshold_pm_qos = {$/;"	v	typeref:struct:pm_qos_object	file:
cpu_function_call	events/core.c	/^static int cpu_function_call(int cpu, int (*func) (void *info), void *info)$/;"	f	file:
cpu_gov_up_level_constraints	power/qos.c	/^static struct pm_qos_constraints cpu_gov_up_level_constraints = {$/;"	v	typeref:struct:pm_qos_constraints	file:
cpu_gov_up_level_pm_qos	power/qos.c	/^static struct pm_qos_object cpu_gov_up_level_pm_qos = {$/;"	v	typeref:struct:pm_qos_object	file:
cpu_has_callbacks_ready_to_invoke	rcutree.c	/^cpu_has_callbacks_ready_to_invoke(struct rcu_data *rdp)$/;"	f	file:
cpu_hotplug	cpu.c	/^} cpu_hotplug = {$/;"	v	typeref:struct:__anon70	file:
cpu_hotplug_begin	cpu.c	/^static void cpu_hotplug_begin(void) {}$/;"	f	file:
cpu_hotplug_begin	cpu.c	/^static void cpu_hotplug_begin(void)$/;"	f	file:
cpu_hotplug_disable	cpu.c	/^void cpu_hotplug_disable(void)$/;"	f
cpu_hotplug_disabled	cpu.c	/^static int cpu_hotplug_disabled;$/;"	v	file:
cpu_hotplug_done	cpu.c	/^static void cpu_hotplug_done(void) {}$/;"	f	file:
cpu_hotplug_done	cpu.c	/^static void cpu_hotplug_done(void)$/;"	f	file:
cpu_hotplug_enable	cpu.c	/^void cpu_hotplug_enable(void)$/;"	f
cpu_hotplug_pm_callback	cpu.c	/^cpu_hotplug_pm_callback(struct notifier_block *nb,$/;"	f	file:
cpu_hotplug_pm_sync_init	cpu.c	/^core_initcall(cpu_hotplug_pm_sync_init);$/;"	v
cpu_hotplug_pm_sync_init	cpu.c	/^static int __init cpu_hotplug_pm_sync_init(void)$/;"	f	file:
cpu_idle	trace/power-traces.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(cpu_idle);$/;"	v
cpu_idle_force_poll	cpu/idle.c	/^static int __read_mostly cpu_idle_force_poll;$/;"	v	file:
cpu_idle_loop	cpu/idle.c	/^static void cpu_idle_loop(void)$/;"	f	file:
cpu_idle_nopoll_setup	cpu/idle.c	/^static int __init cpu_idle_nopoll_setup(char *__unused)$/;"	f	file:
cpu_idle_poll	cpu/idle.c	/^static inline int cpu_idle_poll(void)$/;"	f	file:
cpu_idle_poll_ctrl	cpu/idle.c	/^void cpu_idle_poll_ctrl(bool enable)$/;"	f
cpu_idle_poll_setup	cpu/idle.c	/^static int __init cpu_idle_poll_setup(char *__unused)$/;"	f	file:
cpu_idle_system	swap/energy/debugfs_energy.c	/^static u64 cpu_idle_system(void)$/;"	f	file:
cpu_isolated_map	sched/core.c	/^static cpumask_var_t cpu_isolated_map;$/;"	v	file:
cpu_load	sched/sched.h	/^	unsigned long cpu_load[CPU_LOAD_IDX_MAX];$/;"	m	struct:rq
cpu_maps_update_begin	cpu.c	/^void cpu_maps_update_begin(void)$/;"	f
cpu_maps_update_done	cpu.c	/^void cpu_maps_update_done(void)$/;"	f
cpu_needs_another_gp	rcutree.c	/^cpu_needs_another_gp(struct rcu_state *rsp, struct rcu_data *rdp)$/;"	f	file:
cpu_nfb	softirq.c	/^static struct notifier_block __cpuinitdata cpu_nfb = {$/;"	v	typeref:struct:__cpuinitdata	file:
cpu_notify	cpu.c	/^static int cpu_notify(unsigned long val, void *v)$/;"	f	file:
cpu_notify	irq_work.c	/^static struct notifier_block cpu_notify;$/;"	v	typeref:struct:notifier_block	file:
cpu_notify	trace/ring_buffer.c	/^	struct notifier_block		cpu_notify;$/;"	m	struct:ring_buffer	typeref:struct:ring_buffer::notifier_block	file:
cpu_notify_nofail	cpu.c	/^static void cpu_notify_nofail(unsigned long val, void *v)$/;"	f	file:
cpu_num	swap/ks_features/ksf_msg.c	/^	u32 cpu_num;$/;"	m	struct:msg_context_switch	file:
cpu_num	swap/ks_features/ksf_msg.c	/^	u32 cpu_num;$/;"	m	struct:msg_sys_header	file:
cpu_num	swap/parser/features.c	/^	u32 cpu_num;$/;"	m	struct:sample	file:
cpu_num	swap/retprobe/rp_msg.c	/^	u32 cpu_num;$/;"	m	struct:msg_entry	file:
cpu_num	swap/retprobe/rp_msg.c	/^	u32 cpu_num;$/;"	m	struct:msg_exit	file:
cpu_of	sched/sched.h	/^static inline int cpu_of(struct rq *rq)$/;"	f
cpu_online_mask	cpu.c	/^EXPORT_SYMBOL(cpu_online_mask);$/;"	v
cpu_online_mask	cpu.c	/^const struct cpumask *const cpu_online_mask = to_cpumask(cpu_online_bits);$/;"	v
cpu_online_max_constraints	power/qos.c	/^static struct pm_qos_constraints cpu_online_max_constraints = {$/;"	v	typeref:struct:pm_qos_constraints	file:
cpu_online_max_pm_qos	power/qos.c	/^static struct pm_qos_object cpu_online_max_pm_qos = {$/;"	v	typeref:struct:pm_qos_object	file:
cpu_online_min_constraints	power/qos.c	/^static struct pm_qos_constraints cpu_online_min_constraints = {$/;"	v	typeref:struct:pm_qos_constraints	file:
cpu_online_min_pm_qos	power/qos.c	/^static struct pm_qos_object cpu_online_min_pm_qos = {$/;"	v	typeref:struct:pm_qos_object	file:
cpu_pm_enter	cpu_pm.c	/^EXPORT_SYMBOL_GPL(cpu_pm_enter);$/;"	v
cpu_pm_enter	cpu_pm.c	/^int cpu_pm_enter(void)$/;"	f
cpu_pm_exit	cpu_pm.c	/^EXPORT_SYMBOL_GPL(cpu_pm_exit);$/;"	v
cpu_pm_exit	cpu_pm.c	/^int cpu_pm_exit(void)$/;"	f
cpu_pm_init	cpu_pm.c	/^core_initcall(cpu_pm_init);$/;"	v
cpu_pm_init	cpu_pm.c	/^static int cpu_pm_init(void)$/;"	f	file:
cpu_pm_notify	cpu_pm.c	/^static int cpu_pm_notify(enum cpu_pm_event event, int nr_to_call, int *nr_calls)$/;"	f	file:
cpu_pm_register_notifier	cpu_pm.c	/^EXPORT_SYMBOL_GPL(cpu_pm_register_notifier);$/;"	v
cpu_pm_register_notifier	cpu_pm.c	/^int cpu_pm_register_notifier(struct notifier_block *nb)$/;"	f
cpu_pm_resume	cpu_pm.c	/^static void cpu_pm_resume(void)$/;"	f	file:
cpu_pm_suspend	cpu_pm.c	/^static int cpu_pm_suspend(void)$/;"	f	file:
cpu_pm_syscore_ops	cpu_pm.c	/^static struct syscore_ops cpu_pm_syscore_ops = {$/;"	v	typeref:struct:syscore_ops	file:
cpu_pm_unregister_notifier	cpu_pm.c	/^EXPORT_SYMBOL_GPL(cpu_pm_unregister_notifier);$/;"	v
cpu_pm_unregister_notifier	cpu_pm.c	/^int cpu_pm_unregister_notifier(struct notifier_block *nb)$/;"	f
cpu_possible_mask	cpu.c	/^EXPORT_SYMBOL(cpu_possible_mask);$/;"	v
cpu_possible_mask	cpu.c	/^const struct cpumask *const cpu_possible_mask = to_cpumask(cpu_possible_bits);$/;"	v
cpu_power	sched/sched.h	/^	unsigned long cpu_power;$/;"	m	struct:rq
cpu_present_mask	cpu.c	/^EXPORT_SYMBOL(cpu_present_mask);$/;"	v
cpu_present_mask	cpu.c	/^const struct cpumask *const cpu_present_mask = to_cpumask(cpu_present_bits);$/;"	v
cpu_pwqs	workqueue.c	/^	struct pool_workqueue __percpu *cpu_pwqs; \/* I: per-cpu pwqs *\/$/;"	m	struct:workqueue_struct	typeref:struct:workqueue_struct::__percpu	file:
cpu_rq	sched/sched.h	541;"	d
cpu_rt_period_read_uint	sched/core.c	/^static u64 cpu_rt_period_read_uint(struct cgroup *cgrp, struct cftype *cft)$/;"	f	file:
cpu_rt_period_write_uint	sched/core.c	/^static int cpu_rt_period_write_uint(struct cgroup *cgrp, struct cftype *cftype,$/;"	f	file:
cpu_rt_runtime_read	sched/core.c	/^static s64 cpu_rt_runtime_read(struct cgroup *cgrp, struct cftype *cft)$/;"	f	file:
cpu_rt_runtime_write	sched/core.c	/^static int cpu_rt_runtime_write(struct cgroup *cgrp, struct cftype *cft,$/;"	f	file:
cpu_sdc	sched/clock.c	/^static inline struct sched_clock_data *cpu_sdc(int cpu)$/;"	f	file:
cpu_shares_read_u64	sched/core.c	/^static u64 cpu_shares_read_u64(struct cgroup *cgrp, struct cftype *cft)$/;"	f	file:
cpu_shares_write_u64	sched/core.c	/^static int cpu_shares_write_u64(struct cgroup *cgrp, struct cftype *cftype,$/;"	f	file:
cpu_smt_mask	sched/core.c	/^static const struct cpumask *cpu_smt_mask(int cpu)$/;"	f	file:
cpu_startup_entry	cpu/idle.c	/^void cpu_startup_entry(enum cpuhp_state state)$/;"	f
cpu_stats_show	sched/core.c	/^static int cpu_stats_show(struct cgroup *cgrp, struct cftype *cft,$/;"	f	file:
cpu_stop_create	stop_machine.c	/^static void cpu_stop_create(unsigned int cpu)$/;"	f	file:
cpu_stop_done	stop_machine.c	/^struct cpu_stop_done {$/;"	s	file:
cpu_stop_init	stop_machine.c	/^early_initcall(cpu_stop_init);$/;"	v
cpu_stop_init	stop_machine.c	/^static int __init cpu_stop_init(void)$/;"	f	file:
cpu_stop_init_done	stop_machine.c	/^static void cpu_stop_init_done(struct cpu_stop_done *done, unsigned int nr_todo)$/;"	f	file:
cpu_stop_park	stop_machine.c	/^static void cpu_stop_park(unsigned int cpu)$/;"	f	file:
cpu_stop_queue_work	stop_machine.c	/^static void cpu_stop_queue_work(unsigned int cpu, struct cpu_stop_work *work)$/;"	f	file:
cpu_stop_should_run	stop_machine.c	/^static int cpu_stop_should_run(unsigned int cpu)$/;"	f	file:
cpu_stop_signal_done	stop_machine.c	/^static void cpu_stop_signal_done(struct cpu_stop_done *done, bool executed)$/;"	f	file:
cpu_stop_threads	stop_machine.c	/^static struct smp_hotplug_thread cpu_stop_threads = {$/;"	v	typeref:struct:smp_hotplug_thread	file:
cpu_stop_unpark	stop_machine.c	/^static void cpu_stop_unpark(unsigned int cpu)$/;"	f	file:
cpu_stopper	stop_machine.c	/^struct cpu_stopper {$/;"	s	file:
cpu_stopper_thread	stop_machine.c	/^static void cpu_stopper_thread(unsigned int cpu)$/;"	f	file:
cpu_system	swap/energy/debugfs_energy.c	/^static u64 cpu_system(void)$/;"	f	file:
cpu_time_add	posix-cpu-timers.c	/^static inline void cpu_time_add(const clockid_t which_clock,$/;"	f	file:
cpu_time_before	posix-cpu-timers.c	/^static inline int cpu_time_before(const clockid_t which_clock,$/;"	f	file:
cpu_time_get_running	swap/energy/energy.c	/^static inline u64 cpu_time_get_running(struct cpus_time *ct, int cpu, u64 now)$/;"	f	file:
cpu_time_sub	posix-cpu-timers.c	/^static inline union cpu_time_count cpu_time_sub(const clockid_t which_clock,$/;"	f	file:
cpu_timer_fire	posix-cpu-timers.c	/^static void cpu_timer_fire(struct k_itimer *timer)$/;"	f	file:
cpu_timer_sample_group	posix-cpu-timers.c	/^static int cpu_timer_sample_group(const clockid_t which_clock,$/;"	f	file:
cpu_to_pri	sched/cpupri.h	/^	int               cpu_to_pri[NR_CPUS];$/;"	m	struct:cpupri
cpu_up	cpu.c	/^EXPORT_SYMBOL_GPL(cpu_up);$/;"	v
cpu_up	cpu.c	/^int __cpuinit cpu_up(unsigned int cpu)$/;"	f
cpuacct	sched/cpuacct.c	/^struct cpuacct {$/;"	s	file:
cpuacct_account_field	sched/cpuacct.c	/^void cpuacct_account_field(struct task_struct *p, int index, u64 val)$/;"	f
cpuacct_account_field	sched/cpuacct.h	/^cpuacct_account_field(struct task_struct *p, int index, u64 val)$/;"	f
cpuacct_charge	sched/cpuacct.c	/^void cpuacct_charge(struct task_struct *tsk, u64 cputime)$/;"	f
cpuacct_charge	sched/cpuacct.h	/^static inline void cpuacct_charge(struct task_struct *tsk, u64 cputime)$/;"	f
cpuacct_cpuusage_read	sched/cpuacct.c	/^static u64 cpuacct_cpuusage_read(struct cpuacct *ca, int cpu)$/;"	f	file:
cpuacct_cpuusage_write	sched/cpuacct.c	/^static void cpuacct_cpuusage_write(struct cpuacct *ca, int cpu, u64 val)$/;"	f	file:
cpuacct_css_alloc	sched/cpuacct.c	/^static struct cgroup_subsys_state *cpuacct_css_alloc(struct cgroup *cgrp)$/;"	f	file:
cpuacct_css_free	sched/cpuacct.c	/^static void cpuacct_css_free(struct cgroup *cgrp)$/;"	f	file:
cpuacct_percpu_seq_read	sched/cpuacct.c	/^static int cpuacct_percpu_seq_read(struct cgroup *cgroup, struct cftype *cft,$/;"	f	file:
cpuacct_stat_desc	sched/cpuacct.c	/^static const char * const cpuacct_stat_desc[] = {$/;"	v	file:
cpuacct_stat_index	sched/cpuacct.c	/^enum cpuacct_stat_index {$/;"	g	file:
cpuacct_stats_show	sched/cpuacct.c	/^static int cpuacct_stats_show(struct cgroup *cgrp, struct cftype *cft,$/;"	f	file:
cpuacct_subsys	sched/cpuacct.c	/^struct cgroup_subsys cpuacct_subsys = {$/;"	v	typeref:struct:cgroup_subsys
cpuctx_lock	events/core.c	/^static struct lock_class_key cpuctx_lock;$/;"	v	typeref:struct:lock_class_key	file:
cpuctx_mutex	events/core.c	/^static struct lock_class_key cpuctx_mutex;$/;"	v	typeref:struct:lock_class_key	file:
cpufreq_calc_scale	sched/fair.c	/^static u32 cpufreq_calc_scale(u32 min, u32 max, u32 curr)$/;"	f	file:
cpufreq_callback	sched/fair.c	/^static int cpufreq_callback(struct notifier_block *nb,$/;"	f	file:
cpufreq_extents	sched/fair.c	/^struct cpufreq_extents {$/;"	s	file:
cpufreq_notifier	sched/fair.c	/^static struct notifier_block cpufreq_notifier = {$/;"	v	typeref:struct:notifier_block	file:
cpufreq_policy_callback	sched/fair.c	/^static int cpufreq_policy_callback(struct notifier_block *nb,$/;"	f	file:
cpufreq_policy_notifier	sched/fair.c	/^static struct notifier_block cpufreq_policy_notifier = {$/;"	v	typeref:struct:notifier_block	file:
cpumask	sched/sched.h	/^	unsigned long cpumask[0]; \/* iteration mask *\/$/;"	m	struct:sched_group_power
cpumask	sched/sched.h	/^	unsigned long cpumask[0];$/;"	m	struct:sched_group
cpumask	smp.c	/^	cpumask_var_t		cpumask;$/;"	m	struct:call_function_data	file:
cpumask	trace/ring_buffer.c	/^	cpumask_var_t			cpumask;$/;"	m	struct:ring_buffer	file:
cpumask_ipi	smp.c	/^	cpumask_var_t		cpumask_ipi;$/;"	m	struct:call_function_data	file:
cpupri	sched/cpupri.h	/^struct cpupri {$/;"	s
cpupri	sched/sched.h	/^	struct cpupri cpupri;$/;"	m	struct:root_domain	typeref:struct:root_domain::cpupri
cpupri_cleanup	sched/cpupri.c	/^void cpupri_cleanup(struct cpupri *cp)$/;"	f
cpupri_find	sched/cpupri.c	/^int cpupri_find(struct cpupri *cp, struct task_struct *p,$/;"	f
cpupri_init	sched/cpupri.c	/^int cpupri_init(struct cpupri *cp)$/;"	f
cpupri_init	sched/cpupri.h	31;"	d
cpupri_set	sched/cpupri.c	/^void cpupri_set(struct cpupri *cp, int cpu, int newpri)$/;"	f
cpupri_set	sched/cpupri.h	30;"	d
cpupri_vec	sched/cpupri.h	/^struct cpupri_vec {$/;"	s
cpus	power/power.h	/^	int			cpus;$/;"	m	struct:swsusp_info
cpus	sched/fair.c	/^	struct cpumask		*cpus;$/;"	m	struct:lb_env	typeref:struct:lb_env::cpumask	file:
cpus	trace/ring_buffer.c	/^	int				cpus;$/;"	m	struct:ring_buffer	file:
cpus_allowed	cpuset.c	/^	cpumask_var_t cpus_allowed;	\/* CPUs allowed to tasks in cpuset *\/$/;"	m	struct:cpuset	file:
cpus_attach	cpuset.c	/^static cpumask_var_t cpus_attach;$/;"	v	file:
cpus_share_cache	sched/core.c	/^bool cpus_share_cache(int this_cpu, int that_cpu)$/;"	f
cpus_time	swap/energy/energy.c	/^struct cpus_time {$/;"	s	file:
cpus_time_get_running_all	swap/energy/energy.c	/^static void *cpus_time_get_running_all(struct cpus_time *ct, u64 *buf, u64 now)$/;"	f	file:
cpus_time_init	swap/energy/energy.c	/^static void cpus_time_init(struct cpus_time *ct, u64 time)$/;"	f	file:
cpus_time_lock	swap/energy/energy.c	52;"	d	file:
cpus_time_save_entry	swap/energy/energy.c	/^static void cpus_time_save_entry(struct cpus_time *ct, int cpu, u64 time)$/;"	f	file:
cpus_time_sum_running_all	swap/energy/energy.c	/^static void *cpus_time_sum_running_all(struct cpus_time *ct, u64 *buf, u64 now)$/;"	f	file:
cpus_time_unlock	swap/energy/energy.c	53;"	d	file:
cpus_time_update_running	swap/energy/energy.c	/^static void cpus_time_update_running(struct cpus_time *ct, int cpu, u64 now,$/;"	f	file:
cpuset	cpuset.c	/^struct cpuset {$/;"	s	file:
cpuset_attach	cpuset.c	/^static void cpuset_attach(struct cgroup *cgrp, struct cgroup_taskset *tset)$/;"	f	file:
cpuset_being_rebound	cpuset.c	/^static void *cpuset_being_rebound;$/;"	v	file:
cpuset_can_attach	cpuset.c	/^static int cpuset_can_attach(struct cgroup *cgrp, struct cgroup_taskset *tset)$/;"	f	file:
cpuset_cancel_attach	cpuset.c	/^static void cpuset_cancel_attach(struct cgroup *cgrp,$/;"	f	file:
cpuset_change_cpumask	cpuset.c	/^static void cpuset_change_cpumask(struct task_struct *tsk,$/;"	f	file:
cpuset_change_flag	cpuset.c	/^static void cpuset_change_flag(struct task_struct *tsk,$/;"	f	file:
cpuset_change_nodemask	cpuset.c	/^static void cpuset_change_nodemask(struct task_struct *p,$/;"	f	file:
cpuset_change_task_nodemask	cpuset.c	/^static void cpuset_change_task_nodemask(struct task_struct *tsk,$/;"	f	file:
cpuset_clone_children	cgroup.c	/^	bool cpuset_clone_children;$/;"	m	struct:cgroup_sb_opts	file:
cpuset_common_file_read	cpuset.c	/^static ssize_t cpuset_common_file_read(struct cgroup *cont,$/;"	f	file:
cpuset_cpu_active	sched/core.c	/^static int cpuset_cpu_active(struct notifier_block *nfb, unsigned long action,$/;"	f	file:
cpuset_cpu_inactive	sched/core.c	/^static int cpuset_cpu_inactive(struct notifier_block *nfb, unsigned long action,$/;"	f	file:
cpuset_cpus_allowed	cpuset.c	/^void cpuset_cpus_allowed(struct task_struct *tsk, struct cpumask *pmask)$/;"	f
cpuset_cpus_allowed_fallback	cpuset.c	/^void cpuset_cpus_allowed_fallback(struct task_struct *tsk)$/;"	f
cpuset_css_alloc	cpuset.c	/^static struct cgroup_subsys_state *cpuset_css_alloc(struct cgroup *cont)$/;"	f	file:
cpuset_css_free	cpuset.c	/^static void cpuset_css_free(struct cgroup *cont)$/;"	f	file:
cpuset_css_offline	cpuset.c	/^static void cpuset_css_offline(struct cgroup *cgrp)$/;"	f	file:
cpuset_css_online	cpuset.c	/^static int cpuset_css_online(struct cgroup *cgrp)$/;"	f	file:
cpuset_filetype_t	cpuset.c	/^} cpuset_filetype_t;$/;"	t	typeref:enum:__anon12	file:
cpuset_flagbits_t	cpuset.c	/^} cpuset_flagbits_t;$/;"	t	typeref:enum:__anon11	file:
cpuset_for_each_child	cpuset.c	210;"	d	file:
cpuset_for_each_descendant_pre	cpuset.c	224;"	d	file:
cpuset_fs_type	cpuset.c	/^static struct file_system_type cpuset_fs_type = {$/;"	v	typeref:struct:file_system_type	file:
cpuset_hotplug_workfn	cpuset.c	/^static void cpuset_hotplug_workfn(struct work_struct *work)$/;"	f	file:
cpuset_init	cpuset.c	/^int __init cpuset_init(void)$/;"	f
cpuset_init_current_mems_allowed	cpuset.c	/^void cpuset_init_current_mems_allowed(void)$/;"	f
cpuset_init_smp	cpuset.c	/^void __init cpuset_init_smp(void)$/;"	f
cpuset_mem_spread_node	cpuset.c	/^EXPORT_SYMBOL_GPL(cpuset_mem_spread_node);$/;"	v
cpuset_mem_spread_node	cpuset.c	/^int cpuset_mem_spread_node(void)$/;"	f
cpuset_mems_allowed	cpuset.c	/^nodemask_t cpuset_mems_allowed(struct task_struct *tsk)$/;"	f
cpuset_mems_allowed_intersects	cpuset.c	/^int cpuset_mems_allowed_intersects(const struct task_struct *tsk1,$/;"	f
cpuset_migrate_mm	cpuset.c	/^static void cpuset_migrate_mm(struct mm_struct *mm, const nodemask_t *from,$/;"	f	file:
cpuset_mount	cpuset.c	/^static struct dentry *cpuset_mount(struct file_system_type *fs_type,$/;"	f	file:
cpuset_nodemask_valid_mems_allowed	cpuset.c	/^int cpuset_nodemask_valid_mems_allowed(nodemask_t *nodemask)$/;"	f
cpuset_print_task_mems_allowed	cpuset.c	/^void cpuset_print_task_mems_allowed(struct task_struct *tsk)$/;"	f
cpuset_propagate_hotplug_workfn	cpuset.c	/^static void cpuset_propagate_hotplug_workfn(struct work_struct *work)$/;"	f	file:
cpuset_propagate_hotplug_wq	cpuset.c	/^static struct workqueue_struct *cpuset_propagate_hotplug_wq;$/;"	v	typeref:struct:workqueue_struct	file:
cpuset_read_s64	cpuset.c	/^static s64 cpuset_read_s64(struct cgroup *cont, struct cftype *cft)$/;"	f	file:
cpuset_read_u64	cpuset.c	/^static u64 cpuset_read_u64(struct cgroup *cont, struct cftype *cft)$/;"	f	file:
cpuset_slab_spread_node	cpuset.c	/^int cpuset_slab_spread_node(void)$/;"	f
cpuset_spread_node	cpuset.c	/^static int cpuset_spread_node(int *rotor)$/;"	f	file:
cpuset_sprintf_cpulist	cpuset.c	/^static size_t cpuset_sprintf_cpulist(char *page, struct cpuset *cs)$/;"	f	file:
cpuset_sprintf_memlist	cpuset.c	/^static size_t cpuset_sprintf_memlist(char *page, struct cpuset *cs)$/;"	f	file:
cpuset_subsys	cpuset.c	/^struct cgroup_subsys cpuset_subsys = {$/;"	v	typeref:struct:cgroup_subsys
cpuset_subsys	cpuset.c	/^struct cgroup_subsys cpuset_subsys;$/;"	v	typeref:struct:cgroup_subsys
cpuset_task_status_allowed	cpuset.c	/^void cpuset_task_status_allowed(struct seq_file *m, struct task_struct *task)$/;"	f
cpuset_test_cpumask	cpuset.c	/^static int cpuset_test_cpumask(struct task_struct *tsk,$/;"	f	file:
cpuset_track_online_nodes	cpuset.c	/^static int cpuset_track_online_nodes(struct notifier_block *self,$/;"	f	file:
cpuset_track_online_nodes_nb	cpuset.c	/^static struct notifier_block cpuset_track_online_nodes_nb = {$/;"	v	typeref:struct:notifier_block	file:
cpuset_update_active_cpus	cpuset.c	/^void cpuset_update_active_cpus(bool cpu_online)$/;"	f
cpuset_update_task_spread_flag	cpuset.c	/^static void cpuset_update_task_spread_flag(struct cpuset *cs,$/;"	f	file:
cpuset_write_resmask	cpuset.c	/^static int cpuset_write_resmask(struct cgroup *cgrp, struct cftype *cft,$/;"	f	file:
cpuset_write_s64	cpuset.c	/^static int cpuset_write_s64(struct cgroup *cgrp, struct cftype *cft, s64 val)$/;"	f	file:
cpuset_write_u64	cpuset.c	/^static int cpuset_write_u64(struct cgroup *cgrp, struct cftype *cft, u64 val)$/;"	f	file:
cpusets_overlap	cpuset.c	/^static int cpusets_overlap(struct cpuset *a, struct cpuset *b)$/;"	f	file:
cpustat	sched/cpuacct.c	/^	struct kernel_cpustat __percpu *cpustat;$/;"	m	struct:cpuacct	typeref:struct:cpuacct::__percpu	file:
cputime_adjust	sched/cputime.c	/^static void cputime_adjust(struct task_cputime *curr,$/;"	f	file:
cputime_sub_ns	itimer.c	/^static inline u32 cputime_sub_ns(cputime_t ct, s64 real_ns)$/;"	f	file:
cpuusage	sched/cpuacct.c	/^	u64 __percpu *cpuusage;$/;"	m	struct:cpuacct	file:
cpuusage_read	sched/cpuacct.c	/^static u64 cpuusage_read(struct cgroup *cgrp, struct cftype *cft)$/;"	f	file:
cpuusage_write	sched/cpuacct.c	/^static int cpuusage_write(struct cgroup *cgrp, struct cftype *cftype,$/;"	f	file:
crash_free_reserved_phys_range	kexec.c	/^void __weak crash_free_reserved_phys_range(unsigned long begin,$/;"	f
crash_get_memory_size	kexec.c	/^size_t crash_get_memory_size(void)$/;"	f
crash_kexec	kexec.c	/^void crash_kexec(struct pt_regs *regs)$/;"	f
crash_map_reserved_pages	kexec.c	/^void __weak crash_map_reserved_pages(void)$/;"	f
crash_notes	kexec.c	/^note_buf_t __percpu *crash_notes;$/;"	v
crash_notes_memory_init	kexec.c	/^static int __init crash_notes_memory_init(void)$/;"	f	file:
crash_save_cpu	kexec.c	/^void crash_save_cpu(struct pt_regs *regs, int cpu)$/;"	f
crash_save_vmcoreinfo	kexec.c	/^void crash_save_vmcoreinfo(void)$/;"	f
crash_save_vmcoreinfo_init	kexec.c	/^static int __init crash_save_vmcoreinfo_init(void)$/;"	f	file:
crash_shrink_memory	kexec.c	/^int crash_shrink_memory(unsigned long new_size)$/;"	f
crash_unmap_reserved_pages	kexec.c	/^void __weak crash_unmap_reserved_pages(void)$/;"	f
crashk_low_res	kexec.c	/^struct resource crashk_low_res = {$/;"	v	typeref:struct:resource
crashk_res	kexec.c	/^struct resource crashk_res = {$/;"	v	typeref:struct:resource
crc	module.c	/^	const unsigned long *crc;$/;"	m	struct:find_symbol_arg	file:
crc32	power/swap.c	/^	u32	crc32;$/;"	m	struct:swsusp_header	file:
crc32	power/swap.c	/^	u32 *crc32;                               \/* points to handle's crc32 *\/$/;"	m	struct:crc_data	file:
crc32	power/swap.c	/^	u32 crc32;$/;"	m	struct:swap_map_handle	file:
crc32_threadfn	power/swap.c	/^static int crc32_threadfn(void *data)$/;"	f	file:
crc_data	power/swap.c	/^struct crc_data {$/;"	s	file:
create_and_start_worker	workqueue.c	/^static int create_and_start_worker(struct worker_pool *pool)$/;"	f	file:
create_app_info	swap/parser/msg_parser.c	/^struct app_info_data *create_app_info(struct msg_buf *mb)$/;"	f
create_app_inst_data	swap/parser/msg_parser.c	/^struct app_inst_data *create_app_inst_data(struct msg_buf *mb)$/;"	f
create_basic_memory_bitmaps	power/snapshot.c	/^int create_basic_memory_bitmaps(void)$/;"	f
create_bm_block_list	power/snapshot.c	/^static int create_bm_block_list(unsigned long pages,$/;"	f	file:
create_buf_file_default_callback	relay.c	/^static struct dentry *create_buf_file_default_callback(const char *filename,$/;"	f	file:
create_chunk	audit_tree.c	/^static int create_chunk(struct inode *inode, struct audit_tree *tree)$/;"	f	file:
create_conf_data	swap/parser/msg_parser.c	/^struct conf_data *create_conf_data(struct msg_buf *mb)$/;"	f
create_ed	swap/energy/energy.c	/^static void *create_ed(void)$/;"	f	file:
create_event_toplevel_files	trace/trace_events.c	/^create_event_toplevel_files(struct dentry *parent, struct trace_array *tr)$/;"	f	file:
create_feature_data	swap/us_manager/sspt/sspt_feature.c	/^static struct sspt_feature_data *create_feature_data($/;"	f	file:
create_feature_img	swap/us_manager/sspt/sspt_feature.c	/^static struct sspt_feature_img *create_feature_img(void *(*alloc)(void),$/;"	f	file:
create_filter	trace/trace_events_filter.c	/^static int create_filter(struct ftrace_event_call *call,$/;"	f	file:
create_filter_finish	trace/trace_events_filter.c	/^static void create_filter_finish(struct filter_parse_state *ps)$/;"	f	file:
create_filter_start	trace/trace_events_filter.c	/^static int create_filter_start(char *filter_str, bool set_str,$/;"	f	file:
create_fixed_alloc	swap/kprobe/swap_slots.c	/^static struct fixed_alloc *create_fixed_alloc(struct slot_manager *sm)$/;"	f	file:
create_func_inst_data	swap/parser/msg_parser.c	/^struct func_inst_data *create_func_inst_data(struct msg_buf *mb)$/;"	f
create_hash_tables	profile.c	/^static int create_hash_tables(void)$/;"	f	file:
create_hash_tables	profile.c	588;"	d	file:
create_image	power/hibernate.c	/^static int create_image(int platform_mode)$/;"	f	file:
create_img_file	swap/us_manager/img/img_file.c	/^struct img_file *create_img_file(struct dentry *dentry)$/;"	f
create_img_ip	swap/us_manager/img/img_ip.c	/^struct img_ip *create_img_ip(unsigned long addr, struct probe_info *info)$/;"	f
create_img_proc	swap/us_manager/img/img_proc.c	/^struct img_proc *create_img_proc(void)$/;"	f
create_ip	swap/us_manager/sspt/ip.c	/^struct us_ip *create_ip(unsigned long offset, const struct probe_info *info,$/;"	f
create_kthread	kthread.c	/^static void create_kthread(struct kthread_create_info *create)$/;"	f	file:
create_lcd_priv	swap/energy/lcd/lcd_base.c	/^static void *create_lcd_priv(struct lcd_ops *ops, size_t tms_brt_cnt)$/;"	f	file:
create_lib_inst_data	swap/parser/msg_parser.c	/^struct lib_inst_data *create_lib_inst_data(struct msg_buf *mb)$/;"	f
create_mem_extents	power/snapshot.c	/^static int create_mem_extents(struct list_head *list, gfp_t gfp_mask)$/;"	f	file:
create_new_namespaces	nsproxy.c	/^static struct nsproxy *create_new_namespaces(unsigned long flags,$/;"	f	file:
create_new_subsystem	trace/trace_events.c	/^create_new_subsystem(const char *name)$/;"	f	file:
create_nsproxy	nsproxy.c	/^static inline struct nsproxy *create_nsproxy(void)$/;"	f	file:
create_parameter	swap/energy/debugfs_energy.c	/^static struct dentry *create_parameter(struct dentry *parent,$/;"	f	file:
create_pid_cachep	pid_namespace.c	/^static struct kmem_cache *create_pid_cachep(int nr_ids)$/;"	f	file:
create_pid_namespace	pid_namespace.c	/^static struct pid_namespace *create_pid_namespace(struct user_namespace *user_ns,$/;"	f	file:
create_pl_struct	swap/us_manager/pf/pf_group.c	/^static struct pl_struct *create_pl_struct(struct sspt_proc *proc)$/;"	f	file:
create_pred	trace/trace_events_filter.c	/^static struct filter_pred *create_pred(struct filter_parse_state *ps,$/;"	f	file:
create_proc_profile	profile.c	/^int __ref create_proc_profile(void) \/* false positive from hotcpu_notifier *\/$/;"	f
create_proc_profile	profile.c	/^module_init(create_proc_profile);$/;"	v
create_prof_cpu_mask	profile.c	/^void create_prof_cpu_mask(void)$/;"	f
create_rational_files	swap/energy/rational_debugfs.c	/^int create_rational_files(struct dentry *parent, struct rational *r,$/;"	f
create_sm_us	swap/us_manager/us_slot_manager.c	/^struct slot_manager *create_sm_us(struct task_struct *task)$/;"	f
create_smi	swap/ksyms/no_ksyms.c	/^static struct sys_map_item *create_smi(unsigned long addr, const char *name)$/;"	f	file:
create_sys_map	swap/ksyms/no_ksyms.c	/^static int create_sys_map(void)$/;"	f	file:
create_system_filter	trace/trace_events_filter.c	/^static int create_system_filter(struct event_subsystem *system,$/;"	f	file:
create_trace_instances	trace/trace.c	/^static __init void create_trace_instances(struct dentry *d_tracer)$/;"	f	file:
create_trace_option_core_file	trace/trace.c	/^create_trace_option_core_file(struct trace_array *tr,$/;"	f	file:
create_trace_option_file	trace/trace.c	/^create_trace_option_file(struct trace_array *tr,$/;"	f	file:
create_trace_option_files	trace/trace.c	/^create_trace_option_files(struct trace_array *tr, struct tracer *tracer)$/;"	f	file:
create_trace_options_dir	trace/trace.c	/^static __init void create_trace_options_dir(struct trace_array *tr)$/;"	f	file:
create_trace_probe	trace/trace_kprobe.c	/^static int create_trace_probe(int argc, char **argv)$/;"	f	file:
create_trace_uprobe	trace/trace_uprobe.c	/^static int create_trace_uprobe(int argc, char **argv)$/;"	f	file:
create_us_inst_data	swap/parser/msg_parser.c	/^struct us_inst_data *create_us_inst_data(struct msg_buf *mb)$/;"	f
create_user_ns	user_namespace.c	/^int create_user_ns(struct cred *new)$/;"	f
create_uts_ns	utsname.c	/^static struct uts_namespace *create_uts_ns(void)$/;"	f	file:
create_worker	workqueue.c	/^static struct worker *create_worker(struct worker_pool *pool)$/;"	f	file:
cred_alloc_blank	cred.c	/^struct cred *cred_alloc_blank(void)$/;"	f
cred_cap_issubset	cred.c	/^static bool cred_cap_issubset(const struct cred *set, const struct cred *subset)$/;"	f	file:
cred_init	cred.c	/^void __init cred_init(void)$/;"	f
cred_jar	cred.c	/^static struct kmem_cache *cred_jar;$/;"	v	typeref:struct:kmem_cache	file:
creds_are_invalid	cred.c	/^EXPORT_SYMBOL(creds_are_invalid);$/;"	v
creds_are_invalid	cred.c	/^bool creds_are_invalid(const struct cred *cred)$/;"	f
critical_end	trace/trace.h	/^	unsigned long		critical_end;$/;"	m	struct:trace_array_cpu
critical_sequence	trace/trace.h	/^	unsigned long		critical_sequence;$/;"	m	struct:trace_array_cpu
critical_start	trace/trace.h	/^	unsigned long		critical_start;$/;"	m	struct:trace_array_cpu
csd	smp.c	/^	struct call_single_data	__percpu *csd;$/;"	m	struct:call_function_data	typeref:struct:call_function_data::__percpu	file:
csd_lock	smp.c	/^static void csd_lock(struct call_single_data *csd)$/;"	f	file:
csd_lock_wait	smp.c	/^static void csd_lock_wait(struct call_single_data *csd)$/;"	f	file:
csd_unlock	smp.c	/^static void csd_unlock(struct call_single_data *csd)$/;"	f	file:
css	cgroup.c	/^	struct cgroup_subsys_state __rcu *css;$/;"	m	struct:css_id	typeref:struct:css_id::__rcu	file:
css	cgroup_freezer.c	/^	struct cgroup_subsys_state	css;$/;"	m	struct:freezer	typeref:struct:freezer::cgroup_subsys_state	file:
css	cpuset.c	/^	struct cgroup_subsys_state css;$/;"	m	struct:cpuset	typeref:struct:cpuset::cgroup_subsys_state	file:
css	events/core.c	/^	struct cgroup_subsys_state	css;$/;"	m	struct:perf_cgroup	typeref:struct:perf_cgroup::cgroup_subsys_state	file:
css	sched/cpuacct.c	/^	struct cgroup_subsys_state css;$/;"	m	struct:cpuacct	typeref:struct:cpuacct::cgroup_subsys_state	file:
css	sched/sched.h	/^	struct cgroup_subsys_state css;$/;"	m	struct:task_group	typeref:struct:task_group::cgroup_subsys_state
css_depth	cgroup.c	/^EXPORT_SYMBOL_GPL(css_depth);$/;"	v
css_depth	cgroup.c	/^unsigned short css_depth(struct cgroup_subsys_state *css)$/;"	f
css_dput_fn	cgroup.c	/^static void css_dput_fn(struct work_struct *work)$/;"	f	file:
css_id	cgroup.c	/^EXPORT_SYMBOL_GPL(css_id);$/;"	v
css_id	cgroup.c	/^struct css_id {$/;"	s	file:
css_id	cgroup.c	/^unsigned short css_id(struct cgroup_subsys_state *css)$/;"	f
css_is_ancestor	cgroup.c	/^bool css_is_ancestor(struct cgroup_subsys_state *child,$/;"	f
css_lookup	cgroup.c	/^EXPORT_SYMBOL_GPL(css_lookup);$/;"	v
css_lookup	cgroup.c	/^struct cgroup_subsys_state *css_lookup(struct cgroup_subsys *ss, int id)$/;"	f
css_refcnt	cgroup.c	/^static int css_refcnt(struct cgroup_subsys_state *css)$/;"	f	file:
css_set_count	cgroup.c	/^static int css_set_count;$/;"	v	file:
css_set_hash	cgroup.c	/^static unsigned long css_set_hash(struct cgroup_subsys_state *css[])$/;"	f	file:
css_unbias_refcnt	cgroup.c	/^static int css_unbias_refcnt(int refcnt)$/;"	f	file:
ct	swap/energy/energy.c	/^	struct cpus_time ct;$/;"	m	struct:energy_data	typeref:struct:energy_data::cpus_time	file:
ct_idle	swap/energy/energy.c	/^static struct cpus_time ct_idle;$/;"	v	typeref:struct:cpus_time	file:
ctime	audit.h	/^	struct timespec	    ctime;      \/* time of syscall entry *\/$/;"	m	struct:audit_context	typeref:struct:audit_context::timespec
ctl_name	sysctl_binary.c	/^	int			ctl_name;$/;"	m	struct:bin_table	file:
ctr_mask	gcov/gcov.h	/^	unsigned int			ctr_mask;$/;"	m	struct:gcov_info
ctr_type	gcov/gcc_3_4.c	/^	int ctr_type;$/;"	m	struct:type_info	file:
ctrl_alt_del	sys.c	/^void ctrl_alt_del(void)$/;"	f
ctx	audit.c	/^	struct audit_context *ctx;	\/* NULL or associated context *\/$/;"	m	struct:audit_buffer	typeref:struct:audit_buffer::audit_context	file:
ctx_flexible_sched_in	events/core.c	/^ctx_flexible_sched_in(struct perf_event_context *ctx,$/;"	f	file:
ctx_group_list	events/core.c	/^ctx_group_list(struct perf_event *event, struct perf_event_context *ctx)$/;"	f	file:
ctx_pinned_sched_in	events/core.c	/^ctx_pinned_sched_in(struct perf_event_context *ctx,$/;"	f	file:
ctx_sched_in	events/core.c	/^ctx_sched_in(struct perf_event_context *ctx,$/;"	f	file:
ctx_sched_out	events/core.c	/^static void ctx_sched_out(struct perf_event_context *ctx,$/;"	f	file:
ctx_task_kprobe	swap/us_manager/helper.c	/^static struct kprobe ctx_task_kprobe = {$/;"	v	typeref:struct:kprobe	file:
ctx_task_pre_handler	swap/us_manager/helper.c	/^static int ctx_task_pre_handler(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
ctx_trace	trace/trace_nop.c	/^static struct trace_array	*ctx_trace;$/;"	v	typeref:struct:trace_array	file:
ctx_trace	trace/trace_sched_switch.c	/^static struct trace_array	*ctx_trace;$/;"	v	typeref:struct:trace_array	file:
cur	power/power.h	/^	unsigned int	cur;	\/* number of the block of PAGE_SIZE bytes the$/;"	m	struct:snapshot_handle
cur	power/snapshot.c	/^	struct bm_position cur;	\/* most recently used bit position *\/$/;"	m	struct:memory_bitmap	typeref:struct:memory_bitmap::bm_position	file:
cur	power/swap.c	/^	struct swap_map_page *cur;$/;"	m	struct:swap_map_handle	typeref:struct:swap_map_handle::swap_map_page	file:
cur_cgrp	cgroup.c	/^	struct cgroup		*cur_cgrp;$/;"	m	struct:cgroup_taskset	typeref:struct:cgroup_taskset::cgroup	file:
cur_handle	swap/us_manager/callbacks.c	/^static int cur_handle = 0;$/;"	v	file:
cur_ops	rcutorture.c	/^static struct rcu_torture_ops *cur_ops;$/;"	v	typeref:struct:rcu_torture_ops	file:
cur_regs	irq/generic-chip.c	/^static inline struct irq_chip_regs *cur_regs(struct irq_data *d)$/;"	f	file:
cur_swap	power/swap.c	/^	sector_t cur_swap;$/;"	m	struct:swap_map_handle	file:
curr	sched/sched.h	/^		int curr; \/* highest queued rt task prio *\/$/;"	m	struct:rt_rq::__anon4
curr	sched/sched.h	/^	struct sched_entity *curr, *next, *last, *skip;$/;"	m	struct:cfs_rq	typeref:struct:cfs_rq::sched_entity
curr	sched/sched.h	/^	struct task_struct *curr, *idle, *stop;$/;"	m	struct:rq	typeref:struct:rq::task_struct
curr_clocksource	time/clocksource.c	/^static struct clocksource *curr_clocksource;$/;"	v	typeref:struct:clocksource	file:
curr_idx	time/time_history.c	/^	int curr_idx;$/;"	m	struct:time_history_iter	file:
curr_log	time/time_history.c	/^	struct time_history_log_buf *curr_log;$/;"	m	struct:time_history_iter	typeref:struct:time_history_iter::time_history_log_buf	file:
curr_operand	trace/trace_events_filter.c	/^static char *curr_operand(struct filter_parse_state *ps)$/;"	f	file:
curr_scale	sched/fair.c	/^	u32 curr_scale;$/;"	m	struct:cpufreq_extents	file:
curr_task	sched/core.c	/^struct task_struct *curr_task(int cpu)$/;"	f
current_cpuset_is_being_rebound	cpuset.c	/^int current_cpuset_is_being_rebound(void)$/;"	f
current_css_set_cg_links_read	cgroup.c	/^static int current_css_set_cg_links_read(struct cgroup *cont,$/;"	f	file:
current_css_set_read	cgroup.c	/^static u64 current_css_set_read(struct cgroup *cont, struct cftype *cft)$/;"	f	file:
current_css_set_refcount_read	cgroup.c	/^static u64 current_css_set_refcount_read(struct cgroup *cont,$/;"	f	file:
current_event_num	power/wakelock.c	/^static int current_event_num;$/;"	v	file:
current_fs_time	time.c	/^EXPORT_SYMBOL(current_fs_time);$/;"	v
current_fs_time	time.c	/^struct timespec current_fs_time(struct super_block *sb)$/;"	f
current_func	workqueue_internal.h	/^	work_func_t		current_func;	\/* L: current_work's fn *\/$/;"	m	struct:worker
current_is_async	async.c	/^bool current_is_async(void)$/;"	f
current_is_workqueue_rescuer	workqueue.c	/^bool current_is_workqueue_rescuer(void)$/;"	f
current_kernel_time	time/timekeeping.c	/^EXPORT_SYMBOL(current_kernel_time);$/;"	v
current_kernel_time	time/timekeeping.c	/^struct timespec current_kernel_time(void)$/;"	f
current_parameter_apps	swap/energy/energy.c	/^static int current_parameter_apps(enum parameter_type pt, void *buf, int sz)$/;"	f	file:
current_pwq	workqueue_internal.h	/^	struct pool_workqueue	*current_pwq; \/* L: current_work's pwq *\/$/;"	m	struct:worker	typeref:struct:worker::pool_workqueue
current_state	audit.h	/^	enum audit_state    state, current_state;$/;"	m	struct:audit_context	typeref:enum:audit_context::
current_trace	trace/trace.h	/^	struct tracer		*current_trace;$/;"	m	struct:trace_array	typeref:struct:trace_array::tracer
current_ucb	swap/uprobe/arch/x86/swap-asm/swap_uprobes.c	/^static struct uprobe_ctlblk *current_ucb(void)$/;"	f	file:
current_work	workqueue_internal.h	/^	struct work_struct	*current_work;	\/* L: work being processed *\/$/;"	m	struct:worker	typeref:struct:worker::work_struct
current_wq_worker	workqueue_internal.h	/^static inline struct worker *current_wq_worker(void)$/;"	f
curtail	rcutiny_plugin.h	/^	struct rcu_head **curtail;	\/* ->next pointer of last CB. *\/$/;"	m	struct:rcu_ctrlblk	typeref:struct:rcu_ctrlblk::rcu_head
d	auditsc.c	/^	struct audit_aux_data	d;$/;"	m	struct:audit_aux_data_bprm_fcaps	typeref:struct:audit_aux_data_bprm_fcaps::audit_aux_data	file:
d	auditsc.c	/^	struct audit_aux_data	d;$/;"	m	struct:audit_aux_data_capset	typeref:struct:audit_aux_data_capset::audit_aux_data	file:
d	auditsc.c	/^	struct audit_aux_data	d;$/;"	m	struct:audit_aux_data_execve	typeref:struct:audit_aux_data_execve::audit_aux_data	file:
d	auditsc.c	/^	struct audit_aux_data	d;$/;"	m	struct:audit_aux_data_pids	typeref:struct:audit_aux_data_pids::audit_aux_data	file:
dah_align	debug/kdb/kdb_support.c	705;"	d	file:
dah_first	debug/kdb/kdb_support.c	/^static u32 dah_first, dah_first_call = 1, dah_used, dah_used_max;$/;"	v	file:
dah_first_call	debug/kdb/kdb_support.c	/^static u32 dah_first, dah_first_call = 1, dah_used, dah_used_max;$/;"	v	file:
dah_overhead	debug/kdb/kdb_support.c	706;"	d	file:
dah_used	debug/kdb/kdb_support.c	/^static u32 dah_first, dah_first_call = 1, dah_used, dah_used_max;$/;"	v	file:
dah_used_max	debug/kdb/kdb_support.c	/^static u32 dah_first, dah_first_call = 1, dah_used, dah_used_max;$/;"	v	file:
dash2underscore	params.c	/^static char dash2underscore(char c)$/;"	f	file:
data	async.c	/^	void			*data;$/;"	m	struct:async_entry	file:
data	kthread.c	/^	void *data;$/;"	m	struct:kthread	file:
data	kthread.c	/^	void *data;$/;"	m	struct:kthread_create_info	file:
data	power/snapshot.c	/^	char data[LINKED_PAGE_DATA_SIZE];$/;"	m	struct:linked_page	file:
data	power/snapshot.c	/^	unsigned long *data;	\/* bitmap representing pages *\/$/;"	m	struct:bm_block	file:
data	sched/core.c	/^	struct sd_data      data;$/;"	m	struct:sched_domain_topology_level	typeref:struct:sched_domain_topology_level::sd_data	file:
data	stop_machine.c	/^	void			*data;$/;"	m	struct:stop_machine_data	file:
data	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^	char data[0];$/;"	m	struct:cb_data	file:
data	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^	char data[0];$/;"	m	struct:kj_cb_data	file:
data	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^	char data[0];$/;"	m	struct:cb_data	file:
data	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^	char data[0];$/;"	m	struct:kj_cb_data	file:
data	swap/kprobe/swap_kprobes.h	/^	char data[0];                   \/**< Pointer to data.*\/$/;"	m	struct:kretprobe_instance
data	swap/kprobe/swap_slots.c	/^	unsigned long *data;$/;"	m	struct:chunk	file:
data	swap/kprobe/swap_slots.h	/^	void *data;$/;"	m	struct:slot_manager
data	swap/ks_features/ks_map.c	/^	void *data;$/;"	m	struct:entry	file:
data	swap/task_data/task_data.c	/^	void *data;$/;"	m	struct:task_data	file:
data	swap/uprobe/swap_uprobes.h	/^	char data[0];                       \/**< Custom data *\/$/;"	m	struct:uretprobe_instance
data	swap/us_manager/pf/proc_filters.h	/^	void *data;		\/**< Data of callback *\/$/;"	m	struct:proc_filter
data	swap/us_manager/probes/probe_info_new.h	/^	struct probe_info_new *data;	\/* field 'data[0]' in probe_info struct *\/$/;"	m	struct:probe_info_otg	typeref:struct:probe_info_otg::probe_info_new
data	swap/us_manager/probes/probes.h	/^	char data[0];$/;"	m	struct:probe_info
data	swap/us_manager/sspt/sspt_feature.c	/^	void *data;$/;"	m	struct:sspt_feature_data	file:
data	trace/ftrace.c	/^	void			*data;$/;"	m	struct:ftrace_func_probe	file:
data	trace/ring_buffer_benchmark.c	/^	char		data[4080];$/;"	m	struct:rb_page	file:
data	trace/trace.h	/^	struct trace_array_cpu __percpu	*data;$/;"	m	struct:trace_buffer	typeref:struct:trace_buffer::__percpu
data	trace/trace_probe.h	/^	void 			*data;$/;"	m	struct:fetch_param
data_buffer	swap/buffer/buffer_description.h	/^	swap_subbuffer_ptr data_buffer;$/;"	m	struct:swap_subbuffer
data_msg_period	swap/parser/msg_parser.h	/^	u32 data_msg_period;        \/**< Data message period. *\/$/;"	m	struct:conf_data
data_of	power/power.h	129;"	d
data_offset	swap/fbiprobe/fbiprobe.h	/^	uint64_t data_offset;$/;"	m	struct:fbi_step
data_page	swap/preload/preload_pd.c	/^	unsigned long data_page;$/;"	m	struct:process_data	file:
data_page_nr	events/ring_buffer.c	/^static int data_page_nr(struct ring_buffer *rb)$/;"	f	file:
data_pages	events/internal.h	/^	void				*data_pages[0];$/;"	m	struct:ring_buffer
data_size	swap/fbiprobe/fbiprobe.h	/^	uint32_t data_size;        \/* Data size to be read *\/$/;"	m	struct:fbi_var_data
data_size	swap/kprobe/swap_kprobes.h	/^	size_t data_size;                    \/**< Size of the data. *\/$/;"	m	struct:kretprobe
data_size	swap/uprobe/swap_uprobes.h	/^	size_t data_size;                   \/**< Instance data size *\/$/;"	m	struct:uretprobe
data_size	swap/us_manager/probes/probe_info_new.h	/^			size_t data_size;$/;"	m	struct:probe_info_new::__anon57::__anon59
dattr_cur	sched/core.c	/^static struct sched_domain_attr *dattr_cur;$/;"	v	typeref:struct:sched_domain_attr	file:
dattrs_equal	sched/core.c	/^static int dattrs_equal(struct sched_domain_attr *cur, int idx_cur,$/;"	f	file:
dbg_activate_sw_breakpoints	debug/debug_core.c	/^int dbg_activate_sw_breakpoints(void)$/;"	f
dbg_deactivate_sw_breakpoints	debug/debug_core.c	/^int dbg_deactivate_sw_breakpoints(void)$/;"	f
dbg_io_get_char	debug/debug_core.c	/^int dbg_io_get_char(void)$/;"	f
dbg_io_ops	debug/debug_core.c	/^struct kgdb_io		*dbg_io_ops;$/;"	v	typeref:struct:kgdb_io
dbg_is_early	debug/debug_core.c	/^bool dbg_is_early = true;$/;"	v
dbg_kdb_mode	debug/debug_core.c	/^int dbg_kdb_mode = 1;$/;"	v
dbg_late_init	debug/debug_core.c	/^void __init dbg_late_init(void)$/;"	f
dbg_module_load_nb	debug/debug_core.c	/^static struct notifier_block dbg_module_load_nb = {$/;"	v	typeref:struct:notifier_block	file:
dbg_notify_reboot	debug/debug_core.c	/^dbg_notify_reboot(struct notifier_block *this, unsigned long code, void *x)$/;"	f	file:
dbg_reboot_notifier	debug/debug_core.c	/^static struct notifier_block dbg_reboot_notifier = {$/;"	v	typeref:struct:notifier_block	file:
dbg_release_bp_slot	events/hw_breakpoint.c	/^int dbg_release_bp_slot(struct perf_event *bp)$/;"	f
dbg_remove_all_break	debug/debug_core.c	/^int dbg_remove_all_break(void)$/;"	f
dbg_remove_sw_break	debug/debug_core.c	/^int dbg_remove_sw_break(unsigned long addr)$/;"	f
dbg_reserve_bp_slot	events/hw_breakpoint.c	/^int dbg_reserve_bp_slot(struct perf_event *bp)$/;"	f
dbg_set_sw_break	debug/debug_core.c	/^int dbg_set_sw_break(unsigned long addr)$/;"	f
dbg_switch_cpu	debug/debug_core.c	/^int dbg_switch_cpu;$/;"	v
dbg_touch_watchdogs	debug/debug_core.c	/^static void dbg_touch_watchdogs(void)$/;"	f	file:
ddir_act	trace/blktrace.c	/^static const u32 ddir_act[2] = { BLK_TC_ACT(BLK_TC_READ),$/;"	v	file:
deactivate_task	sched/core.c	/^void deactivate_task(struct rq *rq, struct task_struct *p, int flags)$/;"	f
dead	audit_tree.c	/^	int dead;$/;"	m	struct:audit_chunk	file:
deadlock_lock	rtmutex_common.h	/^	struct rt_mutex		*deadlock_lock;$/;"	m	struct:rt_mutex_waiter	typeref:struct:rt_mutex_waiter::rt_mutex
deadlock_task_pid	rtmutex_common.h	/^	struct pid		*deadlock_task_pid;$/;"	m	struct:rt_mutex_waiter	typeref:struct:rt_mutex_waiter::pid
debug	module.c	/^	struct _ddebug *debug;$/;"	m	struct:load_info	typeref:struct:load_info::_ddebug	file:
debug_activate	hrtimer.c	/^static inline void debug_activate(struct hrtimer *timer)$/;"	f	file:
debug_activate	timer.c	/^debug_activate(struct timer_list *timer, unsigned long expires)$/;"	f	file:
debug_align	module.c	80;"	d	file:
debug_align	module.c	82;"	d	file:
debug_alloc_header	debug/kdb/kdb_support.c	/^struct debug_alloc_header {$/;"	s	file:
debug_alloc_pool	debug/kdb/kdb_support.c	/^static char *debug_alloc_pool = (char *)debug_alloc_pool_aligned;$/;"	v	file:
debug_alloc_pool_aligned	debug/kdb/kdb_support.c	/^static u64 debug_alloc_pool_aligned[256*1024\/dah_align];	\/* 256K pool *\/$/;"	v	file:
debug_assert_init	timer.c	/^static inline void debug_assert_init(struct timer_list *timer)$/;"	f	file:
debug_atomic_dec	lockdep_internals.h	150;"	d
debug_atomic_dec	lockdep_internals.h	168;"	d
debug_atomic_inc	lockdep_internals.h	145;"	d
debug_atomic_inc	lockdep_internals.h	167;"	d
debug_atomic_read	lockdep_internals.h	155;"	d
debug_atomic_read	lockdep_internals.h	169;"	d
debug_check_no_locks_freed	lockdep.c	/^EXPORT_SYMBOL_GPL(debug_check_no_locks_freed);$/;"	v
debug_check_no_locks_freed	lockdep.c	/^void debug_check_no_locks_freed(const void *mem_from, unsigned long mem_len)$/;"	f
debug_check_no_locks_held	lockdep.c	/^EXPORT_SYMBOL_GPL(debug_check_no_locks_held);$/;"	v
debug_check_no_locks_held	lockdep.c	/^void debug_check_no_locks_held(void)$/;"	f
debug_css_alloc	cgroup.c	/^static struct cgroup_subsys_state *debug_css_alloc(struct cgroup *cont)$/;"	f	file:
debug_css_free	cgroup.c	/^static void debug_css_free(struct cgroup *cont)$/;"	f	file:
debug_deactivate	hrtimer.c	/^static inline void debug_deactivate(struct hrtimer *timer)$/;"	f	file:
debug_deactivate	timer.c	/^static inline void debug_deactivate(struct timer_list *timer)$/;"	f	file:
debug_files	cgroup.c	/^static struct cftype debug_files[] =  {$/;"	v	typeref:struct:cftype	file:
debug_hrtimer_activate	hrtimer.c	/^static inline void debug_hrtimer_activate(struct hrtimer *timer) { }$/;"	f	file:
debug_hrtimer_activate	hrtimer.c	/^static inline void debug_hrtimer_activate(struct hrtimer *timer)$/;"	f	file:
debug_hrtimer_deactivate	hrtimer.c	/^static inline void debug_hrtimer_deactivate(struct hrtimer *timer) { }$/;"	f	file:
debug_hrtimer_deactivate	hrtimer.c	/^static inline void debug_hrtimer_deactivate(struct hrtimer *timer)$/;"	f	file:
debug_hrtimer_free	hrtimer.c	/^static inline void debug_hrtimer_free(struct hrtimer *timer)$/;"	f	file:
debug_hrtimer_init	hrtimer.c	/^static inline void debug_hrtimer_init(struct hrtimer *timer) { }$/;"	f	file:
debug_hrtimer_init	hrtimer.c	/^static inline void debug_hrtimer_init(struct hrtimer *timer)$/;"	f	file:
debug_init	hrtimer.c	/^debug_init(struct hrtimer *timer, clockid_t clockid,$/;"	f	file:
debug_init	timer.c	/^static inline void debug_init(struct timer_list *timer)$/;"	f	file:
debug_init_rcu_head	rcupdate.c	/^static inline void debug_init_rcu_head(struct rcu_head *head)$/;"	f	file:
debug_kfree	debug/kdb/kdb_support.c	/^void debug_kfree(void *p)$/;"	f
debug_kmalloc	debug/kdb/kdb_support.c	/^void *debug_kmalloc(size_t size, gfp_t flags)$/;"	f
debug_kusage	debug/kdb/kdb_support.c	/^void debug_kusage(void)$/;"	f
debug_lockdep_rcu_enabled	rcupdate.c	/^EXPORT_SYMBOL_GPL(debug_lockdep_rcu_enabled);$/;"	v
debug_lockdep_rcu_enabled	rcupdate.c	/^int debug_lockdep_rcu_enabled(void)$/;"	f
debug_locks_off_graph_unlock	lockdep.c	/^static inline int debug_locks_off_graph_unlock(void)$/;"	f	file:
debug_mask	power/earlysuspend.c	/^static int debug_mask = DEBUG_USER_STATE | DEBUG_SUSPEND | DEBUG_VERBOSE;$/;"	v	file:
debug_mask	power/userwakelock.c	/^static int debug_mask = DEBUG_FAILURE;$/;"	v	file:
debug_mask	power/wakelock.c	/^static int debug_mask = DEBUG_EXIT_SUSPEND | DEBUG_WAKEUP;$/;"	v	file:
debug_mutex_add_waiter	mutex-debug.c	/^void debug_mutex_add_waiter(struct mutex *lock, struct mutex_waiter *waiter,$/;"	f
debug_mutex_add_waiter	mutex.h	41;"	d
debug_mutex_free_waiter	mutex-debug.c	/^void debug_mutex_free_waiter(struct mutex_waiter *waiter)$/;"	f
debug_mutex_free_waiter	mutex.h	40;"	d
debug_mutex_init	mutex-debug.c	/^void debug_mutex_init(struct mutex *lock, const char *name,$/;"	f
debug_mutex_init	mutex.h	43;"	d
debug_mutex_lock_common	mutex-debug.c	/^void debug_mutex_lock_common(struct mutex *lock, struct mutex_waiter *waiter)$/;"	f
debug_mutex_lock_common	mutex.h	/^debug_mutex_lock_common(struct mutex *lock, struct mutex_waiter *waiter)$/;"	f
debug_mutex_unlock	mutex-debug.c	/^void debug_mutex_unlock(struct mutex *lock)$/;"	f
debug_mutex_unlock	mutex.h	42;"	d
debug_mutex_wake_waiter	mutex-debug.c	/^void debug_mutex_wake_waiter(struct mutex *lock, struct mutex_waiter *waiter)$/;"	f
debug_mutex_wake_waiter	mutex.h	39;"	d
debug_print_probes	tracepoint.c	/^static void debug_print_probes(struct tracepoint_entry *entry)$/;"	f	file:
debug_rcu_head_free	rcupdate.c	/^static inline void debug_rcu_head_free(struct rcu_head *head)$/;"	f	file:
debug_rcu_head_queue	rcu.h	/^static inline void debug_rcu_head_queue(struct rcu_head *head)$/;"	f
debug_rcu_head_unqueue	rcu.h	/^static inline void debug_rcu_head_unqueue(struct rcu_head *head)$/;"	f
debug_rt_mutex_deadlock	rtmutex-debug.c	/^void debug_rt_mutex_deadlock(int detect, struct rt_mutex_waiter *act_waiter,$/;"	f
debug_rt_mutex_deadlock	rtmutex.h	23;"	d
debug_rt_mutex_detect_deadlock	rtmutex-debug.h	/^static inline int debug_rt_mutex_detect_deadlock(struct rt_mutex_waiter *waiter,$/;"	f
debug_rt_mutex_detect_deadlock	rtmutex.h	25;"	d
debug_rt_mutex_free_waiter	rtmutex-debug.c	/^void debug_rt_mutex_free_waiter(struct rt_mutex_waiter *waiter)$/;"	f
debug_rt_mutex_free_waiter	rtmutex.h	17;"	d
debug_rt_mutex_init	rtmutex-debug.c	/^void debug_rt_mutex_init(struct rt_mutex *lock, const char *name)$/;"	f
debug_rt_mutex_init	rtmutex.h	22;"	d
debug_rt_mutex_init_waiter	rtmutex-debug.c	/^void debug_rt_mutex_init_waiter(struct rt_mutex_waiter *waiter)$/;"	f
debug_rt_mutex_init_waiter	rtmutex.h	16;"	d
debug_rt_mutex_lock	rtmutex-debug.c	/^void debug_rt_mutex_lock(struct rt_mutex *lock)$/;"	f
debug_rt_mutex_lock	rtmutex.h	18;"	d
debug_rt_mutex_print_deadlock	rtmutex-debug.c	/^void debug_rt_mutex_print_deadlock(struct rt_mutex_waiter *waiter)$/;"	f
debug_rt_mutex_print_deadlock	rtmutex.h	24;"	d
debug_rt_mutex_proxy_lock	rtmutex-debug.c	/^debug_rt_mutex_proxy_lock(struct rt_mutex *lock, struct task_struct *powner)$/;"	f
debug_rt_mutex_proxy_lock	rtmutex.h	19;"	d
debug_rt_mutex_proxy_unlock	rtmutex-debug.c	/^void debug_rt_mutex_proxy_unlock(struct rt_mutex *lock)$/;"	f
debug_rt_mutex_proxy_unlock	rtmutex.h	20;"	d
debug_rt_mutex_reset_waiter	rtmutex-debug.h	26;"	d
debug_rt_mutex_reset_waiter	rtmutex.h	26;"	d
debug_rt_mutex_unlock	rtmutex-debug.c	/^void debug_rt_mutex_unlock(struct rt_mutex *lock)$/;"	f
debug_rt_mutex_unlock	rtmutex.h	21;"	d
debug_show_all_locks	lockdep.c	/^EXPORT_SYMBOL_GPL(debug_show_all_locks);$/;"	v
debug_show_all_locks	lockdep.c	/^void debug_show_all_locks(void)$/;"	f
debug_show_held_locks	lockdep.c	/^EXPORT_SYMBOL_GPL(debug_show_held_locks);$/;"	v
debug_show_held_locks	lockdep.c	/^void debug_show_held_locks(struct task_struct *task)$/;"	f
debug_subsys	cgroup.c	/^struct cgroup_subsys debug_subsys = {$/;"	v	typeref:struct:cgroup_subsys
debug_table	sysctl.c	/^static struct ctl_table debug_table[] = {$/;"	v	typeref:struct:ctl_table	file:
debug_table	sysctl.c	/^static struct ctl_table debug_table[];$/;"	v	typeref:struct:ctl_table	file:
debug_taskcount_read	cgroup.c	/^static u64 debug_taskcount_read(struct cgroup *cont, struct cftype *cft)$/;"	f	file:
debug_timer_activate	timer.c	/^static inline void debug_timer_activate(struct timer_list *timer) { }$/;"	f	file:
debug_timer_activate	timer.c	/^static inline void debug_timer_activate(struct timer_list *timer)$/;"	f	file:
debug_timer_assert_init	timer.c	/^static inline void debug_timer_assert_init(struct timer_list *timer) { }$/;"	f	file:
debug_timer_assert_init	timer.c	/^static inline void debug_timer_assert_init(struct timer_list *timer)$/;"	f	file:
debug_timer_deactivate	timer.c	/^static inline void debug_timer_deactivate(struct timer_list *timer) { }$/;"	f	file:
debug_timer_deactivate	timer.c	/^static inline void debug_timer_deactivate(struct timer_list *timer)$/;"	f	file:
debug_timer_free	timer.c	/^static inline void debug_timer_free(struct timer_list *timer)$/;"	f	file:
debug_timer_init	timer.c	/^static inline void debug_timer_init(struct timer_list *timer) { }$/;"	f	file:
debug_timer_init	timer.c	/^static inline void debug_timer_init(struct timer_list *timer)$/;"	f	file:
debug_work_activate	workqueue.c	/^static inline void debug_work_activate(struct work_struct *work) { }$/;"	f	file:
debug_work_activate	workqueue.c	/^static inline void debug_work_activate(struct work_struct *work)$/;"	f	file:
debug_work_deactivate	workqueue.c	/^static inline void debug_work_deactivate(struct work_struct *work) { }$/;"	f	file:
debug_work_deactivate	workqueue.c	/^static inline void debug_work_deactivate(struct work_struct *work)$/;"	f	file:
debugfs_create_ptr	swap/preload/preload_debugfs.c	/^struct dentry *debugfs_create_ptr(const char *name, mode_t mode,$/;"	f
debugfs_dir_exit	swap/master/swap_debugfs.c	/^static void debugfs_dir_exit(void)$/;"	f	file:
debugfs_dir_init	swap/master/swap_debugfs.c	/^static int debugfs_dir_init(void)$/;"	f	file:
debugfs_kprobe_init	kprobes.c	/^late_initcall(debugfs_kprobe_init);$/;"	v
debugfs_kprobe_init	kprobes.c	/^static int __kprobes debugfs_kprobe_init(void)$/;"	f	file:
debugfs_kprobes_operations	kprobes.c	/^static const struct file_operations debugfs_kprobes_operations = {$/;"	v	typeref:struct:file_operations	file:
debuggerinfo	debug/debug_core.h	/^	void			*debuggerinfo;$/;"	m	struct:debuggerinfo_struct
debuggerinfo_struct	debug/debug_core.h	/^struct debuggerinfo_struct {$/;"	s
dec_buffers_to_read	swap/driver/driver_to_buffer.c	/^static inline void dec_buffers_to_read(void)$/;"	f	file:
dec_counter	swap/ks_features/ks_features.c	/^static void dec_counter(size_t id)$/;"	f	file:
dec_data	power/swap.c	/^struct dec_data {$/;"	s	file:
dec_nr_running	sched/sched.h	/^static inline void dec_nr_running(struct rq *rq)$/;"	f
dec_probes	swap/preload/preload_probe.c	/^static inline void dec_probes(void)$/;"	f	file:
dec_rt_group	sched/rt.c	/^dec_rt_group(struct sched_rt_entity *rt_se, struct rt_rq *rt_rq)$/;"	f	file:
dec_rt_group	sched/rt.c	/^void dec_rt_group(struct sched_rt_entity *rt_se, struct rt_rq *rt_rq) {}$/;"	f	file:
dec_rt_migration	sched/rt.c	/^static void dec_rt_migration(struct sched_rt_entity *rt_se, struct rt_rq *rt_rq)$/;"	f	file:
dec_rt_migration	sched/rt.c	/^void dec_rt_migration(struct sched_rt_entity *rt_se, struct rt_rq *rt_rq)$/;"	f	file:
dec_rt_prio	sched/rt.c	/^dec_rt_prio(struct rt_rq *rt_rq, int prio)$/;"	f	file:
dec_rt_prio	sched/rt.c	/^static inline void dec_rt_prio(struct rt_rq *rt_rq, int prio) {}$/;"	f	file:
dec_rt_prio_smp	sched/rt.c	/^dec_rt_prio_smp(struct rt_rq *rt_rq, int prio, int prev_prio)$/;"	f	file:
dec_rt_prio_smp	sched/rt.c	/^void dec_rt_prio_smp(struct rt_rq *rt_rq, int prio, int prev_prio) {}$/;"	f	file:
dec_rt_tasks	sched/rt.c	/^void dec_rt_tasks(struct sched_rt_entity *rt_se, struct rt_rq *rt_rq)$/;"	f	file:
decay_counter	sched/sched.h	/^	atomic64_t decay_counter, removed_load;$/;"	m	struct:cfs_rq
decay_load	sched/fair.c	/^static __always_inline u64 decay_load(u64 val, u64 n)$/;"	f	file:
decay_load_missed	sched/core.c	/^decay_load_missed(unsigned long load, unsigned long missed_updates, int idx)$/;"	f	file:
decode_state	power/main.c	/^static suspend_state_t decode_state(const char *buf, size_t n)$/;"	f	file:
def_root_domain	sched/core.c	/^struct root_domain def_root_domain;$/;"	v	typeref:struct:root_domain
def_rt_bandwidth	sched/rt.c	/^struct rt_bandwidth def_rt_bandwidth;$/;"	v	typeref:struct:rt_bandwidth
default_affinity_open	irq/proc.c	/^static int default_affinity_open(struct inode *inode, struct file *file)$/;"	f	file:
default_affinity_proc_fops	irq/proc.c	/^static const struct file_operations default_affinity_proc_fops = {$/;"	v	typeref:struct:file_operations	file:
default_affinity_show	irq/proc.c	/^static int default_affinity_show(struct seq_file *m, void *v)$/;"	f	file:
default_affinity_write	irq/proc.c	/^static ssize_t default_affinity_write(struct file *file,$/;"	f	file:
default_bootup_tracer	trace/trace.c	/^static char *default_bootup_tracer;$/;"	v	file:
default_cfs_period	sched/fair.c	/^static inline u64 default_cfs_period(void)$/;"	f	file:
default_channel_callbacks	relay.c	/^static struct rchan_callbacks default_channel_callbacks = {$/;"	v	typeref:struct:rchan_callbacks	file:
default_dump_filter	fork.c	/^static unsigned long default_dump_filter = MMF_DUMP_FILTER_DEFAULT;$/;"	v	file:
default_exec_domain	exec_domain.c	/^struct exec_domain default_exec_domain = {$/;"	v	typeref:struct:exec_domain
default_handler	exec_domain.c	/^default_handler(int segment, struct pt_regs *regp)$/;"	f	file:
default_relax_domain_level	sched/core.c	/^static int default_relax_domain_level = -1;$/;"	v	file:
default_scale_freq_power	sched/fair.c	/^static unsigned long default_scale_freq_power(struct sched_domain *sd, int cpu)$/;"	f	file:
default_scale_smt_power	sched/fair.c	/^static unsigned long default_scale_smt_power(struct sched_domain *sd, int cpu)$/;"	f	file:
default_topology	sched/core.c	/^static struct sched_domain_topology_level default_topology[] = {$/;"	v	typeref:struct:sched_domain_topology_level	file:
default_wait_pipe	trace/trace.c	/^static int default_wait_pipe(struct trace_iterator *iter)$/;"	f	file:
default_wake_function	sched/core.c	/^EXPORT_SYMBOL(default_wake_function);$/;"	v
default_wake_function	sched/core.c	/^int default_wake_function(wait_queue_t *curr, unsigned mode, int wake_flags,$/;"	f
defcmd_in_progress	debug/kdb/kdb_main.c	/^static int defcmd_in_progress;$/;"	v	file:
defcmd_set	debug/kdb/kdb_main.c	/^static struct defcmd_set *defcmd_set;$/;"	v	typeref:struct:defcmd_set	file:
defcmd_set	debug/kdb/kdb_main.c	/^struct defcmd_set {$/;"	s	file:
defcmd_set_count	debug/kdb/kdb_main.c	/^static int defcmd_set_count;$/;"	v	file:
deferred_cad	sys.c	/^static void deferred_cad(struct work_struct *dummy)$/;"	f	file:
deferred_free	rcutorture.c	/^	void (*deferred_free)(struct rcu_torture *p);$/;"	m	struct:rcu_torture_ops	file:
degrade_factor	sched/core.c	/^		degrade_factor[CPU_LOAD_IDX_MAX][DEGRADE_SHIFT + 1] = {$/;"	v	file:
degrade_zero_ticks	sched/core.c	/^		degrade_zero_ticks[CPU_LOAD_IDX_MAX] = {0, 8, 32, 64, 128};$/;"	v	file:
del_feature_by_img	swap/us_manager/sspt/sspt_feature.c	/^static void del_feature_by_img(struct sspt_feature *f,$/;"	f	file:
del_feature_from_proc	swap/us_manager/sspt/sspt_feature.c	/^static void del_feature_from_proc(struct sspt_proc *proc, void *data)$/;"	f	file:
del_feature_img_from_list	swap/us_manager/sspt/sspt_feature.c	/^static void del_feature_img_from_list(struct sspt_feature_img *fi)$/;"	f	file:
del_timer	timer.c	/^EXPORT_SYMBOL(del_timer);$/;"	v
del_timer	timer.c	/^int del_timer(struct timer_list *timer)$/;"	f
del_timer_sync	timer.c	/^EXPORT_SYMBOL(del_timer_sync);$/;"	v
del_timer_sync	timer.c	/^int del_timer_sync(struct timer_list *timer)$/;"	f
del_uprobe_table	swap/uprobe/swap_uprobes.c	/^static void del_uprobe_table(struct kprobe *p)$/;"	f	file:
del_usage_links	module.c	/^static void del_usage_links(struct module *mod)$/;"	f	file:
delay	sched/fair.c	/^	ktime_t delay;	\/* if zero, no need for timer *\/$/;"	m	struct:hmp_keepalive	file:
delayacct_cache	delayacct.c	/^struct kmem_cache *delayacct_cache;$/;"	v	typeref:struct:kmem_cache
delayacct_end	delayacct.c	/^static void delayacct_end(struct timespec *start, struct timespec *end,$/;"	f	file:
delayacct_init	delayacct.c	/^void delayacct_init(void)$/;"	f
delayacct_on	delayacct.c	/^EXPORT_SYMBOL_GPL(delayacct_on);$/;"	v
delayacct_setup_disable	delayacct.c	/^static int __init delayacct_setup_disable(char *str)$/;"	f	file:
delayacct_start	delayacct.c	/^static inline void delayacct_start(struct timespec *start)$/;"	f	file:
delayed_put_pid	pid.c	/^static void delayed_put_pid(struct rcu_head *rhp)$/;"	f	file:
delayed_put_task_struct	exit.c	/^static void delayed_put_task_struct(struct rcu_head *rhp)$/;"	f	file:
delayed_work_timer_fn	workqueue.c	/^EXPORT_SYMBOL(delayed_work_timer_fn);$/;"	v
delayed_work_timer_fn	workqueue.c	/^void delayed_work_timer_fn(unsigned long __data)$/;"	f
delayed_works	workqueue.c	/^	struct list_head	delayed_works;	\/* L: delayed works *\/$/;"	m	struct:pool_workqueue	typeref:struct:pool_workqueue::list_head	file:
delete_clock	time/posix-clock.c	/^static void delete_clock(struct kref *kref)$/;"	f	file:
delete_irq_desc	irq/irqdesc.c	/^static void delete_irq_desc(unsigned int irq)$/;"	f	file:
delete_uprobe	events/uprobes.c	/^static void delete_uprobe(struct uprobe *uprobe)$/;"	f	file:
deleted_wake_locks	power/wakelock.c	/^static struct wake_lock deleted_wake_locks;$/;"	v	typeref:struct:wake_lock	file:
denom	swap/energy/rational_debugfs.h	/^	u64 denom;		\/**< Denominator *\/$/;"	m	struct:rational
denom_get	swap/energy/rational_debugfs.c	/^static int denom_get(void *data, u64 *val)$/;"	f	file:
denom_set	swap/energy/rational_debugfs.c	/^static int denom_set(void *data, u64 val)$/;"	f	file:
dentry	cgroup.c	/^	struct dentry			*dentry;$/;"	m	struct:cfent	typeref:struct:cfent::dentry	file:
dentry	gcov/fs.c	/^	struct dentry *dentry;$/;"	m	struct:gcov_node	typeref:struct:gcov_node::dentry	file:
dentry	relay.c	/^	struct dentry *dentry;$/;"	m	struct:rchan_percpu_buf_dispatcher	typeref:struct:rchan_percpu_buf_dispatcher::dentry	file:
dentry	swap/energy/lcd/lcd_base.h	/^	struct dentry *dentry;		\/**< Dentry of debugfs for this LCD *\/$/;"	m	struct:lcd_ops	typeref:struct:lcd_ops::dentry
dentry	swap/ks_features/file_ops.c	/^	struct dentry *dentry;$/;"	m	struct:file_private	typeref:struct:file_private::dentry	file:
dentry	swap/ks_features/file_ops.c	/^	struct dentry *dentry;$/;"	m	struct:flock_private	typeref:struct:flock_private::dentry	file:
dentry	swap/preload/preload_control.c	/^	struct dentry *dentry;$/;"	m	struct:bin_desc	typeref:struct:bin_desc::dentry	file:
dentry	swap/preload/preload_debugfs.c	/^	struct dentry *dentry;$/;"	m	struct:loader_info	typeref:struct:loader_info::dentry	file:
dentry	swap/preload/preload_storage.h	/^	struct dentry *dentry;$/;"	m	struct:bin_info	typeref:struct:bin_info::dentry
dentry	swap/us_manager/img/img_file.h	/^	struct dentry *dentry;		\/**< Dentry of file *\/$/;"	m	struct:img_file	typeref:struct:img_file::dentry
dentry	swap/us_manager/sspt/sspt_file.h	/^	struct dentry *dentry;		\/**< Dentry of file *\/$/;"	m	struct:sspt_file	typeref:struct:sspt_file::dentry
dentry_balance	swap/preload/preload_module.c	/^static atomic_t dentry_balance = ATOMIC_INIT(0);$/;"	v	file:
dentry_by_path	swap/us_manager/pf/pf_group.c	/^EXPORT_SYMBOL_GPL(dentry_by_path);$/;"	v
dentry_by_path	swap/us_manager/pf/pf_group.c	/^struct dentry *dentry_by_path(const char *path)$/;"	f
dentry_get_put_balance	swap/ks_features/file_ops.c	/^static int dentry_get_put_balance;$/;"	v	file:
dentry_lock	swap/preload/preload_debugfs.c	/^static inline void dentry_lock(void)$/;"	f	file:
dentry_unlock	swap/preload/preload_debugfs.c	/^static inline void dentry_unlock(void)$/;"	f	file:
deprecated_sysctl_warning	sysctl_binary.c	/^static void deprecated_sysctl_warning(const int *name, int nlen)$/;"	f	file:
depth	cgroup.c	/^	unsigned short depth;$/;"	m	struct:css_id	file:
depth	trace/trace_functions_graph.c	/^	int		depth;$/;"	m	struct:fgraph_cpu_data	file:
depth_irq	trace/trace_functions_graph.c	/^	int		depth_irq;$/;"	m	struct:fgraph_cpu_data	file:
depth_se	sched/fair.c	/^static inline int depth_se(struct sched_entity *se)$/;"	f	file:
dequeue_entity	sched/fair.c	/^dequeue_entity(struct cfs_rq *cfs_rq, struct sched_entity *se, int flags)$/;"	f	file:
dequeue_entity_load_avg	sched/fair.c	/^static inline void dequeue_entity_load_avg(struct cfs_rq *cfs_rq,$/;"	f	file:
dequeue_pushable_task	sched/rt.c	/^static inline void dequeue_pushable_task(struct rq *rq, struct task_struct *p)$/;"	f	file:
dequeue_pushable_task	sched/rt.c	/^static void dequeue_pushable_task(struct rq *rq, struct task_struct *p)$/;"	f	file:
dequeue_rt_entity	sched/rt.c	/^static void dequeue_rt_entity(struct sched_rt_entity *rt_se)$/;"	f	file:
dequeue_rt_stack	sched/rt.c	/^static void dequeue_rt_stack(struct sched_rt_entity *rt_se)$/;"	f	file:
dequeue_signal	signal.c	/^EXPORT_SYMBOL_GPL(dequeue_signal);$/;"	v
dequeue_signal	signal.c	/^int dequeue_signal(struct task_struct *tsk, sigset_t *mask, siginfo_t *info)$/;"	f
dequeue_task	sched/core.c	/^static void dequeue_task(struct rq *rq, struct task_struct *p, int flags)$/;"	f	file:
dequeue_task	sched/sched.h	/^	void (*dequeue_task) (struct rq *rq, struct task_struct *p, int flags);$/;"	m	struct:sched_class
dequeue_task_fair	sched/fair.c	/^static void dequeue_task_fair(struct rq *rq, struct task_struct *p, int flags)$/;"	f	file:
dequeue_task_idle	sched/idle_task.c	/^dequeue_task_idle(struct rq *rq, struct task_struct *p, int flags)$/;"	f	file:
dequeue_task_rt	sched/rt.c	/^static void dequeue_task_rt(struct rq *rq, struct task_struct *p, int flags)$/;"	f	file:
dequeue_task_stop	sched/stop_task.c	/^dequeue_task_stop(struct rq *rq, struct task_struct *p, int flags)$/;"	f	file:
desc	workqueue_internal.h	/^	char			desc[WORKER_DESC_LEN];$/;"	m	struct:worker
desc_node	irq/irqdesc.c	/^static inline int desc_node(struct irq_desc *desc) { return 0; }$/;"	f	file:
desc_node	irq/irqdesc.c	/^static inline int desc_node(struct irq_desc *desc)$/;"	f	file:
desc_set_defaults	irq/irqdesc.c	/^static void desc_set_defaults(unsigned int irq, struct irq_desc *desc, int node,$/;"	f	file:
desc_smp_init	irq/irqdesc.c	/^static inline void desc_smp_init(struct irq_desc *desc, int node) { }$/;"	f	file:
desc_smp_init	irq/irqdesc.c	/^static void desc_smp_init(struct irq_desc *desc, int node)$/;"	f	file:
desc_valid	workqueue_internal.h	/^	bool			desc_valid;	\/* ->desc is valid *\/$/;"	m	struct:worker
deskew	gcov/fs.c	/^static const char *deskew(const char *basename)$/;"	f	file:
dest_cpu	sched/core.c	/^	int dest_cpu;$/;"	m	struct:migration_arg	file:
destroy_app_info	swap/parser/msg_parser.c	/^void destroy_app_info(struct app_info_data *ai)$/;"	f
destroy_app_inst_data	swap/parser/msg_parser.c	/^void destroy_app_inst_data(struct app_inst_data *ai)$/;"	f
destroy_cfs_bandwidth	sched/fair.c	/^static inline void destroy_cfs_bandwidth(struct cfs_bandwidth *cfs_b) {}$/;"	f	file:
destroy_cfs_bandwidth	sched/fair.c	/^static void destroy_cfs_bandwidth(struct cfs_bandwidth *cfs_b)$/;"	f	file:
destroy_conf_data	swap/parser/msg_parser.c	/^void destroy_conf_data(struct conf_data *conf)$/;"	f
destroy_ed	swap/energy/energy.c	/^static void destroy_ed(void *data)$/;"	f	file:
destroy_feature_data	swap/us_manager/sspt/sspt_feature.c	/^static void destroy_feature_data(struct sspt_feature_data *fd)$/;"	f	file:
destroy_feature_img	swap/us_manager/sspt/sspt_feature.c	/^static void destroy_feature_img(struct sspt_feature_img *fi)$/;"	f	file:
destroy_func_inst_data	swap/parser/msg_parser.c	/^void destroy_func_inst_data(struct func_inst_data *fi)$/;"	f
destroy_header_iter	trace/trace_mmiotrace.c	/^static void destroy_header_iter(struct header_iter *hiter)$/;"	f	file:
destroy_hrtimer_on_stack	hrtimer.c	/^void destroy_hrtimer_on_stack(struct hrtimer *timer)$/;"	f
destroy_lcd_priv	swap/energy/lcd/lcd_base.c	/^static void destroy_lcd_priv(void *data)$/;"	f	file:
destroy_lib_inst_data	swap/parser/msg_parser.c	/^void destroy_lib_inst_data(struct lib_inst_data *li)$/;"	f
destroy_params	params.c	/^void destroy_params(const struct kernel_param *params, unsigned num)$/;"	f
destroy_pid_namespace	pid_namespace.c	/^static void destroy_pid_namespace(struct pid_namespace *ns)$/;"	f	file:
destroy_preds	trace/trace_events_filter.c	/^void destroy_preds(struct ftrace_event_call *call)$/;"	f
destroy_rcu_head_on_stack	rcupdate.c	/^EXPORT_SYMBOL_GPL(destroy_rcu_head_on_stack);$/;"	v
destroy_rcu_head_on_stack	rcupdate.c	/^void destroy_rcu_head_on_stack(struct rcu_head *head)$/;"	f
destroy_rt_bandwidth	sched/rt.c	/^static void destroy_rt_bandwidth(struct rt_bandwidth *rt_b)$/;"	f	file:
destroy_sched_domain	sched/core.c	/^static void destroy_sched_domain(struct sched_domain *sd, int cpu)$/;"	f	file:
destroy_sched_domains	sched/core.c	/^static void destroy_sched_domains(struct sched_domain *sd, int cpu)$/;"	f	file:
destroy_session	trace/trace_stat.c	/^static void destroy_session(struct stat_session *session)$/;"	f	file:
destroy_timer_on_stack	timer.c	/^EXPORT_SYMBOL_GPL(destroy_timer_on_stack);$/;"	v
destroy_timer_on_stack	timer.c	/^void destroy_timer_on_stack(struct timer_list *timer)$/;"	f
destroy_trace_option_files	trace/trace.c	/^destroy_trace_option_files(struct trace_option_dentry *topts)$/;"	f	file:
destroy_us_inst_data	swap/parser/msg_parser.c	/^void destroy_us_inst_data(struct us_inst_data *ui)$/;"	f
destroy_work_on_stack	workqueue.c	/^EXPORT_SYMBOL_GPL(destroy_work_on_stack);$/;"	v
destroy_work_on_stack	workqueue.c	/^void destroy_work_on_stack(struct work_struct *work)$/;"	f
destroy_worker	workqueue.c	/^static void destroy_worker(struct worker *worker)$/;"	f	file:
destroy_workqueue	workqueue.c	/^EXPORT_SYMBOL_GPL(destroy_workqueue);$/;"	v
destroy_workqueue	workqueue.c	/^void destroy_workqueue(struct workqueue_struct *wq)$/;"	f
detach_destroy_domains	sched/core.c	/^static void detach_destroy_domains(const struct cpumask *cpu_map)$/;"	f	file:
detach_expired_timer	timer.c	/^detach_expired_timer(struct timer_list *timer, struct tvec_base *base)$/;"	f	file:
detach_group	events/core.c	/^	bool detach_group;$/;"	m	struct:remove_event	file:
detach_if_pending	timer.c	/^static int detach_if_pending(struct timer_list *timer, struct tvec_base *base,$/;"	f	file:
detach_pid	pid.c	/^void detach_pid(struct task_struct *task, enum pid_type type)$/;"	f
detach_timer	timer.c	/^static inline void detach_timer(struct timer_list *timer, bool clear_pending)$/;"	f	file:
dev	audit.h	/^	dev_t			dev;$/;"	m	struct:audit_names
dev	audit_watch.c	/^	dev_t			dev;	\/* associated superblock device *\/$/;"	m	struct:audit_watch	file:
dev	power/console.c	/^	struct device *dev;$/;"	m	struct:pm_vt_switch	typeref:struct:pm_vt_switch::device	file:
dev	power/user.c	/^	u32 dev;$/;"	m	struct:compat_resume_swap_area	file:
dev	rtmutex-tester.c	/^	struct device		dev;$/;"	m	struct:test_thread_data	typeref:struct:test_thread_data::device	file:
dev	trace/trace_mmiotrace.c	/^	struct pci_dev *dev;$/;"	m	struct:header_iter	typeref:struct:header_iter::pci_dev	file:
dev	workqueue.c	/^	struct device			dev;$/;"	m	struct:wq_device	typeref:struct:wq_device::device	file:
dev_id	irq/devres.c	/^	void *dev_id;$/;"	m	struct:irq_devres	file:
dev_table	sysctl.c	/^static struct ctl_table dev_table[] = {$/;"	v	typeref:struct:ctl_table	file:
dev_table	sysctl.c	/^static struct ctl_table dev_table[];$/;"	v	typeref:struct:ctl_table	file:
dev_to_wq	workqueue.c	/^static struct workqueue_struct *dev_to_wq(struct device *dev)$/;"	f	file:
device_clocksource	time/clocksource.c	/^static struct device device_clocksource = {$/;"	v	typeref:struct:device	file:
device_id	dma.c	/^	const char *device_id;$/;"	m	struct:dma_chan	file:
device_throughput_pm_qos	power/qos.c	/^static struct pm_qos_object device_throughput_pm_qos = {$/;"	v	typeref:struct:pm_qos_object	file:
device_tput_constraints	power/qos.c	/^static struct pm_qos_constraints device_tput_constraints = {$/;"	v	typeref:struct:pm_qos_constraints	file:
devkmsg_llseek	printk.c	/^static loff_t devkmsg_llseek(struct file *file, loff_t offset, int whence)$/;"	f	file:
devkmsg_open	printk.c	/^static int devkmsg_open(struct inode *inode, struct file *file)$/;"	f	file:
devkmsg_poll	printk.c	/^static unsigned int devkmsg_poll(struct file *file, poll_table *wait)$/;"	f	file:
devkmsg_read	printk.c	/^static ssize_t devkmsg_read(struct file *file, char __user *buf,$/;"	f	file:
devkmsg_release	printk.c	/^static int devkmsg_release(struct inode *inode, struct file *file)$/;"	f	file:
devkmsg_user	printk.c	/^struct devkmsg_user {$/;"	s	file:
devkmsg_writev	printk.c	/^static ssize_t devkmsg_writev(struct kiocb *iocb, const struct iovec *iv,$/;"	f	file:
devm_free_irq	irq/devres.c	/^EXPORT_SYMBOL(devm_free_irq);$/;"	v
devm_free_irq	irq/devres.c	/^void devm_free_irq(struct device *dev, unsigned int irq, void *dev_id)$/;"	f
devm_irq_match	irq/devres.c	/^static int devm_irq_match(struct device *dev, void *res, void *data)$/;"	f	file:
devm_irq_release	irq/devres.c	/^static void devm_irq_release(struct device *dev, void *res)$/;"	f	file:
devm_region_match	resource.c	/^static int devm_region_match(struct device *dev, void *res, void *match_data)$/;"	f	file:
devm_region_release	resource.c	/^static void devm_region_release(struct device *dev, void *res)$/;"	f	file:
devm_request_threaded_irq	irq/devres.c	/^EXPORT_SYMBOL(devm_request_threaded_irq);$/;"	v
devm_request_threaded_irq	irq/devres.c	/^int devm_request_threaded_irq(struct device *dev, unsigned int irq,$/;"	f
dfd	swap/ks_features/file_ops.c	/^	int dfd;$/;"	m	struct:open_private	file:
dfl_pwq	workqueue.c	/^	struct pool_workqueue	*dfl_pwq;	\/* WQ: only for unbound wqs *\/$/;"	m	struct:workqueue_struct	typeref:struct:workqueue_struct::pool_workqueue	file:
dict_len	printk.c	/^	u16 dict_len;		\/* length of dictionary buffer *\/$/;"	m	struct:log	file:
did_panic	hung_task.c	/^static int __read_mostly did_panic;$/;"	v	file:
didexecute_addr	swap/webprobe/webprobe_prof.c	/^	u64 didexecute_addr;$/;"	m	struct:web_prof_data	file:
didexecute_addr_local	swap/webprobe/webprobe.c	/^static unsigned long didexecute_addr_local;$/;"	v	file:
dir	gcov/gcov.h	/^	} dir;$/;"	m	struct:gcov_link	typeref:enum:gcov_link::__anon25
dir	module.c	/^	struct kobject *dir;$/;"	m	struct:module_notes_attrs	typeref:struct:module_notes_attrs::kobject	file:
dir	trace/trace.h	/^	struct dentry		*dir;$/;"	m	struct:trace_array	typeref:struct:trace_array::dentry
dir	trace/trace.h	/^	struct dentry		*dir;$/;"	m	struct:trace_cpu	typeref:struct:trace_cpu::dentry
dirty_bytes_min	sysctl.c	/^static unsigned long dirty_bytes_min = 2 * PAGE_SIZE;$/;"	v	file:
disable_branch_tracing	trace/trace_branch.c	/^void disable_branch_tracing(void)$/;"	f
disable_irq	irq/manage.c	/^EXPORT_SYMBOL(disable_irq);$/;"	v
disable_irq	irq/manage.c	/^void disable_irq(unsigned int irq)$/;"	f
disable_irq_nosync	irq/manage.c	/^EXPORT_SYMBOL(disable_irq_nosync);$/;"	v
disable_irq_nosync	irq/manage.c	/^void disable_irq_nosync(unsigned int irq)$/;"	f
disable_kprobe	kprobes.c	/^EXPORT_SYMBOL_GPL(disable_kprobe);$/;"	v
disable_kprobe	kprobes.c	/^int __kprobes disable_kprobe(struct kprobe *kp)$/;"	f
disable_nonboot_cpus	cpu.c	/^int disable_nonboot_cpus(void)$/;"	f
disable_percpu_irq	irq/manage.c	/^EXPORT_SYMBOL_GPL(disable_percpu_irq);$/;"	v
disable_percpu_irq	irq/manage.c	/^void disable_percpu_irq(unsigned int irq)$/;"	f
disable_pid_allocation	pid.c	/^void disable_pid_allocation(struct pid_namespace *ns)$/;"	f
disable_reader	trace/ring_buffer_benchmark.c	/^static int disable_reader;$/;"	v	file:
disable_runtime	sched/rt.c	/^static void disable_runtime(struct rq *rq)$/;"	f	file:
disable_sched_clock_irqtime	sched/cputime.c	/^void disable_sched_clock_irqtime(void)$/;"	f
disable_trace_probe	trace/trace_kprobe.c	/^disable_trace_probe(struct trace_probe *tp, struct ftrace_event_file *file)$/;"	f	file:
disable_tracepoint	tracepoint.c	/^static void disable_tracepoint(struct tracepoint *elem)$/;"	f	file:
disabled	trace/ftrace.c	/^	atomic_t			disabled;$/;"	m	struct:ftrace_profile_stat	file:
disabled	trace/trace.h	/^	atomic_t		disabled;$/;"	m	struct:trace_array_cpu
disabled_addr	swap/preload/preload_threads.c	/^struct disabled_addr {$/;"	s	file:
disabled_addrs	swap/preload/preload_threads.c	/^	struct list_head disabled_addrs;$/;"	m	struct:thread_slot	typeref:struct:thread_slot::list_head	file:
disallow_signal	exit.c	/^EXPORT_SYMBOL(disallow_signal);$/;"	v
disallow_signal	exit.c	/^int disallow_signal(int sig)$/;"	f
disarm_all_kprobes	kprobes.c	/^static void __kprobes disarm_all_kprobes(void)$/;"	f	file:
disarm_for_task	swap/us_manager/helper.c	/^static void disarm_for_task(struct task_struct *child, struct hlist_head *head)$/;"	f	file:
disarm_kprobe	kprobes.c	/^static void __kprobes disarm_kprobe(struct kprobe *kp, bool reopt)$/;"	f	file:
disarm_kprobe_ftrace	kprobes.c	/^static void __kprobes disarm_kprobe_ftrace(struct kprobe *p)$/;"	f	file:
disarm_kprobe_ftrace	kprobes.c	991;"	d	file:
disarm_uprobe	swap/uprobe/swap_uprobes.c	/^EXPORT_SYMBOL_GPL(disarm_uprobe);$/;"	v
disarm_uprobe	swap/uprobe/swap_uprobes.c	/^void disarm_uprobe(struct kprobe *p, struct task_struct *task)$/;"	f
discarded	swap/writer/swap_msg.c	/^static atomic_t discarded = ATOMIC_INIT(0);$/;"	v	file:
disk	power/hibernate.c	/^power_attr(disk);$/;"	v
disk_show	power/hibernate.c	/^static ssize_t disk_show(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
disk_store	power/hibernate.c	/^static ssize_t disk_store(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
distribute_cfs_runtime	sched/fair.c	/^static u64 distribute_cfs_runtime(struct cfs_bandwidth *cfs_b,$/;"	f	file:
div_factor	test_kprobes.c	21;"	d	file:
dlopen_eh	swap/nsp/nsp.c	/^static int dlopen_eh(struct uretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
dlopen_rh	swap/nsp/nsp.c	/^static int dlopen_rh(struct uretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
dlsym_eh	swap/nsp/nsp.c	/^static int dlsym_eh(struct uretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
dlsym_rh	swap/nsp/nsp.c	/^static int dlsym_rh(struct uretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
dma_chan	dma.c	/^struct dma_chan {$/;"	s	file:
dma_chan_busy	dma.c	/^static struct dma_chan dma_chan_busy[MAX_DMA_CHANNELS] = {$/;"	v	typeref:struct:dma_chan	file:
dma_spin_lock	dma.c	/^DEFINE_SPINLOCK(dma_spin_lock);$/;"	v
dma_spin_lock	dma.c	/^EXPORT_SYMBOL(dma_spin_lock);$/;"	v
dmesg_restrict	printk.c	/^int dmesg_restrict = 1;$/;"	v
dmesg_restrict	printk.c	/^int dmesg_restrict;$/;"	v
do_acct_process	acct.c	/^static void do_acct_process(struct bsd_acct_struct *acct,$/;"	f	file:
do_add	swap/nsp/nsp_debugfs.c	/^static int do_add(const char *buf, size_t len)$/;"	f	file:
do_adjtimex	time/timekeeping.c	/^int do_adjtimex(struct timex *txc)$/;"	f
do_app	swap/nsp/nsp.h	/^	unsigned long do_app;$/;"	m	struct:appcore_info_data
do_app_eh	swap/nsp/nsp.c	/^static int do_app_eh(struct uretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
do_app_rh	swap/nsp/nsp.c	/^static int do_app_rh(struct uretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
do_balance_runtime	sched/rt.c	/^static int do_balance_runtime(struct rt_rq *rt_rq)$/;"	f	file:
do_blk_trace_setup	trace/blktrace.c	/^int do_blk_trace_setup(struct request_queue *q, char *name, dev_t dev,$/;"	f
do_cmd	swap/nsp/nsp_debugfs.c	/^static int do_cmd(const char *data, size_t len)$/;"	f	file:
do_copy_page	power/snapshot.c	/^static inline void do_copy_page(long *dst, long *src)$/;"	f	file:
do_cpu_nanosleep	posix-cpu-timers.c	/^static int do_cpu_nanosleep(const clockid_t which_clock, int flags,$/;"	f	file:
do_create_pd	swap/preload/preload_pd.c	/^static struct process_data *do_create_pd(struct task_struct *task)$/;"	f	file:
do_exit	exit.c	/^EXPORT_SYMBOL_GPL(do_exit);$/;"	v
do_exit	exit.c	/^void do_exit(long code)$/;"	f
do_exit_handler	swap/nsp/nsp_tdata.c	/^static int do_exit_handler(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
do_exit_handler	swap/task_data/task_data.c	/^static int do_exit_handler(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
do_exit_kp	swap/nsp/nsp_tdata.c	/^struct kprobe do_exit_kp = {$/;"	v	typeref:struct:kprobe
do_exit_probe	swap/task_data/task_data.c	/^static struct kprobe do_exit_probe = {$/;"	v	typeref:struct:kprobe	file:
do_for_each_event_file	trace/trace_events.c	56;"	d	file:
do_for_each_event_file_safe	trace/trace_events.c	60;"	d	file:
do_for_each_ftrace_op	trace/ftrace.c	132;"	d	file:
do_for_each_ftrace_rec	trace/ftrace.c	1500;"	d	file:
do_fork	fork.c	/^long do_fork(unsigned long clone_flags,$/;"	f
do_free_cleaned_kprobes	kprobes.c	/^static __kprobes void do_free_cleaned_kprobes(void)$/;"	f	file:
do_futex	futex.c	/^long do_futex(u32 __user *uaddr, int op, u32 val, ktime_t *timeout,$/;"	f
do_getitimer	itimer.c	/^int do_getitimer(int which, struct itimerval *value)$/;"	f
do_gettimeofday	time/timekeeping.c	/^EXPORT_SYMBOL(do_gettimeofday);$/;"	v
do_gettimeofday	time/timekeeping.c	/^void do_gettimeofday(struct timeval *tv)$/;"	f
do_group_exit	exit.c	/^do_group_exit(int exit_code)$/;"	f
do_group_exit_addr	swap/kprobe/swap_kprobes.c	/^static unsigned long do_group_exit_addr;$/;"	v	file:
do_init	swap/master/swap_initializer.c	/^static int do_init(void)$/;"	f	file:
do_init_level	swap/master/swap_initializer.c	/^static int do_init_level(enum init_level level)$/;"	f	file:
do_init_module	module.c	/^static int do_init_module(struct module *mod)$/;"	f	file:
do_init_timer	timer.c	/^static void do_init_timer(struct timer_list *timer, unsigned int flags,$/;"	f	file:
do_install_features	swap/ks_features/ks_features.c	/^static int do_install_features(struct feature *f)$/;"	f	file:
do_jobctl_trap	signal.c	/^static void do_jobctl_trap(void)$/;"	f	file:
do_kimage_alloc	kexec.c	/^static int do_kimage_alloc(struct kimage **rimage, unsigned long entry,$/;"	f	file:
do_lcd_exit	swap/energy/lcd/lcd_base.c	/^static void do_lcd_exit(void)$/;"	f	file:
do_lcd_init	swap/energy/lcd/lcd_base.c	/^static int do_lcd_init(void)$/;"	f	file:
do_mod_ctors	module.c	/^static void do_mod_ctors(struct module *mod)$/;"	f	file:
do_nanosleep	hrtimer.c	/^static int __sched do_nanosleep(struct hrtimer_sleeper *t, enum hrtimer_mode mode)$/;"	f	file:
do_no_restart_syscall	signal.c	/^long do_no_restart_syscall(struct restart_block *param)$/;"	f
do_nothing	smp.c	/^static void do_nothing(void *unused)$/;"	f	file:
do_notify_parent	signal.c	/^bool do_notify_parent(struct task_struct *tsk, int sig)$/;"	f
do_notify_parent_cldstop	signal.c	/^static void do_notify_parent_cldstop(struct task_struct *tsk,$/;"	f	file:
do_once	swap/master/swap_initializer.c	/^static int do_once(void)$/;"	f	file:
do_oops_enter_exit	panic.c	/^static void do_oops_enter_exit(void)$/;"	f	file:
do_optimize_kprobes	kprobes.c	/^static __kprobes void do_optimize_kprobes(void)$/;"	f	file:
do_perf_sw_event	events/core.c	/^static void do_perf_sw_event(enum perf_type_id type, u32 event_id,$/;"	f	file:
do_poweroff	power/poweroff.c	/^static void do_poweroff(struct work_struct *dummy)$/;"	f	file:
do_prlimit	sys.c	/^int do_prlimit(struct task_struct *tsk, unsigned int resource,$/;"	f
do_proc_dointvec	sysctl.c	/^static int do_proc_dointvec(struct ctl_table *table, int write,$/;"	f	file:
do_proc_dointvec_conv	sysctl.c	/^static int do_proc_dointvec_conv(bool *negp, unsigned long *lvalp,$/;"	f	file:
do_proc_dointvec_jiffies_conv	sysctl.c	/^static int do_proc_dointvec_jiffies_conv(bool *negp, unsigned long *lvalp,$/;"	f	file:
do_proc_dointvec_minmax_conv	sysctl.c	/^static int do_proc_dointvec_minmax_conv(bool *negp, unsigned long *lvalp,$/;"	f	file:
do_proc_dointvec_minmax_conv_param	sysctl.c	/^struct do_proc_dointvec_minmax_conv_param {$/;"	s	file:
do_proc_dointvec_ms_jiffies_conv	sysctl.c	/^static int do_proc_dointvec_ms_jiffies_conv(bool *negp, unsigned long *lvalp,$/;"	f	file:
do_proc_dointvec_userhz_jiffies_conv	sysctl.c	/^static int do_proc_dointvec_userhz_jiffies_conv(bool *negp, unsigned long *lvalp,$/;"	f	file:
do_proc_doulongvec_minmax	sysctl.c	/^static int do_proc_doulongvec_minmax(struct ctl_table *table, int write,$/;"	f	file:
do_profile_hits	profile.c	/^static void do_profile_hits(int type, void *__pc, unsigned int nr_hits)$/;"	f	file:
do_res_finish	swap/wsp/wsp.c	/^static void do_res_finish(struct wsp_res *res)$/;"	f	file:
do_res_processing_begin	swap/wsp/wsp.c	/^static void do_res_processing_begin(void *data, void *ptr, enum wsp_res_t type)$/;"	f	file:
do_res_processing_end	swap/wsp/wsp.c	/^static void do_res_processing_end(struct wsp_res *res)$/;"	f	file:
do_rm	swap/nsp/nsp_debugfs.c	/^static int do_rm(const char *buf, size_t len)$/;"	f	file:
do_rm_all	swap/nsp/nsp_debugfs.c	/^static int do_rm_all(const char *buf, size_t len)$/;"	f	file:
do_rt_sigqueueinfo	signal.c	/^static int do_rt_sigqueueinfo(pid_t pid, int sig, siginfo_t *info)$/;"	f	file:
do_rt_tgsigqueueinfo	signal.c	/^static int do_rt_tgsigqueueinfo(pid_t tgid, pid_t pid, int sig, siginfo_t *info)$/;"	f	file:
do_sched_cfs_period_timer	sched/fair.c	/^static int do_sched_cfs_period_timer(struct cfs_bandwidth *cfs_b, int overrun)$/;"	f	file:
do_sched_cfs_slack_timer	sched/fair.c	/^static void do_sched_cfs_slack_timer(struct cfs_bandwidth *cfs_b)$/;"	f	file:
do_sched_rt_period_timer	sched/rt.c	/^static int do_sched_rt_period_timer(struct rt_bandwidth *rt_b, int overrun)$/;"	f	file:
do_sched_setscheduler	sched/core.c	/^do_sched_setscheduler(pid_t pid, int policy, struct sched_param __user *param)$/;"	f	file:
do_schedule_next_timer	posix-timers.c	/^void do_schedule_next_timer(struct siginfo *info)$/;"	f
do_seccomp	seccomp.c	/^static long do_seccomp(unsigned int op, unsigned int flags,$/;"	f	file:
do_send_sig_info	signal.c	/^int do_send_sig_info(int sig, struct siginfo *info, struct task_struct *p,$/;"	f
do_send_specific	signal.c	/^do_send_specific(pid_t tgid, pid_t pid, int sig, struct siginfo *info)$/;"	f	file:
do_set_appcore_info	swap/nsp/nsp.c	/^static int do_set_appcore_info(struct appcore_info_data *info)$/;"	f	file:
do_set_appcore_info	swap/nsp/nsp_debugfs.c	/^static int do_set_appcore_info(const char *data, size_t len)$/;"	f	file:
do_set_cpus_allowed	sched/core.c	/^void do_set_cpus_allowed(struct task_struct *p, const struct cpumask *new_mask)$/;"	f
do_set_energy	swap/energy/energy.c	/^int do_set_energy(void)$/;"	f
do_set_features	swap/parser/features.c	/^static int do_set_features(struct conf_data *conf)$/;"	f	file:
do_set_lpad_info	swap/nsp/nsp.c	/^static int do_set_lpad_info(const char *path, unsigned long dlopen,$/;"	f	file:
do_set_lpad_info	swap/nsp/nsp_debugfs.c	/^static int do_set_lpad_info(const char *data, size_t len)$/;"	f	file:
do_setitimer	itimer.c	/^int do_setitimer(int which, struct itimerval *value, struct itimerval *ovalue)$/;"	f
do_settimeofday	time/timekeeping.c	/^EXPORT_SYMBOL(do_settimeofday);$/;"	v
do_settimeofday	time/timekeeping.c	/^int do_settimeofday(const struct timespec *tv)$/;"	f
do_sigaction	signal.c	/^int do_sigaction(int sig, struct k_sigaction *act, struct k_sigaction *oact)$/;"	f
do_sigaltstack	signal.c	/^do_sigaltstack (const stack_t __user *uss, stack_t __user *uoss, unsigned long sp)$/;"	f	file:
do_sigpending	signal.c	/^static int do_sigpending(void *set, unsigned long sigsetsize)$/;"	f	file:
do_sigtimedwait	signal.c	/^int do_sigtimedwait(const sigset_t *which, siginfo_t *info,$/;"	f
do_softirq	softirq.c	/^asmlinkage void do_softirq(void)$/;"	f
do_swap_sampler_start	swap/sampler/swap_sampler_module.c	/^static int do_swap_sampler_start(unsigned int timer_quantum)$/;"	f	file:
do_swap_sampler_stop	swap/sampler/swap_sampler_module.c	/^static void do_swap_sampler_stop(void)$/;"	f	file:
do_sys_settimeofday	time.c	/^int do_sys_settimeofday(const struct timespec *tv, const struct timezone *tz)$/;"	f
do_sys_times	sys.c	/^void do_sys_times(struct tms *tms)$/;"	f
do_sysctl	sysctl_binary.c	/^static ssize_t do_sysctl(int __user *args_name, int nlen,$/;"	f	file:
do_sysinfo	sys.c	/^static int do_sysinfo(struct sysinfo *info)$/;"	f	file:
do_syslog	printk.c	/^int do_syslog(int type, char __user *buf, int len, bool from_file)$/;"	f
do_task_delta_exec	sched/core.c	/^static u64 do_task_delta_exec(struct task_struct *p, struct rq *rq)$/;"	f	file:
do_timer	time/timekeeping.c	/^void do_timer(unsigned long ticks)$/;"	f
do_tkill	signal.c	/^static int do_tkill(pid_t tgid, pid_t pid, int sig)$/;"	f	file:
do_trace_rcu_torture_read	rcupdate.c	/^EXPORT_SYMBOL_GPL(do_trace_rcu_torture_read);$/;"	v
do_trace_rcu_torture_read	rcupdate.c	/^void do_trace_rcu_torture_read(char *rcutorturename, struct rcu_head *rhp,$/;"	f
do_trace_rcu_torture_read	rcupdate.c	415;"	d	file:
do_uninit	swap/master/swap_initializer.c	/^static void do_uninit(void)$/;"	f	file:
do_uninit_level	swap/master/swap_initializer.c	/^static void do_uninit_level(enum init_level level)$/;"	f	file:
do_uninstall_features	swap/ks_features/ks_features.c	/^static void do_uninstall_features(struct feature *f, size_t i)$/;"	f	file:
do_unoptimize_kprobes	kprobes.c	/^static __kprobes void do_unoptimize_kprobes(void)$/;"	f	file:
do_unset_energy	swap/energy/energy.c	/^void do_unset_energy(void)$/;"	f
do_usleep_range	timer.c	/^static int __sched do_usleep_range(unsigned long min, unsigned long max)$/;"	f	file:
do_usm_start	swap/us_manager/us_manager.c	/^static int do_usm_start(void)$/;"	f	file:
do_usm_stop	swap/us_manager/us_manager.c	/^static void do_usm_stop(void)$/;"	f	file:
do_wait	exit.c	/^static long do_wait(struct wait_opts *wo)$/;"	f	file:
do_wait_for_common	sched/core.c	/^do_wait_for_common(struct completion *x,$/;"	f	file:
do_wait_thread	exit.c	/^static int do_wait_thread(struct wait_opts *wo, struct task_struct *tsk)$/;"	f	file:
do_write_cmd	swap/wsp/wsp_debugfs.c	/^static int do_write_cmd(const char *buf, size_t count)$/;"	f	file:
do_write_enable	swap/master/swap_debugfs.c	/^static int do_write_enable(const char *buf, size_t size)$/;"	f	file:
do_wsp_off	swap/wsp/wsp.c	/^static void do_wsp_off(void)$/;"	f	file:
do_wsp_on	swap/wsp/wsp.c	/^static int do_wsp_on(void)$/;"	f	file:
domain	async.c	/^	struct async_domain	*domain;$/;"	m	struct:async_entry	typeref:struct:async_entry::async_domain	file:
domain_list	async.c	/^	struct list_head	domain_list;$/;"	m	struct:async_entry	typeref:struct:async_entry::list_head	file:
doms_cur	sched/core.c	/^static cpumask_var_t *doms_cur;	\/* current sched domains *\/$/;"	v	file:
done	kthread.c	/^	struct completion	done;$/;"	m	struct:kthread_flush_work	typeref:struct:kthread_flush_work::completion	file:
done	kthread.c	/^	struct completion done;$/;"	m	struct:kthread_create_info	typeref:struct:kthread_create_info::completion	file:
done	power/swap.c	/^	wait_queue_head_t done;                   \/* compression done *\/$/;"	m	struct:cmp_data	file:
done	power/swap.c	/^	wait_queue_head_t done;                   \/* crc update done *\/$/;"	m	struct:crc_data	file:
done	power/swap.c	/^	wait_queue_head_t done;                   \/* decompression done *\/$/;"	m	struct:dec_data	file:
done	workqueue.c	/^	struct completion	done;		\/* flush completion *\/$/;"	m	struct:wq_flusher	typeref:struct:wq_flusher::completion	file:
done	workqueue.c	/^	struct completion	done;$/;"	m	struct:wq_barrier	typeref:struct:wq_barrier::completion	file:
donetail	rcutiny_plugin.h	/^	struct rcu_head **donetail;	\/* ->next pointer of last "done" CB. *\/$/;"	m	struct:rcu_ctrlblk	typeref:struct:rcu_ctrlblk::rcu_head
double_lock_balance	sched/sched.h	/^static inline int double_lock_balance(struct rq *this_rq, struct rq *busiest)$/;"	f
double_lock_hb	futex.c	/^double_lock_hb(struct futex_hash_bucket *hb1, struct futex_hash_bucket *hb2)$/;"	f	file:
double_unlock_hb	futex.c	/^double_unlock_hb(struct futex_hash_bucket *hb1, struct futex_hash_bucket *hb2)$/;"	f	file:
down	semaphore.c	/^EXPORT_SYMBOL(down);$/;"	v
down	semaphore.c	/^void down(struct semaphore *sem)$/;"	f
down_interruptible	semaphore.c	/^EXPORT_SYMBOL(down_interruptible);$/;"	v
down_interruptible	semaphore.c	/^int down_interruptible(struct semaphore *sem)$/;"	f
down_killable	semaphore.c	/^EXPORT_SYMBOL(down_killable);$/;"	v
down_killable	semaphore.c	/^int down_killable(struct semaphore *sem)$/;"	f
down_read	rwsem.c	/^EXPORT_SYMBOL(down_read);$/;"	v
down_read	rwsem.c	/^void __sched down_read(struct rw_semaphore *sem)$/;"	f
down_read_nested	rwsem.c	/^EXPORT_SYMBOL(down_read_nested);$/;"	v
down_read_nested	rwsem.c	/^void down_read_nested(struct rw_semaphore *sem, int subclass)$/;"	f
down_read_non_owner	rwsem.c	/^EXPORT_SYMBOL(down_read_non_owner);$/;"	v
down_read_non_owner	rwsem.c	/^void down_read_non_owner(struct rw_semaphore *sem)$/;"	f
down_read_trylock	rwsem.c	/^EXPORT_SYMBOL(down_read_trylock);$/;"	v
down_read_trylock	rwsem.c	/^int down_read_trylock(struct rw_semaphore *sem)$/;"	f
down_timeout	semaphore.c	/^EXPORT_SYMBOL(down_timeout);$/;"	v
down_timeout	semaphore.c	/^int down_timeout(struct semaphore *sem, long jiffies)$/;"	f
down_trylock	semaphore.c	/^EXPORT_SYMBOL(down_trylock);$/;"	v
down_trylock	semaphore.c	/^int down_trylock(struct semaphore *sem)$/;"	f
down_write	rwsem.c	/^EXPORT_SYMBOL(down_write);$/;"	v
down_write	rwsem.c	/^void __sched down_write(struct rw_semaphore *sem)$/;"	f
down_write_nested	rwsem.c	/^EXPORT_SYMBOL(down_write_nested);$/;"	v
down_write_nested	rwsem.c	/^void down_write_nested(struct rw_semaphore *sem, int subclass)$/;"	f
down_write_trylock	rwsem.c	/^EXPORT_SYMBOL(down_write_trylock);$/;"	v
down_write_trylock	rwsem.c	/^int down_write_trylock(struct rw_semaphore *sem)$/;"	f
downgrade_write	rwsem.c	/^EXPORT_SYMBOL(downgrade_write);$/;"	v
downgrade_write	rwsem.c	/^void downgrade_write(struct rw_semaphore *sem)$/;"	f
drain_workqueue	workqueue.c	/^EXPORT_SYMBOL_GPL(drain_workqueue);$/;"	v
drain_workqueue	workqueue.c	/^void drain_workqueue(struct workqueue_struct *wq)$/;"	f
driver_to_buffer_buffer_to_read	swap/driver/driver_to_buffer.c	/^int driver_to_buffer_buffer_to_read(void)$/;"	f
driver_to_buffer_callback	swap/driver/driver_to_buffer.c	/^static int driver_to_buffer_callback(bool wakeup)$/;"	f	file:
driver_to_buffer_fill_spd	swap/driver/driver_to_buffer.c	/^int driver_to_buffer_fill_spd(struct splice_pipe_desc *spd)$/;"	f
driver_to_buffer_flush	swap/driver/driver_to_buffer.c	/^int driver_to_buffer_flush(void)$/;"	f
driver_to_buffer_get	swap/driver/driver_to_buffer.c	/^static size_t driver_to_buffer_get(void)$/;"	f	file:
driver_to_buffer_initialize	swap/driver/driver_to_buffer.c	/^int driver_to_buffer_initialize(size_t size, unsigned int count)$/;"	f
driver_to_buffer_next_buffer_to_read	swap/driver/driver_to_buffer.c	/^int driver_to_buffer_next_buffer_to_read(void)$/;"	f
driver_to_buffer_read	swap/driver/driver_to_buffer.c	/^ssize_t driver_to_buffer_read(char __user *buf, size_t count)$/;"	f
driver_to_buffer_release	swap/driver/driver_to_buffer.c	/^static int driver_to_buffer_release(void)$/;"	f	file:
driver_to_buffer_uninitialize	swap/driver/driver_to_buffer.c	/^int driver_to_buffer_uninitialize(void)$/;"	f
drop	swap/preload/preload_threads.c	/^	bool drop;   \/* TODO Workaround, remove when will be possible to install$/;"	m	struct:thread_slot	file:
drop_futex_key_refs	futex.c	/^static void drop_futex_key_refs(union futex_key *key)$/;"	f	file:
drop_parsed_module_refcounts	cgroup.c	/^static void drop_parsed_module_refcounts(unsigned long subsys_mask)$/;"	f	file:
dropped_count	trace/trace_mmiotrace.c	/^static atomic_t dropped_count;$/;"	v	file:
dropped_events	trace/ring_buffer.c	/^	local_t				dropped_events;$/;"	m	struct:ring_buffer_per_cpu	file:
dst_cpu	sched/fair.c	/^	int			dst_cpu;$/;"	m	struct:lb_env	file:
dst_grpmask	sched/fair.c	/^	struct cpumask		*dst_grpmask;$/;"	m	struct:lb_env	typeref:struct:lb_env::cpumask	file:
dst_rq	sched/fair.c	/^	struct rq		*dst_rq;$/;"	m	struct:lb_env	typeref:struct:lb_env::rq	file:
dummy	audit.h	/^	int		    dummy;	\/* must be the first element *\/$/;"	m	struct:audit_context
dummy_cmp	trace/trace_stat.c	/^static int dummy_cmp(void *p1, void *p2)$/;"	f	file:
dummy_irq_chip	irq/dummychip.c	/^EXPORT_SYMBOL_GPL(dummy_irq_chip);$/;"	v
dummy_irq_chip	irq/dummychip.c	/^struct irq_chip dummy_irq_chip = {$/;"	v	typeref:struct:irq_chip
dummy_set_flag	trace/trace.c	/^static int dummy_set_flag(u32 old_flags, u32 bit, int set)$/;"	f	file:
dummy_tracer_flags	trace/trace.c	/^static struct tracer_flags dummy_tracer_flags = {$/;"	v	typeref:struct:tracer_flags	file:
dummy_tracer_opt	trace/trace.c	/^static struct tracer_opt dummy_tracer_opt[] = {$/;"	v	typeref:struct:tracer_opt	file:
dummytop	cgroup.c	205;"	d	file:
dump_cpu_task	sched/core.c	/^void dump_cpu_task(int cpu)$/;"	f
dump_invalid_creds	cred.c	/^static void dump_invalid_creds(const struct cred *cred, const char *label,$/;"	f	file:
dump_kprobe	kprobes.c	/^void __kprobes dump_kprobe(struct kprobe *kp)$/;"	f
dump_stack_arch_desc_str	printk.c	/^static char dump_stack_arch_desc_str[128];$/;"	v	file:
dump_stack_print_info	printk.c	/^void dump_stack_print_info(const char *log_lvl)$/;"	f
dump_stack_set_arch_desc	printk.c	/^void __init dump_stack_set_arch_desc(const char *fmt, ...)$/;"	f
dup_mm	fork.c	/^struct mm_struct *dup_mm(struct task_struct *tsk)$/;"	f
dup_mm_exe_file	fork.c	/^static void dup_mm_exe_file(struct mm_struct *oldmm, struct mm_struct *newmm)$/;"	f	file:
dup_mmap	fork.c	/^static int dup_mmap(struct mm_struct *mm, struct mm_struct *oldmm)$/;"	f	file:
dup_mmap	fork.c	524;"	d	file:
dup_mmap_sem	events/uprobes.c	/^static struct percpu_rw_semaphore dup_mmap_sem;$/;"	v	typeref:struct:percpu_rw_semaphore	file:
dup_task_struct	fork.c	/^static struct task_struct *dup_task_struct(struct task_struct *orig)$/;"	f	file:
duplicate_memory_bitmap	power/snapshot.c	/^duplicate_memory_bitmap(struct memory_bitmap *dst, struct memory_bitmap *src)$/;"	f	file:
dynamic_debug_remove	module.c	/^static void dynamic_debug_remove(struct _ddebug *debug)$/;"	f	file:
dynamic_debug_setup	module.c	/^static void dynamic_debug_setup(struct _ddebug *debug, unsigned int num)$/;"	f	file:
dynamic_irq_cleanup	irq/irqdesc.c	/^void dynamic_irq_cleanup(unsigned int irq)$/;"	f
dyntick_save_progress_counter	rcutree.c	/^static int dyntick_save_progress_counter(struct rcu_data *rdp)$/;"	f	file:
dynticks	rcutree.h	/^	atomic_t dynticks;	    \/* Even value for idle, else odd. *\/$/;"	m	struct:rcu_dynticks
dynticks	rcutree.h	/^	struct rcu_dynticks *dynticks;	\/* Shared per-CPU dynticks state. *\/$/;"	m	struct:rcu_data	typeref:struct:rcu_data::rcu_dynticks
dynticks_fqs	rcutree.h	/^	unsigned long dynticks_fqs;	\/* Kicked due to dynticks idle. *\/$/;"	m	struct:rcu_data
dynticks_nesting	rcutree.h	/^	long long dynticks_nesting; \/* Track irq\/process nesting level. *\/$/;"	m	struct:rcu_dynticks
dynticks_nmi_nesting	rcutree.h	/^	int dynticks_nmi_nesting;   \/* Track NMI nesting level. *\/$/;"	m	struct:rcu_dynticks
dynticks_snap	rcutree.h	/^	int dynticks_snap;		\/* Per-GP tracking for dynticks. *\/$/;"	m	struct:rcu_data
each_symbol_in_section	module.c	/^static bool each_symbol_in_section(const struct symsearch *arr,$/;"	f	file:
each_symbol_section	module.c	/^EXPORT_SYMBOL_GPL(each_symbol_section);$/;"	v
each_symbol_section	module.c	/^bool each_symbol_section(bool (*fn)(const struct symsearch *arr,$/;"	f
early_console	printk.c	/^struct console *early_console;$/;"	v	typeref:struct:console
early_event_add_tracer	trace/trace_events.c	/^early_event_add_tracer(struct dentry *parent, struct trace_array *tr)$/;"	f	file:
early_irq_init	irq/irqdesc.c	/^int __init early_irq_init(void)$/;"	f
early_irq_init	softirq.c	/^int __init __weak early_irq_init(void)$/;"	f
early_printk	printk.c	/^asmlinkage void early_printk(const char *fmt, ...)$/;"	f
early_suspend	power/earlysuspend.c	/^static void early_suspend(struct work_struct *work)$/;"	f	file:
early_vprintk	printk.c	/^void early_vprintk(const char *fmt, va_list ap)$/;"	f
ed_system	swap/energy/energy.c	/^static struct energy_data ed_system;$/;"	v	typeref:struct:energy_data	file:
effective	audit.h	/^		kernel_cap_t	effective;	\/* effective set of process *\/$/;"	m	union:audit_cap_data::__anon14
effective_load	sched/fair.c	/^static inline unsigned long effective_load(struct task_group *tg, int cpu,$/;"	f	file:
effective_load	sched/fair.c	/^static long effective_load(struct task_group *tg, int cpu, long wl, long wg)$/;"	f	file:
effective_prio	sched/core.c	/^static int effective_prio(struct task_struct *p)$/;"	f	file:
egid	audit.h	/^	kgid_t		    gid, egid, sgid, fsgid;$/;"	m	struct:audit_context
element	lockdep.c	/^	unsigned long element[MAX_CIRCULAR_QUEUE_SIZE];$/;"	m	struct:circular_queue	file:
elf_core_extra_data_size	elfcore.c	/^size_t __weak elf_core_extra_data_size(void)$/;"	f
elf_core_extra_phdrs	elfcore.c	/^Elf_Half __weak elf_core_extra_phdrs(void)$/;"	f
elf_core_write_extra_data	elfcore.c	/^int __weak elf_core_write_extra_data(struct file *file, size_t *size,$/;"	f
elf_core_write_extra_phdrs	elfcore.c	/^int __weak elf_core_write_extra_phdrs(struct file *file, loff_t offset, size_t *size,$/;"	f
elf_header_check	module.c	/^static int elf_header_check(struct load_info *info)$/;"	f	file:
elf_type	module.c	/^static char elf_type(const Elf_Sym *sym, const struct load_info *info)$/;"	f	file:
elfcorehdr_addr	crash_dump.c	/^unsigned long long elfcorehdr_addr = ELFCORE_ADDR_MAX;$/;"	v
elfcorehdr_size	crash_dump.c	/^unsigned long long elfcorehdr_size;$/;"	v
eligible_child	exit.c	/^static int eligible_child(struct wait_opts *wo, struct task_struct *p)$/;"	f	file:
eligible_pid	exit.c	/^static int eligible_pid(struct wait_opts *wo, struct task_struct *p)$/;"	f	file:
elm_run	swap/nsp/nsp.h	/^	unsigned long elm_run;$/;"	m	struct:appcore_info_data
elm_run_h	swap/nsp/nsp.c	/^static int elm_run_h(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
emergency_restart	sys.c	/^EXPORT_SYMBOL_GPL(emergency_restart);$/;"	v
emergency_restart	sys.c	/^void emergency_restart(void)$/;"	f
empty_buckets	trace/ftrace.c	/^static const struct hlist_head empty_buckets[1];$/;"	v	typeref:struct:hlist_head	file:
empty_hash	trace/ftrace.c	/^static const struct ftrace_hash empty_hash = {$/;"	v	typeref:struct:ftrace_hash	file:
enable	swap/ks_features/features_data.c	/^	unsigned enable:1;$/;"	m	struct:feature	file:
enable	trace/trace_events.c	/^	bool				enable;$/;"	m	struct:event_probe_data	file:
enable	trace/trace_events.c	/^	struct file_operations		enable;$/;"	m	struct:ftrace_module_file_ops	typeref:struct:ftrace_module_file_ops::file_operations	file:
enable_branch_tracing	trace/trace_branch.c	/^int enable_branch_tracing(struct trace_array *tr)$/;"	f
enable_irq	irq/manage.c	/^EXPORT_SYMBOL(enable_irq);$/;"	v
enable_irq	irq/manage.c	/^void enable_irq(unsigned int irq)$/;"	f
enable_kprobe	kprobes.c	/^EXPORT_SYMBOL_GPL(enable_kprobe);$/;"	v
enable_kprobe	kprobes.c	/^int __kprobes enable_kprobe(struct kprobe *kp)$/;"	f
enable_nonboot_cpus	cpu.c	/^void __ref enable_nonboot_cpus(void)$/;"	f
enable_percpu_irq	irq/manage.c	/^EXPORT_SYMBOL_GPL(enable_percpu_irq);$/;"	v
enable_percpu_irq	irq/manage.c	/^void enable_percpu_irq(unsigned int irq, unsigned int type)$/;"	f
enable_runtime	sched/rt.c	/^static void enable_runtime(struct rq *rq)$/;"	f	file:
enable_sched_clock_irqtime	sched/cputime.c	/^void enable_sched_clock_irqtime(void)$/;"	f
enable_stacktrace	trace/trace_stack.c	/^static __init int enable_stacktrace(char *str)$/;"	f	file:
enable_trace_probe	trace/trace_kprobe.c	/^enable_trace_probe(struct trace_probe *tp, struct ftrace_event_file *file)$/;"	f	file:
enabled	stop_machine.c	/^	bool			enabled;	\/* is this stopper enabled? *\/$/;"	m	struct:cpu_stopper	file:
enabled	swap/webprobe/webprobe_prof.c	/^	enum web_prof_state_t enabled;$/;"	m	struct:web_prof_data	typeref:enum:web_prof_data::web_prof_state_t	file:
enabled	trace/trace.h	/^	bool			enabled;$/;"	m	struct:tracer
encode_comp2_t	acct.c	/^static comp2_t encode_comp2_t(u64 value)$/;"	f	file:
encode_comp_t	acct.c	/^static comp_t encode_comp_t(unsigned long value)$/;"	f	file:
encode_float	acct.c	/^static u32 encode_float(u64 value)$/;"	f	file:
end	power/snapshot.c	/^	unsigned long end;$/;"	m	struct:mem_extent	file:
end	power/swap.c	/^	unsigned long end;$/;"	m	struct:swsusp_extent	file:
end	swap/parser/msg_buf.h	/^	char *end;      \/**< Pointer to the end of the buffer. *\/$/;"	m	struct:msg_buf
end	swap/parser/usm_msg.c	/^	unsigned long end;$/;"	m	struct:kmem_info	file:
end	swap/us_manager/debugfs_us_manager.c	/^	char *end;$/;"	m	struct:read_buf	file:
end	swap/us_manager/helper.c	/^	unsigned long end;$/;"	m	struct:msg_unmap_data	file:
end	swap/writer/debugfs_writer.c	/^	char *end;$/;"	m	struct:read_buf	file:
end_pfn	power/snapshot.c	/^	unsigned long end_pfn;	\/* pfn represented by the last bit plus 1 *\/$/;"	m	struct:bm_block	file:
end_pfn	power/snapshot.c	/^	unsigned long end_pfn;$/;"	m	struct:nosave_region	file:
end_ptr	swap/buffer/buffer_queue.c	/^	struct swap_subbuffer *end_ptr;$/;"	m	struct:queue_t	typeref:struct:queue_t::swap_subbuffer	file:
end_time	swap/nsp/nsp_msg.c	/^	u64 end_time;$/;"	m	struct:nsp_msg_struct	file:
energy_data	swap/energy/energy.c	/^struct energy_data {$/;"	s	file:
energy_dir	swap/energy/debugfs_energy.c	/^static struct dentry *energy_dir;$/;"	v	typeref:struct:dentry	file:
energy_enable	swap/energy/energy.c	/^static int energy_enable;$/;"	v	file:
energy_init	swap/energy/energy.c	/^int energy_init(void)$/;"	f
energy_once	swap/energy/energy.c	/^int energy_once(void)$/;"	f
energy_uninit	swap/energy/energy.c	/^void energy_uninit(void)$/;"	f
enough_free_mem	power/snapshot.c	/^static int enough_free_mem(unsigned int nr_pages, unsigned int nr_highmem)$/;"	f	file:
enough_mem_cb	swap/buffer/swap_buffer_module.c	/^static int (*enough_mem_cb)(void);$/;"	v	file:
enough_mem_cb	swap/buffer/swap_buffer_module.h	/^	int (*enough_mem_cb)(void);$/;"	m	struct:buffer_init_t
enough_swap	power/swap.c	/^static int enough_swap(unsigned int nr_pages, unsigned int flags)$/;"	f	file:
enough_writable_bufs	swap/buffer/swap_buffer_module.c	/^static unsigned int enough_writable_bufs;$/;"	v	file:
enqueue_entity	sched/fair.c	/^enqueue_entity(struct cfs_rq *cfs_rq, struct sched_entity *se, int flags)$/;"	f	file:
enqueue_entity_load_avg	sched/fair.c	/^static inline void enqueue_entity_load_avg(struct cfs_rq *cfs_rq,$/;"	f	file:
enqueue_hrtimer	hrtimer.c	/^static int enqueue_hrtimer(struct hrtimer *timer,$/;"	f	file:
enqueue_pushable_task	sched/rt.c	/^static inline void enqueue_pushable_task(struct rq *rq, struct task_struct *p)$/;"	f	file:
enqueue_pushable_task	sched/rt.c	/^static void enqueue_pushable_task(struct rq *rq, struct task_struct *p)$/;"	f	file:
enqueue_rt_entity	sched/rt.c	/^static void enqueue_rt_entity(struct sched_rt_entity *rt_se, bool head)$/;"	f	file:
enqueue_sleeper	sched/fair.c	/^static void enqueue_sleeper(struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f	file:
enqueue_task	sched/core.c	/^static void enqueue_task(struct rq *rq, struct task_struct *p, int flags)$/;"	f	file:
enqueue_task	sched/sched.h	/^	void (*enqueue_task) (struct rq *rq, struct task_struct *p, int flags);$/;"	m	struct:sched_class
enqueue_task_fair	sched/fair.c	/^enqueue_task_fair(struct rq *rq, struct task_struct *p, int flags)$/;"	f	file:
enqueue_task_rt	sched/rt.c	/^enqueue_task_rt(struct rq *rq, struct task_struct *p, int flags)$/;"	f	file:
enqueue_task_stop	sched/stop_task.c	/^enqueue_task_stop(struct rq *rq, struct task_struct *p, int flags)$/;"	f	file:
ent	trace/trace.h	/^	struct trace_entry	ent;$/;"	m	struct:kprobe_trace_entry_head	typeref:struct:kprobe_trace_entry_head::trace_entry
ent	trace/trace.h	/^	struct trace_entry	ent;$/;"	m	struct:kretprobe_trace_entry_head	typeref:struct:kretprobe_trace_entry_head::trace_entry
ent	trace/trace.h	/^	struct trace_entry	ent;$/;"	m	struct:syscall_trace_enter	typeref:struct:syscall_trace_enter::trace_entry
ent	trace/trace.h	/^	struct trace_entry	ent;$/;"	m	struct:syscall_trace_exit	typeref:struct:syscall_trace_exit::trace_entry
ent	trace/trace_functions_graph.c	/^	struct ftrace_graph_ent_entry	ent;$/;"	m	struct:fgraph_data	typeref:struct:fgraph_data::ftrace_graph_ent_entry	file:
ent	trace/trace_uprobe.c	/^	struct trace_entry	ent;$/;"	m	struct:uprobe_trace_entry_head	typeref:struct:uprobe_trace_entry_head::trace_entry	file:
enter_funcs	trace/trace_functions_graph.c	/^	unsigned long	enter_funcs[FTRACE_RETFUNC_DEPTH];$/;"	m	struct:fgraph_cpu_data	file:
enter_kgdb	debug/debug_core.h	/^	int			enter_kgdb;$/;"	m	struct:debuggerinfo_struct
enter_record	trace/ftrace.c	/^enter_record(struct ftrace_hash *hash, struct dyn_ftrace *rec, int not)$/;"	f	file:
enter_state	power/suspend.c	/^static int enter_state(suspend_state_t state)$/;"	f	file:
enter_syscall_print_funcs	trace/trace_syscalls.c	/^struct trace_event_functions enter_syscall_print_funcs = {$/;"	v	typeref:struct:trace_event_functions
entering_platform_hibernation	power/hibernate.c	/^static bool entering_platform_hibernation;$/;"	v	file:
entity_before	sched/fair.c	/^static inline int entity_before(struct sched_entity *a,$/;"	f	file:
entity_is_task	sched/fair.c	246;"	d	file:
entity_is_task	sched/fair.c	386;"	d	file:
entity_tick	sched/fair.c	/^entity_tick(struct cfs_rq *cfs_rq, struct sched_entity *curr, int queued)$/;"	f	file:
entries	jump_label.c	/^	struct jump_entry *entries;$/;"	m	struct:static_key_mod	typeref:struct:static_key_mod::jump_entry	file:
entries	power/swap.c	/^	sector_t entries[MAP_PAGE_ENTRIES];$/;"	m	struct:swap_map_page	file:
entries	time/timer_stats.c	/^static struct entry entries[MAX_ENTRIES];$/;"	v	typeref:struct:entry	file:
entries	trace/ring_buffer.c	/^	local_t				entries;$/;"	m	struct:ring_buffer_per_cpu	file:
entries	trace/ring_buffer.c	/^	local_t		 entries;	\/* entries on this page *\/$/;"	m	struct:buffer_page	file:
entries	trace/trace.h	/^	unsigned long		entries;$/;"	m	struct:trace_array_cpu
entries_bytes	trace/ring_buffer.c	/^	local_t				entries_bytes;$/;"	m	struct:ring_buffer_per_cpu	file:
entry	swap/kprobe/swap_kprobes.h	/^	kprobe_opcode_t *entry;             \/**< Probe handling code to jump to.*\/$/;"	m	struct:jprobe
entry	swap/ks_features/ks_map.c	/^struct entry {$/;"	s	file:
entry	swap/uprobe/swap_uprobes.h	/^	void *entry;		\/**< Probe handling code to jump to *\/$/;"	m	struct:ujprobe
entry	time/timer_stats.c	/^struct entry {$/;"	s	file:
entry	trace/trace.c	/^	struct dentry			*entry;$/;"	m	struct:trace_option_dentry	typeref:struct:trace_option_dentry::dentry	file:
entry	trace/trace.h	/^	struct dentry			*entry;$/;"	m	struct:ftrace_subsystem_dir	typeref:struct:ftrace_subsystem_dir::dentry
entry	workqueue_internal.h	/^		struct list_head	entry;	\/* L: while idle *\/$/;"	m	union:worker::__anon69	typeref:struct:worker::__anon69::list_head
entry_count	async.c	/^static atomic_t entry_count;$/;"	v	file:
entry_data	swap/ks_features/ks_map.c	/^static inline void *entry_data(struct entry *entry)$/;"	f	file:
entry_handler	swap/kprobe/swap_kprobes.h	/^	kretprobe_handler_t entry_handler;   \/**< Entry handler of this kretprobe.*\/$/;"	m	struct:kretprobe
entry_handler	swap/ks_features/ks_features.c	/^static int entry_handler(struct kretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
entry_handler	swap/uprobe/swap_uprobes.h	/^	uretprobe_handler_t entry_handler;  \/**< Uretprobe entry handler *\/$/;"	m	struct:uretprobe
entry_handler	swap/us_manager/probes/probe_info_new.h	/^			uretprobe_handler_t entry_handler;$/;"	m	struct:probe_info_new::__anon57::__anon59
entry_handler	test_kprobes.c	/^static int entry_handler(struct kretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
entry_handler_comm	swap/us_manager/helper.c	/^static int entry_handler_comm(struct kretprobe_instance *ri,$/;"	f	file:
entry_handler_cp	swap/us_manager/helper.c	/^static int entry_handler_cp(struct kretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
entry_handler_pf	swap/us_manager/helper.c	/^static int entry_handler_pf(struct kretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
entry_handler_set_backlight	swap/energy/lcd/maru.c	/^static int entry_handler_set_backlight(struct kretprobe_instance *ri,$/;"	f	file:
entry_handler_set_backlight	swap/energy/lcd/s6e8aa0.c	/^static int entry_handler_set_backlight(struct kretprobe_instance *ri,$/;"	f	file:
entry_handler_set_backlight	swap/energy/lcd/s6e8aa0_panel.c	/^static int entry_handler_set_backlight(struct kretprobe_instance *ri,$/;"	f	file:
entry_handler_set_power	swap/energy/lcd/s6e8aa0.c	/^static int entry_handler_set_power(struct kretprobe_instance *ri,$/;"	f	file:
entry_handler_set_power	swap/energy/lcd/s6e8aa0_panel.c	/^static int entry_handler_set_power(struct kretprobe_instance *ri,$/;"	f	file:
entry_handler_switch	swap/energy/energy.c	/^static int entry_handler_switch(struct kretprobe_instance *ri,$/;"	f	file:
entry_handler_sys_read	swap/energy/energy.c	/^static int entry_handler_sys_read(struct kretprobe_instance *ri,$/;"	f	file:
entry_handler_sys_write	swap/energy/energy.c	/^static int entry_handler_sys_write(struct kretprobe_instance *ri,$/;"	f	file:
entry_handler_unmap	swap/us_manager/helper.c	/^static int entry_handler_unmap(struct kretprobe_instance *ri,$/;"	f	file:
entry_point_t	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	/^typedef kprobe_opcode_t (*entry_point_t) (unsigned long, unsigned long,$/;"	t
entry_point_t	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	/^typedef kprobe_opcode_t (*entry_point_t) (unsigned long, unsigned long,$/;"	t
envc	auditsc.c	/^	int envc;$/;"	m	struct:audit_aux_data_execve	file:
err	time/time_history.c	/^	int err;$/;"	m	struct:time_log_entry	file:
err_broadcast	time/tick-broadcast.c	/^static void err_broadcast(const struct cpumask *mask)$/;"	f	file:
err_code	debug/debug_core.h	/^	int			err_code;$/;"	m	struct:kgdb_state
err_text	trace/trace_events_filter.c	/^static char *err_text[] = {$/;"	v	file:
error_packet	debug/gdbstub.c	/^static void error_packet(char *pkt, int error)$/;"	f	file:
errors	test_kprobes.c	/^static int errors, handler_errors, num_tests;$/;"	v	file:
euid	audit.h	/^	kuid_t		    uid, euid, suid, fsuid;$/;"	m	struct:audit_context
ev_filter	swap/writer/event_filter.h	/^struct ev_filter {$/;"	s
ev_us_filter	swap/us_manager/us_manager.c	/^static struct ev_filter ev_us_filter = {$/;"	v	typeref:struct:ev_filter	file:
event	events/core.c	/^	struct perf_event *event;$/;"	m	struct:remove_event	typeref:struct:remove_event::perf_event	file:
event	rtmutex-tester.c	/^	int			event;$/;"	m	struct:test_thread_data	file:
event_class_syscall_enter	trace/trace_syscalls.c	/^struct ftrace_event_class __refdata event_class_syscall_enter = {$/;"	v	typeref:struct:__refdata
event_class_syscall_exit	trace/trace_syscalls.c	/^struct ftrace_event_class __refdata event_class_syscall_exit = {$/;"	v	typeref:struct:__refdata
event_create_dir	trace/trace_events.c	/^event_create_dir(struct dentry *parent,$/;"	f	file:
event_dir	trace/trace.h	/^	struct dentry		*event_dir;$/;"	m	struct:trace_array	typeref:struct:trace_array::dentry
event_disable_cmd	trace/trace_events.c	/^static struct ftrace_func_command event_disable_cmd = {$/;"	v	typeref:struct:ftrace_func_command	file:
event_disable_count_probe_ops	trace/trace_events.c	/^static struct ftrace_probe_ops event_disable_count_probe_ops = {$/;"	v	typeref:struct:ftrace_probe_ops	file:
event_disable_probe_ops	trace/trace_events.c	/^static struct ftrace_probe_ops event_disable_probe_ops = {$/;"	v	typeref:struct:ftrace_probe_ops	file:
event_enable_cmd	trace/trace_events.c	/^static struct ftrace_func_command event_enable_cmd = {$/;"	v	typeref:struct:ftrace_func_command	file:
event_enable_count_probe	trace/trace_events.c	/^event_enable_count_probe(unsigned long ip, unsigned long parent_ip, void **_data)$/;"	f	file:
event_enable_count_probe_ops	trace/trace_events.c	/^static struct ftrace_probe_ops event_enable_count_probe_ops = {$/;"	v	typeref:struct:ftrace_probe_ops	file:
event_enable_free	trace/trace_events.c	/^event_enable_free(struct ftrace_probe_ops *ops, unsigned long ip,$/;"	f	file:
event_enable_func	trace/trace_events.c	/^event_enable_func(struct ftrace_hash *hash,$/;"	f	file:
event_enable_init	trace/trace_events.c	/^event_enable_init(struct ftrace_probe_ops *ops, unsigned long ip,$/;"	f	file:
event_enable_on_exec	events/core.c	/^static int event_enable_on_exec(struct perf_event *event,$/;"	f	file:
event_enable_print	trace/trace_events.c	/^event_enable_print(struct seq_file *m, unsigned long ip,$/;"	f	file:
event_enable_probe	trace/trace_events.c	/^event_enable_probe(unsigned long ip, unsigned long parent_ip, void **_data)$/;"	f	file:
event_enable_probe_ops	trace/trace_events.c	/^static struct ftrace_probe_ops event_enable_probe_ops = {$/;"	v	typeref:struct:ftrace_probe_ops	file:
event_enable_read	trace/trace_events.c	/^event_enable_read(struct file *filp, char __user *ubuf, size_t cnt,$/;"	f	file:
event_enable_write	trace/trace_events.c	/^event_enable_write(struct file *filp, const char __user *ubuf, size_t cnt,$/;"	f	file:
event_file_data	trace/trace_events.c	/^static void *event_file_data(struct file *filp)$/;"	f	file:
event_filter	trace/trace.h	/^struct event_filter {$/;"	s
event_filter_exit	swap/writer/event_filter.c	/^void event_filter_exit(void)$/;"	f
event_filter_find	swap/writer/event_filter.c	/^static struct ev_filter *event_filter_find(const char *name)$/;"	f	file:
event_filter_get	swap/writer/event_filter.c	/^const char *event_filter_get(void)$/;"	f
event_filter_init	swap/writer/event_filter.c	/^int event_filter_init(void)$/;"	f
event_filter_match	events/core.c	/^event_filter_match(struct perf_event *event)$/;"	f	file:
event_filter_on_each	swap/writer/event_filter.c	/^void event_filter_on_each(void (*func)(struct ev_filter *, void *),$/;"	f
event_filter_read	trace/trace_events.c	/^event_filter_read(struct file *filp, char __user *ubuf, size_t cnt,$/;"	f	file:
event_filter_register	swap/writer/event_filter.c	/^EXPORT_SYMBOL_GPL(event_filter_register);$/;"	v
event_filter_register	swap/writer/event_filter.c	/^int event_filter_register(struct ev_filter *f)$/;"	f
event_filter_set	swap/writer/event_filter.c	/^EXPORT_SYMBOL_GPL(event_filter_set);$/;"	v
event_filter_set	swap/writer/event_filter.c	/^int event_filter_set(const char *name)$/;"	f
event_filter_unregister	swap/writer/event_filter.c	/^EXPORT_SYMBOL_GPL(event_filter_unregister);$/;"	v
event_filter_unregister	swap/writer/event_filter.c	/^void event_filter_unregister(struct ev_filter *f)$/;"	f
event_filter_write	trace/trace_events.c	/^event_filter_write(struct file *filp, const char __user *ubuf, size_t cnt,$/;"	f	file:
event_id	events/core.c	/^	} event_id;$/;"	m	struct:perf_comm_event	typeref:struct:perf_comm_event::__anon7	file:
event_id	events/core.c	/^	} event_id;$/;"	m	struct:perf_mmap_event	typeref:struct:perf_mmap_event::__anon8	file:
event_id	events/core.c	/^	} event_id;$/;"	m	struct:perf_task_event	typeref:struct:perf_task_event::__anon6	file:
event_id_read	trace/trace_events.c	/^event_id_read(struct file *filp, char __user *ubuf, size_t cnt, loff_t *ppos)$/;"	f	file:
event_init	trace/trace_events.c	/^static int event_init(struct ftrace_event_call *call)$/;"	f	file:
event_list	events/internal.h	/^	struct list_head		event_list;$/;"	m	struct:ring_buffer	typeref:struct:ring_buffer::list_head
event_lock	events/internal.h	/^	spinlock_t			event_lock;$/;"	m	struct:ring_buffer
event_mutex	trace/trace_events.c	/^DEFINE_MUTEX(event_mutex);$/;"	v
event_probe_data	trace/trace_events.c	/^struct event_probe_data {$/;"	s	file:
event_remove	trace/trace_events.c	/^static void event_remove(struct ftrace_event_call *call)$/;"	f	file:
event_sched_in	events/core.c	/^event_sched_in(struct perf_event *event,$/;"	f	file:
event_sched_out	events/core.c	/^event_sched_out(struct perf_event *event,$/;"	f	file:
event_status	trace/ring_buffer_benchmark.c	/^enum event_status {$/;"	g	file:
event_subsystem	trace/trace.h	/^struct event_subsystem {$/;"	s
event_subsystem_dir	trace/trace_events.c	/^event_subsystem_dir(struct trace_array *tr, const char *name,$/;"	f	file:
event_test_stuff	trace/trace_events.c	/^static __init void event_test_stuff(void)$/;"	f	file:
event_test_thread	trace/trace_events.c	/^static __init int event_test_thread(void *unused)$/;"	f	file:
event_trace_add_tracer	trace/trace_events.c	/^int event_trace_add_tracer(struct dentry *parent, struct trace_array *tr)$/;"	f
event_trace_del_tracer	trace/trace_events.c	/^int event_trace_del_tracer(struct trace_array *tr)$/;"	f
event_trace_enable	trace/trace_events.c	/^core_initcall(event_trace_enable);$/;"	v
event_trace_enable	trace/trace_events.c	/^static __init int event_trace_enable(void)$/;"	f	file:
event_trace_init	trace/trace_events.c	/^fs_initcall(event_trace_init);$/;"	v
event_trace_init	trace/trace_events.c	/^static __init int event_trace_init(void)$/;"	f	file:
event_trace_memsetup	trace/trace_events.c	/^early_initcall(event_trace_memsetup);$/;"	v
event_trace_memsetup	trace/trace_events.c	/^static __init int event_trace_memsetup(void)$/;"	f	file:
event_trace_self_test_with_function	trace/trace_events.c	/^static __init void event_trace_self_test_with_function(void)$/;"	f	file:
event_trace_self_tests	trace/trace_events.c	/^static __init void event_trace_self_tests(void)$/;"	f	file:
event_trace_self_tests_init	trace/trace_events.c	/^late_initcall(event_trace_self_tests_init);$/;"	v
event_trace_self_tests_init	trace/trace_events.c	/^static __init int event_trace_self_tests_init(void)$/;"	f	file:
event_type	swap/ks_features/ksf_msg.c	/^	u32 event_type;$/;"	m	struct:msg_file_entry	file:
event_type_t	events/core.c	/^enum event_type_t {$/;"	g	file:
eventfd	cgroup.c	/^	struct eventfd_ctx *eventfd;$/;"	m	struct:cgroup_event	typeref:struct:cgroup_event::eventfd_ctx	file:
events	events/internal.h	/^	local_t				events;		\/* event limit       *\/$/;"	m	struct:ring_buffer
events	trace/ring_buffer.c	/^	unsigned long		events;$/;"	m	struct:rb_test_data	file:
events	trace/trace.h	/^	struct list_head	events;$/;"	m	struct:trace_array	typeref:struct:trace_array::list_head
events_nested	trace/ring_buffer.c	/^	unsigned long		events_nested;$/;"	m	struct:rb_test_data	file:
evict_chunk	audit_tree.c	/^static void evict_chunk(struct audit_chunk *chunk)$/;"	f	file:
ewebkit	swap/wsp/wsp.c	/^static struct wsp_bin ewebkit = {$/;"	v	typeref:struct:wsp_bin	file:
ewebkit_path	swap/wsp/wsp.c	/^static const char ewebkit_path[] = "\/usr\/lib\/libewebkit2.so";$/;"	v	file:
ewebkit_probe_array	swap/wsp/wsp.c	/^static struct wsp_probe ewebkit_probe_array[] = {$/;"	v	typeref:struct:wsp_probe	file:
ewebkit_probes_cnt	swap/wsp/wsp.c	/^	ewebkit_probes_cnt =$/;"	e	enum:__anon61	file:
ex_vector	debug/debug_core.h	/^	int			ex_vector;$/;"	m	struct:kgdb_state
exception_level	debug/debug_core.c	/^static int			exception_level;$/;"	v	file:
exception_state	debug/debug_core.h	/^	int			exception_state;$/;"	m	struct:debuggerinfo_struct
exclusive_bit	lockdep.c	/^static int exclusive_bit(int new_bit)$/;"	f	file:
exclusive_console	printk.c	/^static struct console *exclusive_console;$/;"	v	typeref:struct:console	file:
exec_cbs	swap/us_manager/callbacks.c	/^void exec_cbs(enum callback_t cbt)$/;"	f
exec_clock	sched/sched.h	/^	u64 exec_clock;$/;"	m	struct:cfs_rq
exec_domains	exec_domain.c	/^static struct exec_domain *exec_domains = &default_exec_domain;$/;"	v	typeref:struct:exec_domain	file:
exec_path	swap/parser/msg_parser.h	/^	char *exec_path;            \/**< Application execution path. *\/$/;"	m	struct:app_info_data
execdomains_proc_fops	exec_domain.c	/^static const struct file_operations execdomains_proc_fops = {$/;"	v	typeref:struct:file_operations	file:
execdomains_proc_open	exec_domain.c	/^static int execdomains_proc_open(struct inode *inode, struct file *file)$/;"	f	file:
execdomains_proc_show	exec_domain.c	/^static int execdomains_proc_show(struct seq_file *m, void *v)$/;"	f	file:
execute_in_process_context	workqueue.c	/^EXPORT_SYMBOL_GPL(execute_in_process_context);$/;"	v
execute_in_process_context	workqueue.c	/^int execute_in_process_context(work_func_t fn, struct execute_work *ew)$/;"	f
executed	stop_machine.c	/^	bool			executed;	\/* actually executed? *\/$/;"	m	struct:cpu_stop_done	file:
exit_addr	swap/kprobe/swap_kprobes.c	/^static unsigned long exit_addr;$/;"	v	file:
exit_buffer	swap/writer/debugfs_writer.c	/^static void exit_buffer(void)$/;"	f	file:
exit_creds	cred.c	/^void exit_creds(struct task_struct *tsk)$/;"	f
exit_debugfs_energy	swap/energy/debugfs_energy.c	/^void exit_debugfs_energy(void)$/;"	f
exit_debugfs_us_manager	swap/us_manager/debugfs_us_manager.c	/^void exit_debugfs_us_manager(void)$/;"	f
exit_debugfs_writer	swap/writer/debugfs_writer.c	/^void exit_debugfs_writer(void)$/;"	f
exit_itimers	posix-timers.c	/^void exit_itimers(struct signal_struct *sig)$/;"	f
exit_kprobes	swap/kprobe/swap_kprobes.c	/^static void exit_kprobes(void)$/;"	f	file:
exit_lcd_debugfs	swap/energy/lcd/lcd_debugfs.c	/^void exit_lcd_debugfs(void)$/;"	f
exit_mm	exit.c	/^static void exit_mm(struct task_struct * tsk)$/;"	f	file:
exit_notify	exit.c	/^static void exit_notify(struct task_struct *tsk, int group_dead)$/;"	f	file:
exit_pi_state_list	futex.c	/^void exit_pi_state_list(struct task_struct *curr)$/;"	f
exit_rcu	rcupdate.c	/^void exit_rcu(void)$/;"	f
exit_robust_list	futex.c	/^void exit_robust_list(struct task_struct *curr)$/;"	f
exit_signals	signal.c	/^void exit_signals(struct task_struct *tsk)$/;"	f
exit_sm	swap/kprobe/swap_kprobes.c	/^static void exit_sm(void)$/;"	f	file:
exit_switch_context	swap/ks_features/ks_features.c	/^void exit_switch_context(void)$/;"	f
exit_syscall_print_funcs	trace/trace_syscalls.c	/^struct trace_event_functions exit_syscall_print_funcs = {$/;"	v	typeref:struct:trace_event_functions
exit_task_namespaces	nsproxy.c	/^void exit_task_namespaces(struct task_struct *p)$/;"	f
exit_uprobes	events/uprobes.c	/^module_exit(exit_uprobes);$/;"	v
exit_uprobes	events/uprobes.c	/^static void __exit exit_uprobes(void)$/;"	f	file:
exit_us_filter	swap/us_manager/us_manager.c	/^static void exit_us_filter(void)$/;"	f	file:
exit_us_manager	swap/us_manager/us_manager.c	/^static void exit_us_manager(void)$/;"	f	file:
exit_w_wake_up	swap/driver/device_driver.c	/^static void exit_w_wake_up(void)$/;"	f	file:
exited	kthread.c	/^	struct completion exited;$/;"	m	struct:kthread	typeref:struct:kthread::completion	file:
exitf	backtracetest.c	/^module_exit(exitf);$/;"	v
exitf	backtracetest.c	/^static void exitf(void)$/;"	f	file:
exp_tasks	rcutiny_plugin.h	/^	struct list_head *exp_tasks;$/;"	m	struct:rcu_preempt_ctrlblk	typeref:struct:rcu_preempt_ctrlblk::list_head
exp_tasks	rcutree.h	/^	struct list_head *exp_tasks;$/;"	m	struct:rcu_node	typeref:struct:rcu_node::list_head
expedited_done	rcutree.h	/^	atomic_long_t expedited_done;		\/* Done ticket. *\/$/;"	m	struct:rcu_state
expedited_done_exit	rcutree.h	/^	atomic_long_t expedited_done_exit;	\/* # times exited _done loop. *\/$/;"	m	struct:rcu_state
expedited_done_lost	rcutree.h	/^	atomic_long_t expedited_done_lost;	\/* # times beaten to _done. *\/$/;"	m	struct:rcu_state
expedited_done_tries	rcutree.h	/^	atomic_long_t expedited_done_tries;	\/* # tries to update _done. *\/$/;"	m	struct:rcu_state
expedited_normal	rcutree.h	/^	atomic_long_t expedited_normal;		\/* # fallbacks to normal. *\/$/;"	m	struct:rcu_state
expedited_start	rcutree.h	/^	atomic_long_t expedited_start;		\/* Starting ticket. *\/$/;"	m	struct:rcu_state
expedited_stoppedcpus	rcutree.h	/^	atomic_long_t expedited_stoppedcpus;	\/* # successful stop_cpus. *\/$/;"	m	struct:rcu_state
expedited_tryfail	rcutree.h	/^	atomic_long_t expedited_tryfail;	\/* # acquisition failures. *\/$/;"	m	struct:rcu_state
expedited_workdone1	rcutree.h	/^	atomic_long_t expedited_workdone1;	\/* # done by others #1. *\/$/;"	m	struct:rcu_state
expedited_workdone2	rcutree.h	/^	atomic_long_t expedited_workdone2;	\/* # done by others #2. *\/$/;"	m	struct:rcu_state
expedited_wrap	rcutree.h	/^	atomic_long_t expedited_wrap;		\/* # near-wrap incidents. *\/$/;"	m	struct:rcu_state
expire_cfs_rq_runtime	sched/fair.c	/^static void expire_cfs_rq_runtime(struct cfs_rq *cfs_rq)$/;"	f	file:
expire_func	time/timer_stats.c	/^	void			*expire_func;$/;"	m	struct:entry	file:
expire_wake_lock	power/wakelock.c	/^static void expire_wake_lock(struct wake_lock *lock)$/;"	f	file:
expire_wake_locks	power/wakelock.c	/^static void expire_wake_locks(unsigned long data)$/;"	f	file:
expires_gt	posix-cpu-timers.c	/^static inline int expires_gt(cputime_t expires, cputime_t new_exp)$/;"	f	file:
expmask	rcutree.h	/^	unsigned long expmask;	\/* Groups that have ->blkd_tasks *\/$/;"	m	struct:rcu_node
exported	kallsyms.c	/^	int exported;$/;"	m	struct:kallsym_iter	file:
ext	gcov/gcov.h	/^	const char *ext;$/;"	m	struct:gcov_link
fE	audit.h	/^		unsigned int	fE;		\/* effective bit of file cap *\/$/;"	m	union:audit_cap_data::__anon14
f_next	trace/trace_events.c	/^static void *f_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
f_show	trace/trace_events.c	/^static int f_show(struct seq_file *m, void *v)$/;"	f	file:
f_start	trace/trace_events.c	/^static void *f_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
f_stop	trace/trace_events.c	/^static void f_stop(struct seq_file *m, void *p)$/;"	f	file:
facility	printk.c	/^	u8 facility;			\/* log level of first message *\/$/;"	m	struct:cont	file:
facility	printk.c	/^	u8 facility;		\/* syslog facility *\/$/;"	m	struct:log	file:
failed	trace/trace_functions_graph.c	/^	int				failed;$/;"	m	struct:fgraph_data	file:
failed_step	power/sleep_history.c	/^	char failed_step;$/;"	m	struct:sleep_history	file:
fair_sched_class	sched/fair.c	/^const struct sched_class fair_sched_class = {$/;"	v	typeref:struct:sched_class
fair_sched_class	sched/fair.c	/^const struct sched_class fair_sched_class;$/;"	v	typeref:struct:sched_class
fake_signal_wake_up	freezer.c	/^static void fake_signal_wake_up(struct task_struct *p)$/;"	f	file:
fakewriter_tasks	rcutorture.c	/^static struct task_struct **fakewriter_tasks;$/;"	v	typeref:struct:task_struct	file:
fallback_doms	sched/core.c	/^static cpumask_var_t fallback_doms;$/;"	v	file:
false	panic.c	/^	char	false;$/;"	m	struct:tnt	file:
family	taskstats.c	/^static struct genl_family family = {$/;"	v	typeref:struct:genl_family	file:
family_registered	taskstats.c	/^static int family_registered;$/;"	v	file:
fastpath_timer_check	posix-cpu-timers.c	/^static inline int fastpath_timer_check(struct task_struct *tsk)$/;"	f	file:
fault_handler	swap/kprobe/swap_kprobes.h	/^	kprobe_fault_handler_t				fault_handler;$/;"	m	struct:kprobe
fault_in_user_writeable	futex.c	/^static int fault_in_user_writeable(u32 __user *uaddr)$/;"	f	file:
fb_state	power/fbearlysuspend.c	/^} fb_state;$/;"	v	typeref:enum:__anon34	file:
fb_state_wq	power/fbearlysuspend.c	/^static wait_queue_head_t fb_state_wq;$/;"	v	file:
fbi_i	swap/us_manager/probes/probes.h	/^		struct fbi_info fbi_i;$/;"	m	union:probe_info::__anon56	typeref:struct:probe_info::__anon56::fbi_info
fbi_info	swap/fbiprobe/fbiprobe.h	/^struct fbi_info {$/;"	s
fbi_msg	swap/fbiprobe/fbi_msg.c	/^void fbi_msg(unsigned long var_id, size_t size, char *msg_buf)$/;"	f
fbi_probe_alloc_and_read_from_addr	swap/fbiprobe/fbiprobe.c	/^static char *fbi_probe_alloc_and_read_from_addr(const struct fbi_var_data *fbid,$/;"	f	file:
fbi_probe_cleanup	swap/fbiprobe/fbiprobe.c	/^void fbi_probe_cleanup(struct probe_info *probe_i)$/;"	f
fbi_probe_copy	swap/fbiprobe/fbiprobe.c	/^int fbi_probe_copy(struct probe_info *dest, const struct probe_info *source)$/;"	f
fbi_probe_get_data_from_direct_addr	swap/fbiprobe/fbiprobe.c	/^static int fbi_probe_get_data_from_direct_addr(const struct fbi_var_data *fbi_i,$/;"	f	file:
fbi_probe_get_data_from_ptrs	swap/fbiprobe/fbiprobe.c	/^static int fbi_probe_get_data_from_ptrs(const struct fbi_var_data *fbi_i,$/;"	f	file:
fbi_probe_get_data_from_reg	swap/fbiprobe/fbiprobe.c	/^static int fbi_probe_get_data_from_reg(const struct fbi_var_data *fbi_i,$/;"	f	file:
fbi_probe_get_uprobe	swap/fbiprobe/fbiprobe.c	/^static struct uprobe *fbi_probe_get_uprobe(struct us_ip *ip)$/;"	f	file:
fbi_probe_handler	swap/fbiprobe/fbiprobe.c	/^static int fbi_probe_handler(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
fbi_probe_iface	swap/fbiprobe/fbiprobe.c	/^static struct probe_iface fbi_probe_iface = {$/;"	v	typeref:struct:probe_iface	file:
fbi_probe_init	swap/fbiprobe/fbiprobe.c	/^void fbi_probe_init(struct us_ip *ip)$/;"	f
fbi_probe_register_probe	swap/fbiprobe/fbiprobe.c	/^static int fbi_probe_register_probe(struct us_ip *ip)$/;"	f	file:
fbi_probe_uninit	swap/fbiprobe/fbiprobe.c	/^void fbi_probe_uninit(struct us_ip *ip)$/;"	f
fbi_probe_unregister_probe	swap/fbiprobe/fbiprobe.c	/^static void fbi_probe_unregister_probe(struct us_ip *ip, int disarm)$/;"	f	file:
fbi_step	swap/fbiprobe/fbiprobe.h	/^struct fbi_step {$/;"	s
fbi_var_data	swap/fbiprobe/fbiprobe.h	/^struct fbi_var_data {$/;"	s
fbiprobe_module_exit	swap/fbiprobe/fbiprobe.c	/^module_exit(fbiprobe_module_exit);$/;"	v
fbiprobe_module_exit	swap/fbiprobe/fbiprobe.c	/^static void __exit fbiprobe_module_exit(void)$/;"	f	file:
fbiprobe_module_init	swap/fbiprobe/fbiprobe.c	/^module_init(fbiprobe_module_init);$/;"	v
fbiprobe_module_init	swap/fbiprobe/fbiprobe.c	/^static int __init fbiprobe_module_init(void)$/;"	f	file:
fcap	audit.h	/^	struct audit_cap_data	fcap;$/;"	m	struct:audit_names	typeref:struct:audit_names::audit_cap_data
fcap	auditsc.c	/^	struct audit_cap_data	fcap;$/;"	m	struct:audit_aux_data_bprm_fcaps	typeref:struct:audit_aux_data_bprm_fcaps::audit_cap_data	file:
fcap_ver	audit.h	/^	unsigned int		fcap_ver;$/;"	m	struct:audit_names
fcap_ver	auditsc.c	/^	unsigned int		fcap_ver;$/;"	m	struct:audit_aux_data_bprm_fcaps	file:
fd	audit.h	/^			int			fd;$/;"	m	struct:audit_context::__anon15::__anon23
fd	swap/energy/energy.c	/^	int fd;$/;"	m	struct:sys_read_data	file:
fd	swap/ks_features/ksf_msg.c	/^	u32 fd;$/;"	m	struct:msg_file_entry	file:
fd	swap/parser/usm_msg.c	/^	u32 fd;$/;"	m	struct:ofile	file:
fds	audit.h	/^	int fds[2];$/;"	m	struct:audit_context
feature	swap/ks_features/features_data.c	/^struct feature {$/;"	s	file:
feature	swap/us_manager/sspt/sspt_proc.h	/^	struct sspt_feature *feature;	\/**< Ptr to the feature *\/$/;"	m	struct:sspt_proc	typeref:struct:sspt_proc::sspt_feature
feature_cnt	swap/ks_features/features_data.c	/^	feature_cnt = sizeof(features) \/ sizeof(struct feature)$/;"	e	enum:__anon52	file:
feature_context_switch	swap/parser/features.c	/^static struct feature_item feature_context_switch = {$/;"	v	typeref:struct:feature_item	file:
feature_func_energy	swap/parser/features.c	/^static struct feature_item feature_func_energy = {$/;"	v	typeref:struct:feature_item	file:
feature_func_sampling	swap/parser/features.c	/^static struct feature_item feature_func_sampling = {$/;"	v	typeref:struct:feature_item	file:
feature_id	swap/energy/energy.c	/^static sspt_feature_id_t feature_id = SSPT_FEATURE_ID_BAD;$/;"	v	file:
feature_id	swap/ks_features/ks_features.h	/^enum feature_id {$/;"	g
feature_index	swap/ks_features/features_data.c	/^static int feature_index(struct feature *f)$/;"	f	file:
feature_inst	swap/parser/features.c	/^static u64 feature_inst;$/;"	v	file:
feature_item	swap/parser/features.c	/^struct feature_item {$/;"	s	file:
feature_list	swap/ks_features/features_data.c	/^	enum syscall_id *feature_list;$/;"	m	struct:feature	typeref:enum:feature::syscall_id	file:
feature_list	swap/parser/features.c	/^static struct feature_item *feature_list[] = {$/;"	v	typeref:struct:feature_item	file:
feature_list	swap/us_manager/sspt/sspt_feature.c	/^	struct list_head feature_list;$/;"	m	struct:sspt_feature	typeref:struct:sspt_feature::list_head	file:
feature_mask	swap/parser/features.c	/^static u64 feature_mask;$/;"	v	file:
feature_syscall_desc	swap/parser/features.c	/^static struct feature_item feature_syscall_desc = {$/;"	v	typeref:struct:feature_item	file:
feature_syscall_file	swap/parser/features.c	/^static struct feature_item feature_syscall_file = {$/;"	v	typeref:struct:feature_item	file:
feature_syscall_ipc	swap/parser/features.c	/^static struct feature_item feature_syscall_ipc = {$/;"	v	typeref:struct:feature_item	file:
feature_syscall_network	swap/parser/features.c	/^static struct feature_item feature_syscall_network = {$/;"	v	typeref:struct:feature_item	file:
feature_syscall_process	swap/parser/features.c	/^static struct feature_item feature_syscall_process = {$/;"	v	typeref:struct:feature_item	file:
feature_syscall_signal	swap/parser/features.c	/^static struct feature_item feature_syscall_signal = {$/;"	v	typeref:struct:feature_item	file:
feature_sysfile_activity	swap/parser/features.c	/^static struct feature_item feature_sysfile_activity = {$/;"	v	typeref:struct:feature_item	file:
feature_us_inst	swap/parser/features.c	/^static struct feature_item feature_us_inst = {$/;"	v	typeref:struct:feature_item	file:
features	swap/ks_features/features_data.c	/^static struct feature features[] = {$/;"	v	typeref:struct:feature	file:
features_list	swap/parser/features.c	/^enum features_list {$/;"	g	file:
fentry	trace/trace_stack.c	24;"	d	file:
fentry	trace/trace_stack.c	26;"	d	file:
fetch	trace/trace_probe.h	/^	fetch_func_t		fetch[FETCH_MTD_END];$/;"	m	struct:fetch_type
fetch	trace/trace_probe.h	/^	struct fetch_param	fetch;$/;"	m	struct:probe_arg	typeref:struct:probe_arg::fetch_param
fetch_bitfield_string	trace/trace_probe.c	346;"	d	file:
fetch_bitfield_string_size	trace/trace_probe.c	347;"	d	file:
fetch_bp_busy_slots	events/hw_breakpoint.c	/^fetch_bp_busy_slots(struct bp_busy_slots *slots, struct perf_event *bp,$/;"	f	file:
fetch_func_t	trace/trace_probe.h	/^typedef	void (*fetch_func_t)(struct pt_regs *, void *, void *);$/;"	t
fetch_param	trace/trace_probe.h	/^struct fetch_param {$/;"	s
fetch_reg_string	trace/trace_probe.c	122;"	d	file:
fetch_reg_string_size	trace/trace_probe.c	123;"	d	file:
fetch_retval_string	trace/trace_probe.c	145;"	d	file:
fetch_retval_string_size	trace/trace_probe.c	146;"	d	file:
fetch_robust_entry	futex.c	/^static inline int fetch_robust_entry(struct robust_list __user **entry,$/;"	f	file:
fetch_robust_entry	futex_compat.c	/^fetch_robust_entry(compat_uptr_t *uentry, struct robust_list __user **entry,$/;"	f	file:
fetch_size	trace/trace_probe.h	/^	struct fetch_param	fetch_size;$/;"	m	struct:probe_arg	typeref:struct:probe_arg::fetch_param
fetch_stack_address	trace/trace_probe.c	/^static __kprobes void fetch_stack_address(struct pt_regs *regs,$/;"	f	file:
fetch_stack_string	trace/trace_probe.c	134;"	d	file:
fetch_stack_string_size	trace/trace_probe.c	135;"	d	file:
fetch_task_cputime	sched/cputime.c	/^fetch_task_cputime(struct task_struct *t,$/;"	f	file:
fetch_this_slot	events/hw_breakpoint.c	/^fetch_this_slot(struct bp_busy_slots *slots, int weight)$/;"	f	file:
fetch_type	trace/trace_probe.h	/^struct fetch_type {$/;"	s
fetch_type_table	trace/trace_probe.c	/^static const struct fetch_type fetch_type_table[] = {$/;"	v	typeref:struct:fetch_type	file:
fgraph_cpu_data	trace/trace_functions_graph.c	/^struct fgraph_cpu_data {$/;"	s	file:
fgraph_data	trace/trace_functions_graph.c	/^struct fgraph_data {$/;"	s	file:
field	trace/trace.h	/^	struct ftrace_event_field *field;$/;"	m	struct:filter_pred	typeref:struct:filter_pred::ftrace_event_field
field_cachep	trace/trace_events.c	/^static struct kmem_cache *field_cachep;$/;"	v	typeref:struct:kmem_cache	file:
field_len	trace/trace.h	/^	int			field_len;$/;"	m	struct:regex
file	acct.c	/^	struct file		*file;$/;"	m	struct:bsd_acct_struct	typeref:struct:bsd_acct_struct::file	file:
file	swap/ksyms/no_ksyms.c	/^static struct file *file;$/;"	v	typeref:struct:file	file:
file	swap/us_manager/sspt/sspt_page.h	/^	struct sspt_file *file;			\/**< Ptr to the file(parent)=*\/$/;"	m	struct:sspt_page	typeref:struct:sspt_page::sspt_file
file	trace/trace_events.c	/^	struct ftrace_event_file	*file;$/;"	m	struct:event_probe_data	typeref:struct:event_probe_data::ftrace_event_file	file:
file	trace/trace_stat.c	/^	struct dentry		*file;$/;"	m	struct:stat_session	typeref:struct:stat_session::dentry	file:
file_api_t	swap/ks_features/ksf_msg.h	/^enum file_api_t {$/;"	g
file_cachep	trace/trace_events.c	/^static struct kmem_cache *file_cachep;$/;"	v	typeref:struct:kmem_cache	file:
file_caps_disable	capability.c	/^static int __init file_caps_disable(char *str)$/;"	f	file:
file_caps_enabled	capability.c	/^int file_caps_enabled = 1;$/;"	v
file_check	swap/ksyms/no_ksyms.c	/^static int file_check(void)$/;"	f	file:
file_close	swap/ksyms/no_ksyms.c	/^static void file_close(void)$/;"	f	file:
file_get_put_balance	swap/ks_features/file_ops.c	/^static int file_get_put_balance;$/;"	v	file:
file_info	swap/ks_features/ksf_msg.c	/^enum file_info {$/;"	g	file:
file_list	swap/us_manager/img/img_proc.c	/^	struct list_head file_list;$/;"	m	struct:img_proc	typeref:struct:img_proc::list_head	file:
file_list	swap/us_manager/sspt/sspt_proc.h	/^	struct list_head file_list;	\/**< For sspt_file *\/$/;"	m	struct:sspt_proc	typeref:struct:sspt_proc::list_head
file_name	events/core.c	/^	const char		*file_name;$/;"	m	struct:perf_mmap_event	file:
file_ns_capable	capability.c	/^EXPORT_SYMBOL(file_ns_capable);$/;"	v
file_ns_capable	capability.c	/^bool file_ns_capable(const struct file *file, struct user_namespace *ns, int cap)$/;"	f
file_open	swap/ksyms/no_ksyms.c	/^static int file_open(void)$/;"	f	file:
file_ops_exit	swap/ks_features/file_ops.c	/^void file_ops_exit(void)$/;"	f
file_ops_init	swap/ks_features/file_ops.c	/^int file_ops_init(void)$/;"	f
file_ops_is_init	swap/ks_features/file_ops.c	/^bool file_ops_is_init(void)$/;"	f
file_path	swap/ks_features/ksf_msg.c	/^	char file_path[0];$/;"	m	struct:msg_file_entry	file:
file_private	swap/ks_features/file_ops.c	/^struct file_private {$/;"	s	file:
file_probe	swap/ks_features/file_ops.c	/^struct file_probe {$/;"	s	file:
file_size	events/core.c	/^	int			file_size;$/;"	m	struct:perf_mmap_event	file:
file_size	swap/ksyms/no_ksyms.c	/^static long file_size(struct file *file)$/;"	f	file:
filechk_ikconfiggz	Makefile	/^      filechk_ikconfiggz = (echo "static const char kernel_config_data[] __used = MAGIC_START"; cat $< | scripts\/bin2c; echo "MAGIC_END;")$/;"	m
filename	gcov/gcov.h	/^	const char			*filename;$/;"	m	struct:gcov_info
filename	swap/preload/preload_control.c	/^	char *filename;$/;"	m	struct:bin_desc	file:
filename	trace/trace_uprobe.c	/^	char				*filename;$/;"	m	struct:trace_uprobe	file:
files	cgroup.c	/^static struct cftype files[] = {$/;"	v	typeref:struct:cftype	file:
files	cgroup_freezer.c	/^static struct cftype files[] = {$/;"	v	typeref:struct:cftype	file:
files	cpuset.c	/^static struct cftype files[] = {$/;"	v	typeref:struct:cftype	file:
files	sched/cpuacct.c	/^static struct cftype files[] = {$/;"	v	typeref:struct:cftype	file:
files	trace/trace_kprobe.c	/^	struct ftrace_event_file * __rcu *files;$/;"	m	struct:trace_probe	typeref:struct:trace_probe::__rcu	file:
files_cachep	fork.c	/^struct kmem_cache *files_cachep;$/;"	v	typeref:struct:kmem_cache
fill_rwbs	trace/blktrace.c	/^static void fill_rwbs(char *rwbs, const struct blk_io_trace *t)$/;"	f	file:
fill_stats	taskstats.c	/^static void fill_stats(struct user_namespace *user_ns,$/;"	f	file:
fill_stats_for_pid	taskstats.c	/^static int fill_stats_for_pid(pid_t pid, struct taskstats *stats)$/;"	f	file:
fill_stats_for_tgid	taskstats.c	/^static int fill_stats_for_tgid(pid_t tgid, struct taskstats *stats)$/;"	f	file:
fill_tgid_exit	taskstats.c	/^static void fill_tgid_exit(struct task_struct *tsk)$/;"	f	file:
filp_close_entry_handler	swap/ks_features/file_ops.c	/^static int filp_close_entry_handler(struct kretprobe_instance *ri,$/;"	f	file:
filp_close_krp	swap/ks_features/file_ops.c	/^static struct kretprobe filp_close_krp = {$/;"	v	typeref:struct:kretprobe	file:
filp_close_ret_handler	swap/ks_features/file_ops.c	/^static int filp_close_ret_handler(struct kretprobe_instance *ri,$/;"	f	file:
filter	swap/us_manager/pf/pf_group.c	/^	struct proc_filter filter;$/;"	m	struct:pf_group	typeref:struct:pf_group::proc_filter	file:
filter	swap/writer/event_filter.h	/^	int (*filter)(struct task_struct *);    \/**< Filter function. *\/$/;"	m	struct:ev_filter
filter	trace/trace.h	/^	struct event_filter	*filter;$/;"	m	struct:event_subsystem	typeref:struct:event_subsystem::event_filter
filter	trace/trace_events.c	/^	struct file_operations		filter;$/;"	m	struct:ftrace_module_file_ops	typeref:struct:ftrace_module_file_ops::file_operations	file:
filter	trace/trace_events_filter.c	/^	char *filter;$/;"	m	struct:test_filter_data_t	file:
filter	trace/trace_events_filter.c	/^	struct event_filter	*filter;$/;"	m	struct:filter_list	typeref:struct:filter_list::event_filter	file:
filter	trace/trace_uprobe.c	/^	struct trace_uprobe_filter	filter;$/;"	m	struct:trace_uprobe	typeref:struct:trace_uprobe::trace_uprobe_filter	file:
filter_add_pred	trace/trace_events_filter.c	/^static int filter_add_pred(struct filter_parse_state *ps,$/;"	f	file:
filter_assign_type	trace/trace_events_filter.c	/^int filter_assign_type(const char *type)$/;"	f
filter_build_regex	trace/trace_events_filter.c	/^static void filter_build_regex(struct filter_pred *pred)$/;"	f	file:
filter_chain	events/uprobes.c	/^static bool filter_chain(struct uprobe *uprobe,$/;"	f	file:
filter_check_discard	trace/trace.h	/^filter_check_discard(struct ftrace_event_call *call, void *rec,$/;"	f
filter_current	swap/writer/event_filter.c	/^static struct ev_filter *filter_current = &filter_none;$/;"	v	typeref:struct:ev_filter	file:
filter_current_check_discard	trace/trace.c	/^EXPORT_SYMBOL_GPL(filter_current_check_discard);$/;"	v
filter_current_check_discard	trace/trace.c	/^int filter_current_check_discard(struct ring_buffer *buffer,$/;"	f
filter_disable	trace/trace_events_filter.c	/^static void filter_disable(struct ftrace_event_call *call)$/;"	f	file:
filter_free_subsystem_filters	trace/trace_events_filter.c	/^static void filter_free_subsystem_filters(struct event_subsystem *system)$/;"	f	file:
filter_free_subsystem_preds	trace/trace_events_filter.c	/^static void filter_free_subsystem_preds(struct event_subsystem *system)$/;"	f	file:
filter_func_t	trace/trace_uprobe.c	/^typedef bool (*filter_func_t)(struct uprobe_consumer *self,$/;"	t	file:
filter_list	swap/us_manager/sspt/sspt_proc.h	/^	struct list_head filter_list;	\/**< Filter list *\/$/;"	m	struct:sspt_proc	typeref:struct:sspt_proc::list_head
filter_list	trace/trace_events_filter.c	/^struct filter_list {$/;"	s	file:
filter_lock	swap/us_manager/sspt/sspt_proc.h	/^	rwlock_t filter_lock;$/;"	m	struct:sspt_proc
filter_match_preds	trace/trace_events_filter.c	/^EXPORT_SYMBOL_GPL(filter_match_preds);$/;"	v
filter_match_preds	trace/trace_events_filter.c	/^int filter_match_preds(struct event_filter *filter, void *rec)$/;"	f
filter_match_preds_cb	trace/trace_events_filter.c	/^static int filter_match_preds_cb(enum move_type move, struct filter_pred *pred,$/;"	f	file:
filter_match_preds_data	trace/trace_events_filter.c	/^struct filter_match_preds_data {$/;"	s	file:
filter_none	swap/writer/event_filter.c	/^static struct ev_filter filter_none = {$/;"	v	typeref:struct:ev_filter	file:
filter_op	trace/trace_events_filter.c	/^struct filter_op {$/;"	s	file:
filter_op_ids	trace/trace_events_filter.c	/^enum filter_op_ids$/;"	g	file:
filter_ops	trace/trace_events_filter.c	/^static struct filter_op filter_ops[] = {$/;"	v	typeref:struct:filter_op	file:
filter_opstack_clear	trace/trace_events_filter.c	/^static void filter_opstack_clear(struct filter_parse_state *ps)$/;"	f	file:
filter_opstack_empty	trace/trace_events_filter.c	/^static int filter_opstack_empty(struct filter_parse_state *ps)$/;"	f	file:
filter_opstack_pop	trace/trace_events_filter.c	/^static int filter_opstack_pop(struct filter_parse_state *ps)$/;"	f	file:
filter_opstack_push	trace/trace_events_filter.c	/^static int filter_opstack_push(struct filter_parse_state *ps, int op)$/;"	f	file:
filter_opstack_top	trace/trace_events_filter.c	/^static int filter_opstack_top(struct filter_parse_state *ps)$/;"	f	file:
filter_parse	trace/trace_events_filter.c	/^static int filter_parse(struct filter_parse_state *ps)$/;"	f	file:
filter_parse_regex	trace/trace_events_filter.c	/^enum regex_type filter_parse_regex(char *buff, int len, char **search, int *not)$/;"	f
filter_parse_state	trace/trace_events_filter.c	/^struct filter_parse_state {$/;"	s	file:
filter_pred	trace/trace.h	/^struct filter_pred {$/;"	s
filter_pred_fn_t	trace/trace.h	/^typedef int (*filter_pred_fn_t) (struct filter_pred *pred, void *event);$/;"	t
filter_pred_none	trace/trace_events_filter.c	/^static int filter_pred_none(struct filter_pred *pred, void *event)$/;"	f	file:
filter_pred_pchar	trace/trace_events_filter.c	/^static int filter_pred_pchar(struct filter_pred *pred, void *event)$/;"	f	file:
filter_pred_string	trace/trace_events_filter.c	/^static int filter_pred_string(struct filter_pred *pred, void *event)$/;"	f	file:
filter_pred_strloc	trace/trace_events_filter.c	/^static int filter_pred_strloc(struct filter_pred *pred, void *event)$/;"	f	file:
filter_pred_walkcb_t	trace/trace_events_filter.c	/^typedef int (*filter_pred_walkcb_t) (enum move_type move,$/;"	t	file:
filter_set_pred	trace/trace_events_filter.c	/^static int filter_set_pred(struct event_filter *filter,$/;"	f	file:
filter_string	trace/trace.h	/^	char			*filter_string;$/;"	m	struct:event_filter
filter_type	trace/trace.h	/^	int			filter_type;$/;"	m	struct:ftrace_event_field
filterkey	audit.h	/^	char		    *filterkey;	\/* key for rule that triggered record *\/$/;"	m	struct:audit_context
final_note	kexec.c	/^static void final_note(u32 *buf)$/;"	f	file:
find_active_uprobe	events/uprobes.c	/^static struct uprobe *find_active_uprobe(unsigned long bp_vaddr, int *is_swbp)$/;"	f	file:
find_busiest_group	sched/fair.c	/^find_busiest_group(struct lb_env *env, int *balance)$/;"	f	file:
find_busiest_queue	sched/fair.c	/^static struct rq *find_busiest_queue(struct lb_env *env,$/;"	f	file:
find_chunk	audit_tree.c	/^static struct audit_chunk *find_chunk(struct node *p)$/;"	f	file:
find_css_set	cgroup.c	/^static struct css_set *find_css_set($/;"	f	file:
find_event_file	trace/trace_events.c	/^find_event_file(struct trace_array *tr, const char *system,  const char *event)$/;"	f	file:
find_existing_css_set	cgroup.c	/^static struct css_set *find_existing_css_set($/;"	f	file:
find_fetch_type	trace/trace_probe.c	/^static const struct fetch_type *find_fetch_type(const char *type)$/;"	f	file:
find_ftrace_file_ops	trace/trace_events.c	/^find_ftrace_file_ops(struct ftrace_module_file_ops *file_ops, struct module *mod)$/;"	f	file:
find_ge_pid	pid.c	/^struct pid *find_ge_pid(int nr, struct pid_namespace *ns)$/;"	f
find_get_context	events/core.c	/^find_get_context(struct pmu *pmu, struct task_struct *task, int cpu)$/;"	f	file:
find_get_pid	pid.c	/^EXPORT_SYMBOL_GPL(find_get_pid);$/;"	v
find_get_pid	pid.c	/^struct pid *find_get_pid(pid_t nr)$/;"	f
find_idlest_cpu	sched/fair.c	/^find_idlest_cpu(struct sched_group *group, struct task_struct *p, int this_cpu)$/;"	f	file:
find_idlest_group	sched/fair.c	/^find_idlest_group(struct sched_domain *sd, struct task_struct *p,$/;"	f	file:
find_img_file	swap/us_manager/img/img_proc.c	/^static struct img_file *find_img_file(struct img_proc *proc,$/;"	f	file:
find_img_ip	swap/us_manager/img/img_file.c	/^static struct img_ip *find_img_ip(struct img_file *file, unsigned long addr)$/;"	f	file:
find_lively_task_by_vpid	events/core.c	/^find_lively_task_by_vpid(pid_t vpid)$/;"	f	file:
find_lock_lowest_rq	sched/rt.c	/^static struct rq *find_lock_lowest_rq(struct task_struct *task, struct rq *rq)$/;"	f	file:
find_lowest_rq	sched/rt.c	/^static int find_lowest_rq(struct task_struct *task)$/;"	f	file:
find_matching_se	sched/fair.c	/^find_matching_se(struct sched_entity **se, struct sched_entity **pse)$/;"	f	file:
find_module	module.c	/^EXPORT_SYMBOL_GPL(find_module);$/;"	v
find_module	module.c	/^struct module *find_module(const char *name)$/;"	f
find_module_all	module.c	/^static struct module *find_module_all(const char *name,$/;"	f	file:
find_module_sections	module.c	/^static void find_module_sections(struct module *mod, struct load_info *info)$/;"	f	file:
find_new_ilb	sched/fair.c	/^static inline int find_new_ilb(int call_cpu)$/;"	f	file:
find_next	trace/trace_printk.c	/^static const char **find_next(void *v, loff_t *pos)$/;"	f	file:
find_next_mod_format	trace/trace_printk.c	/^find_next_mod_format(int start_index, void *v, const char **fmt, loff_t *pos)$/;"	f	file:
find_next_offset	pid.c	61;"	d	file:
find_next_system_ram	resource.c	/^static int find_next_system_ram(struct resource *res, char *name)$/;"	f	file:
find_node_in_range	events/uprobes.c	/^find_node_in_range(struct inode *inode, loff_t min, loff_t max)$/;"	f	file:
find_numa_distance	sched/core.c	/^static bool find_numa_distance(int distance)$/;"	f	file:
find_pcpusec	module.c	/^static unsigned int find_pcpusec(struct load_info *info)$/;"	f	file:
find_pid_ns	pid.c	/^EXPORT_SYMBOL_GPL(find_pid_ns);$/;"	v
find_pid_ns	pid.c	/^struct pid *find_pid_ns(int nr, struct pid_namespace *ns)$/;"	f
find_pm_qos_object_by_minor	power/qos.c	/^static int find_pm_qos_object_by_minor(int minor)$/;"	f	file:
find_pmu_context	events/core.c	/^static void *find_pmu_context(int ctxn)$/;"	f	file:
find_probe_event	trace/trace_uprobe.c	/^static struct trace_uprobe *find_probe_event(const char *event, const char *group)$/;"	f	file:
find_process_by_pid	sched/core.c	/^static struct task_struct *find_process_by_pid(pid_t pid)$/;"	f	file:
find_regset	ptrace.c	/^find_regset(const struct user_regset_view *view, unsigned int type)$/;"	f	file:
find_resource	resource.c	/^static int find_resource(struct resource *root, struct resource *new,$/;"	f	file:
find_sec	module.c	/^static unsigned int find_sec(const struct load_info *info, const char *name)$/;"	f	file:
find_slot_idx	events/hw_breakpoint.c	/^static inline enum bp_type_idx find_slot_idx(struct perf_event *bp)$/;"	f	file:
find_swevent_head	events/core.c	/^find_swevent_head(struct swevent_htable *swhash, struct perf_event *event)$/;"	f	file:
find_swevent_head_rcu	events/core.c	/^find_swevent_head_rcu(struct swevent_htable *swhash, u64 type, u32 event_id)$/;"	f	file:
find_symbol	module.c	/^EXPORT_SYMBOL_GPL(find_symbol);$/;"	v
find_symbol	module.c	/^const struct kernel_symbol *find_symbol(const char *name,$/;"	f
find_symbol_arg	module.c	/^struct find_symbol_arg {$/;"	s	file:
find_symbol_in_section	module.c	/^static bool find_symbol_in_section(const struct symsearch *syms,$/;"	f	file:
find_syscall_meta	trace/trace_syscalls.c	/^find_syscall_meta(unsigned long syscall)$/;"	f	file:
find_task_by_pid_ns	pid.c	/^struct task_struct *find_task_by_pid_ns(pid_t nr, struct pid_namespace *ns)$/;"	f
find_task_by_vpid	pid.c	/^struct task_struct *find_task_by_vpid(pid_t vnr)$/;"	f
find_trace_probe	trace/trace_kprobe.c	/^static struct trace_probe *find_trace_probe(const char *event,$/;"	f	file:
find_trace_probe_file	trace/trace_kprobe.c	/^find_trace_probe_file(struct trace_probe *tp, struct trace_array *tr)$/;"	f	file:
find_uprobe	events/uprobes.c	/^static struct uprobe *find_uprobe(struct inode *inode, loff_t offset)$/;"	f	file:
find_usage_backwards	lockdep.c	/^find_usage_backwards(struct lock_list *root, enum lock_usage_bit bit,$/;"	f	file:
find_usage_forwards	lockdep.c	/^find_usage_forwards(struct lock_list *root, enum lock_usage_bit bit,$/;"	f	file:
find_user	user.c	/^struct user_struct *find_user(kuid_t uid)$/;"	f
find_vma_by_dentry	swap/preload/preload_pd.c	/^static struct vm_area_struct *find_vma_by_dentry(struct mm_struct *mm,$/;"	f	file:
find_vma_exe_by_dentry	swap/fbiprobe/fbiprobe.c	/^static struct vm_area_struct *find_vma_exe_by_dentry(struct mm_struct *mm,$/;"	f	file:
find_vma_exe_by_dentry	swap/parser/usm_msg.c	/^static struct vm_area_struct *find_vma_exe_by_dentry(struct mm_struct *mm,$/;"	f	file:
find_vpid	pid.c	/^EXPORT_SYMBOL_GPL(find_vpid);$/;"	v
find_vpid	pid.c	/^struct pid *find_vpid(int nr)$/;"	f
find_worker_executing_work	workqueue.c	/^static struct worker *find_worker_executing_work(struct worker_pool *pool,$/;"	f	file:
finish_arch_post_lock_switch	sched/sched.h	820;"	d
finish_arch_switch	sched/sched.h	817;"	d
finish_lock_switch	sched/sched.h	/^static inline void finish_lock_switch(struct rq *rq, struct task_struct *prev)$/;"	f
finish_wait	wait.c	/^EXPORT_SYMBOL(finish_wait);$/;"	v
finish_wait	wait.c	/^void finish_wait(wait_queue_head_t *q, wait_queue_t *wait)$/;"	f
finished_booting	time/clocksource.c	/^static int finished_booting;$/;"	v	file:
finished_loading	module.c	/^static bool finished_loading(const char *name)$/;"	f	file:
fire_sched_in_preempt_notifiers	sched/core.c	/^static void fire_sched_in_preempt_notifiers(struct task_struct *curr)$/;"	f	file:
fire_sched_out_preempt_notifiers	sched/core.c	/^fire_sched_out_preempt_notifiers(struct task_struct *curr,$/;"	f	file:
fire_user_return_notifiers	user-return-notifier.c	/^void fire_user_return_notifiers(void)$/;"	f
first_available	swap/kprobe/swap_slots.c	/^	unsigned long first_available;$/;"	m	struct:chunk	file:
first_filter	trace/trace_events_filter.c	/^	int first_filter;$/;"	m	struct:function_filter_data	file:
first_flusher	workqueue.c	/^	struct wq_flusher	*first_flusher;	\/* WQ: first flusher *\/$/;"	m	struct:workqueue_struct	typeref:struct:workqueue_struct::wq_flusher	file:
first_install	swap/us_manager/pf/pf_group.c	/^static void first_install(struct task_struct *task, struct sspt_proc *proc)$/;"	f	file:
first_install	swap/us_manager/sspt/sspt_proc.h	/^	unsigned first_install:1;	\/**< Install flag *\/$/;"	m	struct:sspt_proc
first_notrace	trace/trace_events_filter.c	/^	int first_notrace;$/;"	m	struct:function_filter_data	file:
first_sector	power/swap.c	/^	sector_t first_sector;$/;"	m	struct:swap_map_handle	file:
first_trees	audit.h	/^	struct audit_tree_refs *trees, *first_trees;$/;"	m	struct:audit_context	typeref:struct:audit_context::
first_worker	workqueue.c	/^static struct worker *first_worker(struct worker_pool *pool)$/;"	f	file:
fix_small_capacity	sched/fair.c	/^fix_small_capacity(struct sched_domain *sd, struct sched_group *group)$/;"	f	file:
fix_small_imbalance	sched/fair.c	/^void fix_small_imbalance(struct lb_env *env, struct sd_lb_stats *sds)$/;"	f	file:
fixed_alloc	swap/kprobe/swap_slots.c	/^struct fixed_alloc {$/;"	s	file:
fixed_power_int	sched/core.c	/^fixed_power_int(unsigned long x, unsigned int frac_bits, unsigned int n)$/;"	f	file:
fixup_owner	futex.c	/^static int fixup_owner(u32 __user *uaddr, struct futex_q *q, int locked)$/;"	f	file:
fixup_pi_state_owner	futex.c	/^static int fixup_pi_state_owner(u32 __user *uaddr, struct futex_q *q,$/;"	f	file:
fixup_rt_mutex_waiters	rtmutex.c	/^static void fixup_rt_mutex_waiters(struct rt_mutex *lock)$/;"	f	file:
flag_changed	trace/trace.h	/^	int			(*flag_changed)(struct tracer *tracer,$/;"	m	struct:tracer
flag_wake_up	swap/driver/device_driver.c	/^static atomic_t flag_wake_up = ATOMIC_INIT(0);$/;"	v	file:
flags	audit.h	/^			int			flags;$/;"	m	struct:audit_context::__anon15::__anon23
flags	cgroup.c	/^	unsigned long flags;$/;"	m	struct:cgroup_sb_opts	file:
flags	cpuset.c	/^	unsigned long flags;		\/* "unsigned long" so bitops work *\/$/;"	m	struct:cpuset	file:
flags	events/uprobes.c	/^	unsigned long		flags;$/;"	m	struct:uprobe	file:
flags	kthread.c	/^	unsigned long flags;$/;"	m	struct:kthread	file:
flags	module.c	/^	int flags;$/;"	m	struct:stopref	file:
flags	power/swap.c	/^	unsigned int flags;	\/* Flags to pass to the "boot" kernel *\/$/;"	m	struct:swsusp_header	file:
flags	printk.c	/^	enum log_flags flags;		\/* prefix, newline flags *\/$/;"	m	struct:cont	typeref:enum:cont::log_flags	file:
flags	printk.c	/^	u8 flags:5;		\/* internal record flags *\/$/;"	m	struct:log	file:
flags	sched/core.c	/^	int		    flags;$/;"	m	struct:sched_domain_topology_level	file:
flags	sched/fair.c	/^	u32 flags;$/;"	m	struct:cpufreq_extents	file:
flags	sched/fair.c	/^	unsigned int		flags;$/;"	m	struct:lb_env	file:
flags	swap/buffer/data_types.h	/^	unsigned long flags;$/;"	m	struct:sync_t
flags	swap/preload/preload_probe.h	/^	unsigned char flags;                \/* Preload probe flags. *\/$/;"	m	struct:preload_info
flags	swap/preload/preload_threads.c	/^	unsigned long flags;$/;"	m	struct:preload_td	file:
flags	swap/uprobe/arch/x86/swap-asm/swap_uprobes.c	/^	unsigned long flags;            \/**< Flags *\/$/;"	m	struct:uprobe_ctlblk	file:
flags	trace/ftrace.c	/^	unsigned			flags;$/;"	m	struct:ftrace_iterator	file:
flags	trace/ftrace.c	/^	unsigned long		flags;$/;"	m	struct:ftrace_func_probe	file:
flags	trace/ring_buffer.c	/^	unsigned			flags;$/;"	m	struct:ring_buffer	file:
flags	trace/trace.c	/^	struct tracer_flags		*flags;$/;"	m	struct:trace_option_dentry	typeref:struct:trace_option_dentry::tracer_flags	file:
flags	trace/trace.h	/^	struct tracer_flags	*flags;$/;"	m	struct:tracer	typeref:struct:tracer::tracer_flags
flags	trace/trace.h	/^	unsigned int		flags;$/;"	m	struct:trace_array
flags	trace/trace_kprobe.c	/^	unsigned int		flags;	\/* For TP_FLAG_* *\/$/;"	m	struct:trace_probe	file:
flags	trace/trace_uprobe.c	/^	unsigned int			flags;	\/* For TP_FLAG_* *\/$/;"	m	struct:trace_uprobe	file:
flags	workqueue.c	/^	unsigned int		flags;		\/* X: flags *\/$/;"	m	struct:worker_pool	file:
flags	workqueue_internal.h	/^	unsigned int		flags;		\/* X: flags *\/$/;"	m	struct:worker
flavors	rcutree.h	/^	struct list_head flavors;		\/* List of RCU flavors. *\/$/;"	m	struct:rcu_state	typeref:struct:rcu_state::list_head
flexible	events/hw_breakpoint.c	/^	unsigned int flexible;$/;"	m	struct:bp_busy_slots	file:
flock_private	swap/ks_features/file_ops.c	/^struct flock_private {$/;"	s	file:
flush_color	workqueue.c	/^	int			flush_color;	\/* L: flushing color *\/$/;"	m	struct:pool_workqueue	file:
flush_color	workqueue.c	/^	int			flush_color;	\/* WQ: current flush color *\/$/;"	m	struct:workqueue_struct	file:
flush_color	workqueue.c	/^	int			flush_color;	\/* WQ: flush color waiting for *\/$/;"	m	struct:wq_flusher	file:
flush_delayed_work	workqueue.c	/^EXPORT_SYMBOL(flush_delayed_work);$/;"	v
flush_delayed_work	workqueue.c	/^bool flush_delayed_work(struct delayed_work *dwork)$/;"	f
flush_hold_queue	audit.c	/^static void flush_hold_queue(void)$/;"	f	file:
flush_insns	swap/uprobe/arch/arm/swap-asm/swap_uprobes.c	59;"	d	file:
flush_itimer_signals	signal.c	/^void flush_itimer_signals(void)$/;"	f
flush_kthread_work	kthread.c	/^EXPORT_SYMBOL_GPL(flush_kthread_work);$/;"	v
flush_kthread_work	kthread.c	/^void flush_kthread_work(struct kthread_work *work)$/;"	f
flush_kthread_worker	kthread.c	/^EXPORT_SYMBOL_GPL(flush_kthread_worker);$/;"	v
flush_kthread_worker	kthread.c	/^void flush_kthread_worker(struct kthread_worker *worker)$/;"	f
flush_module_icache	module.c	/^static void flush_module_icache(const struct module *mod)$/;"	f	file:
flush_scheduled_work	workqueue.c	/^EXPORT_SYMBOL(flush_scheduled_work);$/;"	v
flush_scheduled_work	workqueue.c	/^void flush_scheduled_work(void)$/;"	f
flush_signal_handlers	signal.c	/^flush_signal_handlers(struct task_struct *t, int force_default)$/;"	f
flush_signals	signal.c	/^EXPORT_SYMBOL(flush_signals);$/;"	v
flush_signals	signal.c	/^void flush_signals(struct task_struct *t)$/;"	f
flush_sigqueue	signal.c	/^void flush_sigqueue(struct sigpending *queue)$/;"	f
flush_swap_writer	power/swap.c	/^static int flush_swap_writer(struct swap_map_handle *handle)$/;"	f	file:
flush_work	workqueue.c	/^EXPORT_SYMBOL_GPL(flush_work);$/;"	v
flush_work	workqueue.c	/^bool flush_work(struct work_struct *work)$/;"	f
flush_workqueue	workqueue.c	/^EXPORT_SYMBOL_GPL(flush_workqueue);$/;"	v
flush_workqueue	workqueue.c	/^void flush_workqueue(struct workqueue_struct *wq)$/;"	f
flush_workqueue_prep_pwqs	workqueue.c	/^static bool flush_workqueue_prep_pwqs(struct workqueue_struct *wq,$/;"	f	file:
flushed	printk.c	/^	bool flushed:1;			\/* buffer sealed and committed *\/$/;"	m	struct:cont	file:
flushed	printk.c	/^	bool flushed:1;$/;"	m	struct:cont	file:
flusher_overflow	workqueue.c	/^	struct list_head	flusher_overflow; \/* WQ: flush overflow list *\/$/;"	m	struct:workqueue_struct	typeref:struct:workqueue_struct::list_head	file:
flusher_queue	workqueue.c	/^	struct list_head	flusher_queue;	\/* WQ: flush waiters *\/$/;"	m	struct:workqueue_struct	typeref:struct:workqueue_struct::list_head	file:
fmeter	cpuset.c	/^	struct fmeter fmeter;		\/* memory_pressure filter *\/$/;"	m	struct:cpuset	typeref:struct:cpuset::fmeter	file:
fmeter	cpuset.c	/^struct fmeter {$/;"	s	file:
fmeter_getrate	cpuset.c	/^static int fmeter_getrate(struct fmeter *fmp)$/;"	f	file:
fmeter_init	cpuset.c	/^static void fmeter_init(struct fmeter *fmp)$/;"	f	file:
fmeter_markevent	cpuset.c	/^static void fmeter_markevent(struct fmeter *fmp)$/;"	f	file:
fmeter_update	cpuset.c	/^static void fmeter_update(struct fmeter *fmp)$/;"	f	file:
fmt	panic.c	/^	const char *fmt;$/;"	m	struct:slowpath_args	file:
fmt	trace/trace_printk.c	/^	const char *fmt;$/;"	m	struct:trace_bprintk_fmt	file:
fmt	trace/trace_probe.h	/^	const char		*fmt;		\/* Fromat string *\/$/;"	m	struct:fetch_type
fmttype	trace/trace_probe.h	/^	const char		*fmttype;	\/* Name in format file *\/$/;"	m	struct:fetch_type
fn	stop_machine.c	/^	int			(*fn)(void *);$/;"	m	struct:stop_machine_data	file:
fn	trace/trace.h	/^	filter_pred_fn_t 	fn;$/;"	m	struct:filter_pred
fn	trace/trace_probe.h	/^	fetch_func_t		fn;$/;"	m	struct:fetch_param
fn	workqueue.c	/^	long (*fn)(void *);$/;"	m	struct:work_for_cpu	file:
fold_pred	trace/trace_events_filter.c	/^static int fold_pred(struct filter_pred *preds, struct filter_pred *root)$/;"	f	file:
fold_pred_cb	trace/trace_events_filter.c	/^static int fold_pred_cb(enum move_type move, struct filter_pred *pred,$/;"	f	file:
fold_pred_data	trace/trace_events_filter.c	/^struct fold_pred_data {$/;"	s	file:
fold_pred_tree	trace/trace_events_filter.c	/^static int fold_pred_tree(struct event_filter *filter,$/;"	f	file:
fold_pred_tree_cb	trace/trace_events_filter.c	/^static int fold_pred_tree_cb(enum move_type move, struct filter_pred *pred,$/;"	f	file:
foo	bounds.c	/^void foo(void)$/;"	f
foo	bounds.s	/^foo:$/;"	l
fops_app_info	swap/webprobe/webprobe_debugfs.c	/^static const struct file_operations fops_app_info = {$/;"	v	typeref:struct:file_operations	file:
fops_available_filters	swap/writer/debugfs_writer.c	/^static const struct file_operations fops_available_filters = {$/;"	v	typeref:struct:file_operations	file:
fops_cmd	swap/nsp/nsp_debugfs.c	/^static const struct file_operations fops_cmd = {$/;"	v	typeref:struct:file_operations	file:
fops_cmd	swap/wsp/wsp_debugfs.c	/^static const struct file_operations fops_cmd = {$/;"	v	typeref:struct:file_operations	file:
fops_cmp_func	swap/ks_features/file_ops.c	/^static int fops_cmp_func(void *key_a, void *key_b)$/;"	f	file:
fops_dcount	swap/ks_features/file_ops.c	/^static inline unsigned fops_dcount(const struct dentry *dentry)$/;"	f	file:
fops_dinsert	swap/ks_features/file_ops.c	/^static int fops_dinsert(struct dentry *dentry)$/;"	f	file:
fops_dremove	swap/ks_features/file_ops.c	/^static struct dentry *fops_dremove(struct dentry *dentry)$/;"	f	file:
fops_dsearch	swap/ks_features/file_ops.c	/^static struct dentry *fops_dsearch(struct dentry *dentry)$/;"	f	file:
fops_enable	swap/master/swap_debugfs.c	/^static const struct file_operations fops_enable = {$/;"	v	typeref:struct:file_operations	file:
fops_enabled	swap/ks_features/file_ops.c	/^static int fops_enabled;$/;"	v	file:
fops_enabled	swap/nsp/nsp_debugfs.c	/^static const struct file_operations fops_enabled = {$/;"	v	typeref:struct:file_operations	file:
fops_enabled	swap/webprobe/webprobe_debugfs.c	/^static const struct file_operations fops_enabled = {$/;"	v	typeref:struct:file_operations	file:
fops_enabled	swap/wsp/wsp_debugfs.c	/^static const struct file_operations fops_enabled = {$/;"	v	typeref:struct:file_operations	file:
fops_fcheck	swap/ks_features/file_ops.c	/^static int fops_fcheck(struct task_struct *task, struct file *file)$/;"	f	file:
fops_filter	swap/writer/debugfs_writer.c	/^static const struct file_operations fops_filter = {$/;"	v	typeref:struct:file_operations	file:
fops_fpath	swap/ks_features/file_ops.c	/^static char *fops_fpath(struct file *file, char *buf, int buflen)$/;"	f	file:
fops_karg	swap/ks_features/file_ops.c	198;"	d	file:
fops_key_func	swap/ks_features/file_ops.c	/^static void *fops_key_func(void *data)$/;"	f	file:
fops_kp	kprobes.c	/^static const struct file_operations fops_kp = {$/;"	v	typeref:struct:file_operations	file:
fops_path_buf	swap/ks_features/file_ops.c	/^static inline char *fops_path_buf(void)$/;"	f	file:
fops_raw	swap/writer/debugfs_writer.c	/^static const struct file_operations fops_raw = {$/;"	v	typeref:struct:file_operations	file:
fops_register_probes	swap/ks_features/file_ops.c	/^static int fops_register_probes(struct file_probe *fprobes, int cnt)$/;"	f	file:
fops_ret	swap/ks_features/file_ops.c	202;"	d	file:
fops_sarg	swap/ks_features/file_ops.c	200;"	d	file:
fops_tasks	swap/us_manager/debugfs_us_manager.c	/^static const struct file_operations fops_tasks = {$/;"	v	typeref:struct:file_operations	file:
fops_unregister_probes	swap/ks_features/file_ops.c	/^static void fops_unregister_probes(struct file_probe *fprobes, int cnt)$/;"	f	file:
for_each_active_root	cgroup.c	280;"	d	file:
for_each_alarm	time/time_history.c	21;"	d	file:
for_each_buffer_cpu	trace/ring_buffer.c	327;"	d	file:
for_each_class	sched/sched.h	1025;"	d
for_each_cpu_worker_pool	workqueue.c	363;"	d	file:
for_each_domain	sched/sched.h	560;"	d
for_each_entry	swap/ks_features/ks_map.c	/^int for_each_entry(struct map *map, act_func_t func, void *arg)$/;"	f
for_each_entry_reverse	swap/ks_features/ks_map.c	/^int for_each_entry_reverse(struct map *map, act_func_t func, void *arg)$/;"	f
for_each_event	trace/trace_events.c	1775;"	d	file:
for_each_kdbcmd	debug/kdb/kdb_main.c	84;"	d	file:
for_each_kimage_entry	kexec.c	621;"	d	file:
for_each_leaf_cfs_rq	sched/fair.c	313;"	d	file:
for_each_leaf_cfs_rq	sched/fair.c	418;"	d	file:
for_each_leaf_rt_rq	sched/rt.c	413;"	d	file:
for_each_leaf_rt_rq	sched/rt.c	520;"	d	file:
for_each_lower_domain	sched/sched.h	564;"	d
for_each_pool	workqueue.c	380;"	d	file:
for_each_pool_worker	workqueue.c	396;"	d	file:
for_each_pwq	workqueue.c	413;"	d	file:
for_each_rcu_flavor	rcutree.h	456;"	d
for_each_rt_rq	sched/rt.c	397;"	d	file:
for_each_rt_rq	sched/rt.c	509;"	d	file:
for_each_sched_entity	sched/fair.c	257;"	d	file:
for_each_sched_entity	sched/fair.c	388;"	d	file:
for_each_sched_rt_entity	sched/rt.c	416;"	d	file:
for_each_sched_rt_entity	sched/rt.c	523;"	d	file:
for_each_subsys	cgroup.c	276;"	d	file:
for_each_task_context_nr	events/core.c	2212;"	d	file:
for_each_tracing_cpu	trace/trace.h	603;"	d
forbidden_pages_map	power/snapshot.c	/^static struct memory_bitmap *forbidden_pages_map;$/;"	v	typeref:struct:memory_bitmap	file:
force_irqthreads	irq/manage.c	/^__read_mostly bool force_irqthreads;$/;"	v
force_qs_rnp	rcutree.c	/^static void force_qs_rnp(struct rcu_state *rsp, int (*f)(struct rcu_data *))$/;"	f	file:
force_quiescent_state	rcutree.c	/^static void force_quiescent_state(struct rcu_state *rsp)$/;"	f	file:
force_sig	signal.c	/^EXPORT_SYMBOL(force_sig);$/;"	v
force_sig	signal.c	/^force_sig(int sig, struct task_struct *p)$/;"	f
force_sig_info	signal.c	/^force_sig_info(int sig, struct siginfo *info, struct task_struct *t)$/;"	f
force_sigsegv	signal.c	/^force_sigsegv(int sig, struct task_struct *p)$/;"	f
force_unoptimize_kprobe	kprobes.c	/^static __kprobes void force_unoptimize_kprobe(struct optimized_kprobe *op)$/;"	f	file:
forced	module.c	/^	int *forced;$/;"	m	struct:stopref	file:
forget_original_parent	exit.c	/^static void forget_original_parent(struct task_struct *father)$/;"	f	file:
fork_idle	fork.c	/^struct task_struct * __cpuinit fork_idle(int cpu)$/;"	f
fork_init	fork.c	/^void __init fork_init(unsigned long mempages)$/;"	f
format	trace/trace_events.c	/^	struct file_operations		format;$/;"	m	struct:ftrace_module_file_ops	typeref:struct:ftrace_module_file_ops::file_operations	file:
format_mod_start	trace/trace_printk.c	/^static inline void format_mod_start(void) { }$/;"	f	file:
format_mod_start	trace/trace_printk.c	/^static void format_mod_start(void)$/;"	f	file:
format_mod_stop	trace/trace_printk.c	/^static inline void format_mod_stop(void) { }$/;"	f	file:
format_mod_stop	trace/trace_printk.c	/^static void format_mod_stop(void)$/;"	f	file:
fp	time/posix-clock.c	/^	struct file *fp;$/;"	m	struct:posix_clock_desc	typeref:struct:posix_clock_desc::file	file:
fpid_next	trace/ftrace.c	/^static void *fpid_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
fpid_show	trace/ftrace.c	/^static int fpid_show(struct seq_file *m, void *v)$/;"	f	file:
fpid_start	trace/ftrace.c	/^static void *fpid_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
fpid_stop	trace/ftrace.c	/^static void fpid_stop(struct seq_file *m, void *p)$/;"	f	file:
fprobes	swap/ks_features/file_ops.c	/^static struct file_probe fprobes[] = {$/;"	v	typeref:struct:file_probe	file:
fqs	rcutorture.c	/^	void (*fqs)(void);$/;"	m	struct:rcu_torture_ops	file:
fqs_duration	rcutorture.c	/^static int fqs_duration;	\/* Duration of bursts (us), 0 to disable. *\/$/;"	v	file:
fqs_holdoff	rcutorture.c	/^static int fqs_holdoff;		\/* Hold time within burst (us). *\/$/;"	v	file:
fqs_stutter	rcutorture.c	/^static int fqs_stutter = 3;	\/* Wait time between bursts (s). *\/$/;"	v	file:
fqs_task	rcutorture.c	/^static struct task_struct *fqs_task;$/;"	v	typeref:struct:task_struct	file:
fr_apps	swap/energy/debugfs_energy.c	/^static u64 fr_apps(void)$/;"	f	file:
fr_system	swap/energy/debugfs_energy.c	/^static u64 fr_system(void)$/;"	f	file:
free	swap/kprobe/swap_slots.h	/^	void (*free)(struct slot_manager *sm, void *ptr);$/;"	m	struct:slot_manager
free	swap/us_manager/sspt/sspt_feature.c	/^	void (*free)(void *data);$/;"	m	struct:sspt_feature_img	file:
free_aggr_kprobe	kprobes.c	/^static __kprobes void free_aggr_kprobe(struct kprobe *p)$/;"	f	file:
free_all_swap_pages	power/swap.c	/^void free_all_swap_pages(int swap)$/;"	f
free_basic_memory_bitmaps	power/snapshot.c	/^void free_basic_memory_bitmaps(void)$/;"	f
free_bitfield_fetch_param	trace/trace_probe.c	/^free_bitfield_fetch_param(struct bitfield_fetch_param *data)$/;"	f	file:
free_buffer_page	trace/ring_buffer.c	/^static void free_buffer_page(struct buffer_page *bpage)$/;"	f	file:
free_by_comm	swap/us_manager/pf/proc_filters.c	/^static inline void free_by_comm(struct proc_filter *self)$/;"	f	file:
free_by_dentry	swap/us_manager/pf/proc_filters.c	/^static inline void free_by_dentry(struct proc_filter *self)$/;"	f	file:
free_by_tgid	swap/us_manager/pf/proc_filters.c	/^static inline void free_by_tgid(struct proc_filter *self)$/;"	f	file:
free_cg_links	cgroup.c	/^static void free_cg_links(struct list_head *tmp)$/;"	f	file:
free_chunk	audit_tree.c	/^static void free_chunk(struct audit_chunk *chunk)$/;"	f	file:
free_copy	module.c	/^static void free_copy(struct load_info *info)$/;"	f	file:
free_css_id	cgroup.c	/^EXPORT_SYMBOL_GPL(free_css_id);$/;"	v
free_css_id	cgroup.c	/^void free_css_id(struct cgroup_subsys *ss, struct cgroup_subsys_state *css)$/;"	f
free_deref_fetch_param	trace/trace_probe.c	/^static __kprobes void free_deref_fetch_param(struct deref_fetch_param *data)$/;"	f	file:
free_desc	irq/irqdesc.c	/^static void free_desc(unsigned int irq)$/;"	f	file:
free_dma	dma.c	/^EXPORT_SYMBOL(free_dma);$/;"	v
free_dma	dma.c	/^void free_dma(unsigned int dmanr)$/;"	f
free_entry	swap/ks_features/ks_map.c	/^static void *free_entry(struct map *map, struct entry *entry)$/;"	f	file:
free_event	events/core.c	/^static void free_event(struct perf_event *event)$/;"	f	file:
free_event_rcu	events/core.c	/^static void free_event_rcu(struct rcu_head *head)$/;"	f	file:
free_fair_sched_group	sched/fair.c	/^void free_fair_sched_group(struct task_group *tg) { }$/;"	f
free_fair_sched_group	sched/fair.c	/^void free_fair_sched_group(struct task_group *tg)$/;"	f
free_fixed_alloc	swap/kprobe/swap_slots.c	/^static void free_fixed_alloc(struct slot_manager *sm, struct fixed_alloc *fa)$/;"	f	file:
free_ftrace_hash	trace/ftrace.c	/^static void free_ftrace_hash(struct ftrace_hash *hash)$/;"	f	file:
free_ftrace_hash_rcu	trace/ftrace.c	/^static void free_ftrace_hash_rcu(struct ftrace_hash *hash)$/;"	f	file:
free_hash_entry	trace/ftrace.c	/^free_hash_entry(struct ftrace_hash *hash,$/;"	f	file:
free_highmem_data	power/snapshot.c	/^static inline void free_highmem_data(void) {}$/;"	f	file:
free_highmem_data	power/snapshot.c	/^static inline void free_highmem_data(void)$/;"	f	file:
free_image_page	power/snapshot.c	/^static inline void free_image_page(void *addr, int clear_nosave_free)$/;"	f	file:
free_img_file	swap/us_manager/img/img_file.c	/^void free_img_file(struct img_file *file)$/;"	f
free_img_ip	swap/us_manager/img/img_ip.c	/^void free_img_ip(struct img_ip *ip)$/;"	f
free_img_proc	swap/us_manager/img/img_proc.c	/^void free_img_proc(struct img_proc *proc)$/;"	f
free_insn_slot	kprobes.c	/^void __kprobes free_insn_slot(kprobe_opcode_t * slot, int dirty)$/;"	f
free_instances	swap/kprobe/swap_kprobes.h	/^	struct hlist_head free_instances;$/;"	m	struct:kretprobe	typeref:struct:kretprobe::hlist_head
free_instances	swap/uprobe/swap_uprobes.h	/^	struct hlist_head free_instances;   \/**< Free instances list *\/$/;"	m	struct:uretprobe	typeref:struct:uretprobe::hlist_head
free_ip	swap/us_manager/sspt/ip.c	/^void free_ip(struct us_ip *ip)$/;"	f
free_irq	irq/manage.c	/^EXPORT_SYMBOL(free_irq);$/;"	v
free_irq	irq/manage.c	/^void free_irq(unsigned int irq, void *dev_id)$/;"	f
free_list	trace/ftrace.c	/^	struct list_head	free_list;$/;"	m	struct:ftrace_func_probe	typeref:struct:ftrace_func_probe::list_head	file:
free_list_of_pages	power/snapshot.c	/^free_list_of_pages(struct linked_page *list, int clear_page_nosave)$/;"	f	file:
free_map_info	events/uprobes.c	/^static inline struct map_info *free_map_info(struct map_info *info)$/;"	f	file:
free_masks	irq/irqdesc.c	/^static inline void free_masks(struct irq_desc *desc) { }$/;"	f	file:
free_masks	irq/irqdesc.c	/^static void free_masks(struct irq_desc *desc)$/;"	f	file:
free_mem_extents	power/snapshot.c	/^static void free_mem_extents(struct list_head *list)$/;"	f	file:
free_mm	fork.c	532;"	d	file:
free_modinfo	module.c	/^static void free_modinfo(struct module *mod)$/;"	f	file:
free_modprobe_argv	kmod.c	/^static void free_modprobe_argv(struct subprocess_info *info)$/;"	f	file:
free_module	module.c	/^static void free_module(struct module *mod)$/;"	f	file:
free_module_param_attrs	params.c	/^static void free_module_param_attrs(struct module_kobject *mk)$/;"	f	file:
free_notes_attrs	module.c	/^static void free_notes_attrs(struct module_notes_attrs *notes_attrs,$/;"	f	file:
free_nsproxy	nsproxy.c	/^void free_nsproxy(struct nsproxy *ns)$/;"	f
free_optinsn_slot	kprobes.c	/^void __kprobes free_optinsn_slot(kprobe_opcode_t * slot, int dirty)$/;"	f
free_pages_map	power/snapshot.c	/^static struct memory_bitmap *free_pages_map;$/;"	v	typeref:struct:memory_bitmap	file:
free_percpu_irq	irq/manage.c	/^void free_percpu_irq(unsigned int irq, void __percpu *dev_id)$/;"	f
free_pf	swap/us_manager/pf/proc_filters.c	/^void free_pf(struct proc_filter *filter)$/;"	f
free_pi_state	futex.c	/^static void free_pi_state(struct futex_pi_state *pi_state)$/;"	f	file:
free_pid	pid.c	/^void free_pid(struct pid *pid)$/;"	f
free_pid_ns	pid_namespace.c	/^static void free_pid_ns(struct kref *kref)$/;"	f	file:
free_pidmap	pid.c	/^static void free_pidmap(struct upid *upid)$/;"	f	file:
free_pl_struct	swap/us_manager/pf/pf_group.c	/^static void free_pl_struct(struct pl_struct *pls)$/;"	f	file:
free_pmu_context	events/core.c	/^static void free_pmu_context(struct pmu *pmu)$/;"	f	file:
free_resource	resource.c	/^static void free_resource(struct resource *res)$/;"	f	file:
free_rootdomain	sched/core.c	/^static void free_rootdomain(struct rcu_head *rcu)$/;"	f	file:
free_rp_inst	kprobes.c	/^static inline void free_rp_inst(struct kretprobe *rp)$/;"	f	file:
free_rp_inst	swap/kprobe/swap_kprobes.c	/^static void free_rp_inst(struct kretprobe *rp)$/;"	f	file:
free_rt_sched_group	sched/rt.c	/^void free_rt_sched_group(struct task_group *tg) { }$/;"	f
free_rt_sched_group	sched/rt.c	/^void free_rt_sched_group(struct task_group *tg)$/;"	f
free_sched_domain	sched/core.c	/^static void free_sched_domain(struct rcu_head *rcu)$/;"	f	file:
free_sched_domains	sched/core.c	/^void free_sched_domains(cpumask_var_t doms[], unsigned int ndoms)$/;"	f
free_sched_group	sched/core.c	/^static void free_sched_group(struct task_group *tg)$/;"	f	file:
free_sched_group_rcu	sched/core.c	/^static void free_sched_group_rcu(struct rcu_head *rhp)$/;"	f	file:
free_sched_groups	sched/core.c	/^static void free_sched_groups(struct sched_group *sg, int free_sgp)$/;"	f	file:
free_sect_attrs	module.c	/^static void free_sect_attrs(struct module_sect_attrs *sect_attrs)$/;"	f	file:
free_signal_struct	fork.c	/^static inline void free_signal_struct(struct signal_struct *sig)$/;"	f	file:
free_sm_us	swap/us_manager/us_slot_manager.c	/^void free_sm_us(struct slot_manager *sm)$/;"	f
free_smi	swap/ksyms/no_ksyms.c	/^static void free_smi(struct sys_map_item *smi)$/;"	f	file:
free_snapshot	trace/trace.c	/^void free_snapshot(struct trace_array *tr)$/;"	f
free_symbol_cache	trace/trace_probe.c	/^static void free_symbol_cache(struct symbol_cache *sc)$/;"	f	file:
free_sys_map	swap/ksyms/no_ksyms.c	/^static void free_sys_map(void)$/;"	f	file:
free_syscall_print_fmt	trace/trace_syscalls.c	/^static void free_syscall_print_fmt(struct ftrace_event_call *call)$/;"	f	file:
free_task	fork.c	/^EXPORT_SYMBOL(free_task);$/;"	v
free_task	fork.c	/^void free_task(struct task_struct *tsk)$/;"	f
free_task_struct	fork.c	/^static inline void free_task_struct(struct task_struct *tsk)$/;"	f	file:
free_thread_info	fork.c	/^static inline void free_thread_info(struct thread_info *ti)$/;"	f	file:
free_thread_info	fork.c	/^static void free_thread_info(struct thread_info *ti)$/;"	f	file:
free_trace_probe	trace/trace_kprobe.c	/^static void free_trace_probe(struct trace_probe *tp)$/;"	f	file:
free_trace_uprobe	trace/trace_uprobe.c	/^static void free_trace_uprobe(struct trace_uprobe *tu)$/;"	f	file:
free_tree_refs	auditsc.c	/^static void free_tree_refs(struct audit_context *ctx)$/;"	f	file:
free_trial_cpuset	cpuset.c	/^static void free_trial_cpuset(struct cpuset *trial)$/;"	f	file:
free_uid	user.c	/^void free_uid(struct user_struct *up)$/;"	f
free_unbound_pwq	workqueue.c	/^static void free_unbound_pwq(struct pool_workqueue *pwq)$/;"	f	file:
free_unnecessary_pages	power/snapshot.c	/^static void free_unnecessary_pages(void)$/;"	f	file:
free_urp_inst	swap/uprobe/swap_uprobes.c	/^static void free_urp_inst(struct uretprobe *rp)$/;"	f	file:
free_user_ns	user_namespace.c	/^EXPORT_SYMBOL(free_user_ns);$/;"	v
free_user_ns	user_namespace.c	/^void free_user_ns(struct user_namespace *ns)$/;"	f
free_uts_ns	utsname.c	/^void free_uts_ns(struct kref *kref)$/;"	f
free_workqueue_attrs	workqueue.c	/^void free_workqueue_attrs(struct workqueue_attrs *attrs)$/;"	f
freehigh	sys.c	/^	u32 freehigh;$/;"	m	struct:compat_sysinfo	file:
freeram	sys.c	/^	u32 freeram;$/;"	m	struct:compat_sysinfo	file:
freeswap	sys.c	/^	u32 freeswap;$/;"	m	struct:compat_sysinfo	file:
freeze_begin	power/suspend.c	/^static void freeze_begin(void)$/;"	f	file:
freeze_cgroup	cgroup_freezer.c	/^static void freeze_cgroup(struct freezer *freezer)$/;"	f	file:
freeze_enter	power/suspend.c	/^static void freeze_enter(void)$/;"	f	file:
freeze_kernel_threads	power/process.c	/^int freeze_kernel_threads(void)$/;"	f
freeze_processes	power/process.c	/^int freeze_processes(void)$/;"	f
freeze_task	freezer.c	/^bool freeze_task(struct task_struct *p)$/;"	f
freeze_timeout_msecs	power/process.c	/^unsigned int __read_mostly freeze_timeout_msecs = 20 * MSEC_PER_SEC;$/;"	v
freeze_wake	power/suspend.c	/^EXPORT_SYMBOL_GPL(freeze_wake);$/;"	v
freeze_wake	power/suspend.c	/^void freeze_wake(void)$/;"	f
freeze_workqueues_begin	workqueue.c	/^void freeze_workqueues_begin(void)$/;"	f
freeze_workqueues_busy	workqueue.c	/^bool freeze_workqueues_busy(void)$/;"	f
freezer	cgroup_freezer.c	/^struct freezer {$/;"	s	file:
freezer_apply_state	cgroup_freezer.c	/^static void freezer_apply_state(struct freezer *freezer, bool freeze,$/;"	f	file:
freezer_attach	cgroup_freezer.c	/^static void freezer_attach(struct cgroup *new_cgrp, struct cgroup_taskset *tset)$/;"	f	file:
freezer_change_state	cgroup_freezer.c	/^static void freezer_change_state(struct freezer *freezer, bool freeze)$/;"	f	file:
freezer_css_alloc	cgroup_freezer.c	/^static struct cgroup_subsys_state *freezer_css_alloc(struct cgroup *cgroup)$/;"	f	file:
freezer_css_free	cgroup_freezer.c	/^static void freezer_css_free(struct cgroup *cgroup)$/;"	f	file:
freezer_css_offline	cgroup_freezer.c	/^static void freezer_css_offline(struct cgroup *cgroup)$/;"	f	file:
freezer_css_online	cgroup_freezer.c	/^static int freezer_css_online(struct cgroup *cgroup)$/;"	f	file:
freezer_delta	time/alarmtimer.c	/^static ktime_t freezer_delta;$/;"	v	file:
freezer_fork	cgroup_freezer.c	/^static void freezer_fork(struct task_struct *task)$/;"	f	file:
freezer_parent_freezing_read	cgroup_freezer.c	/^static u64 freezer_parent_freezing_read(struct cgroup *cgroup, struct cftype *cft)$/;"	f	file:
freezer_read	cgroup_freezer.c	/^static int freezer_read(struct cgroup *cgroup, struct cftype *cft,$/;"	f	file:
freezer_self_freezing_read	cgroup_freezer.c	/^static u64 freezer_self_freezing_read(struct cgroup *cgroup, struct cftype *cft)$/;"	f	file:
freezer_state_flags	cgroup_freezer.c	/^enum freezer_state_flags {$/;"	g	file:
freezer_state_strs	cgroup_freezer.c	/^static const char *freezer_state_strs(unsigned int state)$/;"	f	file:
freezer_subsys	cgroup_freezer.c	/^struct cgroup_subsys freezer_subsys = {$/;"	v	typeref:struct:cgroup_subsys
freezer_subsys	cgroup_freezer.c	/^struct cgroup_subsys freezer_subsys;$/;"	v	typeref:struct:cgroup_subsys
freezer_test_done	power/hibernate.c	/^bool freezer_test_done;$/;"	v
freezer_write	cgroup_freezer.c	/^static int freezer_write(struct cgroup *cgroup, struct cftype *cft,$/;"	f	file:
freezing_slow_path	freezer.c	/^EXPORT_SYMBOL(freezing_slow_path);$/;"	v
freezing_slow_path	freezer.c	/^bool freezing_slow_path(struct task_struct *p)$/;"	f
freq_scale	sched/fair.c	/^static struct cpufreq_extents freq_scale[CONFIG_NR_CPUS];$/;"	v	typeref:struct:cpufreq_extents	file:
freqinvar_load_scale_enabled	sched/fair.c	/^	int freqinvar_load_scale_enabled;$/;"	m	struct:hmp_data_struct	file:
from_kgid	user_namespace.c	/^EXPORT_SYMBOL(from_kgid);$/;"	v
from_kgid	user_namespace.c	/^gid_t from_kgid(struct user_namespace *targ, kgid_t kgid)$/;"	f
from_kgid_munged	user_namespace.c	/^EXPORT_SYMBOL(from_kgid_munged);$/;"	v
from_kgid_munged	user_namespace.c	/^gid_t from_kgid_munged(struct user_namespace *targ, kgid_t kgid)$/;"	f
from_kprojid	user_namespace.c	/^EXPORT_SYMBOL(from_kprojid);$/;"	v
from_kprojid	user_namespace.c	/^projid_t from_kprojid(struct user_namespace *targ, kprojid_t kprojid)$/;"	f
from_kprojid_munged	user_namespace.c	/^EXPORT_SYMBOL(from_kprojid_munged);$/;"	v
from_kprojid_munged	user_namespace.c	/^projid_t from_kprojid_munged(struct user_namespace *targ, kprojid_t kprojid)$/;"	f
from_kuid	user_namespace.c	/^EXPORT_SYMBOL(from_kuid);$/;"	v
from_kuid	user_namespace.c	/^uid_t from_kuid(struct user_namespace *targ, kuid_t kuid)$/;"	f
from_kuid_munged	user_namespace.c	/^EXPORT_SYMBOL(from_kuid_munged);$/;"	v
from_kuid_munged	user_namespace.c	/^uid_t from_kuid_munged(struct user_namespace *targ, kuid_t kuid)$/;"	f
from_sysfs	sched/fair.c	/^	int (*from_sysfs)(int);$/;"	m	struct:hmp_global_attr	file:
front	lockdep.c	/^	unsigned int  front, rear;$/;"	m	struct:circular_queue	file:
frozen	power/user.c	/^	char frozen;$/;"	m	struct:snapshot_data	file:
frozen_cpus	cpu.c	/^static cpumask_var_t frozen_cpus;$/;"	v	file:
fs_cachep	fork.c	/^struct kmem_cache *fs_cachep;$/;"	v	typeref:struct:kmem_cache
fs_flag	swap/master/swap_initializer.h	/^	unsigned fs_flag:1;$/;"	m	struct:swap_init_struct
fs_init	swap/driver/swap_driver_module.c	/^static int fs_init(void)$/;"	f	file:
fs_init	swap/master/swap_initializer.h	/^	swap_init_t fs_init;$/;"	m	struct:swap_init_struct
fs_overflowgid	sys.c	/^EXPORT_SYMBOL(fs_overflowgid);$/;"	v
fs_overflowgid	sys.c	/^int fs_overflowgid = DEFAULT_FS_OVERFLOWUID;$/;"	v
fs_overflowuid	sys.c	/^EXPORT_SYMBOL(fs_overflowuid);$/;"	v
fs_overflowuid	sys.c	/^int fs_overflowuid = DEFAULT_FS_OVERFLOWUID;$/;"	v
fs_table	sysctl.c	/^static struct ctl_table fs_table[] = {$/;"	v	typeref:struct:ctl_table	file:
fs_table	sysctl.c	/^static struct ctl_table fs_table[];$/;"	v	typeref:struct:ctl_table	file:
fs_uninit	swap/driver/swap_driver_module.c	/^static void fs_uninit(void)$/;"	f	file:
fs_uninit	swap/master/swap_initializer.h	/^	swap_uninit_t fs_uninit;$/;"	m	struct:swap_init_struct
fscaps	ksysfs.c	/^KERNEL_ATTR_RO(fscaps);$/;"	v
fscaps_show	ksysfs.c	/^static ssize_t fscaps_show(struct kobject *kobj,$/;"	f	file:
fsgid	audit.h	/^	kgid_t		    gid, egid, sgid, fsgid;$/;"	m	struct:audit_context
fsuid	audit.h	/^	kuid_t		    uid, euid, suid, fsuid;$/;"	m	struct:audit_context
ftrace	trace/trace.c	/^ftrace(struct trace_array *tr, struct trace_array_cpu *data,$/;"	f
ftrace_add_profile	trace/ftrace.c	/^static void ftrace_add_profile(struct ftrace_profile_stat *stat,$/;"	f	file:
ftrace_allocate_pages	trace/ftrace.c	/^ftrace_allocate_pages(unsigned long num_to_init)$/;"	f	file:
ftrace_allocate_records	trace/ftrace.c	/^static int ftrace_allocate_records(struct ftrace_page *pg, int count)$/;"	f	file:
ftrace_arch_code_modify_post_process	trace/ftrace.c	/^int __weak ftrace_arch_code_modify_post_process(void)$/;"	f
ftrace_arch_code_modify_prepare	trace/ftrace.c	/^int __weak ftrace_arch_code_modify_prepare(void)$/;"	f
ftrace_arch_read_dyn_info	trace/trace.c	/^int __weak ftrace_arch_read_dyn_info(char *buf, int size)$/;"	f
ftrace_avail_fops	trace/ftrace.c	/^static const struct file_operations ftrace_avail_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_avail_fops	trace/trace_events.c	/^static const struct file_operations ftrace_avail_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_avail_open	trace/ftrace.c	/^ftrace_avail_open(struct inode *inode, struct file *file)$/;"	f	file:
ftrace_buffer_info	trace/trace.c	/^struct ftrace_buffer_info {$/;"	s	file:
ftrace_bug	trace/ftrace.c	/^void ftrace_bug(int failed, unsigned long ip)$/;"	f
ftrace_check_record	trace/ftrace.c	/^static int ftrace_check_record(struct dyn_ftrace *rec, int enable, int update)$/;"	f	file:
ftrace_clear_events	trace/trace_events.c	/^static void ftrace_clear_events(struct trace_array *tr)$/;"	f	file:
ftrace_cmp_ips	trace/ftrace.c	/^static int ftrace_cmp_ips(const void *a, const void *b)$/;"	f	file:
ftrace_cmp_recs	trace/ftrace.c	/^static int ftrace_cmp_recs(const void *a, const void *b)$/;"	f	file:
ftrace_code_disable	trace/ftrace.c	/^ftrace_code_disable(struct module *mod, struct dyn_ftrace *rec)$/;"	f	file:
ftrace_count_snapshot	trace/trace.c	/^ftrace_count_snapshot(unsigned long ip, unsigned long parent_ip, void **data)$/;"	f	file:
ftrace_dump	trace/trace.c	/^EXPORT_SYMBOL_GPL(ftrace_dump);$/;"	v
ftrace_dump	trace/trace.c	/^void ftrace_dump(enum ftrace_dump_mode oops_dump_mode)$/;"	f
ftrace_dump_buf	trace/trace_kdb.c	/^static void ftrace_dump_buf(int skip_lines, long cpu_file)$/;"	f	file:
ftrace_dump_on_oops	trace/trace.c	/^enum ftrace_dump_mode ftrace_dump_on_oops;$/;"	v	typeref:enum:ftrace_dump_mode
ftrace_dyn_table_alloc	trace/ftrace.c	/^static int __init ftrace_dyn_table_alloc(unsigned long num_to_init)$/;"	f	file:
ftrace_enable_fops	trace/trace_events.c	/^static const struct file_operations ftrace_enable_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_enable_sysctl	trace/ftrace.c	/^ftrace_enable_sysctl(struct ctl_table *table, int write,$/;"	f
ftrace_enabled_fops	trace/ftrace.c	/^static const struct file_operations ftrace_enabled_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_enabled_open	trace/ftrace.c	/^ftrace_enabled_open(struct inode *inode, struct file *file)$/;"	f	file:
ftrace_event_avail_open	trace/trace_events.c	/^ftrace_event_avail_open(struct inode *inode, struct file *file)$/;"	f	file:
ftrace_event_enable_disable	trace/trace_events.c	/^static int ftrace_event_enable_disable(struct ftrace_event_file *file,$/;"	f	file:
ftrace_event_field	trace/trace.h	/^struct ftrace_event_field {$/;"	s
ftrace_event_filter_fops	trace/trace_events.c	/^static const struct file_operations ftrace_event_filter_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_event_format_fops	trace/trace_events.c	/^static const struct file_operations ftrace_event_format_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_event_id_fops	trace/trace_events.c	/^static const struct file_operations ftrace_event_id_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_event_is_function	trace/trace_export.c	/^int ftrace_event_is_function(struct ftrace_event_call *call)$/;"	f
ftrace_event_open	trace/trace_events.c	/^ftrace_event_open(struct inode *inode, struct file *file,$/;"	f	file:
ftrace_event_reg	trace/trace_events.c	/^EXPORT_SYMBOL_GPL(ftrace_event_reg);$/;"	v
ftrace_event_reg	trace/trace_events.c	/^int ftrace_event_reg(struct ftrace_event_call *call,$/;"	f
ftrace_event_release	trace/trace_events.c	/^static int ftrace_event_release(struct inode *inode, struct file *file)$/;"	f	file:
ftrace_event_set_open	trace/trace_events.c	/^ftrace_event_set_open(struct inode *inode, struct file *file)$/;"	f	file:
ftrace_event_write	trace/trace_events.c	/^ftrace_event_write(struct file *file, const char __user *ubuf,$/;"	f	file:
ftrace_events	trace/trace_events.c	/^LIST_HEAD(ftrace_events);$/;"	v
ftrace_filter_fops	trace/ftrace.c	/^static const struct file_operations ftrace_filter_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_filter_lseek	trace/ftrace.c	/^ftrace_filter_lseek(struct file *file, loff_t offset, int whence)$/;"	f
ftrace_filter_open	trace/ftrace.c	/^ftrace_filter_open(struct inode *inode, struct file *file)$/;"	f	file:
ftrace_filter_reset	trace/ftrace.c	/^static void ftrace_filter_reset(struct ftrace_hash *hash)$/;"	f	file:
ftrace_filter_write	trace/ftrace.c	/^ftrace_filter_write(struct file *file, const char __user *ubuf,$/;"	f
ftrace_find_event	trace/trace_output.c	/^struct trace_event *ftrace_find_event(int type)$/;"	f
ftrace_find_profiled_func	trace/ftrace.c	/^ftrace_find_profiled_func(struct ftrace_profile_stat *stat, unsigned long ip)$/;"	f	file:
ftrace_formats_fops	trace/trace_printk.c	/^static const struct file_operations ftrace_formats_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_formats_open	trace/trace_printk.c	/^ftrace_formats_open(struct inode *inode, struct file *file)$/;"	f	file:
ftrace_free_entry	trace/ftrace.c	/^static void ftrace_free_entry(struct ftrace_func_probe *entry)$/;"	f	file:
ftrace_free_filter	trace/ftrace.c	/^void ftrace_free_filter(struct ftrace_ops *ops)$/;"	f
ftrace_func_entry	trace/ftrace.c	/^struct ftrace_func_entry {$/;"	s	file:
ftrace_func_probe	trace/ftrace.c	/^struct ftrace_func_probe {$/;"	s	file:
ftrace_function_check_pred	trace/trace_events_filter.c	/^static int ftrace_function_check_pred(struct filter_pred *pred, int leaf)$/;"	f	file:
ftrace_function_enabled	trace/trace_functions.c	/^static int			ftrace_function_enabled;$/;"	v	file:
ftrace_function_filter_re	trace/trace_events_filter.c	/^ftrace_function_filter_re(char *buf, int len, int *count)$/;"	f	file:
ftrace_function_set_filter	trace/trace_events_filter.c	/^static int ftrace_function_set_filter(struct perf_event *event,$/;"	f	file:
ftrace_function_set_filter_cb	trace/trace_events_filter.c	/^static int ftrace_function_set_filter_cb(enum move_type move,$/;"	f	file:
ftrace_function_set_regexp	trace/trace_events_filter.c	/^static int ftrace_function_set_regexp(struct ftrace_ops *ops, int filter,$/;"	f	file:
ftrace_global_list_func	trace/ftrace.c	/^ftrace_global_list_func(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
ftrace_graph_active	trace/ftrace.c	/^static int ftrace_graph_active;$/;"	v	file:
ftrace_graph_addr	trace/trace.h	/^static inline int ftrace_graph_addr(unsigned long addr)$/;"	f
ftrace_graph_count	trace/ftrace.c	/^int ftrace_graph_count;$/;"	v
ftrace_graph_entry	trace/ftrace.c	/^trace_func_graph_ent_t ftrace_graph_entry = ftrace_graph_entry_stub;$/;"	v
ftrace_graph_entry_stub	trace/ftrace.c	/^int ftrace_graph_entry_stub(struct ftrace_graph_ent *trace)$/;"	f
ftrace_graph_entry_test	trace/ftrace.c	/^static int ftrace_graph_entry_test(struct ftrace_graph_ent *trace)$/;"	f	file:
ftrace_graph_exit_task	trace/ftrace.c	/^void ftrace_graph_exit_task(struct task_struct *t)$/;"	f
ftrace_graph_filter_enabled	trace/ftrace.c	/^int ftrace_graph_filter_enabled;$/;"	v
ftrace_graph_fops	trace/ftrace.c	/^static const struct file_operations ftrace_graph_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_graph_ignore_irqs	trace/trace_functions_graph.c	/^static inline int ftrace_graph_ignore_irqs(void)$/;"	f	file:
ftrace_graph_init_idle_task	trace/ftrace.c	/^void ftrace_graph_init_idle_task(struct task_struct *t, int cpu)$/;"	f
ftrace_graph_init_task	trace/ftrace.c	/^void ftrace_graph_init_task(struct task_struct *t)$/;"	f
ftrace_graph_open	trace/ftrace.c	/^ftrace_graph_open(struct inode *inode, struct file *file)$/;"	f	file:
ftrace_graph_probe_sched_switch	trace/ftrace.c	/^ftrace_graph_probe_sched_switch(void *ignore,$/;"	f	file:
ftrace_graph_release	trace/ftrace.c	/^ftrace_graph_release(struct inode *inode, struct file *file)$/;"	f	file:
ftrace_graph_return	trace/ftrace.c	/^trace_func_graph_ret_t ftrace_graph_return =$/;"	v
ftrace_graph_seq_ops	trace/ftrace.c	/^static const struct seq_operations ftrace_graph_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
ftrace_graph_skip_irqs	trace/trace_functions_graph.c	/^static int ftrace_graph_skip_irqs;$/;"	v	file:
ftrace_graph_stop	trace/ftrace.c	/^void ftrace_graph_stop(void)$/;"	f
ftrace_graph_write	trace/ftrace.c	/^ftrace_graph_write(struct file *file, const char __user *ubuf,$/;"	f	file:
ftrace_hash	trace/ftrace.c	/^struct ftrace_hash {$/;"	s	file:
ftrace_hash_clear	trace/ftrace.c	/^static void ftrace_hash_clear(struct ftrace_hash *hash)$/;"	f	file:
ftrace_hash_empty	trace/ftrace.c	/^static bool ftrace_hash_empty(struct ftrace_hash *hash)$/;"	f	file:
ftrace_hash_move	trace/ftrace.c	/^ftrace_hash_move(struct ftrace_ops *ops, int enable,$/;"	f	file:
ftrace_hash_rec_disable	trace/ftrace.c	/^static void ftrace_hash_rec_disable(struct ftrace_ops *ops,$/;"	f	file:
ftrace_hash_rec_enable	trace/ftrace.c	/^static void ftrace_hash_rec_enable(struct ftrace_ops *ops,$/;"	f	file:
ftrace_init	trace/ftrace.c	/^void __init ftrace_init(void)$/;"	f
ftrace_init_debugfs	trace/ftrace.c	/^fs_initcall(ftrace_init_debugfs);$/;"	v
ftrace_init_debugfs	trace/ftrace.c	/^static __init int ftrace_init_debugfs(void)$/;"	f	file:
ftrace_init_dyn_debugfs	trace/ftrace.c	/^static __init int ftrace_init_dyn_debugfs(struct dentry *d_tracer)$/;"	f	file:
ftrace_init_dyn_debugfs	trace/ftrace.c	/^static inline int ftrace_init_dyn_debugfs(struct dentry *d_tracer) { return 0; }$/;"	f	file:
ftrace_init_module	trace/ftrace.c	/^static void ftrace_init_module(struct module *mod,$/;"	f	file:
ftrace_is_dead	trace/ftrace.c	/^int ftrace_is_dead(void)$/;"	f
ftrace_is_dead	trace/trace.h	/^static inline int ftrace_is_dead(void) { return 0; }$/;"	f
ftrace_iterator	trace/ftrace.c	/^struct ftrace_iterator {$/;"	s	file:
ftrace_kill	trace/ftrace.c	/^void ftrace_kill(void)$/;"	f
ftrace_likely_update	trace/trace_branch.c	/^EXPORT_SYMBOL(ftrace_likely_update);$/;"	v
ftrace_likely_update	trace/trace_branch.c	/^void ftrace_likely_update(struct ftrace_branch_data *f, int val, int expect)$/;"	f
ftrace_location	trace/ftrace.c	/^unsigned long ftrace_location(unsigned long ip)$/;"	f
ftrace_location_range	trace/ftrace.c	/^static unsigned long ftrace_location_range(unsigned long start, unsigned long end)$/;"	f	file:
ftrace_lookup_ip	trace/ftrace.c	/^ftrace_lookup_ip(struct ftrace_hash *hash, unsigned long ip)$/;"	f	file:
ftrace_match	trace/ftrace.c	/^static int ftrace_match(char *str, char *regex, int len, int type)$/;"	f	file:
ftrace_match_addr	trace/ftrace.c	/^ftrace_match_addr(struct ftrace_hash *hash, unsigned long ip, int remove)$/;"	f	file:
ftrace_match_module_records	trace/ftrace.c	/^ftrace_match_module_records(struct ftrace_hash *hash, char *buff, char *mod)$/;"	f	file:
ftrace_match_record	trace/ftrace.c	/^ftrace_match_record(struct dyn_ftrace *rec, char *mod,$/;"	f	file:
ftrace_match_records	trace/ftrace.c	/^ftrace_match_records(struct ftrace_hash *hash, char *buff, int len)$/;"	f	file:
ftrace_max_lock	trace/trace.c	/^static arch_spinlock_t ftrace_max_lock =$/;"	v	file:
ftrace_mod_callback	trace/ftrace.c	/^ftrace_mod_callback(struct ftrace_hash *hash,$/;"	f	file:
ftrace_mod_cmd	trace/ftrace.c	/^static struct ftrace_func_command ftrace_mod_cmd = {$/;"	v	typeref:struct:ftrace_func_command	file:
ftrace_mod_cmd_init	trace/ftrace.c	/^core_initcall(ftrace_mod_cmd_init);$/;"	v
ftrace_mod_cmd_init	trace/ftrace.c	/^static int __init ftrace_mod_cmd_init(void)$/;"	f	file:
ftrace_modify_all_code	trace/ftrace.c	/^void ftrace_modify_all_code(int command)$/;"	f
ftrace_module_exit_nb	trace/ftrace.c	/^struct notifier_block ftrace_module_exit_nb = {$/;"	v	typeref:struct:notifier_block
ftrace_module_file_ops	trace/trace_events.c	/^struct ftrace_module_file_ops {$/;"	s	file:
ftrace_module_init	trace/ftrace.c	/^void ftrace_module_init(struct module *mod)$/;"	f
ftrace_module_notify_exit	trace/ftrace.c	/^static int ftrace_module_notify_exit(struct notifier_block *self,$/;"	f	file:
ftrace_new_pgs	trace/ftrace.c	/^static struct ftrace_page *ftrace_new_pgs;$/;"	v	typeref:struct:ftrace_page	file:
ftrace_nodyn_init	trace/ftrace.c	/^core_initcall(ftrace_nodyn_init);$/;"	v
ftrace_nodyn_init	trace/ftrace.c	/^static int __init ftrace_nodyn_init(void)$/;"	f	file:
ftrace_notrace_fops	trace/ftrace.c	/^static const struct file_operations ftrace_notrace_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_notrace_open	trace/ftrace.c	/^ftrace_notrace_open(struct inode *inode, struct file *file)$/;"	f	file:
ftrace_notrace_write	trace/ftrace.c	/^ftrace_notrace_write(struct file *file, const char __user *ubuf,$/;"	f
ftrace_now	trace/trace.c	/^cycle_t ftrace_now(int cpu)$/;"	f
ftrace_nr_registered_ops	trace/ftrace.c	/^int ftrace_nr_registered_ops(void)$/;"	f
ftrace_off_permanent	trace/trace.c	/^void ftrace_off_permanent(void)$/;"	f
ftrace_ops_control_func	trace/ftrace.c	/^ftrace_ops_control_func(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
ftrace_ops_init	trace/ftrace.c	/^static inline void ftrace_ops_init(struct ftrace_ops *ops)$/;"	f	file:
ftrace_ops_list_func	trace/ftrace.c	/^static void ftrace_ops_list_func(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
ftrace_ops_list_func	trace/ftrace.c	120;"	d	file:
ftrace_ops_no_ops	trace/ftrace.c	/^static void ftrace_ops_no_ops(unsigned long ip, unsigned long parent_ip)$/;"	f	file:
ftrace_ops_test	trace/ftrace.c	/^ftrace_ops_test(struct ftrace_ops *ops, unsigned long ip, void *regs)$/;"	f	file:
ftrace_page	trace/ftrace.c	/^struct ftrace_page {$/;"	s	file:
ftrace_pages	trace/ftrace.c	/^static struct ftrace_page	*ftrace_pages;$/;"	v	typeref:struct:ftrace_page	file:
ftrace_pages_start	trace/ftrace.c	/^static struct ftrace_page	*ftrace_pages_start;$/;"	v	typeref:struct:ftrace_page	file:
ftrace_pid	trace/ftrace.c	/^struct ftrace_pid {$/;"	s	file:
ftrace_pid_add	trace/ftrace.c	/^static int ftrace_pid_add(int p)$/;"	f	file:
ftrace_pid_fops	trace/ftrace.c	/^static const struct file_operations ftrace_pid_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_pid_func	trace/ftrace.c	/^static void ftrace_pid_func(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
ftrace_pid_open	trace/ftrace.c	/^ftrace_pid_open(struct inode *inode, struct file *file)$/;"	f	file:
ftrace_pid_release	trace/ftrace.c	/^ftrace_pid_release(struct inode *inode, struct file *file)$/;"	f	file:
ftrace_pid_reset	trace/ftrace.c	/^static void ftrace_pid_reset(void)$/;"	f	file:
ftrace_pid_sops	trace/ftrace.c	/^static const struct seq_operations ftrace_pid_sops = {$/;"	v	typeref:struct:seq_operations	file:
ftrace_pid_write	trace/ftrace.c	/^ftrace_pid_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
ftrace_pids	trace/ftrace.c	/^LIST_HEAD(ftrace_pids);$/;"	v
ftrace_pop_return_trace	trace/trace_functions_graph.c	/^ftrace_pop_return_trace(struct ftrace_graph_ret *trace, unsigned long *ret,$/;"	f	file:
ftrace_print_flags_seq	trace/trace_output.c	/^EXPORT_SYMBOL(ftrace_print_flags_seq);$/;"	v
ftrace_print_flags_seq	trace/trace_output.c	/^ftrace_print_flags_seq(struct trace_seq *p, const char *delim,$/;"	f
ftrace_print_hex_seq	trace/trace_output.c	/^EXPORT_SYMBOL(ftrace_print_hex_seq);$/;"	v
ftrace_print_hex_seq	trace/trace_output.c	/^ftrace_print_hex_seq(struct trace_seq *p, const unsigned char *buf, int buf_len)$/;"	f
ftrace_print_symbols_seq	trace/trace_output.c	/^EXPORT_SYMBOL(ftrace_print_symbols_seq);$/;"	v
ftrace_print_symbols_seq	trace/trace_output.c	/^ftrace_print_symbols_seq(struct trace_seq *p, unsigned long val,$/;"	f
ftrace_print_symbols_seq_u64	trace/trace_output.c	/^EXPORT_SYMBOL(ftrace_print_symbols_seq_u64);$/;"	v
ftrace_print_symbols_seq_u64	trace/trace_output.c	/^ftrace_print_symbols_seq_u64(struct trace_seq *p, unsigned long long val,$/;"	f
ftrace_probe_print	trace/trace_functions.c	/^ftrace_probe_print(const char *name, struct seq_file *m,$/;"	f	file:
ftrace_probe_registered	trace/ftrace.c	/^static int ftrace_probe_registered;$/;"	v	file:
ftrace_process_locs	trace/ftrace.c	/^static int ftrace_process_locs(struct module *mod,$/;"	f	file:
ftrace_process_regex	trace/ftrace.c	/^static int ftrace_process_regex(struct ftrace_hash *hash,$/;"	f	file:
ftrace_profile	trace/ftrace.c	/^struct ftrace_profile {$/;"	s	file:
ftrace_profile_alloc	trace/ftrace.c	/^ftrace_profile_alloc(struct ftrace_profile_stat *stat, unsigned long ip)$/;"	f	file:
ftrace_profile_debugfs	trace/ftrace.c	/^static __init void ftrace_profile_debugfs(struct dentry *d_tracer)$/;"	f	file:
ftrace_profile_fops	trace/ftrace.c	/^static const struct file_operations ftrace_profile_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_profile_free_filter	trace/trace_events_filter.c	/^void ftrace_profile_free_filter(struct perf_event *event)$/;"	f
ftrace_profile_init	trace/ftrace.c	/^static int ftrace_profile_init(void)$/;"	f	file:
ftrace_profile_init_cpu	trace/ftrace.c	/^static int ftrace_profile_init_cpu(int cpu)$/;"	f	file:
ftrace_profile_page	trace/ftrace.c	/^struct ftrace_profile_page {$/;"	s	file:
ftrace_profile_pages_init	trace/ftrace.c	/^int ftrace_profile_pages_init(struct ftrace_profile_stat *stat)$/;"	f
ftrace_profile_read	trace/ftrace.c	/^ftrace_profile_read(struct file *filp, char __user *ubuf,$/;"	f	file:
ftrace_profile_reset	trace/ftrace.c	/^static void ftrace_profile_reset(struct ftrace_profile_stat *stat)$/;"	f	file:
ftrace_profile_set_filter	trace/trace_events_filter.c	/^int ftrace_profile_set_filter(struct perf_event *event, int event_id,$/;"	f
ftrace_profile_stat	trace/ftrace.c	/^struct ftrace_profile_stat {$/;"	s	file:
ftrace_profile_write	trace/ftrace.c	/^ftrace_profile_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
ftrace_push_return_trace	trace/trace_functions_graph.c	/^ftrace_push_return_trace(unsigned long ret, unsigned long func, int *depth,$/;"	f
ftrace_raw_output_prep	trace/trace_output.c	/^EXPORT_SYMBOL(ftrace_raw_output_prep);$/;"	v
ftrace_raw_output_prep	trace/trace_output.c	/^int ftrace_raw_output_prep(struct trace_iterator *iter,$/;"	f
ftrace_rec_iter	trace/ftrace.c	/^struct ftrace_rec_iter {$/;"	s	file:
ftrace_rec_iter_next	trace/ftrace.c	/^struct ftrace_rec_iter *ftrace_rec_iter_next(struct ftrace_rec_iter *iter)$/;"	f
ftrace_rec_iter_record	trace/ftrace.c	/^struct dyn_ftrace *ftrace_rec_iter_record(struct ftrace_rec_iter *iter)$/;"	f
ftrace_rec_iter_start	trace/ftrace.c	/^struct ftrace_rec_iter *ftrace_rec_iter_start(void)$/;"	f
ftrace_regex_open	trace/ftrace.c	/^ftrace_regex_open(struct ftrace_ops *ops, int flag,$/;"	f
ftrace_regex_release	trace/ftrace.c	/^int ftrace_regex_release(struct inode *inode, struct file *file)$/;"	f
ftrace_regex_write	trace/ftrace.c	/^ftrace_regex_write(struct file *file, const char __user *ubuf,$/;"	f	file:
ftrace_release_mod	trace/ftrace.c	/^void ftrace_release_mod(struct module *mod)$/;"	f
ftrace_replace_code	trace/ftrace.c	/^void __weak ftrace_replace_code(int enable)$/;"	f
ftrace_return_to_handler	trace/trace_functions_graph.c	/^unsigned long ftrace_return_to_handler(unsigned long frame_pointer)$/;"	f
ftrace_run_stop_machine	trace/ftrace.c	/^void ftrace_run_stop_machine(int command)$/;"	f
ftrace_run_update_code	trace/ftrace.c	/^static void ftrace_run_update_code(int command)$/;"	f	file:
ftrace_set_addr	trace/ftrace.c	/^ftrace_set_addr(struct ftrace_ops *ops, unsigned long ip, int remove,$/;"	f	file:
ftrace_set_clr_event	trace/trace_events.c	/^static int ftrace_set_clr_event(struct trace_array *tr, char *buf, int set)$/;"	f	file:
ftrace_set_early_filter	trace/ftrace.c	/^ftrace_set_early_filter(struct ftrace_ops *ops, char *buf, int enable)$/;"	f
ftrace_set_event_fops	trace/trace_events.c	/^static const struct file_operations ftrace_set_event_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_set_filter	trace/ftrace.c	/^EXPORT_SYMBOL_GPL(ftrace_set_filter);$/;"	v
ftrace_set_filter	trace/ftrace.c	/^int ftrace_set_filter(struct ftrace_ops *ops, unsigned char *buf,$/;"	f
ftrace_set_filter_ip	trace/ftrace.c	/^EXPORT_SYMBOL_GPL(ftrace_set_filter_ip);$/;"	v
ftrace_set_filter_ip	trace/ftrace.c	/^int ftrace_set_filter_ip(struct ftrace_ops *ops, unsigned long ip,$/;"	f
ftrace_set_func	trace/ftrace.c	/^ftrace_set_func(unsigned long *array, int *idx, char *buffer)$/;"	f	file:
ftrace_set_global_filter	trace/ftrace.c	/^EXPORT_SYMBOL_GPL(ftrace_set_global_filter);$/;"	v
ftrace_set_global_filter	trace/ftrace.c	/^void ftrace_set_global_filter(unsigned char *buf, int len, int reset)$/;"	f
ftrace_set_global_notrace	trace/ftrace.c	/^EXPORT_SYMBOL_GPL(ftrace_set_global_notrace);$/;"	v
ftrace_set_global_notrace	trace/ftrace.c	/^void ftrace_set_global_notrace(unsigned char *buf, int len, int reset)$/;"	f
ftrace_set_hash	trace/ftrace.c	/^ftrace_set_hash(struct ftrace_ops *ops, unsigned char *buf, int len,$/;"	f	file:
ftrace_set_notrace	trace/ftrace.c	/^EXPORT_SYMBOL_GPL(ftrace_set_notrace);$/;"	v
ftrace_set_notrace	trace/ftrace.c	/^int ftrace_set_notrace(struct ftrace_ops *ops, unsigned char *buf,$/;"	f
ftrace_set_regex	trace/ftrace.c	/^ftrace_set_regex(struct ftrace_ops *ops, unsigned char *buf, int len,$/;"	f	file:
ftrace_show_header_fops	trace/trace_events.c	/^static const struct file_operations ftrace_show_header_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_shutdown	trace/ftrace.c	/^static int ftrace_shutdown(struct ftrace_ops *ops, int command)$/;"	f	file:
ftrace_shutdown	trace/ftrace.c	4322;"	d	file:
ftrace_shutdown_sysctl	trace/ftrace.c	/^static void ftrace_shutdown_sysctl(void)$/;"	f	file:
ftrace_shutdown_sysctl	trace/ftrace.c	4325;"	d	file:
ftrace_snapshot	trace/trace.c	/^ftrace_snapshot(unsigned long ip, unsigned long parent_ip, void **data)$/;"	f	file:
ftrace_snapshot_cmd	trace/trace.c	/^static struct ftrace_func_command ftrace_snapshot_cmd = {$/;"	v	typeref:struct:ftrace_func_command	file:
ftrace_snapshot_print	trace/trace.c	/^ftrace_snapshot_print(struct seq_file *m, unsigned long ip,$/;"	f	file:
ftrace_stack	trace/trace.c	/^struct ftrace_stack {$/;"	s	file:
ftrace_stacktrace	trace/trace_functions.c	/^ftrace_stacktrace(unsigned long ip, unsigned long parent_ip, void **data)$/;"	f	file:
ftrace_stacktrace_callback	trace/trace_functions.c	/^ftrace_stacktrace_callback(struct ftrace_hash *hash,$/;"	f	file:
ftrace_stacktrace_cmd	trace/trace_functions.c	/^static struct ftrace_func_command ftrace_stacktrace_cmd = {$/;"	v	typeref:struct:ftrace_func_command	file:
ftrace_stacktrace_count	trace/trace_functions.c	/^ftrace_stacktrace_count(unsigned long ip, unsigned long parent_ip, void **data)$/;"	f	file:
ftrace_stacktrace_print	trace/trace_functions.c	/^ftrace_stacktrace_print(struct seq_file *m, unsigned long ip,$/;"	f	file:
ftrace_start_up	trace/ftrace.c	/^static int ftrace_start_up;$/;"	v	file:
ftrace_startup	trace/ftrace.c	/^static int ftrace_startup(struct ftrace_ops *ops, int command)$/;"	f	file:
ftrace_startup	trace/ftrace.c	4315;"	d	file:
ftrace_startup_enable	trace/ftrace.c	/^static inline void ftrace_startup_enable(int command) { }$/;"	f	file:
ftrace_startup_enable	trace/ftrace.c	/^static void ftrace_startup_enable(int command)$/;"	f	file:
ftrace_startup_sysctl	trace/ftrace.c	/^static void ftrace_startup_sysctl(void)$/;"	f	file:
ftrace_startup_sysctl	trace/ftrace.c	4324;"	d	file:
ftrace_subsystem_dir	trace/trace.h	/^struct ftrace_subsystem_dir {$/;"	s
ftrace_subsystem_filter_fops	trace/trace_events.c	/^static const struct file_operations ftrace_subsystem_filter_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_suspend_notifier	trace/ftrace.c	/^static struct notifier_block ftrace_suspend_notifier;$/;"	v	typeref:struct:notifier_block	file:
ftrace_suspend_notifier_call	trace/ftrace.c	/^ftrace_suspend_notifier_call(struct notifier_block *bl, unsigned long state,$/;"	f	file:
ftrace_swap_ips	trace/ftrace.c	/^static void ftrace_swap_ips(void *a, void *b, int size)$/;"	f	file:
ftrace_swapper_pid	trace/ftrace.c	/^static struct pid * const ftrace_swapper_pid = &init_struct_pid;$/;"	v	file:
ftrace_sync	trace/ftrace.c	/^static void ftrace_sync(struct work_struct *work)$/;"	f	file:
ftrace_sync_ipi	trace/ftrace.c	/^static void ftrace_sync_ipi(void *data)$/;"	f	file:
ftrace_syscall_enter	trace/trace_syscalls.c	/^static void ftrace_syscall_enter(void *data, struct pt_regs *regs, long id)$/;"	f	file:
ftrace_syscall_exit	trace/trace_syscalls.c	/^static void ftrace_syscall_exit(void *data, struct pt_regs *regs, long ret)$/;"	f	file:
ftrace_system_enable_fops	trace/trace_events.c	/^static const struct file_operations ftrace_system_enable_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_test_event_filter	trace/trace_events_filter.c	/^late_initcall(ftrace_test_event_filter);$/;"	v
ftrace_test_event_filter	trace/trace_events_filter.c	/^static __init int ftrace_test_event_filter(void)$/;"	f	file:
ftrace_test_record	trace/ftrace.c	/^int ftrace_test_record(struct dyn_ftrace *rec, int enable)$/;"	f
ftrace_text_reserved	trace/ftrace.c	/^int ftrace_text_reserved(void *start, void *end)$/;"	f
ftrace_tr_enable_fops	trace/trace_events.c	/^static const struct file_operations ftrace_tr_enable_fops = {$/;"	v	typeref:struct:file_operations	file:
ftrace_trace_arrays	trace/trace.c	/^LIST_HEAD(ftrace_trace_arrays);$/;"	v
ftrace_trace_onoff_callback	trace/trace_functions.c	/^ftrace_trace_onoff_callback(struct ftrace_hash *hash,$/;"	f	file:
ftrace_trace_probe_callback	trace/trace_functions.c	/^ftrace_trace_probe_callback(struct ftrace_probe_ops *ops,$/;"	f	file:
ftrace_trace_snapshot_callback	trace/trace.c	/^ftrace_trace_snapshot_callback(struct ftrace_hash *hash,$/;"	f	file:
ftrace_trace_stack	trace/trace.c	/^void ftrace_trace_stack(struct ring_buffer *buffer, unsigned long flags,$/;"	f
ftrace_trace_stack	trace/trace.h	/^static inline void ftrace_trace_stack(struct ring_buffer *buffer,$/;"	f
ftrace_trace_stack_regs	trace/trace.c	/^void ftrace_trace_stack_regs(struct ring_buffer *buffer, unsigned long flags,$/;"	f
ftrace_trace_stack_regs	trace/trace.h	/^static inline void ftrace_trace_stack_regs(struct ring_buffer *buffer,$/;"	f
ftrace_trace_task	trace/trace.h	/^static inline int ftrace_trace_task(struct task_struct *task)$/;"	f
ftrace_trace_userstack	trace/trace.c	/^ftrace_trace_userstack(struct ring_buffer *buffer, unsigned long flags, int pc)$/;"	f
ftrace_trace_userstack	trace/trace.h	/^static inline void ftrace_trace_userstack(struct ring_buffer *buffer,$/;"	f
ftrace_traceoff	trace/trace_functions.c	/^ftrace_traceoff(unsigned long ip, unsigned long parent_ip, void **data)$/;"	f	file:
ftrace_traceoff_cmd	trace/trace_functions.c	/^static struct ftrace_func_command ftrace_traceoff_cmd = {$/;"	v	typeref:struct:ftrace_func_command	file:
ftrace_traceoff_count	trace/trace_functions.c	/^ftrace_traceoff_count(unsigned long ip, unsigned long parent_ip, void **data)$/;"	f	file:
ftrace_traceoff_print	trace/trace_functions.c	/^ftrace_traceoff_print(struct seq_file *m, unsigned long ip,$/;"	f	file:
ftrace_traceon	trace/trace_functions.c	/^ftrace_traceon(unsigned long ip, unsigned long parent_ip, void **data)$/;"	f	file:
ftrace_traceon_cmd	trace/trace_functions.c	/^static struct ftrace_func_command ftrace_traceon_cmd = {$/;"	v	typeref:struct:ftrace_func_command	file:
ftrace_traceon_count	trace/trace_functions.c	/^ftrace_traceon_count(unsigned long ip, unsigned long parent_ip, void **data)$/;"	f	file:
ftrace_traceon_print	trace/trace_functions.c	/^ftrace_traceon_print(struct seq_file *m, unsigned long ip,$/;"	f	file:
ftrace_update_cnt	trace/ftrace.c	/^static unsigned long	ftrace_update_cnt;$/;"	v	file:
ftrace_update_code	trace/ftrace.c	/^static int ftrace_update_code(struct module *mod)$/;"	f	file:
ftrace_update_pid_func	trace/ftrace.c	/^static void ftrace_update_pid_func(void)$/;"	f	file:
ftrace_update_record	trace/ftrace.c	/^int ftrace_update_record(struct dyn_ftrace *rec, int enable)$/;"	f
ftrace_update_time	trace/ftrace.c	/^static cycle_t		ftrace_update_time;$/;"	v	file:
ftrace_update_tot_cnt	trace/ftrace.c	/^unsigned long		ftrace_update_tot_cnt;$/;"	v
full_buffer_part	swap/buffer/buffer_description.h	/^	size_t full_buffer_part;$/;"	m	struct:swap_subbuffer
fullstop	rcutorture.c	/^static int fullstop = FULLSTOP_RMMOD;$/;"	v	file:
func	async.c	/^	async_func_t		func;$/;"	m	struct:async_entry	file:
func	events/core.c	/^	int			(*func)(void *info);$/;"	m	struct:remote_function_call	file:
func	events/uprobes.c	/^	unsigned long		func;$/;"	m	struct:return_instance	file:
func	swap/parser/msg_parser.h	/^	struct func_inst_data **func;       \/**< Pointer to the probes array. *\/$/;"	m	struct:app_inst_data	typeref:struct:app_inst_data::func_inst_data
func	swap/parser/msg_parser.h	/^	struct func_inst_data **func;    \/**< Pointer to the probes array. *\/$/;"	m	struct:lib_inst_data	typeref:struct:lib_inst_data::func_inst_data
func	swap/us_manager/callbacks.c	/^	void (*func)(void);$/;"	m	struct:cb_item	file:
func	trace/ftrace.c	/^	struct dyn_ftrace		*func;$/;"	m	struct:ftrace_iterator	typeref:struct:ftrace_iterator::dyn_ftrace	file:
func	trace/trace.c	/^	u64 (*func)(void);$/;"	m	struct:__anon76	file:
func	trace/trace.h	/^	unsigned long		func;$/;"	m	struct:kretprobe_trace_entry_head
func_flags	trace/trace_functions.c	/^static struct tracer_flags func_flags = {$/;"	v	typeref:struct:tracer_flags	file:
func_flags	trace/trace_functions.c	/^static struct tracer_flags func_flags;$/;"	v	typeref:struct:tracer_flags	file:
func_for_read	swap/writer/debugfs_writer.c	/^static void func_for_read(struct ev_filter *f, void *data)$/;"	f	file:
func_graph_set_flag	trace/trace_functions_graph.c	/^static int func_graph_set_flag(u32 old_flags, u32 bit, int set)$/;"	f	file:
func_inst_data	swap/parser/msg_parser.h	/^struct func_inst_data {$/;"	s
func_none	swap/writer/event_filter.c	/^static int func_none(struct task_struct *task)$/;"	f	file:
func_notifier_lcd	swap/energy/lcd/lcd_base.c	/^static int func_notifier_lcd(struct lcd_ops *ops, enum lcd_action_type action,$/;"	f	file:
func_opts	trace/trace_functions.c	/^static struct tracer_opt func_opts[] = {$/;"	v	typeref:struct:tracer_opt	file:
func_pos	trace/ftrace.c	/^	loff_t				func_pos;$/;"	m	struct:ftrace_iterator	file:
func_prolog_dec	trace/trace_irqsoff.c	/^static int func_prolog_dec(struct trace_array *tr,$/;"	f	file:
func_prolog_preempt_disable	trace/trace_sched_wakeup.c	/^func_prolog_preempt_disable(struct trace_array *tr,$/;"	f	file:
func_ptr_is_kernel_text	extable.c	/^int func_ptr_is_kernel_text(void *ptr)$/;"	f
func_sampling	swap/parser/features.c	/^	func_sampling	= (1 << 19)	\/**< Function sampling *\/$/;"	e	enum:features_list	file:
func_set_flag	trace/trace_functions.c	/^static int func_set_flag(u32 old_flags, u32 bit, int set)$/;"	f	file:
func_trace	trace/trace_functions.c	/^static struct trace_array	*func_trace;$/;"	v	typeref:struct:trace_array	file:
func_uinst_creare	swap/us_manager/helper.c	/^static void func_uinst_creare(struct us_ip *ip, void *data)$/;"	f	file:
funcs	tracepoint.c	/^	struct tracepoint_func *funcs;$/;"	m	struct:tracepoint_entry	typeref:struct:tracepoint_entry::tracepoint_func	file:
function	gcov/gcc_3_4.c	/^	unsigned int function;$/;"	m	struct:gcov_iterator	file:
function_enabled	trace/trace_irqsoff.c	/^static bool function_enabled;$/;"	v	file:
function_enabled	trace/trace_sched_wakeup.c	/^static bool function_enabled;$/;"	v	file:
function_filter_data	trace/trace_events_filter.c	/^struct function_filter_data {$/;"	s	file:
function_profile_call	trace/ftrace.c	/^function_profile_call(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
function_stack_trace_call	trace/trace_functions.c	/^function_stack_trace_call(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
function_stat_cmp	trace/ftrace.c	/^static int function_stat_cmp(void *p1, void *p2)$/;"	f	file:
function_stat_headers	trace/ftrace.c	/^static int function_stat_headers(struct seq_file *m)$/;"	f	file:
function_stat_next	trace/ftrace.c	/^function_stat_next(void *v, int idx)$/;"	f	file:
function_stat_show	trace/ftrace.c	/^static int function_stat_show(struct seq_file *m, void *v)$/;"	f	file:
function_stat_start	trace/ftrace.c	/^static void *function_stat_start(struct tracer_stat *trace)$/;"	f	file:
function_test_events_call	trace/trace_events.c	/^function_test_events_call(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
function_trace_call	trace/trace_functions.c	/^function_trace_call(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
function_trace_init	trace/trace_functions.c	/^static int function_trace_init(struct trace_array *tr)$/;"	f	file:
function_trace_probe_call	trace/ftrace.c	/^static void function_trace_probe_call(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
function_trace_reset	trace/trace_functions.c	/^static void function_trace_reset(struct trace_array *tr)$/;"	f	file:
function_trace_start	trace/trace_functions.c	/^static void function_trace_start(struct trace_array *tr)$/;"	f	file:
functions	gcov/gcov.h	/^	const struct gcov_fn_info	*functions;$/;"	m	struct:gcov_info	typeref:struct:gcov_info::gcov_fn_info
futex_cmpxchg_enabled	futex.c	/^int __read_mostly futex_cmpxchg_enabled;$/;"	v
futex_detect_cmpxchg	futex.c	/^static void __init futex_detect_cmpxchg(void)$/;"	f	file:
futex_find_get_task	futex.c	/^static struct task_struct * futex_find_get_task(pid_t pid)$/;"	f	file:
futex_hash_bucket	futex.c	/^struct futex_hash_bucket {$/;"	s	file:
futex_init	futex.c	/^__initcall(futex_init);$/;"	v
futex_init	futex.c	/^static int __init futex_init(void)$/;"	f	file:
futex_lock_pi	futex.c	/^static int futex_lock_pi(u32 __user *uaddr, unsigned int flags, int detect,$/;"	f	file:
futex_lock_pi_atomic	futex.c	/^static int futex_lock_pi_atomic(u32 __user *uaddr, struct futex_hash_bucket *hb,$/;"	f	file:
futex_pi_state	futex.c	/^struct futex_pi_state {$/;"	s	file:
futex_proxy_trylock_atomic	futex.c	/^static int futex_proxy_trylock_atomic(u32 __user *pifutex,$/;"	f	file:
futex_q	futex.c	/^struct futex_q {$/;"	s	file:
futex_q_init	futex.c	/^static const struct futex_q futex_q_init = {$/;"	v	typeref:struct:futex_q	file:
futex_queues	futex.c	/^static struct futex_hash_bucket futex_queues[1<<FUTEX_HASHBITS];$/;"	v	typeref:struct:futex_hash_bucket	file:
futex_requeue	futex.c	/^static int futex_requeue(u32 __user *uaddr1, unsigned int flags,$/;"	f	file:
futex_top_waiter	futex.c	/^static struct futex_q *futex_top_waiter(struct futex_hash_bucket *hb,$/;"	f	file:
futex_uaddr	futex_compat.c	/^static void __user *futex_uaddr(struct robust_list __user *entry,$/;"	f	file:
futex_unlock_pi	futex.c	/^static int futex_unlock_pi(u32 __user *uaddr, unsigned int flags)$/;"	f	file:
futex_wait	futex.c	/^static int futex_wait(u32 __user *uaddr, unsigned int flags, u32 val,$/;"	f	file:
futex_wait_queue_me	futex.c	/^static void futex_wait_queue_me(struct futex_hash_bucket *hb, struct futex_q *q,$/;"	f	file:
futex_wait_requeue_pi	futex.c	/^static int futex_wait_requeue_pi(u32 __user *uaddr, unsigned int flags,$/;"	f	file:
futex_wait_restart	futex.c	/^static long futex_wait_restart(struct restart_block *restart)$/;"	f	file:
futex_wait_setup	futex.c	/^static int futex_wait_setup(u32 __user *uaddr, u32 val, unsigned int flags,$/;"	f	file:
futex_wake	futex.c	/^futex_wake(u32 __user *uaddr, unsigned int flags, int nr_wake, u32 bitset)$/;"	f	file:
futex_wake_op	futex.c	/^futex_wake_op(u32 __user *uaddr1, unsigned int flags, u32 __user *uaddr2,$/;"	f	file:
fw_apps	swap/energy/debugfs_energy.c	/^static u64 fw_apps(void)$/;"	f	file:
fw_system	swap/energy/debugfs_energy.c	/^static u64 fw_system(void)$/;"	f	file:
g	power/fbearlysuspend.c	/^static struct attribute *g[] = {$/;"	v	typeref:struct:attribute	file:
g	power/hibernate.c	/^static struct attribute * g[] = {$/;"	v	typeref:struct:attribute	file:
g	power/main.c	/^static struct attribute * g[] = {$/;"	v	typeref:struct:attribute	file:
g_mode	swap/wsp/wsp.c	/^static enum wsp_mode g_mode = WSP_OFF;$/;"	v	typeref:enum:wsp_mode	file:
g_next	trace/ftrace.c	/^g_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
g_pfg	swap/wsp/wsp.c	/^static struct pf_group *g_pfg;$/;"	v	typeref:struct:pf_group	file:
g_show	trace/ftrace.c	/^static int g_show(struct seq_file *m, void *v)$/;"	f	file:
g_start	trace/ftrace.c	/^static void *g_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
g_stop	trace/ftrace.c	/^static void g_stop(struct seq_file *m, void *p)$/;"	f	file:
g_tdata	swap/wsp/wsp_res.c	/^static struct wsp_tdata *g_tdata;$/;"	v	typeref:struct:wsp_tdata	file:
gc_i	swap/us_manager/probes/probes.h	/^		struct get_caller_info gc_i;$/;"	m	union:probe_info::__anon56	typeref:struct:probe_info::__anon56::get_caller_info
gcov_action	gcov/gcov.h	/^enum gcov_action {$/;"	g
gcov_ctr_info	gcov/gcov.h	/^struct gcov_ctr_info {$/;"	s
gcov_data_fops	gcov/fs.c	/^static const struct file_operations gcov_data_fops = {$/;"	v	typeref:struct:file_operations	file:
gcov_enable_events	gcov/base.c	/^void gcov_enable_events(void)$/;"	f
gcov_event	gcov/fs.c	/^void gcov_event(enum gcov_action action, struct gcov_info *info)$/;"	f
gcov_events_enabled	gcov/base.c	/^static int gcov_events_enabled;$/;"	v	file:
gcov_fn_info	gcov/gcov.h	/^struct gcov_fn_info {$/;"	s
gcov_fs_init	gcov/fs.c	/^device_initcall(gcov_fs_init);$/;"	v
gcov_fs_init	gcov/fs.c	/^static __init int gcov_fs_init(void)$/;"	f	file:
gcov_info	gcov/gcov.h	/^struct gcov_info {$/;"	s
gcov_info_add	gcov/gcc_3_4.c	/^void gcov_info_add(struct gcov_info *dest, struct gcov_info *source)$/;"	f
gcov_info_dup	gcov/gcc_3_4.c	/^struct gcov_info *gcov_info_dup(struct gcov_info *info)$/;"	f
gcov_info_free	gcov/gcc_3_4.c	/^void gcov_info_free(struct gcov_info *info)$/;"	f
gcov_info_head	gcov/base.c	/^static struct gcov_info *gcov_info_head;$/;"	v	typeref:struct:gcov_info	file:
gcov_info_is_compatible	gcov/gcc_3_4.c	/^int gcov_info_is_compatible(struct gcov_info *info1, struct gcov_info *info2)$/;"	f
gcov_info_reset	gcov/gcc_3_4.c	/^void gcov_info_reset(struct gcov_info *info)$/;"	f
gcov_init	gcov/base.c	/^device_initcall(gcov_init);$/;"	v
gcov_init	gcov/base.c	/^static int __init gcov_init(void)$/;"	f	file:
gcov_iter_free	gcov/gcc_3_4.c	/^void gcov_iter_free(struct gcov_iterator *iter)$/;"	f
gcov_iter_get_info	gcov/gcc_3_4.c	/^struct gcov_info *gcov_iter_get_info(struct gcov_iterator *iter)$/;"	f
gcov_iter_new	gcov/gcc_3_4.c	/^struct gcov_iterator *gcov_iter_new(struct gcov_info *info)$/;"	f
gcov_iter_next	gcov/gcc_3_4.c	/^int gcov_iter_next(struct gcov_iterator *iter)$/;"	f
gcov_iter_start	gcov/gcc_3_4.c	/^void gcov_iter_start(struct gcov_iterator *iter)$/;"	f
gcov_iter_write	gcov/gcc_3_4.c	/^int gcov_iter_write(struct gcov_iterator *iter, struct seq_file *seq)$/;"	f
gcov_iterator	gcov/gcc_3_4.c	/^struct gcov_iterator {$/;"	s	file:
gcov_link	gcov/gcc_3_4.c	/^const struct gcov_link gcov_link[] = {$/;"	v	typeref:struct:gcov_link
gcov_link	gcov/gcov.h	/^struct gcov_link {$/;"	s
gcov_module_notifier	gcov/base.c	/^static int gcov_module_notifier(struct notifier_block *nb, unsigned long event,$/;"	f	file:
gcov_nb	gcov/base.c	/^static struct notifier_block gcov_nb = {$/;"	v	typeref:struct:notifier_block	file:
gcov_node	gcov/fs.c	/^struct gcov_node {$/;"	s	file:
gcov_persist	gcov/fs.c	/^static int gcov_persist = 1;$/;"	v	file:
gcov_persist_setup	gcov/fs.c	/^static int __init gcov_persist_setup(char *str)$/;"	f	file:
gcov_reset_fops	gcov/fs.c	/^static const struct file_operations gcov_reset_fops = {$/;"	v	typeref:struct:file_operations	file:
gcov_seq_next	gcov/fs.c	/^static void *gcov_seq_next(struct seq_file *seq, void *data, loff_t *pos)$/;"	f	file:
gcov_seq_open	gcov/fs.c	/^static int gcov_seq_open(struct inode *inode, struct file *file)$/;"	f	file:
gcov_seq_ops	gcov/fs.c	/^static const struct seq_operations gcov_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
gcov_seq_release	gcov/fs.c	/^static int gcov_seq_release(struct inode *inode, struct file *file)$/;"	f	file:
gcov_seq_show	gcov/fs.c	/^static int gcov_seq_show(struct seq_file *seq, void *data)$/;"	f	file:
gcov_seq_start	gcov/fs.c	/^static void *gcov_seq_start(struct seq_file *seq, loff_t *pos)$/;"	f	file:
gcov_seq_stop	gcov/fs.c	/^static void gcov_seq_stop(struct seq_file *seq, void *data)$/;"	f	file:
gcov_seq_write	gcov/fs.c	/^static ssize_t gcov_seq_write(struct file *file, const char __user *addr,$/;"	f	file:
gcov_type	gcov/gcov.h	/^typedef long gcov_type;$/;"	t
gcov_type	gcov/gcov.h	/^typedef long long gcov_type;$/;"	t
gct_i	swap/us_manager/probes/probes.h	/^		struct get_call_type_info gct_i;$/;"	m	union:probe_info::__anon56	typeref:struct:probe_info::__anon56::get_call_type_info
gdb_cmd_binwrite	debug/gdbstub.c	/^static void gdb_cmd_binwrite(struct kgdb_state *ks)$/;"	f	file:
gdb_cmd_break	debug/gdbstub.c	/^static void gdb_cmd_break(struct kgdb_state *ks)$/;"	f	file:
gdb_cmd_detachkill	debug/gdbstub.c	/^static void gdb_cmd_detachkill(struct kgdb_state *ks)$/;"	f	file:
gdb_cmd_exception_pass	debug/gdbstub.c	/^static int gdb_cmd_exception_pass(struct kgdb_state *ks)$/;"	f	file:
gdb_cmd_getregs	debug/gdbstub.c	/^static void gdb_cmd_getregs(struct kgdb_state *ks)$/;"	f	file:
gdb_cmd_memread	debug/gdbstub.c	/^static void gdb_cmd_memread(struct kgdb_state *ks)$/;"	f	file:
gdb_cmd_memwrite	debug/gdbstub.c	/^static void gdb_cmd_memwrite(struct kgdb_state *ks)$/;"	f	file:
gdb_cmd_query	debug/gdbstub.c	/^static void gdb_cmd_query(struct kgdb_state *ks)$/;"	f	file:
gdb_cmd_reboot	debug/gdbstub.c	/^static int gdb_cmd_reboot(struct kgdb_state *ks)$/;"	f	file:
gdb_cmd_reg_get	debug/gdbstub.c	/^static void gdb_cmd_reg_get(struct kgdb_state *ks)$/;"	f	file:
gdb_cmd_reg_set	debug/gdbstub.c	/^static void gdb_cmd_reg_set(struct kgdb_state *ks)$/;"	f	file:
gdb_cmd_setregs	debug/gdbstub.c	/^static void gdb_cmd_setregs(struct kgdb_state *ks)$/;"	f	file:
gdb_cmd_status	debug/gdbstub.c	/^static void gdb_cmd_status(struct kgdb_state *ks)$/;"	f	file:
gdb_cmd_task	debug/gdbstub.c	/^static void gdb_cmd_task(struct kgdb_state *ks)$/;"	f	file:
gdb_cmd_thread	debug/gdbstub.c	/^static void gdb_cmd_thread(struct kgdb_state *ks)$/;"	f	file:
gdb_get_regs_helper	debug/gdbstub.c	/^static void gdb_get_regs_helper(struct kgdb_state *ks)$/;"	f	file:
gdb_hex_reg_helper	debug/gdbstub.c	/^static char *gdb_hex_reg_helper(int regnum, char *out)$/;"	f	file:
gdb_regs	debug/gdbstub.c	/^static unsigned long		gdb_regs[(NUMREGBYTES +$/;"	v	file:
gdb_regs_to_pt_regs	debug/gdbstub.c	/^void gdb_regs_to_pt_regs(unsigned long *gdb_regs, struct pt_regs *regs)$/;"	f
gdb_serial_stub	debug/gdbstub.c	/^int gdb_serial_stub(struct kgdb_state *ks)$/;"	f
gdbmsgbuf	debug/gdbstub.c	/^static char gdbmsgbuf[BUFMAX + 1];$/;"	v	file:
gdbstub_exit	debug/gdbstub.c	/^void gdbstub_exit(int status)$/;"	f
gdbstub_msg_write	debug/gdbstub.c	/^void gdbstub_msg_write(const char *s, int len)$/;"	f
gdbstub_prev_in_buf_pos	debug/gdbstub.c	/^static int			gdbstub_prev_in_buf_pos;$/;"	v	file:
gdbstub_read_wait	debug/gdbstub.c	/^static int gdbstub_read_wait(void)$/;"	f	file:
gdbstub_state	debug/gdbstub.c	/^int gdbstub_state(struct kgdb_state *ks, char *cmd)$/;"	f
gdbstub_use_prev_in_buf	debug/gdbstub.c	/^static int			gdbstub_use_prev_in_buf;$/;"	v	file:
gen_insn_execbuf	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^EXPORT_SYMBOL_GPL(gen_insn_execbuf);$/;"	v
gen_insn_execbuf	swap/kprobe/arch/arm/swap-asm/trampoline_arm.S	/^gen_insn_execbuf:$/;"	l
gen_insn_execbuf_thumb	swap/uprobe/arch/arm/swap-asm/trampoline_thumb.S	/^gen_insn_execbuf_thumb:$/;"	l
generate_sched_domains	cpuset.c	/^static int generate_sched_domains(cpumask_var_t **domains,$/;"	f	file:
generic_entry_handler	swap/ks_features/file_ops.c	/^static int generic_entry_handler(struct kretprobe_instance *ri,$/;"	f	file:
generic_exec_single	smp.c	/^void generic_exec_single(int cpu, struct call_single_data *csd, int wait)$/;"	f	file:
generic_handle_irq	irq/irqdesc.c	/^EXPORT_SYMBOL_GPL(generic_handle_irq);$/;"	v
generic_handle_irq	irq/irqdesc.c	/^int generic_handle_irq(unsigned int irq)$/;"	f
generic_ptrace_peekdata	ptrace.c	/^int generic_ptrace_peekdata(struct task_struct *tsk, unsigned long addr,$/;"	f
generic_ptrace_pokedata	ptrace.c	/^int generic_ptrace_pokedata(struct task_struct *tsk, unsigned long addr,$/;"	f
generic_ret_handler	swap/ks_features/file_ops.c	/^static int generic_ret_handler(struct kretprobe_instance *ri,$/;"	f	file:
generic_smp_call_function_single_interrupt	smp.c	/^void generic_smp_call_function_single_interrupt(void)$/;"	f
get	swap/energy/lcd/lcd_base.h	/^	get_parameter_lcd get;		\/**< Method to obtain the parameters *\/$/;"	m	struct:lcd_ops
get_accumulated_info	gcov/fs.c	/^static struct gcov_info *get_accumulated_info(struct gcov_node *node)$/;"	f	file:
get_addr_b	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^static unsigned long get_addr_b(unsigned long insn, unsigned long addr)$/;"	f	file:
get_all_procs	swap/us_manager/pf/pf_group.c	/^void get_all_procs(void)$/;"	f
get_arch_timeoffset	time/timekeeping.c	/^static inline u32 get_arch_timeoffset(void) { return 0; }$/;"	f	file:
get_arch_timeoffset	time/timekeeping.c	/^u32 get_arch_timeoffset(void)$/;"	f
get_arg	swap/writer/swap_msg.c	/^static unsigned long get_arg(struct pt_regs *regs, unsigned long n)$/;"	f	file:
get_arg0	swap/energy/energy.c	/^static unsigned long get_arg0(struct pt_regs *regs)$/;"	f	file:
get_avenrun	sched/core.c	/^void get_avenrun(unsigned long *loads, unsigned long offset, int shift)$/;"	f
get_brt_num_of_array	swap/energy/lcd/lcd_base.c	/^static int get_brt_num_of_array(struct lcd_priv_data *lcd, int brt)$/;"	f	file:
get_buffer	power/snapshot.c	/^static void *get_buffer(struct memory_bitmap *bm, struct chain_allocator *ca)$/;"	f	file:
get_busy_buffers_count	swap/buffer/buffer_queue.c	/^int get_busy_buffers_count(void)$/;"	f
get_bx	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^static unsigned long __used get_bx(struct cb_data *data)$/;"	f	file:
get_call_type_handler	swap/preload/preload_module.c	/^static int get_call_type_handler(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
get_call_type_iface	swap/preload/preload_probe.c	/^static struct probe_iface get_call_type_iface = {$/;"	v	typeref:struct:probe_iface	file:
get_call_type_info	swap/preload/preload_probe.h	/^struct get_call_type_info {$/;"	s
get_call_type_init	swap/preload/preload_probe.c	/^static void get_call_type_init(struct us_ip *ip)$/;"	f	file:
get_call_type_uninit	swap/preload/preload_probe.c	/^static void get_call_type_uninit(struct us_ip *ip)$/;"	f	file:
get_callchain_buffers	events/callchain.c	/^int get_callchain_buffers(void)$/;"	f
get_callchain_entry	events/callchain.c	/^static struct perf_callchain_entry *get_callchain_entry(int *rctx)$/;"	f	file:
get_caller_get_uprobe	swap/preload/preload_probe.c	/^static struct uprobe *get_caller_get_uprobe(struct us_ip *ip)$/;"	f	file:
get_caller_handler	swap/preload/preload_module.c	/^static int get_caller_handler(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
get_caller_iface	swap/preload/preload_probe.c	/^static struct probe_iface get_caller_iface = {$/;"	v	typeref:struct:probe_iface	file:
get_caller_info	swap/preload/preload_probe.h	/^struct get_caller_info {$/;"	s
get_caller_info_cleanup	swap/preload/preload_probe.c	/^static void get_caller_info_cleanup(struct probe_info *probe_i)$/;"	f	file:
get_caller_info_copy	swap/preload/preload_probe.c	/^static int get_caller_info_copy(struct probe_info *dest,$/;"	f	file:
get_caller_init	swap/preload/preload_probe.c	/^static void get_caller_init(struct us_ip *ip)$/;"	f	file:
get_caller_register_probe	swap/preload/preload_probe.c	/^static int get_caller_register_probe(struct us_ip *ip)$/;"	f	file:
get_caller_uninit	swap/preload/preload_probe.c	/^static void get_caller_uninit(struct us_ip *ip)$/;"	f	file:
get_caller_unregister_probe	swap/preload/preload_probe.c	/^static void get_caller_unregister_probe(struct us_ip *ip, int disarm)$/;"	f	file:
get_child_by_name	gcov/fs.c	/^static struct gcov_node *get_child_by_name(struct gcov_node *parent,$/;"	f	file:
get_clock_desc	time/posix-clock.c	/^static int get_clock_desc(const clockid_t id, struct posix_clock_desc *cd)$/;"	f	file:
get_compat_itimerspec	compat.c	/^int get_compat_itimerspec(struct itimerspec *dst,$/;"	f
get_compat_itimerval	compat.c	/^static inline long get_compat_itimerval(struct itimerval *o,$/;"	f	file:
get_compat_sigevent	compat.c	/^int get_compat_sigevent(struct sigevent *event,$/;"	f
get_compat_timespec	compat.c	/^EXPORT_SYMBOL_GPL(get_compat_timespec);$/;"	v
get_compat_timespec	compat.c	/^int get_compat_timespec(struct timespec *ts, const struct compat_timespec __user *cts)$/;"	f
get_compat_timeval	compat.c	/^EXPORT_SYMBOL_GPL(get_compat_timeval);$/;"	v
get_compat_timeval	compat.c	/^int get_compat_timeval(struct timeval *tv, const struct compat_timeval __user *ctv)$/;"	f
get_counter	swap/ks_features/ks_features.c	/^static int get_counter(size_t id)$/;"	f	file:
get_cpu_idle_time_us	time/tick-sched.c	/^EXPORT_SYMBOL_GPL(get_cpu_idle_time_us);$/;"	v
get_cpu_idle_time_us	time/tick-sched.c	/^u64 get_cpu_idle_time_us(int cpu, u64 *last_update_time)$/;"	f
get_cpu_iowait_time_us	time/tick-sched.c	/^EXPORT_SYMBOL_GPL(get_cpu_iowait_time_us);$/;"	v
get_cpu_iowait_time_us	time/tick-sched.c	/^u64 get_cpu_iowait_time_us(int cpu, u64 *last_update_time)$/;"	f
get_cpu_itimer	itimer.c	/^static void get_cpu_itimer(struct task_struct *tsk, unsigned int clock_id,$/;"	f	file:
get_css_set	cgroup.c	/^static inline void get_css_set(struct css_set *cg)$/;"	f	file:
get_ctx	events/core.c	/^static void get_ctx(struct perf_event_context *ctx)$/;"	f	file:
get_current_buf	swap/writer/debugfs_writer.c	/^static void *get_current_buf(void)$/;"	f	file:
get_current_probe	swap/uprobe/arch/x86/swap-asm/swap_uprobes.c	/^static struct kprobe *get_current_probe(void)$/;"	f	file:
get_dentry	swap/preload/preload_module.c	/^struct dentry *get_dentry(const char *filepath)$/;"	f
get_energy_data	swap/energy/energy.c	/^static struct energy_data *get_energy_data(struct task_struct *task)$/;"	f	file:
get_energy_dir	swap/energy/debugfs_energy.c	/^struct dentry *get_energy_dir(void)$/;"	f
get_expired_time	power/wakelock.c	/^int get_expired_time(struct wake_lock *lock, ktime_t *expire_time)$/;"	f
get_fbi_data	swap/parser/msg_parser.c	/^int get_fbi_data(struct msg_buf *mb, struct fbi_var_data *vd)$/;"	f
get_fbi_probe	swap/parser/msg_parser.c	/^int get_fbi_probe(struct msg_buf *mb, struct probe_info *pi)$/;"	f
get_feature	swap/ks_features/ks_features.c	/^static struct feature *get_feature(enum feature_id id)$/;"	f	file:
get_fetch_size_function	trace/trace_probe.c	/^static fetch_func_t get_fetch_size_function(const struct fetch_type *type,$/;"	f	file:
get_file_raw_ptr	kcmp.c	/^get_file_raw_ptr(struct task_struct *task, unsigned int idx)$/;"	f	file:
get_flags	swap/task_data/task_data.c	28;"	d	file:
get_fn_info	gcov/gcc_3_4.c	/^static struct gcov_fn_info *get_fn_info(struct gcov_info *info, unsigned int fn)$/;"	f	file:
get_fn_size	gcov/gcc_3_4.c	/^static size_t get_fn_size(struct gcov_info *info)$/;"	f	file:
get_free_rp_inst	swap/kprobe/swap_kprobes.c	/^static struct kretprobe_instance *get_free_rp_inst(struct kretprobe *rp)$/;"	f	file:
get_free_rp_inst_no_alloc	swap/kprobe/swap_kprobes.c	/^get_free_rp_inst_no_alloc(struct kretprobe *rp)$/;"	f	file:
get_free_urp_inst	swap/uprobe/swap_uprobes.c	/^static struct uretprobe_instance *get_free_urp_inst(struct uretprobe *rp)$/;"	f	file:
get_free_urp_inst_no_alloc	swap/uprobe/swap_uprobes.c	/^struct uretprobe_instance *get_free_urp_inst_no_alloc(struct uretprobe *rp)$/;"	f
get_from_read_list	swap/buffer/buffer_queue.c	/^struct swap_subbuffer *get_from_read_list(void)$/;"	f
get_from_write_list	swap/buffer/buffer_queue.c	/^struct swap_subbuffer *get_from_write_list(size_t size, void **ptr_to_write,$/;"	f
get_func	gcov/gcc_3_4.c	/^static struct gcov_fn_info *get_func(struct gcov_iterator *iter)$/;"	f	file:
get_func_u64	swap/energy/debugfs_energy.c	/^static int get_func_u64(void *data, u64 *val)$/;"	f	file:
get_futex_key	futex.c	/^get_futex_key(u32 __user *uaddr, int fshared, union futex_key *key, int rw)$/;"	f	file:
get_futex_key_refs	futex.c	/^static void get_futex_key_refs(union futex_key *key)$/;"	f	file:
get_futex_value_locked	futex.c	/^static int get_futex_value_locked(u32 *dest, u32 __user *from)$/;"	f	file:
get_get_call_type_probe	swap/parser/msg_parser.c	/^int get_get_call_type_probe(struct msg_buf *mb, struct probe_info *pi)$/;"	f
get_get_caller_probe	swap/parser/msg_parser.c	/^int get_get_caller_probe(struct msg_buf *mb, struct probe_info *pi)$/;"	f
get_group	sched/core.c	/^static int get_group(int cpu, struct sd_data *sdd, struct sched_group **sg)$/;"	f	file:
get_highmem_buffer	power/snapshot.c	/^static inline int get_highmem_buffer(int safe_needed) { return 0; }$/;"	f	file:
get_highmem_buffer	power/snapshot.c	/^static inline int get_highmem_buffer(int safe_needed)$/;"	f	file:
get_highmem_page_buffer	power/snapshot.c	/^get_highmem_page_buffer(struct page *page, struct chain_allocator *ca)$/;"	f	file:
get_image_page	power/snapshot.c	/^static void *get_image_page(gfp_t gfp_mask, int safe_needed)$/;"	f	file:
get_incorrect_percent	trace/trace_branch.c	/^static inline long get_incorrect_percent(struct ftrace_branch_data *p)$/;"	f	file:
get_info_index	gcov/fs.c	/^static int get_info_index(struct gcov_node *node, struct gcov_info *info)$/;"	f	file:
get_insn_slot	kprobes.c	/^kprobe_opcode_t __kprobes *get_insn_slot(void)$/;"	f
get_jiffies_64	time/jiffies.c	/^EXPORT_SYMBOL(get_jiffies_64);$/;"	v
get_jiffies_64	time/jiffies.c	/^u64 get_jiffies_64(void)$/;"	f
get_jump_addr	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^EXPORT_SYMBOL_GPL(get_jump_addr);$/;"	v
get_jump_addr	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^unsigned long get_jump_addr(void)$/;"	f
get_jump_addr	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^EXPORT_SYMBOL_GPL(get_jump_addr);$/;"	v
get_jump_addr	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^unsigned long get_jump_addr(void)$/;"	f
get_kprobe	kprobes.c	/^struct kprobe __kprobes *get_kprobe(void *addr)$/;"	f
get_ksymbol	module.c	/^static const char *get_ksymbol(struct module *mod,$/;"	f	file:
get_ksymbol_core	kallsyms.c	/^static unsigned long get_ksymbol_core(struct kallsym_iter *iter)$/;"	f	file:
get_ksymbol_mod	kallsyms.c	/^static int get_ksymbol_mod(struct kallsym_iter *iter)$/;"	f	file:
get_last_crashkernel	kexec.c	/^static __init char *get_last_crashkernel(char *cmdline,$/;"	f	file:
get_lcd_array_time	swap/energy/lcd/lcd_base.c	/^void get_lcd_array_time(struct lcd_ops *ops, u64 *array_time)$/;"	f
get_lcd_priv	swap/energy/lcd/lcd_base.c	/^static struct lcd_priv_data *get_lcd_priv(struct lcd_ops *ops)$/;"	f	file:
get_lcd_size_array	swap/energy/lcd/lcd_base.c	/^size_t get_lcd_size_array(struct lcd_ops *ops)$/;"	f
get_link_target	gcov/fs.c	/^static char *get_link_target(const char *filename, const struct gcov_link *ext)$/;"	f	file:
get_loc_data	trace/trace_probe.c	/^static inline void *get_loc_data(u32 *dl, void *ent)$/;"	f	file:
get_lock_depth	lockdep.c	/^static inline int get_lock_depth(struct lock_list *child)$/;"	f	file:
get_lock_parent	lockdep.c	/^static inline struct lock_list *get_lock_parent(struct lock_list *child)$/;"	f	file:
get_lock_stats	lockdep.c	/^static struct lock_class_stats *get_lock_stats(struct lock_class *class)$/;"	f	file:
get_magic	swap/task_data/task_data.c	27;"	d	file:
get_map_read	swap/ks_features/file_ops.c	/^static inline struct map *get_map_read(void)$/;"	f	file:
get_map_write	swap/ks_features/file_ops.c	/^static inline struct map *get_map_write(void)$/;"	f	file:
get_mm_exe_file	fork.c	/^struct file *get_mm_exe_file(struct mm_struct *mm)$/;"	f
get_modinfo	module.c	/^static char *get_modinfo(struct load_info *info, const char *tag)$/;"	f	file:
get_monotonic_boottime	time/timekeeping.c	/^EXPORT_SYMBOL_GPL(get_monotonic_boottime);$/;"	v
get_monotonic_boottime	time/timekeeping.c	/^void get_monotonic_boottime(struct timespec *ts)$/;"	f
get_monotonic_coarse	time/timekeeping.c	/^struct timespec get_monotonic_coarse(void)$/;"	f
get_new_cssid	cgroup.c	/^static struct css_id *get_new_cssid(struct cgroup_subsys *ss, int depth)$/;"	f	file:
get_next_timer_interrupt	timer.c	/^unsigned long get_next_timer_interrupt(unsigned long now)$/;"	f
get_node_by_name	gcov/fs.c	/^static struct gcov_node *get_node_by_name(const char *name)$/;"	f	file:
get_node_info	gcov/fs.c	/^static struct gcov_info *get_node_info(struct gcov_node *node)$/;"	f	file:
get_nohz_timer_target	sched/core.c	/^int get_nohz_timer_target(void)$/;"	f
get_ntime	swap/energy/tm_stat.h	/^static inline u64 get_ntime(void)$/;"	f
get_offset	module.c	/^static long get_offset(struct module *mod, unsigned int *size,$/;"	f	file:
get_online_cpus	cpu.c	/^EXPORT_SYMBOL_GPL(get_online_cpus);$/;"	v
get_online_cpus	cpu.c	/^void get_online_cpus(void)$/;"	f
get_ops_t	swap/energy/lcd/lcd_base.c	/^typedef struct lcd_ops *(*get_ops_t)(void);$/;"	t	typeref:struct:get_ops_t	file:
get_optimized_kprobe	kprobes.c	/^static struct kprobe *__kprobes get_optimized_kprobe(unsigned long addr)$/;"	f	file:
get_optinsn_slot	kprobes.c	/^kprobe_opcode_t __kprobes *get_optinsn_slot(void)$/;"	f
get_order_for_alloc_pages	swap/buffer/kernel_operations.h	/^static inline unsigned int get_order_for_alloc_pages(size_t memory_size)$/;"	f
get_packet	debug/gdbstub.c	/^static void get_packet(char *buffer)$/;"	f	file:
get_pages_count_in_subbuffer	swap/buffer/buffer_queue.c	/^int get_pages_count_in_subbuffer(void)$/;"	f
get_parameter_energy	swap/energy/energy.c	/^int get_parameter_energy(enum parameter_energy pe, void *buf, size_t sz)$/;"	f
get_parameter_lcd	swap/energy/lcd/lcd_base.h	/^typedef unsigned long (*get_parameter_lcd)(struct lcd_ops *ops,$/;"	t
get_parent_ip	sched/core.c	/^notrace unsigned long get_parent_ip(unsigned long addr)$/;"	f
get_pdu_int	trace/blktrace.c	/^static __u64 get_pdu_int(const struct trace_entry *ent)$/;"	f	file:
get_pdu_remap	trace/blktrace.c	/^static void get_pdu_remap(const struct trace_entry *ent,$/;"	f	file:
get_pf_group_by_comm	swap/us_manager/pf/pf_group.c	/^EXPORT_SYMBOL_GPL(get_pf_group_by_comm);$/;"	v
get_pf_group_by_comm	swap/us_manager/pf/pf_group.c	/^struct pf_group *get_pf_group_by_comm(char *comm, void *priv)$/;"	f
get_pf_group_by_dentry	swap/us_manager/pf/pf_group.c	/^EXPORT_SYMBOL_GPL(get_pf_group_by_dentry);$/;"	v
get_pf_group_by_dentry	swap/us_manager/pf/pf_group.c	/^struct pf_group *get_pf_group_by_dentry(struct dentry *dentry, void *priv)$/;"	f
get_pf_group_by_tgid	swap/us_manager/pf/pf_group.c	/^EXPORT_SYMBOL_GPL(get_pf_group_by_tgid);$/;"	v
get_pf_group_by_tgid	swap/us_manager/pf/pf_group.c	/^struct pf_group *get_pf_group_by_tgid(pid_t tgid, void *priv)$/;"	f
get_pf_group_dumb	swap/us_manager/pf/pf_group.c	/^EXPORT_SYMBOL_GPL(get_pf_group_dumb);$/;"	v
get_pf_group_dumb	swap/us_manager/pf/pf_group.c	/^struct pf_group *get_pf_group_dumb(void *priv)$/;"	f
get_pf_priv	swap/us_manager/pf/proc_filters.c	/^void *get_pf_priv(struct proc_filter *filter)$/;"	f
get_pfg_by_app_info	swap/parser/us_inst.c	/^static int get_pfg_by_app_info(struct app_info_data *app_info,$/;"	f	file:
get_pid_task	pid.c	/^EXPORT_SYMBOL_GPL(get_pid_task);$/;"	v
get_pid_task	pid.c	/^struct task_struct *get_pid_task(struct pid *pid, enum pid_type type)$/;"	f
get_posix_clock	time/posix-clock.c	/^static struct posix_clock *get_posix_clock(struct file *fp)$/;"	f	file:
get_pred_parent	trace/trace_events_filter.c	/^get_pred_parent(struct filter_pred *pred, struct filter_pred *preds,$/;"	f	file:
get_preload_flags	swap/preload/preload_threads.c	/^unsigned long get_preload_flags(struct task_struct *task)$/;"	f
get_preload_probe	swap/parser/msg_parser.c	/^int get_preload_probe(struct msg_buf *mb, struct probe_info *pi)$/;"	f
get_preload_td	swap/preload/preload_threads.c	/^static inline struct preload_td *get_preload_td(struct task_struct *task)$/;"	f	file:
get_pte	swap/kprobe/arch/arm/swap-asm/memory_rwx.c	/^static pte_t get_pte(unsigned long page_addr)$/;"	f	file:
get_pte_cb	swap/kprobe/arch/arm/swap-asm/memory_rwx.c	/^static int get_pte_cb(pte_t *ptep, pgtable_t token,$/;"	f	file:
get_ptr_by_num	swap/fbiprobe/regs.h	/^static inline unsigned long *get_ptr_by_num(struct pt_regs *regs,$/;"	f
get_pwq	workqueue.c	/^static void get_pwq(struct pool_workqueue *pwq)$/;"	f	file:
get_quiet	swap/us_manager/us_manager.c	/^EXPORT_SYMBOL_GPL(get_quiet);$/;"	v
get_quiet	swap/us_manager/us_manager.c	/^enum quiet_type get_quiet(void)$/;"	f
get_r0	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^static unsigned long __used get_r0(struct cb_data *data)$/;"	f	file:
get_readable_buf_cnt	swap/buffer/buffer_queue.c	/^unsigned int get_readable_buf_cnt(void)$/;"	f
get_recursion_context	events/internal.h	/^static inline int get_recursion_context(int *recursion)$/;"	f
get_regs_ip	swap/writer/kernel_operations.h	63;"	d
get_regs_ip	swap/writer/kernel_operations.h	70;"	d
get_regs_ret_func	swap/writer/kernel_operations.h	/^static inline u32 get_regs_ret_func(struct pt_regs *regs)$/;"	f
get_regs_ret_func	swap/writer/kernel_operations.h	64;"	d
get_regs_ret_val	swap/writer/kernel_operations.h	65;"	d
get_regs_ret_val	swap/writer/kernel_operations.h	71;"	d
get_regs_stack_ptr	swap/writer/kernel_operations.h	66;"	d
get_regs_stack_ptr	swap/writer/kernel_operations.h	72;"	d
get_retprobe	swap/parser/msg_parser.c	/^int get_retprobe(struct msg_buf *mb, struct probe_info *pi)$/;"	f
get_return_for_leaf	trace/trace_functions_graph.c	/^get_return_for_leaf(struct trace_iterator *iter,$/;"	f	file:
get_rloc_data	trace/trace_probe.c	/^static inline void *get_rloc_data(u32 *dl)$/;"	f	file:
get_rloc_len	trace/trace_probe.h	74;"	d
get_rloc_offs	trace/trace_probe.h	75;"	d
get_rr_interval	sched/sched.h	/^	unsigned int (*get_rr_interval) (struct rq *rq,$/;"	m	struct:sched_class
get_rr_interval_fair	sched/fair.c	/^static unsigned int get_rr_interval_fair(struct rq *rq, struct task_struct *task)$/;"	f	file:
get_rr_interval_idle	sched/idle_task.c	/^static unsigned int get_rr_interval_idle(struct rq *rq, struct task_struct *task)$/;"	f	file:
get_rr_interval_rt	sched/rt.c	/^static unsigned int get_rr_interval_rt(struct rq *rq, struct task_struct *task)$/;"	f	file:
get_rr_interval_stop	sched/stop_task.c	/^get_rr_interval_stop(struct rq *rq, struct task_struct *task)$/;"	f	file:
get_safe_page	power/snapshot.c	/^unsigned long get_safe_page(gfp_t gfp_mask)$/;"	f
get_safe_write_buffer	power/snapshot.c	/^static inline int get_safe_write_buffer(void) { return 0; }$/;"	f	file:
get_sd_load_idx	sched/fair.c	/^static inline int get_sd_load_idx(struct sched_domain *sd,$/;"	f	file:
get_seccomp_filter	seccomp.c	/^void get_seccomp_filter(struct task_struct *tsk)$/;"	f
get_seconds	time/timekeeping.c	/^EXPORT_SYMBOL(get_seconds);$/;"	v
get_seconds	time/timekeeping.c	/^unsigned long get_seconds(void)$/;"	f
get_signal_to_deliver	signal.c	/^int get_signal_to_deliver(siginfo_t *info, struct k_sigaction *return_ka,$/;"	f
get_softlockup_thresh	watchdog.c	/^static int get_softlockup_thresh(void)$/;"	f	file:
get_string	swap/parser/msg_buf.c	/^int get_string(struct msg_buf *mb, char **str)$/;"	f
get_suspend_state	power/earlysuspend.c	/^suspend_state_t get_suspend_state(void)$/;"	f
get_swap_reader	power/swap.c	/^static int get_swap_reader(struct swap_map_handle *handle,$/;"	f	file:
get_swap_writer	power/swap.c	/^static int get_swap_writer(struct swap_map_handle *handle)$/;"	f	file:
get_symbol_offset	kallsyms.c	/^static unsigned int get_symbol_offset(unsigned long pos)$/;"	f	file:
get_symbol_pos	kallsyms.c	/^static unsigned long get_symbol_pos(unsigned long addr,$/;"	f	file:
get_sys_map_item	swap/ksyms/no_ksyms.c	/^static struct sys_map_item *get_sys_map_item(char *begin, char *end)$/;"	f	file:
get_sys_name	swap/ks_features/ks_features.c	/^static const char *get_sys_name(size_t id)$/;"	f	file:
get_sysctl	sysctl_binary.c	/^static const struct bin_table *get_sysctl(const int *name, int nlen, char *path)$/;"	f	file:
get_system	swap/energy/lcd/lcd_debugfs.c	/^static int get_system(void *data, u64 *val)$/;"	f	file:
get_taint	panic.c	/^unsigned long get_taint(void)$/;"	f
get_task_cred	cred.c	/^const struct cred *get_task_cred(struct task_struct *task)$/;"	f
get_task_mm	fork.c	/^EXPORT_SYMBOL_GPL(get_task_mm);$/;"	v
get_task_mm	fork.c	/^struct mm_struct *get_task_mm(struct task_struct *task)$/;"	f
get_task_pid	pid.c	/^EXPORT_SYMBOL_GPL(get_task_pid);$/;"	v
get_task_pid	pid.c	/^struct pid *get_task_pid(struct task_struct *task, enum pid_type type)$/;"	f
get_tdata	swap/wsp/wsp_res.c	/^static struct wsp_tdata *get_tdata(void)$/;"	f	file:
get_timestamp	watchdog.c	/^static unsigned long get_timestamp(void)$/;"	f	file:
get_total_entries	trace/trace.c	/^get_total_entries(struct trace_buffer *buf,$/;"	f	file:
get_trace_buf	trace/trace.c	/^static char *get_trace_buf(void)$/;"	f	file:
get_tracepoint	tracepoint.c	/^static struct tracepoint_entry *get_tracepoint(const char *name)$/;"	f	file:
get_trampoline_vaddr	events/uprobes.c	/^static unsigned long get_trampoline_vaddr(void)$/;"	f	file:
get_tree	audit_tree.c	/^static inline void get_tree(struct audit_tree *tree)$/;"	f	file:
get_type	gcov/gcc_3_4.c	/^static struct type_info *get_type(struct gcov_iterator *iter)$/;"	f	file:
get_u32	seccomp.c	/^static inline u32 get_u32(u64 data, int index)$/;"	f	file:
get_u32	swap/parser/msg_buf.c	/^int get_u32(struct msg_buf *mb, u32 *val)$/;"	f
get_u64	swap/parser/msg_buf.c	/^int get_u64(struct msg_buf *mb, u64 *val)$/;"	f
get_u8	swap/parser/msg_buf.c	/^int get_u8(struct msg_buf *mb, u8 *val)$/;"	f
get_ukprobe	swap/uprobe/swap_uprobes.c	/^struct kprobe *get_ukprobe(void *addr, pid_t tgid)$/;"	f
get_ukprobe_by_insn_slot	swap/uprobe/swap_uprobes.c	/^struct kprobe *get_ukprobe_by_insn_slot(void *addr,$/;"	f
get_unbound_pool	workqueue.c	/^static struct worker_pool *get_unbound_pool(const struct workqueue_attrs *attrs)$/;"	f	file:
get_update_sysctl_factor	sched/fair.c	/^static int get_update_sysctl_factor(void)$/;"	f	file:
get_uprobe	swap/us_manager/probes/register_probes.h	/^	struct uprobe *(*get_uprobe)(struct us_ip *);$/;"	m	struct:probe_iface	typeref:struct:probe_iface::get_uprobe
get_usage_char	lockdep.c	/^static char get_usage_char(struct lock_class *class, enum lock_usage_bit bit)$/;"	f	file:
get_usage_chars	lockdep.c	/^void get_usage_chars(struct lock_class *class, char usage[LOCK_USAGE_CHARS])$/;"	f
get_used_rp_inst	swap/kprobe/swap_kprobes.c	/^static struct kretprobe_instance *get_used_rp_inst(struct kretprobe *rp)$/;"	f	file:
get_used_urp_inst	swap/uprobe/swap_uprobes.c	/^static struct uretprobe_instance *get_used_urp_inst(struct uretprobe *rp)$/;"	f	file:
get_user_cpu_mask	sched/core.c	/^static int get_user_cpu_mask(unsigned long __user *user_mask_ptr, unsigned len,$/;"	f	file:
get_user_pages_uprobe	swap/kprobe/swap_kprobes_deps.c	/^int get_user_pages_uprobe(struct task_struct *tsk, struct mm_struct *mm,$/;"	f
get_utask	events/uprobes.c	/^static struct uprobe_task *get_utask(void)$/;"	f	file:
get_uts	utsname_sysctl.c	/^static void *get_uts(ctl_table *table, int write)$/;"	f	file:
get_vtime_delta	sched/cputime.c	/^static cputime_t get_vtime_delta(struct task_struct *tsk)$/;"	f	file:
get_webprobe	swap/parser/msg_parser.c	/^int get_webprobe(struct msg_buf *mb, struct probe_info *pi)$/;"	f
get_work_color	workqueue.c	/^static int get_work_color(struct work_struct *work)$/;"	f	file:
get_work_pool	workqueue.c	/^static struct worker_pool *get_work_pool(struct work_struct *work)$/;"	f	file:
get_work_pool_id	workqueue.c	/^static int get_work_pool_id(struct work_struct *work)$/;"	f	file:
get_work_pwq	workqueue.c	/^static struct pool_workqueue *get_work_pwq(struct work_struct *work)$/;"	f	file:
get_writable_buf_cnt	swap/buffer/buffer_queue.c	/^unsigned int get_writable_buf_cnt(void)$/;"	f
get_write_msg_probe	swap/parser/msg_parser.c	/^int get_write_msg_probe(struct msg_buf *mb, struct probe_info *pi)$/;"	f
get_wrt_launcher_port	swap/parser/msg_cmd.c	/^int get_wrt_launcher_port(void)$/;"	f
get_xol_area	events/uprobes.c	/^static struct xol_area *get_xol_area(void)$/;"	f	file:
get_xtime_and_monotonic_and_sleep_offset	time/timekeeping.c	/^void get_xtime_and_monotonic_and_sleep_offset(struct timespec *xtim,$/;"	f
getboottime	time/timekeeping.c	/^EXPORT_SYMBOL_GPL(getboottime);$/;"	v
getboottime	time/timekeeping.c	/^void getboottime(struct timespec *ts)$/;"	f
getnstime_raw_and_real	time/timekeeping.c	/^EXPORT_SYMBOL(getnstime_raw_and_real);$/;"	v
getnstime_raw_and_real	time/timekeeping.c	/^void getnstime_raw_and_real(struct timespec *ts_raw, struct timespec *ts_real)$/;"	f
getnstimeofday	time/timekeeping.c	/^EXPORT_SYMBOL(getnstimeofday);$/;"	v
getnstimeofday	time/timekeeping.c	/^void getnstimeofday(struct timespec *ts)$/;"	f
getrawmonotonic	time/timekeeping.c	/^EXPORT_SYMBOL(getrawmonotonic);$/;"	v
getrawmonotonic	time/timekeeping.c	/^void getrawmonotonic(struct timespec *ts)$/;"	f
getrusage	sys.c	/^int getrusage(struct task_struct *p, int who, struct rusage __user *ru)$/;"	f
getthread	debug/gdbstub.c	/^static struct task_struct *getthread(struct pt_regs *regs, int tid)$/;"	f	file:
gettime	time/alarmtimer.c	/^	ktime_t			(*gettime)(void);$/;"	m	struct:alarm_base	file:
gfp_mask	audit.c	/^	gfp_t		     gfp_mask;$/;"	m	struct:audit_buffer	file:
gfp_mask	power/snapshot.c	/^	gfp_t gfp_mask;		\/* mask for allocating pages *\/$/;"	m	struct:chain_allocator	file:
gid	audit.h	/^			kgid_t			gid;$/;"	m	struct:audit_context::__anon15::__anon17
gid	audit.h	/^	kgid_t			gid;$/;"	m	struct:audit_names
gid	audit.h	/^	kgid_t		    gid, egid, sgid, fsgid;$/;"	m	struct:audit_context
gid_m_show	user_namespace.c	/^static int gid_m_show(struct seq_file *seq, void *v)$/;"	f	file:
gid_m_start	user_namespace.c	/^static void *gid_m_start(struct seq_file *seq, loff_t *ppos)$/;"	f	file:
global_list	async.c	/^	struct list_head	global_list;$/;"	m	struct:async_entry	typeref:struct:async_entry::list_head	file:
global_ops	trace/ftrace.c	/^static struct ftrace_ops global_ops = {$/;"	v	typeref:struct:ftrace_ops	file:
global_ops	trace/ftrace.c	/^static struct ftrace_ops global_ops;$/;"	v	typeref:struct:ftrace_ops	file:
global_rt_period	sched/sched.h	/^static inline u64 global_rt_period(void)$/;"	f
global_rt_runtime	sched/sched.h	/^static inline u64 global_rt_runtime(void)$/;"	f
global_start_up	trace/ftrace.c	/^static int global_start_up;$/;"	v	file:
global_trace	trace/trace.c	/^static struct trace_array	global_trace;$/;"	v	typeref:struct:trace_array	file:
go	power/swap.c	/^	wait_queue_head_t go;                     \/* start compression *\/$/;"	m	struct:cmp_data	file:
go	power/swap.c	/^	wait_queue_head_t go;                     \/* start crc update *\/$/;"	m	struct:crc_data	file:
go	power/swap.c	/^	wait_queue_head_t go;                     \/* start decompression *\/$/;"	m	struct:dec_data	file:
goner	audit_tree.c	/^	int goner;$/;"	m	struct:audit_tree	file:
good_sigevent	posix-timers.c	/^static struct pid *good_sigevent(sigevent_t * event)$/;"	f	file:
got_nohz_idle_kick	sched/core.c	/^static inline bool got_nohz_idle_kick(void)$/;"	f	file:
gp_flags	rcutree.h	/^	int gp_flags;				\/* Commands for GP task. *\/$/;"	m	struct:rcu_state
gp_kthread	rcutree.h	/^	struct task_struct *gp_kthread;		\/* Task for grace periods. *\/$/;"	m	struct:rcu_state	typeref:struct:rcu_state::task_struct
gp_max	rcutree.h	/^	unsigned long gp_max;			\/* Maximum GP duration in *\/$/;"	m	struct:rcu_state
gp_start	rcutree.h	/^	unsigned long gp_start;			\/* Time at which GP started, *\/$/;"	m	struct:rcu_state
gp_tasks	rcutiny_plugin.h	/^	struct list_head *gp_tasks;$/;"	m	struct:rcu_preempt_ctrlblk	typeref:struct:rcu_preempt_ctrlblk::list_head
gp_tasks	rcutree.h	/^	struct list_head *gp_tasks;$/;"	m	struct:rcu_node	typeref:struct:rcu_node::list_head
gp_wq	rcutree.h	/^	wait_queue_head_t gp_wq;		\/* Where GP task waits. *\/$/;"	m	struct:rcu_state
gpcpu	rcutiny_plugin.h	/^	u8 gpcpu;		\/* Last grace period blocked by the CPU. *\/$/;"	m	struct:rcu_preempt_ctrlblk
gplok	module.c	/^	bool gplok;$/;"	m	struct:find_symbol_arg	file:
gpnum	rcutiny_plugin.h	/^	u8 gpnum;		\/* Current grace period. *\/$/;"	m	struct:rcu_preempt_ctrlblk
gpnum	rcutree.h	/^	unsigned long	gpnum;		\/* Highest gp number that this CPU *\/$/;"	m	struct:rcu_data
gpnum	rcutree.h	/^	unsigned long gpnum;			\/* Current gp number. *\/$/;"	m	struct:rcu_state
gpnum	rcutree.h	/^	unsigned long gpnum;	\/* Current grace period for this node. *\/$/;"	m	struct:rcu_node
gpu_job_enqueue	trace/gpu-traces.c	/^EXPORT_TRACEPOINT_SYMBOL(gpu_job_enqueue);$/;"	v
gpu_sched_switch	trace/gpu-traces.c	/^EXPORT_TRACEPOINT_SYMBOL(gpu_sched_switch);$/;"	v
graph_array	trace/trace_functions_graph.c	/^static struct trace_array *graph_array;$/;"	v	typeref:struct:trace_array	file:
graph_depth_fops	trace/trace_functions_graph.c	/^static const struct file_operations graph_depth_fops = {$/;"	v	typeref:struct:file_operations	file:
graph_depth_read	trace/trace_functions_graph.c	/^graph_depth_read(struct file *filp, char __user *ubuf, size_t cnt,$/;"	f	file:
graph_depth_write	trace/trace_functions_graph.c	/^graph_depth_write(struct file *filp, const char __user *ubuf, size_t cnt,$/;"	f	file:
graph_hang_thresh	trace/trace_selftest.c	/^static unsigned int graph_hang_thresh;$/;"	v	file:
graph_init_task	trace/ftrace.c	/^graph_init_task(struct task_struct *t, struct ftrace_ret_stack *ret_stack)$/;"	f	file:
graph_lock	lockdep.c	/^static int graph_lock(void)$/;"	f	file:
graph_trace_close	trace/trace_functions_graph.c	/^void graph_trace_close(struct trace_iterator *iter)$/;"	f
graph_trace_init	trace/trace_functions_graph.c	/^static int graph_trace_init(struct trace_array *tr)$/;"	f	file:
graph_trace_open	trace/trace_functions_graph.c	/^void graph_trace_open(struct trace_iterator *iter)$/;"	f
graph_trace_reset	trace/trace_functions_graph.c	/^static void graph_trace_reset(struct trace_array *tr)$/;"	f	file:
graph_unlock	lockdep.c	/^static inline int graph_unlock(void)$/;"	f	file:
group_balance_cpu	sched/core.c	/^int group_balance_cpu(struct sched_group *sg)$/;"	f
group_can_go_on	events/core.c	/^static int group_can_go_on(struct perf_event *event,$/;"	f	file:
group_capacity	sched/fair.c	/^	unsigned long group_capacity;$/;"	m	struct:sg_lb_stats	file:
group_cfs_rq	sched/fair.c	/^static inline struct cfs_rq *group_cfs_rq(struct sched_entity *grp)$/;"	f	file:
group_first_cpu	sched/sched.h	/^static inline unsigned int group_first_cpu(struct sched_group *group)$/;"	f
group_has_capacity	sched/fair.c	/^	int group_has_capacity; \/* Is there extra capacity in the group? *\/$/;"	m	struct:sg_lb_stats	file:
group_imb	sched/fair.c	/^	int group_imb; \/* Is there an imbalance in the group ? *\/$/;"	m	struct:sg_lb_stats	file:
group_imb	sched/fair.c	/^	int group_imb; \/* Is there imbalance in this sd *\/$/;"	m	struct:sd_lb_stats	file:
group_load	sched/fair.c	/^	unsigned long group_load; \/* Total load over the CPUs of the group *\/$/;"	m	struct:sg_lb_stats	file:
group_path	sched/debug.c	/^static char group_path[PATH_MAX];$/;"	v	file:
group_rt_rq	sched/rt.c	/^static inline struct rt_rq *group_rt_rq(struct sched_rt_entity *rt_se)$/;"	f	file:
group_sched_in	events/core.c	/^group_sched_in(struct perf_event *group_event,$/;"	f	file:
group_sched_out	events/core.c	/^group_sched_out(struct perf_event *group_event,$/;"	f	file:
group_send_sig_info	signal.c	/^int group_send_sig_info(int sig, struct siginfo *info, struct task_struct *p)$/;"	f
group_weight	sched/fair.c	/^	unsigned long group_weight;$/;"	m	struct:sg_lb_stats	file:
group_weight	sched/sched.h	/^	unsigned int group_weight;$/;"	m	struct:sched_group
groups16_from_user	uid16.c	/^static int groups16_from_user(struct group_info *group_info,$/;"	f	file:
groups16_to_user	uid16.c	/^static int groups16_to_user(old_gid_t __user *grouplist,$/;"	f	file:
groups_alloc	groups.c	/^EXPORT_SYMBOL(groups_alloc);$/;"	v
groups_alloc	groups.c	/^struct group_info *groups_alloc(int gidsetsize)$/;"	f
groups_free	groups.c	/^EXPORT_SYMBOL(groups_free);$/;"	v
groups_free	groups.c	/^void groups_free(struct group_info *group_info)$/;"	f
groups_from_user	groups.c	/^static int groups_from_user(struct group_info *group_info,$/;"	f	file:
groups_search	groups.c	/^int groups_search(const struct group_info *group_info, kgid_t grp)$/;"	f
groups_sort	groups.c	/^static void groups_sort(struct group_info *group_info)$/;"	f	file:
groups_to_user	groups.c	/^static int groups_to_user(gid_t __user *grouplist,$/;"	f	file:
grow_tree_refs	auditsc.c	/^static int grow_tree_refs(struct audit_context *ctx)$/;"	f	file:
grp	module.c	/^	struct attribute_group grp;$/;"	m	struct:module_sect_attrs	typeref:struct:module_sect_attrs::attribute_group	file:
grp	params.c	/^	struct attribute_group grp;$/;"	m	struct:module_param_attrs	typeref:struct:module_param_attrs::attribute_group	file:
grphi	rcutree.h	/^	int	grphi;		\/* highest-numbered CPU or group here. *\/$/;"	m	struct:rcu_node
grplo	rcutree.h	/^	int	grplo;		\/* lowest-numbered CPU or group here. *\/$/;"	m	struct:rcu_node
grpmask	rcutree.h	/^	unsigned long grpmask;		\/* Mask to apply to leaf qsmask. *\/$/;"	m	struct:rcu_data
grpmask	rcutree.h	/^	unsigned long grpmask;	\/* Mask to apply to parent qsmask. *\/$/;"	m	struct:rcu_node
grpnum	rcutree.h	/^	u8	grpnum;		\/* CPU\/group number for next level up. *\/$/;"	m	struct:rcu_node
guarantee_online_cpus	cpuset.c	/^static void guarantee_online_cpus(const struct cpuset *cs,$/;"	f	file:
guarantee_online_mems	cpuset.c	/^static void guarantee_online_mems(const struct cpuset *cs, nodemask_t *pmask)$/;"	f	file:
guest_enter	context_tracking.c	/^EXPORT_SYMBOL_GPL(guest_enter);$/;"	v
guest_enter	context_tracking.c	/^void guest_enter(void)$/;"	f
guest_exit	context_tracking.c	/^EXPORT_SYMBOL_GPL(guest_exit);$/;"	v
guest_exit	context_tracking.c	/^void guest_exit(void)$/;"	f
h	swap/ks_features/ksf_msg.c	/^	struct msg_sys_header h;$/;"	m	struct:msg_sys_entry	typeref:struct:msg_sys_entry::msg_sys_header	file:
h	swap/ks_features/ksf_msg.c	/^	struct msg_sys_header h;$/;"	m	struct:msg_sys_exit	typeref:struct:msg_sys_exit::msg_sys_header	file:
h_load	sched/sched.h	/^	unsigned long h_load;$/;"	m	struct:cfs_rq
h_load_throttle	sched/sched.h	/^	unsigned long h_load_throttle;$/;"	m	struct:rq
h_nr_running	sched/sched.h	/^	unsigned int nr_running, h_nr_running;$/;"	m	struct:cfs_rq
handle	power/user.c	/^	struct snapshot_handle handle;$/;"	m	struct:snapshot_data	typeref:struct:snapshot_data::snapshot_handle	file:
handle	swap/nsp/nsp_tdata.h	/^	void *handle;$/;"	m	struct:tdata
handle	swap/preload/preload_pd.c	/^	void __user *handle;$/;"	m	struct:process_data	file:
handle	swap/us_manager/callbacks.c	/^	int handle;$/;"	m	struct:cb_item	file:
handle_bad_irq	irq/handle.c	/^void handle_bad_irq(unsigned int irq, struct irq_desc *desc)$/;"	f
handle_ctrl_cmd	debug/kdb/kdb_main.c	/^static int handle_ctrl_cmd(char *cmd)$/;"	f	file:
handle_early_requeue_pi_wakeup	futex.c	/^int handle_early_requeue_pi_wakeup(struct futex_hash_bucket *hb,$/;"	f	file:
handle_edge_eoi_irq	irq/chip.c	/^void handle_edge_eoi_irq(unsigned int irq, struct irq_desc *desc)$/;"	f
handle_edge_irq	irq/chip.c	/^EXPORT_SYMBOL(handle_edge_irq);$/;"	v
handle_edge_irq	irq/chip.c	/^handle_edge_irq(unsigned int irq, struct irq_desc *desc)$/;"	f
handle_fasteoi_irq	irq/chip.c	/^handle_fasteoi_irq(unsigned int irq, struct irq_desc *desc)$/;"	f
handle_futex_death	futex.c	/^int handle_futex_death(u32 __user *uaddr, struct task_struct *curr, int pi)$/;"	f
handle_irq_event	irq/handle.c	/^irqreturn_t handle_irq_event(struct irq_desc *desc)$/;"	f
handle_irq_event_percpu	irq/handle.c	/^handle_irq_event_percpu(struct irq_desc *desc, struct irqaction *action)$/;"	f
handle_level_irq	irq/chip.c	/^EXPORT_SYMBOL_GPL(handle_level_irq);$/;"	v
handle_level_irq	irq/chip.c	/^handle_level_irq(unsigned int irq, struct irq_desc *desc)$/;"	f
handle_nested_irq	irq/chip.c	/^EXPORT_SYMBOL_GPL(handle_nested_irq);$/;"	v
handle_nested_irq	irq/chip.c	/^void handle_nested_irq(unsigned int irq)$/;"	f
handle_one	auditsc.c	/^static inline void handle_one(const struct inode *inode)$/;"	f	file:
handle_op	rtmutex-tester.c	/^static int handle_op(struct test_thread_data *td, int lockwakeup)$/;"	f	file:
handle_path	auditsc.c	/^static void handle_path(const struct dentry *dentry)$/;"	f	file:
handle_percpu_devid_irq	irq/chip.c	/^void handle_percpu_devid_irq(unsigned int irq, struct irq_desc *desc)$/;"	f
handle_percpu_irq	irq/chip.c	/^handle_percpu_irq(unsigned int irq, struct irq_desc *desc)$/;"	f
handle_poweroff	power/poweroff.c	/^static void handle_poweroff(int key)$/;"	f	file:
handle_simple_irq	irq/chip.c	/^EXPORT_SYMBOL_GPL(handle_simple_irq);$/;"	v
handle_simple_irq	irq/chip.c	/^handle_simple_irq(unsigned int irq, struct irq_desc *desc)$/;"	f
handle_singlestep	events/uprobes.c	/^static void handle_singlestep(struct uprobe_task *utask, struct pt_regs *regs)$/;"	f	file:
handle_swbp	events/uprobes.c	/^static void handle_swbp(struct pt_regs *regs)$/;"	f	file:
handle_trampoline	events/uprobes.c	/^static bool handle_trampoline(struct pt_regs *regs)$/;"	f	file:
handle_uretprobe_chain	events/uprobes.c	/^handle_uretprobe_chain(struct return_instance *ri, struct pt_regs *regs)$/;"	f	file:
handler	swap/kprobe/swap_kprobes.h	/^	kretprobe_handler_t handler;         \/**< Handler of this kretprobe.*\/$/;"	m	struct:kretprobe
handler	swap/preload/preload_probe.h	/^	unsigned long handler;              \/* Handler offset in probe library. *\/$/;"	m	struct:preload_info
handler	swap/uprobe/swap_uprobes.h	/^	uretprobe_handler_t handler;        \/**< Uretprobe handler *\/$/;"	m	struct:uretprobe
handler	swap/us_manager/probes/probe_info_new.h	/^			kprobe_pre_handler_t handler;$/;"	m	struct:probe_info_new::__anon57::__anon58
handler	time/time_history.c	/^	void *handler;$/;"	m	struct:alarm_info	file:
handler_chain	events/uprobes.c	/^static void handler_chain(struct uprobe *uprobe, struct pt_regs *regs)$/;"	f	file:
handler_errors	test_kprobes.c	/^static int errors, handler_errors, num_tests;$/;"	v	file:
handlers_base	swap/preload/preload_pd.c	/^	unsigned long handlers_base;$/;"	m	struct:process_data	file:
handlers_info	swap/preload/preload_pd.c	/^static struct bin_info *handlers_info;$/;"	v	typeref:struct:bin_info	file:
handlers_path_file_ops	swap/preload/preload_debugfs.c	/^static const struct file_operations handlers_path_file_ops = {$/;"	v	typeref:struct:file_operations	file:
handlers_path_write	swap/preload/preload_debugfs.c	/^static ssize_t handlers_path_write(struct file *file, const char __user *buf,$/;"	f	file:
hardirqs_off_events	lockdep_internals.h	/^	int	hardirqs_off_events;$/;"	m	struct:lockdep_stats
hardirqs_on_events	lockdep_internals.h	/^	int	hardirqs_on_events;$/;"	m	struct:lockdep_stats
hardlockup_panic	watchdog.c	/^static int hardlockup_panic =$/;"	v	file:
hardlockup_panic_setup	watchdog.c	/^static int __init hardlockup_panic_setup(char *str)$/;"	f	file:
hardpps	time/timekeeping.c	/^EXPORT_SYMBOL(hardpps);$/;"	v
hardpps	time/timekeeping.c	/^void hardpps(const struct timespec *phase_ts, const struct timespec *raw_ts)$/;"	f
hardpps_update_freq	time/ntp.c	/^static long hardpps_update_freq(struct pps_normtime freq_norm)$/;"	f	file:
hardpps_update_phase	time/ntp.c	/^static void hardpps_update_phase(long error)$/;"	f	file:
has_capability	capability.c	/^bool has_capability(struct task_struct *t, int cap)$/;"	f
has_capability_noaudit	capability.c	/^bool has_capability_noaudit(struct task_struct *t, int cap)$/;"	f
has_ns_capability	capability.c	/^bool has_ns_capability(struct task_struct *t,$/;"	f
has_ns_capability_noaudit	capability.c	/^bool has_ns_capability_noaudit(struct task_struct *t,$/;"	f
has_pending_signals	signal.c	/^static inline int has_pending_signals(sigset_t *signal, sigset_t *blocked)$/;"	f	file:
has_perm	audit.h	/^			int			has_perm;$/;"	m	struct:audit_context::__anon15::__anon17
has_pushable_tasks	sched/rt.c	/^static inline int has_pushable_tasks(struct rq *rq)$/;"	f	file:
has_stopped_jobs	exit.c	/^static bool has_stopped_jobs(struct pid *pgrp)$/;"	f	file:
has_wake_lock	power/wakelock.c	/^long has_wake_lock(int type)$/;"	f
has_wake_lock_locked	power/wakelock.c	/^static long has_wake_lock_locked(int type)$/;"	f	file:
has_wakealarm	power/suspend_test.c	/^static int __init has_wakealarm(struct device *dev, const void *data)$/;"	f	file:
hash	audit_tree.c	/^	struct list_head hash;$/;"	m	struct:audit_chunk	typeref:struct:audit_chunk::list_head	file:
hash	module_signing.c	/^	u8	hash;		\/* Digest algorithm [enum pkey_hash_algo] *\/$/;"	m	struct:module_signature	file:
hash	posix-timers.c	/^static int hash(struct signal_struct *sig, unsigned int nr)$/;"	f	file:
hash	trace/ftrace.c	/^	struct ftrace_hash		*hash;$/;"	m	struct:ftrace_iterator	typeref:struct:ftrace_iterator::ftrace_hash	file:
hash	trace/ftrace.c	/^	struct hlist_head		*hash;$/;"	m	struct:ftrace_profile_stat	typeref:struct:ftrace_profile_stat::hlist_head	file:
hash_futex	futex.c	/^static struct futex_hash_bucket *hash_futex(union futex_key *key)$/;"	f	file:
hash_node	workqueue.c	/^	struct hlist_node	hash_node;	\/* PL: unbound_pool_hash node *\/$/;"	m	struct:worker_pool	typeref:struct:worker_pool::hlist_node	file:
have_callable_console	printk.c	/^static int have_callable_console(void)$/;"	f	file:
have_nohz_full_mask	time/tick-sched.c	/^bool have_nohz_full_mask;$/;"	v
have_nohz_full_mask	time/tick-sched.c	366;"	d	file:
have_rcu_kthread_work	rcutiny_plugin.h	/^static unsigned long have_rcu_kthread_work;$/;"	v
have_rcu_nocb_mask	rcutree_plugin.h	/^static bool have_rcu_nocb_mask;	    \/* Was rcu_nocb_mask allocated? *\/$/;"	v
hcpu	cpu.c	/^	void *hcpu;$/;"	m	struct:take_cpu_down_param	file:
hdr	module.c	/^	Elf_Ehdr *hdr;$/;"	m	struct:load_info	file:
head	audit_tree.c	/^	struct rcu_head head;$/;"	m	struct:audit_chunk	typeref:struct:audit_chunk::rcu_head	file:
head	audit_tree.c	/^	struct rcu_head head;$/;"	m	struct:audit_tree	typeref:struct:audit_tree::rcu_head	file:
head	events/internal.h	/^	local_t				head;		\/* write position    *\/$/;"	m	struct:ring_buffer
head	power/console.c	/^	struct list_head head;$/;"	m	struct:pm_vt_switch	typeref:struct:pm_vt_switch::list_head	file:
head	rcupdate.c	/^	struct rcu_head head;$/;"	m	struct:rcu_synchronize	typeref:struct:rcu_synchronize::rcu_head	file:
head	softirq.c	/^	struct tasklet_struct *head;$/;"	m	struct:tasklet_head	typeref:struct:tasklet_head::tasklet_struct	file:
head	srcu.c	/^	struct rcu_head head;$/;"	m	struct:rcu_synchronize	typeref:struct:rcu_synchronize::rcu_head	file:
head	swap/us_manager/helper.c	/^	struct hlist_head head;$/;"	m	struct:clean_data	typeref:struct:clean_data::hlist_head	file:
head	time/time_history.c	/^	int head;$/;"	m	struct:time_history_log_buf	file:
head	trace/ring_buffer.c	/^	unsigned long			head;$/;"	m	struct:ring_buffer_iter	file:
head_page	trace/ring_buffer.c	/^	struct buffer_page		*head_page;	\/* read from head *\/$/;"	m	struct:ring_buffer_per_cpu	typeref:struct:ring_buffer_per_cpu::buffer_page	file:
head_page	trace/ring_buffer.c	/^	struct buffer_page		*head_page;$/;"	m	struct:ring_buffer_iter	typeref:struct:ring_buffer_iter::buffer_page	file:
header	events/core.c	/^		struct perf_event_header	header;$/;"	m	struct:perf_comm_event::__anon7	typeref:struct:perf_comm_event::__anon7::perf_event_header	file:
header	events/core.c	/^		struct perf_event_header	header;$/;"	m	struct:perf_mmap_event::__anon8	typeref:struct:perf_mmap_event::__anon8::perf_event_header	file:
header	events/core.c	/^		struct perf_event_header	header;$/;"	m	struct:perf_task_event::__anon6	typeref:struct:perf_task_event::__anon6::perf_event_header	file:
header	events/core.c	/^	struct perf_event_header	header;$/;"	m	struct:perf_read_event	typeref:struct:perf_read_event::perf_event_header	file:
header_iter	trace/trace_mmiotrace.c	/^struct header_iter {$/;"	s	file:
help	debug/kdb/kdb_main.c	/^	char *help;$/;"	m	struct:defcmd_set	file:
helper_lock	kmod.c	/^static void helper_lock(void)$/;"	f	file:
helper_unlock	kmod.c	/^static void helper_unlock(void)$/;"	f	file:
hentry	workqueue_internal.h	/^		struct hlist_node	hentry;	\/* L: while busy *\/$/;"	m	union:worker::__anon69	typeref:struct:worker::__anon69::hlist_node
hi_shift	trace/trace_probe.c	/^	unsigned char		hi_shift;$/;"	m	struct:bitfield_fetch_param	file:
hib_bio_read_page	power/block_io.c	/^int hib_bio_read_page(pgoff_t page_off, void *addr, struct bio **bio_chain)$/;"	f
hib_bio_write_page	power/block_io.c	/^int hib_bio_write_page(pgoff_t page_off, void *addr, struct bio **bio_chain)$/;"	f
hib_resume_bdev	power/swap.c	/^struct block_device *hib_resume_bdev;$/;"	v	typeref:struct:block_device
hib_wait_on_bio_chain	power/block_io.c	/^int hib_wait_on_bio_chain(struct bio **bio_chain)$/;"	f
hibernate	power/hibernate.c	/^int hibernate(void)$/;"	f
hibernate_image_size_init	power/power.h	/^static inline void hibernate_image_size_init(void) {}$/;"	f
hibernate_image_size_init	power/snapshot.c	/^void __init hibernate_image_size_init(void)$/;"	f
hibernate_preallocate_memory	power/snapshot.c	/^int hibernate_preallocate_memory(void)$/;"	f
hibernate_reserved_size_init	power/power.h	/^static inline void hibernate_reserved_size_init(void) {}$/;"	f
hibernate_reserved_size_init	power/snapshot.c	/^void __init hibernate_reserved_size_init(void)$/;"	f
hibernate_setup	power/hibernate.c	/^static int __init hibernate_setup(char *str)$/;"	f	file:
hibernation_debug_sleep	power/hibernate.c	/^static void hibernation_debug_sleep(void)$/;"	f	file:
hibernation_mode	power/hibernate.c	/^static int hibernation_mode = HIBERNATION_SHUTDOWN;$/;"	v	file:
hibernation_modes	power/hibernate.c	/^static const char * const hibernation_modes[] = {$/;"	v	file:
hibernation_ops	power/hibernate.c	/^static const struct platform_hibernation_ops *hibernation_ops;$/;"	v	typeref:struct:platform_hibernation_ops	file:
hibernation_platform_enter	power/hibernate.c	/^int hibernation_platform_enter(void)$/;"	f
hibernation_restore	power/hibernate.c	/^int hibernation_restore(int platform_mode)$/;"	f
hibernation_set_ops	power/hibernate.c	/^void hibernation_set_ops(const struct platform_hibernation_ops *ops)$/;"	f
hibernation_snapshot	power/hibernate.c	/^int hibernation_snapshot(int platform_mode)$/;"	f
hibernation_test	power/hibernate.c	/^static int hibernation_test(int level) { return 0; }$/;"	f	file:
hibernation_test	power/hibernate.c	/^static int hibernation_test(int level)$/;"	f	file:
hidden	audit.h	/^	bool			hidden;		\/* don't log this record *\/$/;"	m	struct:audit_names
hidx	trace/ftrace.c	/^	int				hidx;$/;"	m	struct:ftrace_iterator	file:
hierarchal_quota	sched/sched.h	/^	s64 hierarchal_quota;$/;"	m	struct:cfs_bandwidth
high_addr	swap/parser/usm_msg.c	/^	u64 high_addr;$/;"	m	struct:lib_obj	file:
high_addr	swap/parser/usm_msg.c	/^	u64 high_addr;$/;"	m	struct:proc_info_bottom	file:
high_addr	swap/parser/usm_msg.c	/^	u64 high_addr;$/;"	m	struct:proc_map	file:
high_addr	swap/parser/usm_msg.c	/^	u64 high_addr;$/;"	m	struct:proc_unmap	file:
highest_flag_domain	sched/sched.h	/^static inline struct sched_domain *highest_flag_domain(int cpu, int flag)$/;"	f
highest_prio	sched/sched.h	/^	} highest_prio;$/;"	m	struct:rt_rq	typeref:struct:rt_rq::__anon4
highmem_pbe	power/snapshot.c	/^struct highmem_pbe {$/;"	s	file:
highmem_pblist	power/snapshot.c	/^static struct highmem_pbe *highmem_pblist;$/;"	v	typeref:struct:highmem_pbe	file:
history_buf_check	power/sleep_history.c	/^static int history_buf_check(int* head_n, int* tail_n)$/;"	f	file:
history_cnt	time/time_history.c	/^	u64 history_cnt;$/;"	m	struct:time_history	file:
history_idx	time/time_history.c	/^	u64 history_idx;$/;"	m	struct:time_log_entry	file:
history_type	time/time_history.c	/^	enum time_history_type history_type;$/;"	m	struct:time_log_entry	typeref:enum:time_log_entry::time_history_type	file:
history_type_name	time/time_history.c	/^static const char *history_type_name[] = {$/;"	v	file:
hits	profile.c	/^	u32 pc, hits;$/;"	m	struct:profile_hit	file:
hlist	swap/kprobe/swap_kprobes.h	/^	struct hlist_node				hlist; \/**< Hash list.*\/$/;"	m	struct:kprobe	typeref:struct:kprobe::hlist_node
hlist	swap/kprobe/swap_kprobes.h	/^	struct hlist_node hlist;             \/**< Jprobes hash list. *\/$/;"	m	struct:jprobe_instance	typeref:struct:jprobe_instance::hlist_node
hlist	swap/kprobe/swap_kprobes.h	/^	struct hlist_node hlist;        \/**< Kretprobe hash list.*\/$/;"	m	struct:kretprobe_instance	typeref:struct:kretprobe_instance::hlist_node
hlist	swap/kprobe/swap_slots.c	/^	struct hlist_node hlist;$/;"	m	struct:fixed_alloc	typeref:struct:fixed_alloc::hlist_node	file:
hlist	swap/uprobe/swap_uprobes.h	/^	struct hlist_node hlist;            \/**< Used list *\/$/;"	m	struct:uretprobe_instance	typeref:struct:uretprobe_instance::hlist_node
hlist	swap/uprobe/swap_uprobes.h	/^	struct hlist_node hlist;$/;"	m	struct:uinst_info	typeref:struct:uinst_info::hlist_node
hlist	swap/uprobe/swap_uprobes.h	/^	struct hlist_node hlist;$/;"	m	struct:urinst_info	typeref:struct:urinst_info::hlist_node
hlist	swap/us_manager/sspt/sspt_page.h	/^	struct hlist_node hlist;		\/**< For sspt_file *\/$/;"	m	struct:sspt_page	typeref:struct:sspt_page::hlist_node
hlist	trace/ftrace.c	/^	struct hlist_node hlist;$/;"	m	struct:ftrace_func_entry	typeref:struct:ftrace_func_entry::hlist_node	file:
hlist	tracepoint.c	/^	struct hlist_node hlist;$/;"	m	struct:tracepoint_entry	typeref:struct:tracepoint_entry::hlist_node	file:
hlist_mutex	events/core.c	/^	struct mutex			hlist_mutex;$/;"	m	struct:swevent_htable	typeref:struct:swevent_htable::mutex	file:
hlist_refcount	events/core.c	/^	int				hlist_refcount;$/;"	m	struct:swevent_htable	file:
hlock_class	lockdep.c	/^static inline struct lock_class *hlock_class(struct held_lock *hlock)$/;"	f	file:
hmp_active_task_migration_cpu_stop	sched/fair.c	/^static int hmp_active_task_migration_cpu_stop(void *data)$/;"	f	file:
hmp_attr_add	sched/fair.c	/^static void hmp_attr_add($/;"	f	file:
hmp_attr_init	sched/fair.c	/^late_initcall(hmp_attr_init);$/;"	v
hmp_attr_init	sched/fair.c	/^static int hmp_attr_init(void)$/;"	f	file:
hmp_best_little_cpu	sched/fair.c	/^static inline unsigned int hmp_best_little_cpu(struct task_struct *tsk,$/;"	f	file:
hmp_can_migrate_task	sched/fair.c	/^static int hmp_can_migrate_task(struct task_struct *p, struct lb_env *env)$/;"	f	file:
hmp_cpu_domain	sched/sched.h	652;"	d
hmp_cpu_is_fastest	sched/fair.c	/^static inline unsigned int hmp_cpu_is_fastest(int cpu)$/;"	f	file:
hmp_cpu_is_slowest	sched/fair.c	/^static inline unsigned int hmp_cpu_is_slowest(int cpu)$/;"	f	file:
hmp_cpu_keepalive_cancel	sched/fair.c	/^static void hmp_cpu_keepalive_cancel(int cpu)$/;"	f	file:
hmp_cpu_keepalive_notify	sched/fair.c	/^static enum hrtimer_restart hmp_cpu_keepalive_notify(struct hrtimer *hrtimer)$/;"	f	file:
hmp_cpu_keepalive_trigger	sched/fair.c	/^static void hmp_cpu_keepalive_trigger(void)$/;"	f	file:
hmp_cpu_mask_setup	sched/fair.c	/^static int __init hmp_cpu_mask_setup(void)$/;"	f	file:
hmp_data	sched/fair.c	/^} hmp_data;$/;"	v	typeref:struct:hmp_data_struct
hmp_data_struct	sched/fair.c	/^struct hmp_data_struct {$/;"	s	file:
hmp_domain_min_load	sched/fair.c	/^static inline unsigned int hmp_domain_min_load(struct hmp_domain *hmpd,$/;"	f	file:
hmp_down_migration	sched/fair.c	/^static unsigned int hmp_down_migration(int cpu, struct sched_entity *se)$/;"	f	file:
hmp_down_threshold	sched/fair.c	/^unsigned int hmp_down_threshold = 512;$/;"	v
hmp_faster_domain	sched/fair.c	/^static inline struct hmp_domain *hmp_faster_domain(int cpu)$/;"	f	file:
hmp_force_up_migration	sched/fair.c	/^static void hmp_force_up_migration(int this_cpu) { }$/;"	f	file:
hmp_force_up_migration	sched/fair.c	/^static void hmp_force_up_migration(int this_cpu)$/;"	f	file:
hmp_full_threshold	sched/fair.c	/^unsigned int hmp_full_threshold = 650;$/;"	v
hmp_get_heaviest_task	sched/fair.c	/^static struct sched_entity *hmp_get_heaviest_task($/;"	f	file:
hmp_get_hmp_domain_for_cpu	sched/fair.c	/^static struct hmp_domain *hmp_get_hmp_domain_for_cpu(int cpu)$/;"	f	file:
hmp_get_lightest_task	sched/fair.c	/^static struct sched_entity *hmp_get_lightest_task($/;"	f	file:
hmp_global_attr	sched/fair.c	/^struct hmp_global_attr {$/;"	s	file:
hmp_idle_pull	sched/fair.c	/^static unsigned int hmp_idle_pull(int this_cpu)$/;"	f	file:
hmp_keepalive	sched/fair.c	/^struct hmp_keepalive {$/;"	s	file:
hmp_keepalive_delay	sched/fair.c	/^static void hmp_keepalive_delay(int cpu, unsigned int *ns_delay)$/;"	f	file:
hmp_max_tasks	sched/fair.c	/^static const int hmp_max_tasks = 5;$/;"	v	file:
hmp_migrate_runnable_task	sched/fair.c	/^static void hmp_migrate_runnable_task(struct rq *rq)$/;"	f	file:
hmp_next_down_delay	sched/fair.c	/^static inline void hmp_next_down_delay(struct sched_entity *se, int cpu)$/;"	f	file:
hmp_next_down_threshold	sched/fair.c	/^unsigned int hmp_next_down_threshold = 4096;$/;"	v
hmp_next_up_delay	sched/fair.c	/^static inline void hmp_next_up_delay(struct sched_entity *se, int cpu)$/;"	f	file:
hmp_next_up_threshold	sched/fair.c	/^unsigned int hmp_next_up_threshold = 4096;$/;"	v
hmp_offline_cpu	sched/fair.c	/^static void hmp_offline_cpu(int cpu)$/;"	f	file:
hmp_offload_down	sched/fair.c	/^static inline unsigned int hmp_offload_down(int cpu, struct sched_entity *se)$/;"	f	file:
hmp_online_cpu	sched/fair.c	/^static void hmp_online_cpu(int cpu)$/;"	f	file:
hmp_packing_enabled	sched/fair.c	/^unsigned int hmp_packing_enabled = 1;$/;"	v
hmp_packing_from_sysfs	sched/fair.c	/^static int hmp_packing_from_sysfs(int value)$/;"	f	file:
hmp_packing_ilb_needed	sched/fair.c	/^static int hmp_packing_ilb_needed(int cpu, int ilb_needed)$/;"	f	file:
hmp_period_tofrom_sysfs	sched/fair.c	/^static int hmp_period_tofrom_sysfs(int value)$/;"	f	file:
hmp_print_domains	sched/fair.c	/^static ssize_t hmp_print_domains(char *outbuf, int outbufsize)$/;"	f	file:
hmp_select_faster_cpu	sched/fair.c	/^static inline unsigned int hmp_select_faster_cpu(struct task_struct *tsk,$/;"	f	file:
hmp_select_slower_cpu	sched/fair.c	/^static inline unsigned int hmp_select_slower_cpu(struct task_struct *tsk,$/;"	f	file:
hmp_show	sched/fair.c	/^static ssize_t hmp_show(struct kobject *kobj,$/;"	f	file:
hmp_slower_domain	sched/fair.c	/^static inline struct hmp_domain *hmp_slower_domain(int cpu)$/;"	f	file:
hmp_smallest_domain	sched/fair.c	/^static inline struct hmp_domain *hmp_smallest_domain(void)$/;"	f	file:
hmp_store	sched/fair.c	/^static ssize_t hmp_store(struct kobject *a, struct attribute *attr,$/;"	f	file:
hmp_task_eligible_for_up_migration	sched/fair.c	/^static unsigned int hmp_task_eligible_for_up_migration(struct sched_entity *se)$/;"	f	file:
hmp_task_starvation	sched/fair.c	/^static inline unsigned int hmp_task_starvation(struct sched_entity *se)$/;"	f	file:
hmp_theshold_from_sysfs	sched/fair.c	/^static int hmp_theshold_from_sysfs(int value)$/;"	f	file:
hmp_toggle_from_sysfs	sched/fair.c	/^static int hmp_toggle_from_sysfs(int value)$/;"	f	file:
hmp_up_migration	sched/fair.c	/^static unsigned int hmp_up_migration(int cpu, int *target_cpu, struct sched_entity *se)$/;"	f	file:
hmp_up_prio	sched/fair.c	/^unsigned int hmp_up_prio = NICE_TO_PRIO(CONFIG_SCHED_HMP_PRIO_FILTER_VAL);$/;"	v
hmp_up_threshold	sched/fair.c	/^unsigned int hmp_up_threshold = 700;$/;"	v
hmp_variable_scale_convert	sched/fair.c	/^static inline u64 hmp_variable_scale_convert(u64 delta)$/;"	f	file:
hold_module_trace_bprintk_format	trace/trace_printk.c	/^void hold_module_trace_bprintk_format(const char **start, const char **end)$/;"	f	file:
hook	power/snapshot.c	/^	struct list_head hook;	\/* hook into a list of bitmap blocks *\/$/;"	m	struct:bm_block	typeref:struct:bm_block::list_head	file:
hook	power/snapshot.c	/^	struct list_head hook;$/;"	m	struct:mem_extent	typeref:struct:mem_extent::list_head	file:
hotplug_cfd	smp.c	/^hotplug_cfd(struct notifier_block *nfb, unsigned long action, void *hcpu)$/;"	f	file:
hotplug_cfd_notifier	smp.c	/^static struct notifier_block __cpuinitdata hotplug_cfd_notifier = {$/;"	v	typeref:struct:__cpuinitdata	file:
hotplug_hrtick	sched/core.c	/^hotplug_hrtick(struct notifier_block *nfb, unsigned long action, void *hcpu)$/;"	f	file:
hotplug_work	cpuset.c	/^	struct work_struct hotplug_work;$/;"	m	struct:cpuset	typeref:struct:cpuset::work_struct	file:
hrtick	sched/core.c	/^static enum hrtimer_restart hrtick(struct hrtimer *timer)$/;"	f	file:
hrtick_clear	sched/core.c	/^static inline void hrtick_clear(struct rq *rq)$/;"	f	file:
hrtick_clear	sched/core.c	/^static void hrtick_clear(struct rq *rq)$/;"	f	file:
hrtick_csd	sched/sched.h	/^	struct call_single_data hrtick_csd;$/;"	m	struct:rq	typeref:struct:rq::call_single_data
hrtick_csd_pending	sched/sched.h	/^	int hrtick_csd_pending;$/;"	m	struct:rq
hrtick_enabled	sched/sched.h	/^static inline int hrtick_enabled(struct rq *rq)$/;"	f
hrtick_start	sched/core.c	/^void hrtick_start(struct rq *rq, u64 delay)$/;"	f
hrtick_start_fair	sched/fair.c	/^hrtick_start_fair(struct rq *rq, struct task_struct *p)$/;"	f	file:
hrtick_start_fair	sched/fair.c	/^static void hrtick_start_fair(struct rq *rq, struct task_struct *p)$/;"	f	file:
hrtick_timer	sched/sched.h	/^	struct hrtimer hrtick_timer;$/;"	m	struct:rq	typeref:struct:rq::hrtimer
hrtick_update	sched/fair.c	/^static inline void hrtick_update(struct rq *rq)$/;"	f	file:
hrtick_update	sched/fair.c	/^static void hrtick_update(struct rq *rq)$/;"	f	file:
hrtimer_cancel	hrtimer.c	/^EXPORT_SYMBOL_GPL(hrtimer_cancel);$/;"	v
hrtimer_cancel	hrtimer.c	/^int hrtimer_cancel(struct hrtimer *timer)$/;"	f
hrtimer_check_target	hrtimer.c	/^hrtimer_check_target(struct hrtimer *timer, struct hrtimer_clock_base *new_base)$/;"	f	file:
hrtimer_clock_to_base_table	hrtimer.c	/^static const int hrtimer_clock_to_base_table[MAX_CLOCKS] = {$/;"	v	file:
hrtimer_clockid_to_base	hrtimer.c	/^static inline int hrtimer_clockid_to_base(clockid_t clock_id)$/;"	f	file:
hrtimer_cpu_notify	hrtimer.c	/^static int __cpuinit hrtimer_cpu_notify(struct notifier_block *self,$/;"	f	file:
hrtimer_debug_descr	hrtimer.c	/^static struct debug_obj_descr hrtimer_debug_descr = {$/;"	v	typeref:struct:debug_obj_descr	file:
hrtimer_debug_descr	hrtimer.c	/^static struct debug_obj_descr hrtimer_debug_descr;$/;"	v	typeref:struct:debug_obj_descr	file:
hrtimer_debug_hint	hrtimer.c	/^static void *hrtimer_debug_hint(void *addr)$/;"	f	file:
hrtimer_enqueue_reprogram	hrtimer.c	/^static inline int hrtimer_enqueue_reprogram(struct hrtimer *timer,$/;"	f	file:
hrtimer_fixup_activate	hrtimer.c	/^static int hrtimer_fixup_activate(void *addr, enum debug_obj_state state)$/;"	f	file:
hrtimer_fixup_free	hrtimer.c	/^static int hrtimer_fixup_free(void *addr, enum debug_obj_state state)$/;"	f	file:
hrtimer_fixup_init	hrtimer.c	/^static int hrtimer_fixup_init(void *addr, enum debug_obj_state state)$/;"	f	file:
hrtimer_force_reprogram	hrtimer.c	/^hrtimer_force_reprogram(struct hrtimer_cpu_base *base, int skip_equal) { }$/;"	f	file:
hrtimer_force_reprogram	hrtimer.c	/^hrtimer_force_reprogram(struct hrtimer_cpu_base *cpu_base, int skip_equal)$/;"	f	file:
hrtimer_forward	hrtimer.c	/^EXPORT_SYMBOL_GPL(hrtimer_forward);$/;"	v
hrtimer_forward	hrtimer.c	/^u64 hrtimer_forward(struct hrtimer *timer, ktime_t now, ktime_t interval)$/;"	f
hrtimer_get_next_event	hrtimer.c	/^ktime_t hrtimer_get_next_event(void)$/;"	f
hrtimer_get_remaining	hrtimer.c	/^EXPORT_SYMBOL_GPL(hrtimer_get_remaining);$/;"	v
hrtimer_get_remaining	hrtimer.c	/^ktime_t hrtimer_get_remaining(const struct hrtimer *timer)$/;"	f
hrtimer_get_res	hrtimer.c	/^EXPORT_SYMBOL_GPL(hrtimer_get_res);$/;"	v
hrtimer_get_res	hrtimer.c	/^int hrtimer_get_res(const clockid_t which_clock, struct timespec *tp)$/;"	f
hrtimer_get_softirq_time	hrtimer.c	/^static void hrtimer_get_softirq_time(struct hrtimer_cpu_base *base)$/;"	f	file:
hrtimer_get_target	hrtimer.c	/^static int hrtimer_get_target(int this_cpu, int pinned)$/;"	f	file:
hrtimer_hres_active	hrtimer.c	/^static inline int hrtimer_hres_active(void) { return 0; }$/;"	f	file:
hrtimer_hres_active	hrtimer.c	/^static inline int hrtimer_hres_active(void)$/;"	f	file:
hrtimer_init	hrtimer.c	/^EXPORT_SYMBOL_GPL(hrtimer_init);$/;"	v
hrtimer_init	hrtimer.c	/^void hrtimer_init(struct hrtimer *timer, clockid_t clock_id,$/;"	f
hrtimer_init_hres	hrtimer.c	/^static inline void hrtimer_init_hres(struct hrtimer_cpu_base *base) { }$/;"	f	file:
hrtimer_init_hres	hrtimer.c	/^static inline void hrtimer_init_hres(struct hrtimer_cpu_base *base)$/;"	f	file:
hrtimer_init_on_stack	hrtimer.c	/^EXPORT_SYMBOL_GPL(hrtimer_init_on_stack);$/;"	v
hrtimer_init_on_stack	hrtimer.c	/^void hrtimer_init_on_stack(struct hrtimer *timer, clockid_t clock_id,$/;"	f
hrtimer_init_sleeper	hrtimer.c	/^EXPORT_SYMBOL_GPL(hrtimer_init_sleeper);$/;"	v
hrtimer_init_sleeper	hrtimer.c	/^void hrtimer_init_sleeper(struct hrtimer_sleeper *sl, struct task_struct *task)$/;"	f
hrtimer_interrupt	hrtimer.c	/^void hrtimer_interrupt(struct clock_event_device *dev)$/;"	f
hrtimer_is_hres_enabled	hrtimer.c	/^static inline int hrtimer_is_hres_enabled(void) { return 0; }$/;"	f	file:
hrtimer_is_hres_enabled	hrtimer.c	/^static inline int hrtimer_is_hres_enabled(void)$/;"	f	file:
hrtimer_nanosleep	hrtimer.c	/^long hrtimer_nanosleep(struct timespec *rqtp, struct timespec __user *rmtp,$/;"	f
hrtimer_nanosleep_restart	hrtimer.c	/^long __sched hrtimer_nanosleep_restart(struct restart_block *restart)$/;"	f
hrtimer_peek_ahead_timers	hrtimer.c	/^void hrtimer_peek_ahead_timers(void)$/;"	f
hrtimer_reprogram	hrtimer.c	/^static int hrtimer_reprogram(struct hrtimer *timer,$/;"	f	file:
hrtimer_run_pending	hrtimer.c	/^void hrtimer_run_pending(void)$/;"	f
hrtimer_run_queues	hrtimer.c	/^void hrtimer_run_queues(void)$/;"	f
hrtimer_start	hrtimer.c	/^EXPORT_SYMBOL_GPL(hrtimer_start);$/;"	v
hrtimer_start	hrtimer.c	/^hrtimer_start(struct hrtimer *timer, ktime_t tim, const enum hrtimer_mode mode)$/;"	f
hrtimer_start_range_ns	hrtimer.c	/^EXPORT_SYMBOL_GPL(hrtimer_start_range_ns);$/;"	v
hrtimer_start_range_ns	hrtimer.c	/^int hrtimer_start_range_ns(struct hrtimer *timer, ktime_t tim,$/;"	f
hrtimer_switch_to_hres	hrtimer.c	/^static inline int hrtimer_switch_to_hres(void) { return 0; }$/;"	f	file:
hrtimer_switch_to_hres	hrtimer.c	/^static int hrtimer_switch_to_hres(void)$/;"	f	file:
hrtimer_try_to_cancel	hrtimer.c	/^EXPORT_SYMBOL_GPL(hrtimer_try_to_cancel);$/;"	v
hrtimer_try_to_cancel	hrtimer.c	/^int hrtimer_try_to_cancel(struct hrtimer *timer)$/;"	f
hrtimer_update_base	hrtimer.c	/^static inline ktime_t hrtimer_update_base(struct hrtimer_cpu_base *base)$/;"	f	file:
hrtimer_wakeup	hrtimer.c	/^static enum hrtimer_restart hrtimer_wakeup(struct hrtimer *timer)$/;"	f	file:
hrtimers_init	hrtimer.c	/^void __init hrtimers_init(void)$/;"	f
hrtimers_nb	hrtimer.c	/^static struct notifier_block __cpuinitdata hrtimers_nb = {$/;"	v	typeref:struct:__cpuinitdata	file:
hrtimers_resume	hrtimer.c	/^void hrtimers_resume(void)$/;"	f
ht	smpboot.c	/^	struct smp_hotplug_thread	*ht;$/;"	m	struct:smpboot_thread_data	typeref:struct:smpboot_thread_data::smp_hotplug_thread	file:
hung_task_init	hung_task.c	/^module_init(hung_task_init);$/;"	v
hung_task_init	hung_task.c	/^static int __init hung_task_init(void)$/;"	f	file:
hung_task_panic	hung_task.c	/^hung_task_panic(struct notifier_block *this, unsigned long event, void *ptr)$/;"	f	file:
hung_task_panic_setup	hung_task.c	/^static int __init hung_task_panic_setup(char *str)$/;"	f	file:
hung_task_timeout_max	sysctl.c	/^static unsigned long hung_task_timeout_max = (LONG_MAX\/HZ);$/;"	v	file:
hw_breakpoint_add	events/hw_breakpoint.c	/^static int hw_breakpoint_add(struct perf_event *bp, int flags)$/;"	f	file:
hw_breakpoint_del	events/hw_breakpoint.c	/^static void hw_breakpoint_del(struct perf_event *bp, int flags)$/;"	f	file:
hw_breakpoint_event_idx	events/hw_breakpoint.c	/^static int hw_breakpoint_event_idx(struct perf_event *bp)$/;"	f	file:
hw_breakpoint_event_init	events/hw_breakpoint.c	/^static int hw_breakpoint_event_init(struct perf_event *bp)$/;"	f	file:
hw_breakpoint_exceptions_nb	events/hw_breakpoint.c	/^static struct notifier_block hw_breakpoint_exceptions_nb = {$/;"	v	typeref:struct:notifier_block	file:
hw_breakpoint_start	events/hw_breakpoint.c	/^static void hw_breakpoint_start(struct perf_event *bp, int flags)$/;"	f	file:
hw_breakpoint_stop	events/hw_breakpoint.c	/^static void hw_breakpoint_stop(struct perf_event *bp, int flags)$/;"	f	file:
hw_breakpoint_weight	events/hw_breakpoint.c	/^__weak int hw_breakpoint_weight(struct perf_event *bp)$/;"	f
i1	swap/uprobe/arch/arm/swap-asm/trampoline_thumb.S	/^i1:		nop			\/\/ stored PC hi$/;"	l
i2	swap/uprobe/arch/arm/swap-asm/trampoline_thumb.S	/^i2:		nop			\/\/ stored PC-4(next insn addr) hi$/;"	l
i_proc	swap/us_manager/pf/pf_group.c	/^	struct img_proc *i_proc;$/;"	m	struct:pf_group	typeref:struct:pf_group::img_proc	file:
id	cgroup.c	/^	unsigned short id;$/;"	m	struct:css_id	file:
id	sched/auto_group.h	/^	unsigned long		id;$/;"	m	struct:autogroup
id	swap/ks_features/file_ops.c	/^	int id;$/;"	m	struct:file_probe	file:
id	swap/wsp/wsp_res.h	/^	int id;$/;"	m	struct:wsp_res
id	trace/trace_events.c	/^	struct file_operations		id;$/;"	m	struct:ftrace_module_file_ops	typeref:struct:ftrace_module_file_ops::file_operations	file:
id	trace/trace_events_filter.c	/^	int id;$/;"	m	struct:filter_op	file:
id	workqueue.c	/^	int			id;		\/* I: pool ID *\/$/;"	m	struct:worker_pool	file:
id	workqueue_internal.h	/^	int			id;		\/* I: worker id *\/$/;"	m	struct:worker
id_desc	swap/ks_features/features_data.c	/^static enum syscall_id id_desc[] = {$/;"	v	typeref:enum:syscall_id	file:
id_file	swap/ks_features/features_data.c	/^static enum syscall_id id_file[] = {$/;"	v	typeref:enum:syscall_id	file:
id_ipc	swap/ks_features/features_data.c	/^static enum syscall_id id_ipc[] = {$/;"	v	typeref:enum:syscall_id	file:
id_net	swap/ks_features/features_data.c	/^static enum syscall_id id_net[] = {$/;"	v	typeref:enum:syscall_id	file:
id_none	swap/ks_features/features_data.c	/^static enum syscall_id id_none[] = {};$/;"	v	typeref:enum:syscall_id	file:
id_process	swap/ks_features/features_data.c	/^static enum syscall_id id_process[] = {$/;"	v	typeref:enum:syscall_id	file:
id_signal	swap/ks_features/features_data.c	/^static enum syscall_id id_signal[] = {$/;"	v	typeref:enum:syscall_id	file:
id_type	module_signing.c	/^	u8	id_type;	\/* Key identifier type [enum pkey_id_type] *\/$/;"	m	struct:module_signature	file:
ident	gcov/gcov.h	/^	unsigned int ident;$/;"	m	struct:gcov_fn_info
ident_map	exec_domain.c	/^static unsigned long ident_map[32] = {$/;"	v	file:
idle	sched/fair.c	/^	enum cpu_idle_type	idle;$/;"	m	struct:lb_env	typeref:enum:lb_env::cpu_idle_type	file:
idle	sched/sched.h	/^	int idle, timer_active;$/;"	m	struct:cfs_bandwidth
idle	sched/sched.h	/^	struct task_struct *curr, *idle, *stop;$/;"	m	struct:rq	typeref:struct:rq::
idle_balance	sched/fair.c	/^void idle_balance(int this_cpu, struct rq *this_rq)$/;"	f
idle_balance	sched/sched.h	/^	unsigned char idle_balance;$/;"	m	struct:rq
idle_balance	sched/sched.h	/^static inline void idle_balance(int cpu, struct rq *rq)$/;"	f
idle_cpu	sched/core.c	/^int idle_cpu(int cpu)$/;"	f
idle_cpus	sched/fair.c	/^	unsigned long idle_cpus;$/;"	m	struct:sg_lb_stats	file:
idle_cpus_mask	sched/fair.c	/^	cpumask_var_t idle_cpus_mask;$/;"	m	struct:__anon3	file:
idle_enter_fair	sched/fair.c	/^void idle_enter_fair(struct rq *this_rq)$/;"	f
idle_enter_fair	sched/sched.h	/^static inline void idle_enter_fair(struct rq *this_rq) {}$/;"	f
idle_exit_fair	sched/fair.c	/^void idle_exit_fair(struct rq *this_rq)$/;"	f
idle_exit_fair	sched/sched.h	/^static inline void idle_exit_fair(struct rq *this_rq) {}$/;"	f
idle_init	smpboot.c	/^static inline void idle_init(unsigned int cpu)$/;"	f	file:
idle_list	workqueue.c	/^	struct list_head	idle_list;	\/* X: list of idle workers *\/$/;"	m	struct:worker_pool	typeref:struct:worker_pool::list_head	file:
idle_notifier_call_chain	cpu.c	/^EXPORT_SYMBOL_GPL(idle_notifier_call_chain);$/;"	v
idle_notifier_call_chain	cpu.c	/^void idle_notifier_call_chain(unsigned long val)$/;"	f
idle_notifier_register	cpu.c	/^EXPORT_SYMBOL_GPL(idle_notifier_register);$/;"	v
idle_notifier_register	cpu.c	/^void idle_notifier_register(struct notifier_block *n)$/;"	f
idle_notifier_unregister	cpu.c	/^EXPORT_SYMBOL_GPL(idle_notifier_unregister);$/;"	v
idle_notifier_unregister	cpu.c	/^void idle_notifier_unregister(struct notifier_block *n)$/;"	f
idle_sched_class	sched/idle_task.c	/^const struct sched_class idle_sched_class = {$/;"	v	typeref:struct:sched_class
idle_stamp	sched/sched.h	/^	u64 idle_stamp;$/;"	m	struct:rq
idle_task	sched/core.c	/^struct task_struct *idle_task(int cpu)$/;"	f
idle_task_exit	sched/core.c	/^void idle_task_exit(void)$/;"	f
idle_thread_get	smpboot.c	/^struct task_struct * __cpuinit idle_thread_get(unsigned int cpu)$/;"	f
idle_thread_get	smpboot.h	/^static inline struct task_struct *idle_thread_get(unsigned int cpu) { return NULL; }$/;"	f
idle_thread_set_boot_cpu	smpboot.c	/^void __init idle_thread_set_boot_cpu(void)$/;"	f
idle_thread_set_boot_cpu	smpboot.h	/^static inline void idle_thread_set_boot_cpu(void) { }$/;"	f
idle_threads_init	smpboot.c	/^void __init idle_threads_init(void)$/;"	f
idle_threads_init	smpboot.h	/^static inline void idle_threads_init(void) { }$/;"	f
idle_timer	workqueue.c	/^	struct timer_list	idle_timer;	\/* L: worker idle timeout *\/$/;"	m	struct:worker_pool	typeref:struct:worker_pool::timer_list	file:
idle_worker_timeout	workqueue.c	/^static void idle_worker_timeout(unsigned long __pool)$/;"	f	file:
idx	cgroup.c	/^	int			idx;$/;"	m	struct:cgroup_taskset	file:
idx	printk.c	/^	u32 idx;$/;"	m	struct:devkmsg_user	file:
idx	trace/ftrace.c	/^	int				idx;$/;"	m	struct:ftrace_iterator	file:
idx	trace/trace.h	/^	unsigned	idx;$/;"	m	struct:trace_parser
ignore	trace/trace_functions_graph.c	/^	int		ignore;$/;"	m	struct:fgraph_cpu_data	file:
ignore_loglevel	printk.c	/^static bool __read_mostly ignore_loglevel;$/;"	v	file:
ignore_loglevel_setup	printk.c	/^static int __init ignore_loglevel_setup(char *str)$/;"	f	file:
ignore_pf	swap/us_manager/pf/proc_filters.c	/^int ignore_pf(struct proc_filter *filter)$/;"	f
ignore_signals	signal.c	/^void ignore_signals(struct task_struct *t)$/;"	f
ignoring_children	ptrace.c	/^static int ignoring_children(struct sighand_struct *sigh)$/;"	f	file:
ikconfig_cleanup	configs.c	/^module_exit(ikconfig_cleanup);$/;"	v
ikconfig_cleanup	configs.c	/^static void __exit ikconfig_cleanup(void)$/;"	f	file:
ikconfig_file_ops	configs.c	/^static const struct file_operations ikconfig_file_ops = {$/;"	v	typeref:struct:file_operations	file:
ikconfig_init	configs.c	/^module_init(ikconfig_init);$/;"	v
ikconfig_init	configs.c	/^static int __init ikconfig_init(void)$/;"	f	file:
ikconfig_read_current	configs.c	/^ikconfig_read_current(struct file *file, char __user *buf,$/;"	f	file:
image	power/swap.c	/^	sector_t image;$/;"	m	struct:swsusp_header	file:
image_pages	power/power.h	/^	unsigned long		image_pages;$/;"	m	struct:swsusp_info
image_size	power/hibernate.c	/^power_attr(image_size);$/;"	v
image_size	power/snapshot.c	/^unsigned long image_size;$/;"	v
image_size_show	power/hibernate.c	/^static ssize_t image_size_show(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
image_size_store	power/hibernate.c	/^static ssize_t image_size_store(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
imbalance	sched/fair.c	/^	long			imbalance;$/;"	m	struct:lb_env	file:
img	swap/us_manager/sspt/sspt_feature.c	/^	struct sspt_feature_img *img;$/;"	m	struct:sspt_feature_data	typeref:struct:sspt_feature_data::sspt_feature_img	file:
img_add_file_by_list	swap/us_manager/img/img_proc.c	/^static void img_add_file_by_list(struct img_proc *proc, struct img_file *file)$/;"	f	file:
img_add_ip_by_list	swap/us_manager/img/img_file.c	/^static void img_add_ip_by_list(struct img_file *file, struct img_ip *ip)$/;"	f	file:
img_del_file_by_list	swap/us_manager/img/img_proc.c	/^static void img_del_file_by_list(struct img_file *file)$/;"	f	file:
img_del_ip_by_list	swap/us_manager/img/img_file.c	/^static void img_del_ip_by_list(struct img_ip *ip)$/;"	f	file:
img_file	swap/us_manager/img/img_file.h	/^struct img_file {$/;"	s
img_file_add_ip	swap/us_manager/img/img_file.c	/^int img_file_add_ip(struct img_file *file, unsigned long addr,$/;"	f
img_file_del_ip	swap/us_manager/img/img_file.c	/^int img_file_del_ip(struct img_file *file, unsigned long addr)$/;"	f
img_file_empty	swap/us_manager/img/img_file.c	/^int img_file_empty(struct img_file *file)$/;"	f
img_file_print	swap/us_manager/img/img_file.c	/^void img_file_print(struct img_file *file)$/;"	f
img_ip	swap/us_manager/img/img_ip.h	/^struct img_ip {$/;"	s
img_ip_print	swap/us_manager/img/img_ip.c	/^void img_ip_print(struct img_ip *ip)$/;"	f
img_proc	swap/us_manager/img/img_proc.c	/^struct img_proc {$/;"	s	file:
img_proc_add_ip	swap/us_manager/img/img_proc.c	/^int img_proc_add_ip(struct img_proc *proc, struct dentry *dentry,$/;"	f
img_proc_copy_to_sspt	swap/us_manager/img/img_proc.c	/^void img_proc_copy_to_sspt(struct img_proc *i_proc, struct sspt_proc *proc)$/;"	f
img_proc_del_ip	swap/us_manager/img/img_proc.c	/^int img_proc_del_ip(struct img_proc *proc,$/;"	f
img_proc_print	swap/us_manager/img/img_proc.c	/^void img_proc_print(struct img_proc *proc)$/;"	f
in_egroup_p	groups.c	/^EXPORT_SYMBOL(in_egroup_p);$/;"	v
in_egroup_p	groups.c	/^int in_egroup_p(kgid_t grp)$/;"	f
in_group_p	groups.c	/^EXPORT_SYMBOL(in_group_p);$/;"	v
in_group_p	groups.c	/^int in_group_p(kgid_t grp)$/;"	f
in_interrupt	printk.c	/^	u8 in_interrupt;		\/* in interrupt CONFIG_PRINTK_PROCESS *\/$/;"	m	struct:log	file:
in_kprobes_functions	kprobes.c	/^static int __kprobes in_kprobes_functions(unsigned long addr)$/;"	f	file:
in_lock_functions	spinlock.c	/^EXPORT_SYMBOL(in_lock_functions);$/;"	v
in_lock_functions	spinlock.c	/^notrace int in_lock_functions(unsigned long addr)$/;"	f
in_ns	trace/trace.c	/^	int in_ns;		\/* is this clock in nanoseconds? *\/$/;"	m	struct:__anon76	file:
in_sched_functions	sched/core.c	/^int in_sched_functions(unsigned long addr)$/;"	f
in_syscall	audit.h	/^	int		    in_syscall;	\/* 1 if task is in a syscall *\/$/;"	m	struct:audit_context
inc_buffers_to_read	swap/driver/driver_to_buffer.c	/^static inline void inc_buffers_to_read(void)$/;"	f	file:
inc_chains	lockdep.c	/^static inline void inc_chains(void)$/;"	f	file:
inc_chains	lockdep.c	/^static void inc_chains(void)$/;"	f	file:
inc_counter	swap/ks_features/ks_features.c	/^static void inc_counter(size_t id)$/;"	f	file:
inc_nr_running	sched/sched.h	/^static inline void inc_nr_running(struct rq *rq)$/;"	f
inc_probes	swap/preload/preload_probe.c	/^static inline void inc_probes(void)$/;"	f	file:
inc_rt_group	sched/rt.c	/^inc_rt_group(struct sched_rt_entity *rt_se, struct rt_rq *rt_rq)$/;"	f	file:
inc_rt_migration	sched/rt.c	/^static void inc_rt_migration(struct sched_rt_entity *rt_se, struct rt_rq *rt_rq)$/;"	f	file:
inc_rt_migration	sched/rt.c	/^void inc_rt_migration(struct sched_rt_entity *rt_se, struct rt_rq *rt_rq)$/;"	f	file:
inc_rt_prio	sched/rt.c	/^inc_rt_prio(struct rt_rq *rt_rq, int prio)$/;"	f	file:
inc_rt_prio	sched/rt.c	/^static inline void inc_rt_prio(struct rt_rq *rt_rq, int prio) {}$/;"	f	file:
inc_rt_prio_smp	sched/rt.c	/^inc_rt_prio_smp(struct rt_rq *rt_rq, int prio, int prev_prio)$/;"	f	file:
inc_rt_prio_smp	sched/rt.c	/^void inc_rt_prio_smp(struct rt_rq *rt_rq, int prio, int prev_prio) {}$/;"	f	file:
inc_rt_tasks	sched/rt.c	/^void inc_rt_tasks(struct sched_rt_entity *rt_se, struct rt_rq *rt_rq)$/;"	f	file:
increment_cpu_stall_ticks	rcutree_plugin.h	/^static void increment_cpu_stall_ticks(void)$/;"	f
index	audit_tree.c	/^		unsigned index;		\/* index; upper bit indicates 'will prune' *\/$/;"	m	struct:audit_chunk::node	file:
index	module.c	/^	} index;$/;"	m	struct:load_info	typeref:struct:load_info::__anon26	file:
index	printk.c	/^	int	index;				\/* Minor dev. to use	    *\/$/;"	m	struct:console_cmdline	file:
index	swap/kprobe/swap_slots.c	/^	unsigned long *index;$/;"	m	struct:chunk	file:
index	trace/ftrace.c	/^	int			index;$/;"	m	struct:ftrace_page	file:
index	trace/ftrace.c	/^	int			index;$/;"	m	struct:ftrace_rec_iter	file:
index	trace/ftrace.c	/^	unsigned long			index;$/;"	m	struct:ftrace_profile_page	file:
index	trace/trace.h	/^	unsigned short		index;$/;"	m	struct:filter_pred
index	trace/trace_events_filter.c	/^	int			index;$/;"	m	struct:pred_stack	file:
infix	trace/trace_events_filter.c	/^	} infix;$/;"	m	struct:filter_parse_state	typeref:struct:filter_parse_state::__anon90	file:
infix_advance	trace/trace_events_filter.c	/^static void infix_advance(struct filter_parse_state *ps)$/;"	f	file:
infix_get_op	trace/trace_events_filter.c	/^static int infix_get_op(struct filter_parse_state *ps, char firstc)$/;"	f	file:
infix_next	trace/trace_events_filter.c	/^static char infix_next(struct filter_parse_state *ps)$/;"	f	file:
infix_peek	trace/trace_events_filter.c	/^static char infix_peek(struct filter_parse_state *ps)$/;"	f	file:
inflight	rcutorture.c	/^	int inflight;$/;"	m	struct:rcu_boost_inflight	file:
info	events/core.c	/^	struct perf_cgroup_info	__percpu *info;$/;"	m	struct:perf_cgroup	typeref:struct:perf_cgroup::__percpu	file:
info	events/core.c	/^	void			*info;$/;"	m	struct:remote_function_call	file:
info	gcov/gcc_3_4.c	/^	struct gcov_info *info;$/;"	m	struct:gcov_iterator	typeref:struct:gcov_iterator::gcov_info	file:
info	module.c	/^		unsigned int sym, str, mod, vers, info, pcpu;$/;"	m	struct:load_info::__anon26	file:
info	swap/us_manager/img/img_ip.h	/^	struct probe_info *info;	\/**< Probe info *\/$/;"	m	struct:img_ip	typeref:struct:img_ip::probe_info
info	swap/us_manager/probes/probe_info_new.h	/^	struct probe_info *info;$/;"	m	struct:probe_info_new	typeref:struct:probe_info_new::probe_info
info	swap/us_manager/probes/probe_info_new.h	/^	struct probe_info info;$/;"	m	struct:probe_info_otg	typeref:struct:probe_info_otg::probe_info
info	swap/us_manager/probes/probe_info_new.h	/^	struct probe_info_new *info;$/;"	m	struct:probe_new	typeref:struct:probe_new::probe_info_new
info	swap/us_manager/sspt/ip.h	/^	struct probe_info *info;    \/**< Probe's data *\/$/;"	m	struct:us_ip	typeref:struct:us_ip::probe_info
inherit_event	events/core.c	/^inherit_event(struct perf_event *parent_event,$/;"	f	file:
inherit_group	events/core.c	/^static int inherit_group(struct perf_event *parent_event,$/;"	f	file:
inherit_task_group	events/core.c	/^inherit_task_group(struct perf_event *event, struct task_struct *parent,$/;"	f	file:
inheritable	audit.h	/^	kernel_cap_t		inheritable;$/;"	m	struct:audit_cap_data
init	rcutorture.c	/^	void (*init)(void);$/;"	m	struct:rcu_torture_ops	file:
init	sched/core.c	/^	sched_domain_init_f init;$/;"	m	struct:sched_domain_topology_level	file:
init	sched/fair.c	/^	bool init;$/;"	m	struct:hmp_keepalive	file:
init	swap/us_manager/probes/register_probes.h	/^	void (*init)(struct us_ip *);$/;"	m	struct:probe_iface
init	trace/trace.h	/^	int			(*init)(struct trace_array *tr);$/;"	m	struct:tracer
init_aggr_kprobe	kprobes.c	/^static void __kprobes init_aggr_kprobe(struct kprobe *ap, struct kprobe *p)$/;"	f	file:
init_annotated_branch_stats	trace/trace_branch.c	/^__init static int init_annotated_branch_stats(void)$/;"	f	file:
init_annotated_branch_stats	trace/trace_branch.c	/^fs_initcall(init_annotated_branch_stats);$/;"	v
init_blk_tracer	trace/blktrace.c	/^device_initcall(init_blk_tracer);$/;"	v
init_blk_tracer	trace/blktrace.c	/^static int __init init_blk_tracer(void)$/;"	f	file:
init_branch_tracer	trace/trace_branch.c	/^__init static int init_branch_tracer(void)$/;"	f	file:
init_branch_tracer	trace/trace_branch.c	/^core_initcall(init_branch_tracer);$/;"	v
init_buffer	swap/writer/debugfs_writer.c	/^static int init_buffer(void)$/;"	f	file:
init_buffers_to_read	swap/driver/driver_to_buffer.c	/^static inline void init_buffers_to_read(void)$/;"	f	file:
init_callback_list	rcutree.c	/^static void init_callback_list(struct rcu_data *rdp)$/;"	f	file:
init_cfs_bandwidth	sched/fair.c	/^void init_cfs_bandwidth(struct cfs_bandwidth *cfs_b) {}$/;"	f
init_cfs_bandwidth	sched/fair.c	/^void init_cfs_bandwidth(struct cfs_bandwidth *cfs_b)$/;"	f
init_cfs_rq	sched/fair.c	/^void init_cfs_rq(struct cfs_rq *cfs_rq)$/;"	f
init_cfs_rq_runtime	sched/fair.c	/^static void init_cfs_rq_runtime(struct cfs_rq *cfs_rq) {}$/;"	f	file:
init_cfs_rq_runtime	sched/fair.c	/^static void init_cfs_rq_runtime(struct cfs_rq *cfs_rq)$/;"	f	file:
init_cgroup_css	cgroup.c	/^static void init_cgroup_css(struct cgroup_subsys_state *css,$/;"	f	file:
init_cgroup_housekeeping	cgroup.c	/^static void init_cgroup_housekeeping(struct cgroup *cgrp)$/;"	f	file:
init_cgroup_root	cgroup.c	/^static void init_cgroup_root(struct cgroupfs_root *root)$/;"	f	file:
init_clocksource_sysfs	time/clocksource.c	/^device_initcall(init_clocksource_sysfs);$/;"	v
init_clocksource_sysfs	time/clocksource.c	/^static int __init init_clocksource_sysfs(void)$/;"	f	file:
init_cpu_deps	swap/parser/cpu_ctrl.c	/^int init_cpu_deps(void)$/;"	f
init_cpu_deps	swap/parser/cpu_ctrl.h	/^static inline int init_cpu_deps(void)$/;"	f
init_cpu_online	cpu.c	/^void init_cpu_online(const struct cpumask *src)$/;"	f
init_cpu_possible	cpu.c	/^void init_cpu_possible(const struct cpumask *src)$/;"	f
init_cpu_present	cpu.c	/^void init_cpu_present(const struct cpumask *src)$/;"	f
init_cred	cred.c	/^struct cred init_cred = {$/;"	v	typeref:struct:cred
init_css_set	cgroup.c	/^static struct css_set init_css_set;$/;"	v	typeref:struct:css_set	file:
init_css_set_link	cgroup.c	/^static struct cg_cgroup_link init_css_set_link;$/;"	v	typeref:struct:cg_cgroup_link	file:
init_data_energy	swap/energy/energy.c	/^static void init_data_energy(void)$/;"	f	file:
init_debugfs_energy	swap/energy/debugfs_energy.c	/^int init_debugfs_energy(void)$/;"	f
init_debugfs_us_manager	swap/us_manager/debugfs_us_manager.c	/^int init_debugfs_us_manager(void)$/;"	f
init_debugfs_writer	swap/writer/debugfs_writer.c	/^int init_debugfs_writer(void)$/;"	f
init_defrootdomain	sched/core.c	/^static void init_defrootdomain(void)$/;"	f	file:
init_ed	swap/energy/energy.c	/^static void init_ed(struct energy_data *ed)$/;"	f	file:
init_events	trace/trace_output.c	/^__init static int init_events(void)$/;"	f	file:
init_events	trace/trace_output.c	/^early_initcall(init_events);$/;"	v
init_feature	swap/energy/energy.c	/^static int init_feature(void)$/;"	f	file:
init_flag	swap/master/swap_initializer.c	/^static unsigned init_flag;$/;"	v	file:
init_ftrace_syscalls	trace/trace_syscalls.c	/^early_initcall(init_ftrace_syscalls);$/;"	v
init_ftrace_syscalls	trace/trace_syscalls.c	/^static int __init init_ftrace_syscalls(void)$/;"	f	file:
init_func_cmd_traceon	trace/trace_functions.c	/^static inline int init_func_cmd_traceon(void)$/;"	f	file:
init_func_cmd_traceon	trace/trace_functions.c	/^static int __init init_func_cmd_traceon(void)$/;"	f	file:
init_function_trace	trace/trace_functions.c	/^core_initcall(init_function_trace);$/;"	v
init_function_trace	trace/trace_functions.c	/^static __init int init_function_trace(void)$/;"	f	file:
init_graph_debugfs	trace/trace_functions_graph.c	/^fs_initcall(init_graph_debugfs);$/;"	v
init_graph_debugfs	trace/trace_functions_graph.c	/^static __init int init_graph_debugfs(void)$/;"	f	file:
init_graph_trace	trace/trace_functions_graph.c	/^core_initcall(init_graph_trace);$/;"	v
init_graph_trace	trace/trace_functions_graph.c	/^static __init int init_graph_trace(void)$/;"	f	file:
init_groups	groups.c	/^struct group_info init_groups = { .usage = ATOMIC_INIT(2) };$/;"	v	typeref:struct:group_info
init_header	power/snapshot.c	/^static int init_header(struct swsusp_info *info)$/;"	f	file:
init_header_complete	power/power.h	/^static inline int init_header_complete(struct swsusp_info *info)$/;"	f
init_header_complete	power/snapshot.c	/^static int init_header_complete(struct swsusp_info *info)$/;"	f	file:
init_hrtick	sched/core.c	/^static __init void init_hrtick(void)$/;"	f	file:
init_hrtick	sched/core.c	/^static inline void init_hrtick(void)$/;"	f	file:
init_hrtimers_cpu	hrtimer.c	/^static void __cpuinit init_hrtimers_cpu(int cpu)$/;"	f	file:
init_hw_breakpoint	events/hw_breakpoint.c	/^int __init init_hw_breakpoint(void)$/;"	f
init_idle	sched/core.c	/^void __cpuinit init_idle(struct task_struct *idle, int cpu)$/;"	f
init_idle_bootup_task	sched/core.c	/^void __cpuinit init_idle_bootup_task(struct task_struct *idle)$/;"	f
init_idle_pids	fork.c	/^static inline void init_idle_pids(struct pid_link *links)$/;"	f	file:
init_irq_default_affinity	irq/irqdesc.c	/^static void __init init_irq_default_affinity(void)$/;"	f	file:
init_irq_proc	irq/proc.c	/^void init_irq_proc(void)$/;"	f
init_irqsoff_tracer	trace/trace_irqsoff.c	/^__init static int init_irqsoff_tracer(void)$/;"	f	file:
init_irqsoff_tracer	trace/trace_irqsoff.c	/^core_initcall(init_irqsoff_tracer);$/;"	v
init_jiffies_clocksource	time/jiffies.c	/^core_initcall(init_jiffies_clocksource);$/;"	v
init_jiffies_clocksource	time/jiffies.c	/^static int __init init_jiffies_clocksource(void)$/;"	f	file:
init_kernel_text	extable.c	/^static inline int init_kernel_text(unsigned long addr)$/;"	f	file:
init_kprobe_trace	trace/trace_kprobe.c	/^fs_initcall(init_kprobe_trace);$/;"	v
init_kprobe_trace	trace/trace_kprobe.c	/^static __init int init_kprobe_trace(void)$/;"	f	file:
init_kprobes	kprobes.c	/^module_init(init_kprobes);$/;"	v
init_kprobes	kprobes.c	/^static int __init init_kprobes(void)$/;"	f	file:
init_kprobes	swap/kprobe/swap_kprobes.c	/^static int init_kprobes(void)$/;"	f	file:
init_lcd_debugfs	swap/energy/lcd/lcd_debugfs.c	/^int init_lcd_debugfs(struct dentry *energy_dir)$/;"	f
init_level	swap/master/swap_initializer.c	/^enum init_level {$/;"	g	file:
init_lstats_procfs	latencytop.c	/^device_initcall(init_lstats_procfs);$/;"	v
init_lstats_procfs	latencytop.c	/^static int __init init_lstats_procfs(void)$/;"	f	file:
init_mb	swap/parser/msg_buf.c	/^int init_mb(struct msg_buf *mb, size_t size)$/;"	f
init_mmio_trace	trace/trace_mmiotrace.c	/^__init static int init_mmio_trace(void)$/;"	f	file:
init_mmio_trace	trace/trace_mmiotrace.c	/^device_initcall(init_mmio_trace);$/;"	v
init_module_deps	swap/kprobe/swap_kprobes.c	/^static int init_module_deps(void)$/;"	f	file:
init_nocb_callback_list	rcutree_plugin.h	/^static bool init_nocb_callback_list(struct rcu_data *rdp)$/;"	f
init_node	gcov/fs.c	/^static void init_node(struct gcov_node *node, struct gcov_info *info,$/;"	f	file:
init_nsproxy	nsproxy.c	/^struct nsproxy init_nsproxy = {$/;"	v	typeref:struct:nsproxy
init_oops_id	panic.c	/^late_initcall(init_oops_id);$/;"	v
init_oops_id	panic.c	/^static int init_oops_id(void)$/;"	f	file:
init_pid_ns	pid.c	/^EXPORT_SYMBOL_GPL(init_pid_ns);$/;"	v
init_pid_ns	pid.c	/^struct pid_namespace init_pid_ns = {$/;"	v	typeref:struct:pid_namespace
init_posix_cpu_timers	posix-cpu-timers.c	/^__initcall(init_posix_cpu_timers);$/;"	v
init_posix_cpu_timers	posix-cpu-timers.c	/^static __init int init_posix_cpu_timers(void)$/;"	f	file:
init_posix_timers	posix-timers.c	/^__initcall(init_posix_timers);$/;"	v
init_posix_timers	posix-timers.c	/^static __init int init_posix_timers(void)$/;"	f	file:
init_pred	trace/trace_events_filter.c	/^static int init_pred(struct filter_parse_state *ps,$/;"	f	file:
init_pwq	workqueue.c	/^static void init_pwq(struct pool_workqueue *pwq, struct workqueue_struct *wq,$/;"	f	file:
init_rcu_head_on_stack	rcupdate.c	/^EXPORT_SYMBOL_GPL(init_rcu_head_on_stack);$/;"	v
init_rcu_head_on_stack	rcupdate.c	/^void init_rcu_head_on_stack(struct rcu_head *head)$/;"	f
init_root_id	cgroup.c	/^static bool init_root_id(struct cgroupfs_root *root)$/;"	f	file:
init_rootdomain	sched/core.c	/^static int init_rootdomain(struct root_domain *rd)$/;"	f	file:
init_rq_hrtick	sched/core.c	/^static inline void init_rq_hrtick(struct rq *rq)$/;"	f	file:
init_rq_hrtick	sched/core.c	/^static void init_rq_hrtick(struct rq *rq)$/;"	f	file:
init_rt_bandwidth	sched/rt.c	/^void init_rt_bandwidth(struct rt_bandwidth *rt_b, u64 period, u64 runtime)$/;"	f
init_rt_rq	sched/rt.c	/^void init_rt_rq(struct rt_rq *rt_rq, struct rq *rq)$/;"	f
init_rttest	rtmutex-tester.c	/^device_initcall(init_rttest);$/;"	v
init_rttest	rtmutex-tester.c	/^static int init_rttest(void)$/;"	f	file:
init_sched_debug_procfs	sched/debug.c	/^__initcall(init_sched_debug_procfs);$/;"	v
init_sched_debug_procfs	sched/debug.c	/^static int __init init_sched_debug_procfs(void)$/;"	f	file:
init_sched_domains	sched/core.c	/^static int init_sched_domains(const struct cpumask *cpu_map)$/;"	f	file:
init_sched_fair_class	sched/fair.c	/^__init void init_sched_fair_class(void)$/;"	f
init_sched_groups_power	sched/core.c	/^static void init_sched_groups_power(int cpu, struct sched_domain *sd)$/;"	f	file:
init_sched_rt_class	sched/rt.c	/^void init_sched_rt_class(void)$/;"	f
init_sm	swap/kprobe/swap_kprobes.c	/^static void init_sm(void)$/;"	f	file:
init_srcu_struct	srcu.c	/^EXPORT_SYMBOL_GPL(init_srcu_struct);$/;"	v
init_srcu_struct	srcu.c	/^int init_srcu_struct(struct srcu_struct *sp)$/;"	f
init_srcu_struct_fields	srcu.c	/^static int init_srcu_struct_fields(struct srcu_struct *sp)$/;"	f	file:
init_stat	swap/master/swap_initializer.c	/^static enum init_stat_t init_stat;$/;"	v	typeref:enum:init_stat_t	file:
init_stat_file	trace/trace_stat.c	/^static int init_stat_file(struct stat_session *session)$/;"	f	file:
init_stat_t	swap/master/swap_initializer.c	/^enum init_stat_t {$/;"	g	file:
init_struct_pid	pid.c	/^struct pid init_struct_pid = INIT_STRUCT_PID;$/;"	v	typeref:struct:pid
init_switch_context	swap/ks_features/ks_features.c	/^int init_switch_context(void)$/;"	f
init_syscall_features	swap/ks_features/ks_features.c	/^static int init_syscall_features(void)$/;"	f	file:
init_syscall_trace	trace/trace_syscalls.c	/^static int init_syscall_trace(struct ftrace_event_call *call)$/;"	f	file:
init_test_probes	test_kprobes.c	/^int init_test_probes(void)$/;"	f
init_test_thread	rtmutex-tester.c	/^static int init_test_thread(int id)$/;"	f	file:
init_tg_cfs_entry	sched/fair.c	/^void init_tg_cfs_entry(struct task_group *tg, struct cfs_rq *cfs_rq,$/;"	f
init_tg_rt_entry	sched/rt.c	/^void init_tg_rt_entry(struct task_group *tg, struct rt_rq *rt_rq,$/;"	f
init_timer_key	timer.c	/^EXPORT_SYMBOL(init_timer_key);$/;"	v
init_timer_key	timer.c	/^void init_timer_key(struct timer_list *timer, unsigned int flags,$/;"	f
init_timer_list_procfs	time/timer_list.c	/^__initcall(init_timer_list_procfs);$/;"	v
init_timer_list_procfs	time/timer_list.c	/^static int __init init_timer_list_procfs(void)$/;"	f	file:
init_timer_on_stack_key	timer.c	/^EXPORT_SYMBOL_GPL(init_timer_on_stack_key);$/;"	v
init_timer_on_stack_key	timer.c	/^void init_timer_on_stack_key(struct timer_list *timer, unsigned int flags,$/;"	f
init_timer_stats	time/timer_stats.c	/^void __init init_timer_stats(void)$/;"	f
init_timers	timer.c	/^void __init init_timers(void)$/;"	f
init_timers_cpu	timer.c	/^static int __cpuinit init_timers_cpu(int cpu)$/;"	f	file:
init_trace_buffers	trace/trace.c	/^static void init_trace_buffers(struct trace_array *tr, struct trace_buffer *buf)$/;"	f	file:
init_trace_printk	trace/trace_printk.c	/^early_initcall(init_trace_printk);$/;"	v
init_trace_printk	trace/trace_printk.c	/^static __init int init_trace_printk(void)$/;"	f	file:
init_trace_printk_function_export	trace/trace_printk.c	/^fs_initcall(init_trace_printk_function_export);$/;"	v
init_trace_printk_function_export	trace/trace_printk.c	/^static __init int init_trace_printk_function_export(void)$/;"	f	file:
init_trace_uprobe_filter	trace/trace_uprobe.c	/^static inline void init_trace_uprobe_filter(struct trace_uprobe_filter *filter)$/;"	f	file:
init_tracepoints	tracepoint.c	/^__initcall(init_tracepoints);$/;"	v
init_tracepoints	tracepoint.c	/^static int init_tracepoints(void)$/;"	f	file:
init_tracer_debugfs	trace/trace.c	/^init_tracer_debugfs(struct trace_array *tr, struct dentry *d_tracer)$/;"	f	file:
init_tstats_procfs	time/timer_stats.c	/^__initcall(init_tstats_procfs);$/;"	v
init_tstats_procfs	time/timer_stats.c	/^static int __init init_tstats_procfs(void)$/;"	f	file:
init_uprobe_table	swap/uprobe/swap_uprobes.c	/^static void init_uprobe_table(void)$/;"	f	file:
init_uprobe_trace	trace/trace_uprobe.c	/^fs_initcall(init_uprobe_trace);$/;"	v
init_uprobe_trace	trace/trace_uprobe.c	/^static __init int init_uprobe_trace(void)$/;"	f	file:
init_uprobes	events/uprobes.c	/^module_init(init_uprobes);$/;"	v
init_uprobes	events/uprobes.c	/^static int __init init_uprobes(void)$/;"	f	file:
init_uprobes_insn_slots	swap/uprobe/swap_uprobes.c	/^static void init_uprobes_insn_slots(void)$/;"	f	file:
init_uretprobe_inst_table	swap/uprobe/swap_uprobes.c	/^static void init_uretprobe_inst_table(void)$/;"	f	file:
init_us_filter	swap/us_manager/us_manager.c	/^static int init_us_filter(void)$/;"	f	file:
init_us_manager	swap/us_manager/us_manager.c	/^static int init_us_manager(void)$/;"	f	file:
init_use	swap/master/swap_initializer.c	/^static atomic_t init_use = ATOMIC_INIT(0);$/;"	v	file:
init_user_ns	user.c	/^EXPORT_SYMBOL_GPL(init_user_ns);$/;"	v
init_user_ns	user.c	/^struct user_namespace init_user_ns = {$/;"	v	typeref:struct:user_namespace
init_wakeup_tracer	trace/trace_sched_wakeup.c	/^__init static int init_wakeup_tracer(void)$/;"	f	file:
init_wakeup_tracer	trace/trace_sched_wakeup.c	/^core_initcall(init_wakeup_tracer);$/;"	v
init_worker_pool	workqueue.c	/^static int init_worker_pool(struct worker_pool *pool)$/;"	f	file:
init_workqueues	workqueue.c	/^early_initcall(init_workqueues);$/;"	v
init_workqueues	workqueue.c	/^static int __init init_workqueues(void)$/;"	f	file:
initial_log_buf	printk.c	/^static char initial_log_buf[__LOG_BUF_LEN];$/;"	v	file:
initial_log_idx	printk.c	/^static unsigned int initial_log_idx = 0;$/;"	v	file:
ino	audit.h	/^	unsigned long		ino;$/;"	m	struct:audit_names
ino	audit_watch.c	/^	unsigned long		ino;	\/* associated inode number *\/$/;"	m	struct:audit_watch	file:
ino_count	audit.h	/^	int		    ino_count;$/;"	m	struct:audit_context
inode	events/uprobes.c	/^	struct inode		*inode;		\/* Also hold a ref to inode *\/$/;"	m	struct:uprobe	typeref:struct:uprobe::inode	file:
inode	trace/trace_uprobe.c	/^	struct inode			*inode;$/;"	m	struct:trace_uprobe	typeref:struct:trace_uprobe::inode	file:
insert	swap/ks_features/ks_map.c	/^int insert(struct map *map, void *data)$/;"	f
insert_hash	audit_tree.c	/^static void insert_hash(struct audit_chunk *chunk)$/;"	f	file:
insert_kthread_work	kthread.c	/^static void insert_kthread_work(struct kthread_worker *worker,$/;"	f	file:
insert_resource	resource.c	/^int insert_resource(struct resource *parent, struct resource *new)$/;"	f
insert_resource_conflict	resource.c	/^struct resource *insert_resource_conflict(struct resource *parent, struct resource *new)$/;"	f
insert_resource_expand_to_fit	resource.c	/^void insert_resource_expand_to_fit(struct resource *root, struct resource *new)$/;"	f
insert_stat	trace/trace_stat.c	/^static int insert_stat(struct rb_root *root, void *stat, cmp_stat_t cmp)$/;"	f	file:
insert_uprobe	events/uprobes.c	/^static struct uprobe *insert_uprobe(struct uprobe *uprobe)$/;"	f	file:
insert_work	workqueue.c	/^static void insert_work(struct pool_workqueue *pwq, struct work_struct *work,$/;"	f	file:
insert_wq_barrier	workqueue.c	/^static void insert_wq_barrier(struct pool_workqueue *pwq,$/;"	f	file:
insn	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	/^	kprobe_opcode_t *insn;$/;"	m	struct:arch_specific_insn
insn	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	/^	kprobe_opcode_t *insn;$/;"	m	struct:arch_specific_insn
insn_size	kprobes.c	/^	size_t insn_size;	\/* size of instruction slot *\/$/;"	m	struct:kprobe_insn_cache	file:
insns	kprobes.c	/^	kprobe_opcode_t *insns;		\/* Page of instruction slots *\/$/;"	m	struct:kprobe_insn_page	file:
insns	seccomp.c	/^	struct sock_filter insns[];$/;"	m	struct:seccomp_filter	typeref:struct:seccomp_filter::sock_filter	file:
inspserver_addr	swap/webprobe/webprobe_prof.c	/^	u64 inspserver_addr;$/;"	m	struct:web_prof_data	file:
inspserver_addr_local	swap/webprobe/webprobe.c	/^static unsigned long inspserver_addr_local;$/;"	v	file:
install_all	swap/us_manager/pf/pf_group.c	/^void install_all(void)$/;"	f
install_breakpoint	events/uprobes.c	/^install_breakpoint(struct uprobe *uprobe, struct mm_struct *mm,$/;"	f	file:
install_features	swap/ks_features/ks_features.c	/^static int install_features(struct feature *f)$/;"	f	file:
instance_delete	trace/trace.c	/^static int instance_delete(const char *name)$/;"	f	file:
instance_dir_inode_operations	trace/trace.c	/^static const struct inode_operations instance_dir_inode_operations = {$/;"	v	typeref:struct:inode_operations	file:
instance_mkdir	trace/trace.c	/^static int instance_mkdir (struct inode *inode, struct dentry *dentry, umode_t mode)$/;"	f	file:
instance_rmdir	trace/trace.c	/^static int instance_rmdir(struct inode *inode, struct dentry *dentry)$/;"	f	file:
int_to_threadref	debug/gdbstub.c	/^static void int_to_threadref(unsigned char *id, int value)$/;"	f	file:
internal_add_timer	timer.c	/^static void internal_add_timer(struct tvec_base *base, struct timer_list *timer)$/;"	f	file:
internal_trace_puts	trace/trace.h	1051;"	d
interruptible_sleep_on	sched/core.c	/^EXPORT_SYMBOL(interruptible_sleep_on);$/;"	v
interruptible_sleep_on	sched/core.c	/^void __sched interruptible_sleep_on(wait_queue_head_t *q)$/;"	f
interruptible_sleep_on_timeout	sched/core.c	/^EXPORT_SYMBOL(interruptible_sleep_on_timeout);$/;"	v
interruptible_sleep_on_timeout	sched/core.c	/^interruptible_sleep_on_timeout(wait_queue_head_t *q, long timeout)$/;"	f
intersection	swap/us_manager/sspt/sspt_proc.c	/^static int intersection(unsigned long start_a, unsigned long end_a,$/;"	f	file:
invoke_rcu_callbacks	rcutiny_plugin.h	/^static void invoke_rcu_callbacks(void)$/;"	f
invoke_rcu_callbacks	rcutiny_plugin.h	/^void invoke_rcu_callbacks(void)$/;"	f
invoke_rcu_callbacks	rcutree.c	/^static void invoke_rcu_callbacks(struct rcu_state *rsp, struct rcu_data *rdp)$/;"	f	file:
invoke_rcu_callbacks_kthread	rcutree_plugin.h	/^static void invoke_rcu_callbacks_kthread(void)$/;"	f
invoke_rcu_core	rcutree.c	/^static void invoke_rcu_core(void)$/;"	f	file:
invoke_softirq	softirq.c	/^static inline void invoke_softirq(void)$/;"	f	file:
io_schedule	sched/core.c	/^EXPORT_SYMBOL(io_schedule);$/;"	v
io_schedule	sched/core.c	/^void __sched io_schedule(void)$/;"	f
io_schedule_timeout	sched/core.c	/^long __sched io_schedule_timeout(long timeout)$/;"	f
iomem_is_exclusive	resource.c	/^int iomem_is_exclusive(u64 addr)$/;"	f
iomem_map_sanity_check	resource.c	/^int iomem_map_sanity_check(resource_size_t addr, unsigned long size)$/;"	f
iomem_open	resource.c	/^static int iomem_open(struct inode *inode, struct file *file)$/;"	f	file:
iomem_resource	resource.c	/^EXPORT_SYMBOL(iomem_resource);$/;"	v
iomem_resource	resource.c	/^struct resource iomem_resource = {$/;"	v	typeref:struct:resource
ioport_resource	resource.c	/^EXPORT_SYMBOL(ioport_resource);$/;"	v
ioport_resource	resource.c	/^struct resource ioport_resource = {$/;"	v	typeref:struct:resource
ioports_open	resource.c	/^static int ioports_open(struct inode *inode, struct file *file)$/;"	f	file:
ioresources_init	resource.c	/^__initcall(ioresources_init);$/;"	v
ioresources_init	resource.c	/^static int __init ioresources_init(void)$/;"	f	file:
ip	rtmutex_common.h	/^	unsigned long		ip;$/;"	m	struct:rt_mutex_waiter
ip	trace/ftrace.c	/^	unsigned long			ip;$/;"	m	struct:ftrace_profile	file:
ip	trace/ftrace.c	/^	unsigned long		ip;$/;"	m	struct:ftrace_func_probe	file:
ip	trace/ftrace.c	/^	unsigned long ip;$/;"	m	struct:ftrace_func_entry	file:
ip	trace/trace.h	/^	unsigned long		ip;$/;"	m	struct:kprobe_trace_entry_head
ip_list	swap/us_manager/img/img_file.h	/^	struct list_head ip_list;	\/**< For img_ip *\/$/;"	m	struct:img_file	typeref:struct:img_file::list_head
ip_list_inst	swap/us_manager/sspt/sspt_page.h	/^	struct list_head ip_list_inst;		\/**< For installed ip *\/$/;"	m	struct:sspt_page	typeref:struct:sspt_page::list_head
ip_list_no_inst	swap/us_manager/sspt/sspt_page.h	/^	struct list_head ip_list_no_inst;	\/**< For don'tinstalled ip *\/$/;"	m	struct:sspt_page	typeref:struct:sspt_page::list_head
ip_to_proc	swap/preload/preload_module.c	35;"	d	file:
ipc	audit.h	/^		} ipc;$/;"	m	union:audit_context::__anon15	typeref:struct:audit_context::__anon15::__anon17
irq	irq/devres.c	/^	unsigned int irq;$/;"	m	struct:irq_devres	file:
irq	power/sleep_history.c	/^	unsigned int irq;$/;"	m	union:wakeup_history	file:
irq_affinity_hint_proc_fops	irq/proc.c	/^static const struct file_operations irq_affinity_hint_proc_fops = {$/;"	v	typeref:struct:file_operations	file:
irq_affinity_hint_proc_open	irq/proc.c	/^static int irq_affinity_hint_proc_open(struct inode *inode, struct file *file)$/;"	f	file:
irq_affinity_hint_proc_show	irq/proc.c	/^static int irq_affinity_hint_proc_show(struct seq_file *m, void *v)$/;"	f	file:
irq_affinity_list_proc_fops	irq/proc.c	/^static const struct file_operations irq_affinity_list_proc_fops = {$/;"	v	typeref:struct:file_operations	file:
irq_affinity_list_proc_open	irq/proc.c	/^static int irq_affinity_list_proc_open(struct inode *inode, struct file *file)$/;"	f	file:
irq_affinity_list_proc_show	irq/proc.c	/^static int irq_affinity_list_proc_show(struct seq_file *m, void *v)$/;"	f	file:
irq_affinity_list_proc_write	irq/proc.c	/^static ssize_t irq_affinity_list_proc_write(struct file *file,$/;"	f	file:
irq_affinity_notify	irq/manage.c	/^static void irq_affinity_notify(struct work_struct *work)$/;"	f	file:
irq_affinity_proc_fops	irq/proc.c	/^static const struct file_operations irq_affinity_proc_fops = {$/;"	v	typeref:struct:file_operations	file:
irq_affinity_proc_open	irq/proc.c	/^static int irq_affinity_proc_open(struct inode *inode, struct file *file)$/;"	f	file:
irq_affinity_proc_show	irq/proc.c	/^static int irq_affinity_proc_show(struct seq_file *m, void *v)$/;"	f	file:
irq_affinity_proc_write	irq/proc.c	/^static ssize_t irq_affinity_proc_write(struct file *file,$/;"	f	file:
irq_affinity_setup	irq/irqdesc.c	/^static int __init irq_affinity_setup(char *str)$/;"	f	file:
irq_alloc_generic_chip	irq/generic-chip.c	/^EXPORT_SYMBOL_GPL(irq_alloc_generic_chip);$/;"	v
irq_alloc_generic_chip	irq/generic-chip.c	/^irq_alloc_generic_chip(const char *name, int num_ct, unsigned int irq_base,$/;"	f
irq_can_move_pcntxt	irq/manage.c	/^static inline bool irq_can_move_pcntxt(struct irq_data *data) { return true; }$/;"	f	file:
irq_can_move_pcntxt	irq/manage.c	/^static inline bool irq_can_move_pcntxt(struct irq_data *data)$/;"	f	file:
irq_can_set_affinity	irq/manage.c	/^int irq_can_set_affinity(unsigned int irq)$/;"	f
irq_capable	rcutorture.c	/^	int irq_capable;$/;"	m	struct:rcu_torture_ops	file:
irq_check_poll	irq/chip.c	/^static bool irq_check_poll(struct irq_desc *desc)$/;"	f	file:
irq_copy_pending	irq/manage.c	/^irq_copy_pending(struct irq_desc *desc, const struct cpumask *mask) { }$/;"	f	file:
irq_copy_pending	irq/manage.c	/^irq_copy_pending(struct irq_desc *desc, const struct cpumask *mask)$/;"	f	file:
irq_cpu_offline	irq/chip.c	/^void irq_cpu_offline(void)$/;"	f
irq_cpu_online	irq/chip.c	/^void irq_cpu_online(void)$/;"	f
irq_create_direct_mapping	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_create_direct_mapping);$/;"	v
irq_create_direct_mapping	irq/irqdomain.c	/^unsigned int irq_create_direct_mapping(struct irq_domain *domain)$/;"	f
irq_create_mapping	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_create_mapping);$/;"	v
irq_create_mapping	irq/irqdomain.c	/^unsigned int irq_create_mapping(struct irq_domain *domain,$/;"	f
irq_create_of_mapping	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_create_of_mapping);$/;"	v
irq_create_of_mapping	irq/irqdomain.c	/^unsigned int irq_create_of_mapping(struct device_node *controller,$/;"	f
irq_create_strict_mappings	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_create_strict_mappings);$/;"	v
irq_create_strict_mappings	irq/irqdomain.c	/^int irq_create_strict_mappings(struct irq_domain *domain, unsigned int irq_base,$/;"	f
irq_data_to_desc	irq/internals.h	61;"	d
irq_debugfs_init	irq/irqdomain.c	/^__initcall(irq_debugfs_init);$/;"	v
irq_debugfs_init	irq/irqdomain.c	/^static int __init irq_debugfs_init(void)$/;"	f	file:
irq_default_affinity	irq/manage.c	/^cpumask_var_t irq_default_affinity;$/;"	v
irq_default_domain	irq/irqdomain.c	/^static struct irq_domain *irq_default_domain;$/;"	v	typeref:struct:irq_domain	file:
irq_default_primary_handler	irq/manage.c	/^static irqreturn_t irq_default_primary_handler(int irq, void *dev_id)$/;"	f	file:
irq_depth	debug/debug_core.h	/^	int			irq_depth;$/;"	m	struct:debuggerinfo_struct
irq_desc_lock_class	irq/irqdesc.c	/^static struct lock_class_key irq_desc_lock_class;$/;"	v	typeref:struct:lock_class_key	file:
irq_devres	irq/devres.c	/^struct irq_devres {$/;"	s	file:
irq_disable	irq/chip.c	/^void irq_disable(struct irq_desc *desc)$/;"	f
irq_dispose_mapping	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_dispose_mapping);$/;"	v
irq_dispose_mapping	irq/irqdomain.c	/^void irq_dispose_mapping(unsigned int virq)$/;"	f
irq_do_set_affinity	irq/manage.c	/^int irq_do_set_affinity(struct irq_data *data, const struct cpumask *mask,$/;"	f
irq_domain_add	irq/irqdomain.c	/^static void irq_domain_add(struct irq_domain *domain)$/;"	f	file:
irq_domain_add_legacy	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_domain_add_legacy);$/;"	v
irq_domain_add_legacy	irq/irqdomain.c	/^struct irq_domain *irq_domain_add_legacy(struct device_node *of_node,$/;"	f
irq_domain_add_linear	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_domain_add_linear);$/;"	v
irq_domain_add_linear	irq/irqdomain.c	/^struct irq_domain *irq_domain_add_linear(struct device_node *of_node,$/;"	f
irq_domain_add_nomap	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_domain_add_nomap);$/;"	v
irq_domain_add_nomap	irq/irqdomain.c	/^struct irq_domain *irq_domain_add_nomap(struct device_node *of_node,$/;"	f
irq_domain_add_simple	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_domain_add_simple);$/;"	v
irq_domain_add_simple	irq/irqdomain.c	/^struct irq_domain *irq_domain_add_simple(struct device_node *of_node,$/;"	f
irq_domain_add_tree	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_domain_add_tree);$/;"	v
irq_domain_add_tree	irq/irqdomain.c	/^struct irq_domain *irq_domain_add_tree(struct device_node *of_node,$/;"	f
irq_domain_alloc	irq/irqdomain.c	/^static struct irq_domain *irq_domain_alloc(struct device_node *of_node,$/;"	f	file:
irq_domain_associate_many	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_domain_associate_many);$/;"	v
irq_domain_associate_many	irq/irqdomain.c	/^int irq_domain_associate_many(struct irq_domain *domain, unsigned int irq_base,$/;"	f
irq_domain_disassociate_many	irq/irqdomain.c	/^static void irq_domain_disassociate_many(struct irq_domain *domain,$/;"	f	file:
irq_domain_free	irq/irqdomain.c	/^static void irq_domain_free(struct irq_domain *domain)$/;"	f	file:
irq_domain_generate_simple	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_domain_generate_simple);$/;"	v
irq_domain_generate_simple	irq/irqdomain.c	/^void irq_domain_generate_simple(const struct of_device_id *match,$/;"	f
irq_domain_legacy_revmap	irq/irqdomain.c	/^static unsigned int irq_domain_legacy_revmap(struct irq_domain *domain,$/;"	f	file:
irq_domain_remove	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_domain_remove);$/;"	v
irq_domain_remove	irq/irqdomain.c	/^void irq_domain_remove(struct irq_domain *domain)$/;"	f
irq_domain_simple_ops	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_domain_simple_ops);$/;"	v
irq_domain_simple_ops	irq/irqdomain.c	/^const struct irq_domain_ops irq_domain_simple_ops = {$/;"	v	typeref:struct:irq_domain_ops
irq_domain_xlate_onecell	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_domain_xlate_onecell);$/;"	v
irq_domain_xlate_onecell	irq/irqdomain.c	/^int irq_domain_xlate_onecell(struct irq_domain *d, struct device_node *ctrlr,$/;"	f
irq_domain_xlate_onetwocell	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_domain_xlate_onetwocell);$/;"	v
irq_domain_xlate_onetwocell	irq/irqdomain.c	/^int irq_domain_xlate_onetwocell(struct irq_domain *d,$/;"	f
irq_domain_xlate_twocell	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_domain_xlate_twocell);$/;"	v
irq_domain_xlate_twocell	irq/irqdomain.c	/^int irq_domain_xlate_twocell(struct irq_domain *d, struct device_node *ctrlr,$/;"	f
irq_enable	irq/chip.c	/^void irq_enable(struct irq_desc *desc)$/;"	f
irq_enter	softirq.c	/^void irq_enter(void)$/;"	f
irq_exit	softirq.c	/^void irq_exit(void)$/;"	f
irq_expand_nr_irqs	irq/irqdesc.c	/^static int irq_expand_nr_irqs(unsigned int nr)$/;"	f	file:
irq_finalize_oneshot	irq/manage.c	/^static void irq_finalize_oneshot(struct irq_desc *desc,$/;"	f	file:
irq_find_host	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_find_host);$/;"	v
irq_find_host	irq/irqdomain.c	/^struct irq_domain *irq_find_host(struct device_node *node)$/;"	f
irq_find_mapping	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_find_mapping);$/;"	v
irq_find_mapping	irq/irqdomain.c	/^unsigned int irq_find_mapping(struct irq_domain *domain,$/;"	f
irq_forced_thread_fn	irq/manage.c	/^irq_forced_thread_fn(struct irq_desc *desc, struct irqaction *action)$/;"	f	file:
irq_free_descs	irq/irqdesc.c	/^EXPORT_SYMBOL_GPL(irq_free_descs);$/;"	v
irq_free_descs	irq/irqdesc.c	/^void irq_free_descs(unsigned int from, unsigned int cnt)$/;"	f
irq_gc_ack_clr_bit	irq/generic-chip.c	/^void irq_gc_ack_clr_bit(struct irq_data *d)$/;"	f
irq_gc_ack_set_bit	irq/generic-chip.c	/^void irq_gc_ack_set_bit(struct irq_data *d)$/;"	f
irq_gc_eoi	irq/generic-chip.c	/^void irq_gc_eoi(struct irq_data *d)$/;"	f
irq_gc_init_ops	irq/generic-chip.c	/^device_initcall(irq_gc_init_ops);$/;"	v
irq_gc_init_ops	irq/generic-chip.c	/^static int __init irq_gc_init_ops(void)$/;"	f	file:
irq_gc_mask_clr_bit	irq/generic-chip.c	/^void irq_gc_mask_clr_bit(struct irq_data *d)$/;"	f
irq_gc_mask_disable_reg	irq/generic-chip.c	/^void irq_gc_mask_disable_reg(struct irq_data *d)$/;"	f
irq_gc_mask_disable_reg_and_ack	irq/generic-chip.c	/^void irq_gc_mask_disable_reg_and_ack(struct irq_data *d)$/;"	f
irq_gc_mask_set_bit	irq/generic-chip.c	/^void irq_gc_mask_set_bit(struct irq_data *d)$/;"	f
irq_gc_noop	irq/generic-chip.c	/^void irq_gc_noop(struct irq_data *d)$/;"	f
irq_gc_resume	irq/generic-chip.c	/^static void irq_gc_resume(void)$/;"	f	file:
irq_gc_resume	irq/generic-chip.c	347;"	d	file:
irq_gc_set_wake	irq/generic-chip.c	/^int irq_gc_set_wake(struct irq_data *d, unsigned int on)$/;"	f
irq_gc_shutdown	irq/generic-chip.c	/^static void irq_gc_shutdown(void)$/;"	f	file:
irq_gc_suspend	irq/generic-chip.c	/^static int irq_gc_suspend(void)$/;"	f	file:
irq_gc_suspend	irq/generic-chip.c	346;"	d	file:
irq_gc_syscore_ops	irq/generic-chip.c	/^static struct syscore_ops irq_gc_syscore_ops = {$/;"	v	typeref:struct:syscore_ops	file:
irq_gc_unmask_enable_reg	irq/generic-chip.c	/^void irq_gc_unmask_enable_reg(struct irq_data *d)$/;"	f
irq_get_desc_buslock	irq/internals.h	/^irq_get_desc_buslock(unsigned int irq, unsigned long *flags, unsigned int check)$/;"	f
irq_get_desc_lock	irq/internals.h	/^irq_get_desc_lock(unsigned int irq, unsigned long *flags, unsigned int check)$/;"	f
irq_get_irq_data	irq/chip.c	/^EXPORT_SYMBOL_GPL(irq_get_irq_data);$/;"	v
irq_get_irq_data	irq/chip.c	/^struct irq_data *irq_get_irq_data(unsigned int irq)$/;"	f
irq_get_next_irq	irq/irqdesc.c	/^unsigned int irq_get_next_irq(unsigned int offset)$/;"	f
irq_get_pending	irq/manage.c	/^irq_get_pending(struct cpumask *mask, struct irq_desc *desc) { }$/;"	f	file:
irq_get_pending	irq/manage.c	/^irq_get_pending(struct cpumask *mask, struct irq_desc *desc)$/;"	f	file:
irq_insert_desc	irq/irqdesc.c	/^static void irq_insert_desc(unsigned int irq, struct irq_desc *desc)$/;"	f	file:
irq_linear_revmap	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_linear_revmap);$/;"	v
irq_linear_revmap	irq/irqdomain.c	/^unsigned int irq_linear_revmap(struct irq_domain *domain,$/;"	f
irq_list	power/wakeup_reason.c	/^static int irq_list[MAX_WAKEUP_REASON_IRQS];$/;"	v	file:
irq_modify_status	irq/chip.c	/^EXPORT_SYMBOL_GPL(irq_modify_status);$/;"	v
irq_modify_status	irq/chip.c	/^void irq_modify_status(unsigned int irq, unsigned long clr, unsigned long set)$/;"	f
irq_move_irq	irq/migration.c	/^void irq_move_irq(struct irq_data *idata)$/;"	f
irq_move_masked_irq	irq/migration.c	/^void irq_move_masked_irq(struct irq_data *idata)$/;"	f
irq_move_pending	irq/manage.c	/^static inline bool irq_move_pending(struct irq_data *data) { return false; }$/;"	f	file:
irq_move_pending	irq/manage.c	/^static inline bool irq_move_pending(struct irq_data *data)$/;"	f	file:
irq_nested_lock_class	irq/generic-chip.c	/^static struct lock_class_key irq_nested_lock_class;$/;"	v	typeref:struct:lock_class_key	file:
irq_nested_primary_handler	irq/manage.c	/^static irqreturn_t irq_nested_primary_handler(int irq, void *dev_id)$/;"	f	file:
irq_node_proc_fops	irq/proc.c	/^static const struct file_operations irq_node_proc_fops = {$/;"	v	typeref:struct:file_operations	file:
irq_node_proc_open	irq/proc.c	/^static int irq_node_proc_open(struct inode *inode, struct file *file)$/;"	f	file:
irq_node_proc_show	irq/proc.c	/^static int irq_node_proc_show(struct seq_file *m, void *v)$/;"	f	file:
irq_percpu_disable	irq/chip.c	/^void irq_percpu_disable(struct irq_desc *desc, unsigned int cpu)$/;"	f
irq_percpu_enable	irq/chip.c	/^void irq_percpu_enable(struct irq_desc *desc, unsigned int cpu)$/;"	f
irq_pm_init_ops	irq/pm.c	/^device_initcall(irq_pm_init_ops);$/;"	v
irq_pm_init_ops	irq/pm.c	/^static int __init irq_pm_init_ops(void)$/;"	f	file:
irq_pm_syscore_ops	irq/pm.c	/^static struct syscore_ops irq_pm_syscore_ops = {$/;"	v	typeref:struct:syscore_ops	file:
irq_pm_syscore_resume	irq/pm.c	/^static void irq_pm_syscore_resume(void)$/;"	f	file:
irq_poll_active	irq/spurious.c	/^static atomic_t irq_poll_active;$/;"	v	file:
irq_poll_cpu	irq/spurious.c	/^static int irq_poll_cpu;$/;"	v	file:
irq_put_desc_busunlock	irq/internals.h	/^irq_put_desc_busunlock(struct irq_desc *desc, unsigned long flags)$/;"	f
irq_put_desc_unlock	irq/internals.h	/^irq_put_desc_unlock(struct irq_desc *desc, unsigned long flags)$/;"	f
irq_remove_generic_chip	irq/generic-chip.c	/^EXPORT_SYMBOL_GPL(irq_remove_generic_chip);$/;"	v
irq_remove_generic_chip	irq/generic-chip.c	/^void irq_remove_generic_chip(struct irq_chip_generic *gc, u32 msk,$/;"	f
irq_reserve_irqs	irq/irqdesc.c	/^int irq_reserve_irqs(unsigned int from, unsigned int cnt)$/;"	f
irq_select_affinity_usr	irq/manage.c	/^int irq_select_affinity_usr(unsigned int irq, struct cpumask *mask)$/;"	f
irq_set_affinity_hint	irq/manage.c	/^EXPORT_SYMBOL_GPL(irq_set_affinity_hint);$/;"	v
irq_set_affinity_hint	irq/manage.c	/^int irq_set_affinity_hint(unsigned int irq, const struct cpumask *m)$/;"	f
irq_set_affinity_locked	irq/manage.c	/^int irq_set_affinity_locked(struct irq_data *data, const struct cpumask *mask,$/;"	f
irq_set_affinity_notifier	irq/manage.c	/^EXPORT_SYMBOL_GPL(irq_set_affinity_notifier);$/;"	v
irq_set_affinity_notifier	irq/manage.c	/^irq_set_affinity_notifier(unsigned int irq, struct irq_affinity_notify *notify)$/;"	f
irq_set_chip	irq/chip.c	/^EXPORT_SYMBOL(irq_set_chip);$/;"	v
irq_set_chip	irq/chip.c	/^int irq_set_chip(unsigned int irq, struct irq_chip *chip)$/;"	f
irq_set_chip_and_handler_name	irq/chip.c	/^EXPORT_SYMBOL_GPL(irq_set_chip_and_handler_name);$/;"	v
irq_set_chip_and_handler_name	irq/chip.c	/^irq_set_chip_and_handler_name(unsigned int irq, struct irq_chip *chip,$/;"	f
irq_set_chip_data	irq/chip.c	/^EXPORT_SYMBOL(irq_set_chip_data);$/;"	v
irq_set_chip_data	irq/chip.c	/^int irq_set_chip_data(unsigned int irq, void *data)$/;"	f
irq_set_default_host	irq/irqdomain.c	/^EXPORT_SYMBOL_GPL(irq_set_default_host);$/;"	v
irq_set_default_host	irq/irqdomain.c	/^void irq_set_default_host(struct irq_domain *domain)$/;"	f
irq_set_handler_data	irq/chip.c	/^EXPORT_SYMBOL(irq_set_handler_data);$/;"	v
irq_set_handler_data	irq/chip.c	/^int irq_set_handler_data(unsigned int irq, void *data)$/;"	f
irq_set_irq_type	irq/chip.c	/^EXPORT_SYMBOL(irq_set_irq_type);$/;"	v
irq_set_irq_type	irq/chip.c	/^int irq_set_irq_type(unsigned int irq, unsigned int type)$/;"	f
irq_set_irq_wake	irq/manage.c	/^EXPORT_SYMBOL(irq_set_irq_wake);$/;"	v
irq_set_irq_wake	irq/manage.c	/^int irq_set_irq_wake(unsigned int irq, unsigned int on)$/;"	f
irq_set_msi_desc	irq/chip.c	/^int irq_set_msi_desc(unsigned int irq, struct msi_desc *entry)$/;"	f
irq_set_msi_desc_off	irq/chip.c	/^int irq_set_msi_desc_off(unsigned int irq_base, unsigned int irq_offset,$/;"	f
irq_set_parent	irq/manage.c	/^int irq_set_parent(int irq, int parent_irq)$/;"	f
irq_set_percpu_devid	irq/irqdesc.c	/^int irq_set_percpu_devid(unsigned int irq)$/;"	f
irq_set_thread_affinity	irq/manage.c	/^void irq_set_thread_affinity(struct irq_desc *desc)$/;"	f
irq_settings_can_autoenable	irq/settings.h	/^static inline bool irq_settings_can_autoenable(struct irq_desc *desc)$/;"	f
irq_settings_can_move_pcntxt	irq/settings.h	/^static inline bool irq_settings_can_move_pcntxt(struct irq_desc *desc)$/;"	f
irq_settings_can_probe	irq/settings.h	/^static inline bool irq_settings_can_probe(struct irq_desc *desc)$/;"	f
irq_settings_can_request	irq/settings.h	/^static inline bool irq_settings_can_request(struct irq_desc *desc)$/;"	f
irq_settings_can_thread	irq/settings.h	/^static inline bool irq_settings_can_thread(struct irq_desc *desc)$/;"	f
irq_settings_clr_and_set	irq/settings.h	/^irq_settings_clr_and_set(struct irq_desc *desc, u32 clr, u32 set)$/;"	f
irq_settings_clr_level	irq/settings.h	/^static inline void irq_settings_clr_level(struct irq_desc *desc)$/;"	f
irq_settings_clr_noprobe	irq/settings.h	/^static inline void irq_settings_clr_noprobe(struct irq_desc *desc)$/;"	f
irq_settings_clr_norequest	irq/settings.h	/^static inline void irq_settings_clr_norequest(struct irq_desc *desc)$/;"	f
irq_settings_clr_nothread	irq/settings.h	/^static inline void irq_settings_clr_nothread(struct irq_desc *desc)$/;"	f
irq_settings_get_trigger_mask	irq/settings.h	/^static inline u32 irq_settings_get_trigger_mask(struct irq_desc *desc)$/;"	f
irq_settings_has_no_balance_set	irq/settings.h	/^static inline bool irq_settings_has_no_balance_set(struct irq_desc *desc)$/;"	f
irq_settings_is_level	irq/settings.h	/^static inline bool irq_settings_is_level(struct irq_desc *desc)$/;"	f
irq_settings_is_nested_thread	irq/settings.h	/^static inline bool irq_settings_is_nested_thread(struct irq_desc *desc)$/;"	f
irq_settings_is_per_cpu	irq/settings.h	/^static inline bool irq_settings_is_per_cpu(struct irq_desc *desc)$/;"	f
irq_settings_is_per_cpu_devid	irq/settings.h	/^static inline bool irq_settings_is_per_cpu_devid(struct irq_desc *desc)$/;"	f
irq_settings_set_level	irq/settings.h	/^static inline void irq_settings_set_level(struct irq_desc *desc)$/;"	f
irq_settings_set_no_balancing	irq/settings.h	/^static inline void irq_settings_set_no_balancing(struct irq_desc *desc)$/;"	f
irq_settings_set_noprobe	irq/settings.h	/^static inline void irq_settings_set_noprobe(struct irq_desc *desc)$/;"	f
irq_settings_set_norequest	irq/settings.h	/^static inline void irq_settings_set_norequest(struct irq_desc *desc)$/;"	f
irq_settings_set_nothread	irq/settings.h	/^static inline void irq_settings_set_nothread(struct irq_desc *desc)$/;"	f
irq_settings_set_per_cpu	irq/settings.h	/^static inline void irq_settings_set_per_cpu(struct irq_desc *desc)$/;"	f
irq_settings_set_trigger_mask	irq/settings.h	/^irq_settings_set_trigger_mask(struct irq_desc *desc, u32 mask)$/;"	f
irq_setup_alt_chip	irq/generic-chip.c	/^EXPORT_SYMBOL_GPL(irq_setup_alt_chip);$/;"	v
irq_setup_alt_chip	irq/generic-chip.c	/^int irq_setup_alt_chip(struct irq_data *d, unsigned int type)$/;"	f
irq_setup_forced_threading	irq/manage.c	/^static void irq_setup_forced_threading(struct irqaction *new)$/;"	f	file:
irq_setup_generic_chip	irq/generic-chip.c	/^EXPORT_SYMBOL_GPL(irq_setup_generic_chip);$/;"	v
irq_setup_generic_chip	irq/generic-chip.c	/^void irq_setup_generic_chip(struct irq_chip_generic *gc, u32 msk,$/;"	f
irq_shutdown	irq/chip.c	/^void irq_shutdown(struct irq_desc *desc)$/;"	f
irq_spurious_proc_fops	irq/proc.c	/^static const struct file_operations irq_spurious_proc_fops = {$/;"	v	typeref:struct:file_operations	file:
irq_spurious_proc_open	irq/proc.c	/^static int irq_spurious_proc_open(struct inode *inode, struct file *file)$/;"	f	file:
irq_spurious_proc_show	irq/proc.c	/^static int irq_spurious_proc_show(struct seq_file *m, void *v)$/;"	f	file:
irq_startup	irq/chip.c	/^int irq_startup(struct irq_desc *desc, bool resend)$/;"	f
irq_stat	softirq.c	/^EXPORT_SYMBOL(irq_stat);$/;"	v
irq_state_clr_disabled	irq/chip.c	/^static void irq_state_clr_disabled(struct irq_desc *desc)$/;"	f	file:
irq_state_clr_masked	irq/chip.c	/^static void irq_state_clr_masked(struct irq_desc *desc)$/;"	f	file:
irq_state_set_disabled	irq/chip.c	/^static void irq_state_set_disabled(struct irq_desc *desc)$/;"	f	file:
irq_state_set_masked	irq/chip.c	/^static void irq_state_set_masked(struct irq_desc *desc)$/;"	f	file:
irq_thread	irq/manage.c	/^static int irq_thread(void *data)$/;"	f	file:
irq_thread_check_affinity	irq/manage.c	/^irq_thread_check_affinity(struct irq_desc *desc, struct irqaction *action) { }$/;"	f	file:
irq_thread_check_affinity	irq/manage.c	/^irq_thread_check_affinity(struct irq_desc *desc, struct irqaction *action)$/;"	f	file:
irq_thread_dtor	irq/manage.c	/^static void irq_thread_dtor(struct callback_head *unused)$/;"	f	file:
irq_thread_fn	irq/manage.c	/^static irqreturn_t irq_thread_fn(struct irq_desc *desc,$/;"	f	file:
irq_time_read	sched/sched.h	/^static inline u64 irq_time_read(int cpu)$/;"	f
irq_time_write_begin	sched/sched.h	/^static inline void irq_time_write_begin(void)$/;"	f
irq_time_write_end	sched/sched.h	/^static inline void irq_time_write_end(void)$/;"	f
irq_to_desc	irq/irqdesc.c	/^EXPORT_SYMBOL(irq_to_desc);$/;"	v
irq_to_desc	irq/irqdesc.c	/^struct irq_desc *irq_to_desc(unsigned int irq)$/;"	f
irq_trace	trace/trace_irqsoff.c	/^irq_trace(void)$/;"	f	file:
irq_trace	trace/trace_irqsoff.c	59;"	d	file:
irq_wait_for_interrupt	irq/manage.c	/^static int irq_wait_for_interrupt(struct irqaction *action)$/;"	f	file:
irq_wait_for_poll	irq/spurious.c	/^bool irq_wait_for_poll(struct irq_desc *desc)$/;"	f
irq_wake_thread	irq/handle.c	/^static void irq_wake_thread(struct irq_desc *desc, struct irqaction *action)$/;"	f	file:
irq_work	trace/ring_buffer.c	/^	struct rb_irq_work		irq_work;$/;"	m	struct:ring_buffer	typeref:struct:ring_buffer::rb_irq_work	file:
irq_work	trace/ring_buffer.c	/^	struct rb_irq_work		irq_work;$/;"	m	struct:ring_buffer_per_cpu	typeref:struct:ring_buffer_per_cpu::rb_irq_work	file:
irq_work_claim	irq_work.c	/^static bool irq_work_claim(struct irq_work *work)$/;"	f	file:
irq_work_cpu_notify	irq_work.c	/^static int irq_work_cpu_notify(struct notifier_block *self,$/;"	f	file:
irq_work_init_cpu_notifier	irq_work.c	/^device_initcall(irq_work_init_cpu_notifier);$/;"	v
irq_work_init_cpu_notifier	irq_work.c	/^static __init int irq_work_init_cpu_notifier(void)$/;"	f	file:
irq_work_needs_cpu	irq_work.c	/^bool irq_work_needs_cpu(void)$/;"	f
irq_work_queue	irq_work.c	/^EXPORT_SYMBOL_GPL(irq_work_queue);$/;"	v
irq_work_queue	irq_work.c	/^void irq_work_queue(struct irq_work *work)$/;"	f
irq_work_run	irq_work.c	/^EXPORT_SYMBOL_GPL(irq_work_run);$/;"	v
irq_work_run	irq_work.c	/^void irq_work_run(void)$/;"	f
irq_work_sync	irq_work.c	/^EXPORT_SYMBOL_GPL(irq_work_sync);$/;"	v
irq_work_sync	irq_work.c	/^void irq_work_sync(struct irq_work *work)$/;"	f
irqcount	power/wakeup_reason.c	/^static int irqcount;$/;"	v	file:
irqd_clear	irq/internals.h	/^static inline void irqd_clear(struct irq_data *d, unsigned int mask)$/;"	f
irqd_clr_move_pending	irq/internals.h	/^static inline void irqd_clr_move_pending(struct irq_data *d)$/;"	f
irqd_has_set	irq/internals.h	/^static inline bool irqd_has_set(struct irq_data *d, unsigned int mask)$/;"	f
irqd_set	irq/internals.h	/^static inline void irqd_set(struct irq_data *d, unsigned int mask)$/;"	f
irqd_set_move_pending	irq/internals.h	/^static inline void irqd_set_move_pending(struct irq_data *d)$/;"	f
irqfixup_setup	irq/spurious.c	/^static int __init irqfixup_setup(char *str)$/;"	f	file:
irqpoll_setup	irq/spurious.c	/^static int __init irqpoll_setup(char *str)$/;"	f	file:
irqreader	rcutorture.c	/^static int irqreader = 1;	\/* RCU readers from irq (timers). *\/$/;"	v	file:
irqsoff_flag_changed	trace/trace_irqsoff.c	/^static int irqsoff_flag_changed(struct tracer *tracer, u32 mask, int set)$/;"	f	file:
irqsoff_function_set	trace/trace_irqsoff.c	/^static void irqsoff_function_set(int set)$/;"	f	file:
irqsoff_graph_entry	trace/trace_irqsoff.c	/^static int irqsoff_graph_entry(struct ftrace_graph_ent *trace)$/;"	f	file:
irqsoff_graph_return	trace/trace_irqsoff.c	/^static void irqsoff_graph_return(struct ftrace_graph_ret *trace) { }$/;"	f	file:
irqsoff_graph_return	trace/trace_irqsoff.c	/^static void irqsoff_graph_return(struct ftrace_graph_ret *trace)$/;"	f	file:
irqsoff_print_header	trace/trace_irqsoff.c	/^static void irqsoff_print_header(struct seq_file *s)$/;"	f	file:
irqsoff_print_line	trace/trace_irqsoff.c	/^static enum print_line_t irqsoff_print_line(struct trace_iterator *iter)$/;"	f	file:
irqsoff_set_flag	trace/trace_irqsoff.c	/^static int irqsoff_set_flag(u32 old_flags, u32 bit, int set)$/;"	f	file:
irqsoff_trace_close	trace/trace_irqsoff.c	/^static void irqsoff_trace_close(struct trace_iterator *iter) { }$/;"	f	file:
irqsoff_trace_close	trace/trace_irqsoff.c	/^static void irqsoff_trace_close(struct trace_iterator *iter)$/;"	f	file:
irqsoff_trace_open	trace/trace_irqsoff.c	/^static void irqsoff_trace_open(struct trace_iterator *iter) { }$/;"	f	file:
irqsoff_trace_open	trace/trace_irqsoff.c	/^static void irqsoff_trace_open(struct trace_iterator *iter)$/;"	f	file:
irqsoff_tracer_call	trace/trace_irqsoff.c	/^irqsoff_tracer_call(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
irqsoff_tracer_init	trace/trace_irqsoff.c	/^static int irqsoff_tracer_init(struct trace_array *tr)$/;"	f	file:
irqsoff_tracer_reset	trace/trace_irqsoff.c	/^static void irqsoff_tracer_reset(struct trace_array *tr)$/;"	f	file:
irqsoff_tracer_start	trace/trace_irqsoff.c	/^static void irqsoff_tracer_start(struct trace_array *tr)$/;"	f	file:
irqsoff_tracer_stop	trace/trace_irqsoff.c	/^static void irqsoff_tracer_stop(struct trace_array *tr)$/;"	f	file:
irqtime_account_hi_update	sched/cputime.c	/^static int irqtime_account_hi_update(void)$/;"	f	file:
irqtime_account_idle_ticks	sched/cputime.c	/^static inline void irqtime_account_idle_ticks(int ticks) {}$/;"	f	file:
irqtime_account_idle_ticks	sched/cputime.c	/^static void irqtime_account_idle_ticks(int ticks)$/;"	f	file:
irqtime_account_irq	sched/cputime.c	/^EXPORT_SYMBOL_GPL(irqtime_account_irq);$/;"	v
irqtime_account_irq	sched/cputime.c	/^void irqtime_account_irq(struct task_struct *curr)$/;"	f
irqtime_account_process_tick	sched/cputime.c	/^static inline void irqtime_account_process_tick(struct task_struct *p, int user_tick,$/;"	f	file:
irqtime_account_process_tick	sched/cputime.c	/^static void irqtime_account_process_tick(struct task_struct *p, int user_tick,$/;"	f	file:
irqtime_account_si_update	sched/cputime.c	/^static int irqtime_account_si_update(void)$/;"	f	file:
is_IF_modifier	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^static int is_IF_modifier(kprobe_opcode_t opcode)$/;"	f	file:
is_affinity_mask_valid	irq/proc.c	61;"	d	file:
is_ancestor	seccomp.c	/^static int is_ancestor(struct seccomp_filter *parent,$/;"	f	file:
is_arm_mapping_symbol	module.c	/^static inline int is_arm_mapping_symbol(const char *str)$/;"	f	file:
is_buffer_enough	swap/buffer/buffer_queue.c	/^static unsigned int is_buffer_enough(struct swap_subbuffer *subbuffer,$/;"	f	file:
is_cgroup_event	events/core.c	/^static inline int is_cgroup_event(struct perf_event *event)$/;"	f	file:
is_chained_work	workqueue.c	/^static bool is_chained_work(struct workqueue_struct *wq)$/;"	f	file:
is_console_locked	printk.c	/^int is_console_locked(void)$/;"	f
is_core_symbol	module.c	/^static bool is_core_symbol(const Elf_Sym *src, const Elf_Shdr *sechdrs,$/;"	f	file:
is_cpu_exclusive	cpuset.c	/^static inline int is_cpu_exclusive(const struct cpuset *cs)$/;"	f	file:
is_cpuset_online	cpuset.c	/^static inline bool is_cpuset_online(const struct cpuset *cs)$/;"	f	file:
is_cpuset_subset	cpuset.c	/^static int is_cpuset_subset(const struct cpuset *p, const struct cpuset *q)$/;"	f	file:
is_current_pgrp_orphaned	exit.c	/^int is_current_pgrp_orphaned(void)$/;"	f
is_dpm_fail	power/suspend.c	/^static bool is_dpm_fail = false;$/;"	v	file:
is_end_mb	swap/parser/msg_buf.c	/^int is_end_mb(struct msg_buf *mb)$/;"	f
is_endline	swap/ksyms/no_ksyms.c	/^static int is_endline(char c)$/;"	f	file:
is_error_status	time/ntp.c	/^static inline int is_error_status(int status)$/;"	f	file:
is_exported	module.c	/^static int is_exported(const char *name, unsigned long value,$/;"	f	file:
is_function_field	trace/trace_events_filter.c	/^static bool is_function_field(struct ftrace_event_field *field)$/;"	f	file:
is_good_name	trace/trace_probe.h	/^static inline int is_good_name(const char *name)$/;"	f
is_graph	trace/trace_irqsoff.c	77;"	d	file:
is_graph	trace/trace_sched_wakeup.c	57;"	d	file:
is_hardlockup	watchdog.c	/^static int is_hardlockup(void)$/;"	f	file:
is_hardlockup_other_cpu	watchdog.c	/^static int is_hardlockup_other_cpu(unsigned int cpu)$/;"	f	file:
is_hlist	swap/kprobe/swap_kprobes.h	/^	struct hlist_node				is_hlist;$/;"	m	struct:kprobe	typeref:struct:kprobe::hlist_node
is_init	swap/nsp/nsp.c	/^static bool is_init(void)$/;"	f	file:
is_kernel	kallsyms.c	/^static inline int is_kernel(unsigned long addr)$/;"	f	file:
is_kernel_inittext	kallsyms.c	/^static inline int is_kernel_inittext(unsigned long addr)$/;"	f	file:
is_kernel_text	kallsyms.c	/^static inline int is_kernel_text(unsigned long addr)$/;"	f	file:
is_ksym_addr	kallsyms.c	/^static int is_ksym_addr(unsigned long addr)$/;"	f	file:
is_kthread	swap/us_manager/helper.h	/^static inline int is_kthread(struct task_struct *task)$/;"	f
is_legal_op	trace/trace_events_filter.c	/^static int is_legal_op(struct ftrace_event_field *field, int op)$/;"	f	file:
is_mem_exclusive	cpuset.c	/^static inline int is_mem_exclusive(const struct cpuset *cs)$/;"	f	file:
is_mem_hardwall	cpuset.c	/^static inline int is_mem_hardwall(const struct cpuset *cs)$/;"	f	file:
is_memory_migrate	cpuset.c	/^static inline int is_memory_migrate(const struct cpuset *cs)$/;"	f	file:
is_module_address	module.c	/^bool is_module_address(unsigned long addr)$/;"	f
is_module_percpu_address	module.c	/^bool is_module_percpu_address(unsigned long addr)$/;"	f
is_module_text_address	module.c	/^bool is_module_text_address(unsigned long addr)$/;"	f
is_op_char	trace/trace_events_filter.c	/^static inline int is_op_char(struct filter_parse_state *ps, char c)$/;"	f	file:
is_precedence_lower	trace/trace_events_filter.c	/^static inline int is_precedence_lower(struct filter_parse_state *ps,$/;"	f	file:
is_realtime	time/time_history.c	/^static bool is_realtime(struct timespec *time)$/;"	f	file:
is_ret_probe	trace/trace_uprobe.c	/^static inline bool is_ret_probe(struct trace_uprobe *tu)$/;"	f	file:
is_same_group	sched/fair.c	/^is_same_group(struct sched_entity *se, struct sched_entity *pse)$/;"	f	file:
is_sched_load_balance	cpuset.c	/^static inline int is_sched_load_balance(const struct cpuset *cs)$/;"	f	file:
is_send_event	swap/us_manager/sspt/sspt_proc.c	/^static void is_send_event(struct sspt_filter *f, void *data)$/;"	f	file:
is_si_special	signal.c	/^static inline int is_si_special(const struct siginfo *info)$/;"	f	file:
is_signed	trace/trace.h	/^	int			is_signed;$/;"	m	struct:ftrace_event_field
is_signed	trace/trace_probe.h	/^	int			is_signed;	\/* Signed flag *\/$/;"	m	struct:fetch_type
is_singleblock	ptrace.c	709;"	d	file:
is_singleblock	ptrace.c	711;"	d	file:
is_singlestep	ptrace.c	703;"	d	file:
is_singlestep	ptrace.c	705;"	d	file:
is_softlockup	watchdog.c	/^static int is_softlockup(unsigned long touch_ts)$/;"	f	file:
is_spread_page	cpuset.c	/^static inline int is_spread_page(const struct cpuset *cs)$/;"	f	file:
is_spread_slab	cpuset.c	/^static inline int is_spread_slab(const struct cpuset *cs)$/;"	f	file:
is_string_field	trace/trace_events_filter.c	/^static bool is_string_field(struct ftrace_event_field *field)$/;"	f	file:
is_swbp_insn	events/uprobes.c	/^bool __weak is_swbp_insn(uprobe_opcode_t *insn)$/;"	f
is_symbol_attr	swap/ksyms/no_ksyms.c	/^static int is_symbol_attr(char c)$/;"	f	file:
is_sysemu_singlestep	ptrace.c	715;"	d	file:
is_sysemu_singlestep	ptrace.c	717;"	d	file:
is_thumb2	swap/uprobe/arch/arm/swap-asm/swap_uprobes.c	/^static int is_thumb2(kprobe_opcode_t insn)$/;"	f	file:
is_trace_uprobe_enabled	trace/trace_uprobe.c	/^static inline bool is_trace_uprobe_enabled(struct trace_uprobe *tu)$/;"	f	file:
is_tracing_stopped	trace/trace.c	/^int is_tracing_stopped(void)$/;"	f
is_trap_at_addr	events/uprobes.c	/^static int is_trap_at_addr(struct mm_struct *mm, unsigned long vaddr)$/;"	f	file:
is_trap_insn	events/uprobes.c	/^bool __weak is_trap_insn(uprobe_opcode_t *insn)$/;"	f
is_valid_access_pointer	power/sleep_history.c	/^static bool is_valid_access_pointer(struct sleep_history *ring_buf_ptr, int tail)$/;"	f	file:
is_valid_xattr	cgroup.c	/^static bool is_valid_xattr(const char *name)$/;"	f	file:
isolated_cpu_setup	sched/core.c	/^static int __init isolated_cpu_setup(char *str)$/;"	f	file:
istate	irq/internals.h	16;"	d
it_real_fn	itimer.c	/^enum hrtimer_restart it_real_fn(struct hrtimer *timer)$/;"	f
iter	trace/trace.c	/^	struct trace_iterator	iter;$/;"	m	struct:ftrace_buffer_info	typeref:struct:ftrace_buffer_info::trace_iterator	file:
iter_end	lockdep_proc.c	/^	struct lock_stat_data *iter_end;$/;"	m	struct:lock_stat_seq	typeref:struct:lock_stat_seq::lock_stat_data	file:
iterate_chain_key	lockdep.c	314;"	d	file:
itimer_delete	posix-timers.c	/^static void itimer_delete(struct k_itimer *timer)$/;"	f	file:
itimer_get_remtime	itimer.c	/^static struct timeval itimer_get_remtime(struct hrtimer *timer)$/;"	f	file:
j_kprobe_target	test_kprobes.c	/^static u32 j_kprobe_target(u32 value)$/;"	f	file:
jiffies	time/jiffies.c	/^EXPORT_SYMBOL(jiffies);$/;"	v
jiffies_64	timer.c	/^EXPORT_SYMBOL(jiffies_64);$/;"	v
jiffies_64_to_clock_t	time.c	/^EXPORT_SYMBOL(jiffies_64_to_clock_t);$/;"	v
jiffies_64_to_clock_t	time.c	/^u64 jiffies_64_to_clock_t(u64 x)$/;"	f
jiffies_force_qs	rcutree.h	/^	unsigned long jiffies_force_qs;		\/* Time at which to invoke *\/$/;"	m	struct:rcu_state
jiffies_read	time/jiffies.c	/^static cycle_t jiffies_read(struct clocksource *cs)$/;"	f	file:
jiffies_stall	rcutree.h	/^	unsigned long jiffies_stall;		\/* Time at which to check *\/$/;"	m	struct:rcu_state
jiffies_till_first_fqs	rcutree.c	/^static ulong jiffies_till_first_fqs = RCU_JIFFIES_TILL_FORCE_QS;$/;"	v	file:
jiffies_till_next_fqs	rcutree.c	/^static ulong jiffies_till_next_fqs = RCU_JIFFIES_TILL_FORCE_QS;$/;"	v	file:
jiffies_to_clock_t	time.c	/^EXPORT_SYMBOL(jiffies_to_clock_t);$/;"	v
jiffies_to_clock_t	time.c	/^clock_t jiffies_to_clock_t(unsigned long x)$/;"	f
jiffies_to_msecs	time.c	/^EXPORT_SYMBOL(jiffies_to_msecs);$/;"	v
jiffies_to_msecs	time.c	/^unsigned int jiffies_to_msecs(const unsigned long j)$/;"	f
jiffies_to_timespec	time.c	/^EXPORT_SYMBOL(jiffies_to_timespec);$/;"	v
jiffies_to_timespec	time.c	/^jiffies_to_timespec(const unsigned long jiffies, struct timespec *value)$/;"	f
jiffies_to_timeval	time.c	/^EXPORT_SYMBOL(jiffies_to_timeval);$/;"	v
jiffies_to_timeval	time.c	/^void jiffies_to_timeval(const unsigned long jiffies, struct timeval *value)$/;"	f
jiffies_to_usecs	time.c	/^EXPORT_SYMBOL(jiffies_to_usecs);$/;"	v
jiffies_to_usecs	time.c	/^unsigned int jiffies_to_usecs(const unsigned long j)$/;"	f
jp	swap/kprobe/swap_kprobes.h	/^	struct jprobe *jp;                   \/**< Pointer to the target jprobe. *\/$/;"	m	struct:jprobe_instance	typeref:struct:jprobe_instance::jprobe
jp	test_kprobes.c	/^static struct jprobe jp = {$/;"	v	typeref:struct:jprobe	file:
jp2	test_kprobes.c	/^static struct jprobe jp2 = {$/;"	v	typeref:struct:jprobe	file:
jph_val	test_kprobes.c	/^static u32 rand1, preh_val, posth_val, jph_val;$/;"	v	file:
jprobe	swap/kprobe/swap_kprobes.h	/^struct jprobe {$/;"	s
jprobe_instance	swap/kprobe/swap_kprobes.h	/^struct jprobe_instance {$/;"	s
jprobe_return	kprobes.c	/^EXPORT_SYMBOL_GPL(jprobe_return);$/;"	v
jprobe_saved_esp	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	/^	unsigned long *jprobe_saved_esp;$/;"	m	struct:kprobe_ctlblk
jprobe_saved_regs	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	/^	struct pt_regs jprobe_saved_regs;$/;"	m	struct:kprobe_ctlblk	typeref:struct:kprobe_ctlblk::pt_regs
jprobes_stack	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	/^	kprobe_opcode_t jprobes_stack[MAX_STACK_SIZE];$/;"	m	struct:kprobe_ctlblk
jump_handler	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^static unsigned long __used jump_handler(struct cb_data *data)$/;"	f	file:
jump_handler	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^static unsigned long __used jump_handler(struct cb_data *data)$/;"	f	file:
jump_label_add_module	jump_label.c	/^static int jump_label_add_module(struct module *mod)$/;"	f	file:
jump_label_apply_nops	jump_label.c	/^void jump_label_apply_nops(struct module *mod)$/;"	f
jump_label_cmp	jump_label.c	/^static int jump_label_cmp(const void *a, const void *b)$/;"	f	file:
jump_label_del_module	jump_label.c	/^static void jump_label_del_module(struct module *mod)$/;"	f	file:
jump_label_init	jump_label.c	/^void __init jump_label_init(void)$/;"	f
jump_label_init_module	jump_label.c	/^early_initcall(jump_label_init_module);$/;"	v
jump_label_init_module	jump_label.c	/^static __init int jump_label_init_module(void)$/;"	f	file:
jump_label_invalidate_module_init	jump_label.c	/^static void jump_label_invalidate_module_init(struct module *mod)$/;"	f	file:
jump_label_key__false	sched/core.c	181;"	d	file:
jump_label_key__true	sched/core.c	180;"	d	file:
jump_label_lock	jump_label.c	/^void jump_label_lock(void)$/;"	f
jump_label_module_nb	jump_label.c	/^struct notifier_block jump_label_module_nb = {$/;"	v	typeref:struct:notifier_block
jump_label_module_notify	jump_label.c	/^jump_label_module_notify(struct notifier_block *self, unsigned long val,$/;"	f	file:
jump_label_rate_limit	jump_label.c	/^EXPORT_SYMBOL_GPL(jump_label_rate_limit);$/;"	v
jump_label_rate_limit	jump_label.c	/^void jump_label_rate_limit(struct static_key_deferred *key,$/;"	f
jump_label_sort_entries	jump_label.c	/^jump_label_sort_entries(struct jump_entry *start, struct jump_entry *stop)$/;"	f	file:
jump_label_text_reserved	jump_label.c	/^int jump_label_text_reserved(void *start, void *end)$/;"	f
jump_label_type	jump_label.c	/^static enum jump_label_type jump_label_type(struct static_key *key)$/;"	f	file:
jump_label_unlock	jump_label.c	/^void jump_label_unlock(void)$/;"	f
jump_label_update	jump_label.c	/^static void jump_label_update(struct static_key *key, int enable)$/;"	f	file:
jump_label_update_timeout	jump_label.c	/^static void jump_label_update_timeout(struct work_struct *work)$/;"	f	file:
jumper_cb_t	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	/^typedef unsigned long (*jumper_cb_t)(void *);$/;"	t
jumper_cb_t	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	/^typedef unsigned long (*jumper_cb_t)(void *);$/;"	t
k	power/swap.c	/^	unsigned int k;$/;"	m	struct:swap_map_handle	file:
k_getrusage	sys.c	/^static void k_getrusage(struct task_struct *p, int who, struct rusage *r)$/;"	f	file:
k_itimer_rcu_free	posix-timers.c	/^static void k_itimer_rcu_free(struct rcu_head *head)$/;"	f	file:
kallsym_iter	kallsyms.c	/^struct kallsym_iter {$/;"	s	file:
kallsyms_expand_symbol	kallsyms.c	/^static unsigned int kallsyms_expand_symbol(unsigned int off,$/;"	f	file:
kallsyms_get_symbol_type	kallsyms.c	/^static char kallsyms_get_symbol_type(unsigned int off)$/;"	f	file:
kallsyms_init	kallsyms.c	/^device_initcall(kallsyms_init);$/;"	v
kallsyms_init	kallsyms.c	/^static int __init kallsyms_init(void)$/;"	f	file:
kallsyms_lookup	kallsyms.c	/^const char *kallsyms_lookup(unsigned long addr,$/;"	f
kallsyms_lookup_name	kallsyms.c	/^EXPORT_SYMBOL_GPL(kallsyms_lookup_name);$/;"	v
kallsyms_lookup_name	kallsyms.c	/^unsigned long kallsyms_lookup_name(const char *name)$/;"	f
kallsyms_lookup_size_offset	kallsyms.c	/^int kallsyms_lookup_size_offset(unsigned long addr, unsigned long *symbolsize,$/;"	f
kallsyms_on_each_symbol	kallsyms.c	/^EXPORT_SYMBOL_GPL(kallsyms_on_each_symbol);$/;"	v
kallsyms_on_each_symbol	kallsyms.c	/^int kallsyms_on_each_symbol(int (*fn)(void *, const char *, struct module *,$/;"	f
kallsyms_op	kallsyms.c	/^static const struct seq_operations kallsyms_op = {$/;"	v	typeref:struct:seq_operations	file:
kallsyms_open	kallsyms.c	/^static int kallsyms_open(struct inode *inode, struct file *file)$/;"	f	file:
kallsyms_operations	kallsyms.c	/^static const struct file_operations kallsyms_operations = {$/;"	v	typeref:struct:file_operations	file:
kallsyms_symbol_complete	debug/kdb/kdb_support.c	/^int kallsyms_symbol_complete(char *prefix_name, int max_len)$/;"	f
kallsyms_symbol_next	debug/kdb/kdb_support.c	/^int kallsyms_symbol_next(char *prefix_name, int flag)$/;"	f
kauditd_send_skb	audit.c	/^static void kauditd_send_skb(struct sk_buff *skb)$/;"	f	file:
kauditd_task	audit.c	/^static struct task_struct *kauditd_task;$/;"	v	typeref:struct:task_struct	file:
kauditd_thread	audit.c	/^static int kauditd_thread(void *dummy)$/;"	f	file:
kbd_exists	debug/kdb/kdb_keyboard.c	/^static int kbd_exists;$/;"	v	file:
kbd_last_ret	debug/kdb/kdb_keyboard.c	/^static int kbd_last_ret;$/;"	v	file:
kcmp_cookies_init	kcmp.c	/^arch_initcall(kcmp_cookies_init);$/;"	v
kcmp_cookies_init	kcmp.c	/^static __init int kcmp_cookies_init(void)$/;"	f	file:
kcmp_lock	kcmp.c	/^static int kcmp_lock(struct mutex *m1, struct mutex *m2)$/;"	f	file:
kcmp_ptr	kcmp.c	/^static int kcmp_ptr(void *v1, void *v2, enum kcmp_type type)$/;"	f	file:
kcmp_unlock	kcmp.c	/^static void kcmp_unlock(struct mutex *m1, struct mutex *m2)$/;"	f	file:
kdb_base_commands	debug/kdb/kdb_main.c	/^static kdbtab_t kdb_base_commands[KDB_BASE_CMD_MAX];$/;"	v	file:
kdb_bc	debug/kdb/kdb_bp.c	/^static int kdb_bc(int argc, const char **argv)$/;"	f	file:
kdb_bfd_vma_fmt	debug/kdb/kdb_private.h	45;"	d
kdb_bfd_vma_fmt	debug/kdb/kdb_private.h	57;"	d
kdb_bfd_vma_fmt0	debug/kdb/kdb_private.h	46;"	d
kdb_bfd_vma_fmt0	debug/kdb/kdb_private.h	58;"	d
kdb_bp	debug/kdb/kdb_bp.c	/^static int kdb_bp(int argc, const char **argv)$/;"	f	file:
kdb_bp_install	debug/kdb/kdb_bp.c	/^void kdb_bp_install(struct pt_regs *regs)$/;"	f
kdb_bp_remove	debug/kdb/kdb_bp.c	/^void kdb_bp_remove(void)$/;"	f
kdb_bp_t	debug/kdb/kdb_private.h	/^} kdb_bp_t;$/;"	t	typeref:struct:_kdb_bp
kdb_bptype	debug/kdb/kdb_bp.c	/^static char *kdb_bptype(kdb_bp_t *bp)$/;"	f	file:
kdb_breakpoints	debug/kdb/kdb_bp.c	/^kdb_bp_t kdb_breakpoints[KDB_MAXBPT];$/;"	v
kdb_bt	debug/kdb/kdb_bt.c	/^kdb_bt(int argc, const char **argv)$/;"	f
kdb_bt1	debug/kdb/kdb_bt.c	/^kdb_bt1(struct task_struct *p, unsigned long mask,$/;"	f	file:
kdb_buffer	debug/kdb/kdb_io.c	/^static char kdb_buffer[256];	\/* A bit too big to go on stack *\/$/;"	v	file:
kdb_check_regs	debug/kdb/kdb_main.c	/^static int kdb_check_regs(void)$/;"	f	file:
kdb_cmd_init	debug/kdb/kdb_main.c	/^static void __init kdb_cmd_init(void)$/;"	f	file:
kdb_cmderror	debug/kdb/kdb_main.c	/^static void kdb_cmderror(int diag)$/;"	f	file:
kdb_command_extend	debug/kdb/kdb_main.c	2640;"	d	file:
kdb_commands	debug/kdb/kdb_main.c	/^static kdbtab_t *kdb_commands;$/;"	v	file:
kdb_common_deinit_state	debug/kdb/kdb_debugger.c	/^int kdb_common_deinit_state(void)$/;"	f
kdb_common_init_state	debug/kdb/kdb_debugger.c	/^int kdb_common_init_state(struct kgdb_state *ks)$/;"	f
kdb_continue_catastrophic	debug/kdb/kdb_main.c	/^static unsigned int kdb_continue_catastrophic =$/;"	v	file:
kdb_continue_catastrophic	debug/kdb/kdb_main.c	/^static unsigned int kdb_continue_catastrophic;$/;"	v	file:
kdb_cpu	debug/kdb/kdb_main.c	/^static int kdb_cpu(int argc, const char **argv)$/;"	f	file:
kdb_cpu_status	debug/kdb/kdb_main.c	/^static void kdb_cpu_status(void)$/;"	f	file:
kdb_curr_task	debug/kdb/kdb_main.c	/^struct task_struct *kdb_curr_task(int cpu)$/;"	f
kdb_current_regs	debug/kdb/kdb_main.c	/^struct pt_regs *kdb_current_regs;$/;"	v	typeref:struct:pt_regs
kdb_current_task	debug/kdb/kdb_main.c	/^EXPORT_SYMBOL(kdb_current_task);$/;"	v
kdb_current_task	debug/kdb/kdb_main.c	/^struct task_struct *kdb_current_task;$/;"	v	typeref:struct:task_struct
kdb_dbtrap_t	debug/kdb/kdb_private.h	/^} kdb_dbtrap_t;$/;"	t	typeref:enum:__anon2
kdb_defcmd	debug/kdb/kdb_main.c	/^static int kdb_defcmd(int argc, const char **argv)$/;"	f	file:
kdb_defcmd2	debug/kdb/kdb_main.c	/^static int kdb_defcmd2(const char *cmdstr, const char *argv0)$/;"	f	file:
kdb_diemsg	debug/kdb/kdb_main.c	/^const char *kdb_diemsg;$/;"	v
kdb_disable_nmi	debug/kdb/kdb_main.c	/^static int kdb_disable_nmi(int argc, const char *argv[])$/;"	f	file:
kdb_dmesg	debug/kdb/kdb_main.c	/^static int kdb_dmesg(int argc, const char **argv)$/;"	f	file:
kdb_do_each_thread	debug/kdb/kdb_private.h	233;"	d
kdb_dumpregs	debug/kdb/kdb_main.c	/^static void kdb_dumpregs(struct pt_regs *regs)$/;"	f	file:
kdb_ef	debug/kdb/kdb_main.c	/^static int kdb_ef(int argc, const char **argv)$/;"	f	file:
kdb_elfw_addr_fmt	debug/kdb/kdb_private.h	47;"	d
kdb_elfw_addr_fmt	debug/kdb/kdb_private.h	59;"	d
kdb_elfw_addr_fmt0	debug/kdb/kdb_private.h	48;"	d
kdb_elfw_addr_fmt0	debug/kdb/kdb_private.h	60;"	d
kdb_env	debug/kdb/kdb_main.c	/^static int kdb_env(int argc, const char **argv)$/;"	f	file:
kdb_event	debug/kdb/kdb_main.c	/^atomic_t kdb_event;$/;"	v
kdb_exec_defcmd	debug/kdb/kdb_main.c	/^static int kdb_exec_defcmd(int argc, const char **argv)$/;"	f	file:
kdb_f_count_fmt	debug/kdb/kdb_private.h	49;"	d
kdb_f_count_fmt	debug/kdb/kdb_private.h	61;"	d
kdb_flags	debug/kdb/kdb_main.c	/^int kdb_flags;$/;"	v
kdb_flags_index	debug/kdb/kdb_support.c	/^static int kdb_flags_stack[4], kdb_flags_index;$/;"	v	file:
kdb_flags_stack	debug/kdb/kdb_support.c	/^static int kdb_flags_stack[4], kdb_flags_index;$/;"	v	file:
kdb_ftdump	trace/trace_kdb.c	/^static int kdb_ftdump(int argc, const char **argv)$/;"	f	file:
kdb_ftrace_register	trace/trace_kdb.c	/^late_initcall(kdb_ftrace_register);$/;"	v
kdb_ftrace_register	trace/trace_kdb.c	/^static __init int kdb_ftrace_register(void)$/;"	f	file:
kdb_gdb_state_pass	debug/kdb/kdb_debugger.c	/^void kdb_gdb_state_pass(char *buf)$/;"	f
kdb_get_kbd_char	debug/kdb/kdb_keyboard.c	/^EXPORT_SYMBOL_GPL(kdb_get_kbd_char);$/;"	v
kdb_get_kbd_char	debug/kdb/kdb_keyboard.c	/^int kdb_get_kbd_char(void)$/;"	f
kdb_getarea	debug/kdb/kdb_private.h	97;"	d
kdb_getarea_size	debug/kdb/kdb_support.c	/^int kdb_getarea_size(void *res, unsigned long addr, size_t size)$/;"	f
kdb_getphys	debug/kdb/kdb_support.c	/^static int kdb_getphys(void *res, unsigned long addr, size_t size)$/;"	f	file:
kdb_getphysword	debug/kdb/kdb_support.c	/^int kdb_getphysword(unsigned long *word, unsigned long addr, size_t size)$/;"	f
kdb_getstr	debug/kdb/kdb_io.c	/^char *kdb_getstr(char *buffer, size_t bufsize, char *prompt)$/;"	f
kdb_getword	debug/kdb/kdb_support.c	/^int kdb_getword(unsigned long *word, unsigned long addr, size_t size)$/;"	f
kdb_gmtime	debug/kdb/kdb_main.c	/^static void kdb_gmtime(struct timespec *tv, struct kdb_tm *tm)$/;"	f	file:
kdb_go	debug/kdb/kdb_main.c	/^static int kdb_go(int argc, const char **argv)$/;"	f	file:
kdb_go_count	debug/kdb/kdb_main.c	/^static int kdb_go_count;$/;"	v	file:
kdb_grep_help	debug/kdb/kdb_main.c	/^static int kdb_grep_help(int argc, const char **argv)$/;"	f	file:
kdb_grep_leading	debug/kdb/kdb_main.c	/^int kdb_grep_leading;$/;"	v
kdb_grep_string	debug/kdb/kdb_main.c	/^char kdb_grep_string[GREP_LEN];$/;"	v
kdb_grep_trailing	debug/kdb/kdb_main.c	/^int kdb_grep_trailing;$/;"	v
kdb_grepping_flag	debug/kdb/kdb_main.c	/^EXPORT_SYMBOL(kdb_grepping_flag);$/;"	v
kdb_grepping_flag	debug/kdb/kdb_main.c	/^int kdb_grepping_flag;$/;"	v
kdb_handle_bp	debug/kdb/kdb_bp.c	/^static void kdb_handle_bp(struct pt_regs *regs, kdb_bp_t *bp)$/;"	f	file:
kdb_help	debug/kdb/kdb_main.c	/^static int kdb_help(int argc, const char **argv)$/;"	f	file:
kdb_init	debug/kdb/kdb_main.c	/^void __init kdb_init(int lvl)$/;"	f
kdb_initbptab	debug/kdb/kdb_bp.c	/^void __init kdb_initbptab(void)$/;"	f
kdb_initial_cpu	debug/kdb/kdb_main.c	/^int kdb_initial_cpu = -1;	\/* cpu number that owns kdb *\/$/;"	v
kdb_inittab	debug/kdb/kdb_main.c	/^static void __init kdb_inittab(void)$/;"	f	file:
kdb_input_flush	debug/kdb/kdb_io.c	/^static void kdb_input_flush(void)$/;"	f	file:
kdb_kbd_cleanup_state	debug/kdb/kdb_keyboard.c	/^void kdb_kbd_cleanup_state(void)$/;"	f
kdb_kbd_cleanup_state	debug/kdb/kdb_private.h	248;"	d
kdb_kgdb	debug/kdb/kdb_main.c	/^static int kdb_kgdb(int argc, const char **argv)$/;"	f	file:
kdb_kill	debug/kdb/kdb_main.c	/^static int kdb_kill(int argc, const char **argv)$/;"	f	file:
kdb_ks	debug/kdb/kdb_debugger.c	/^static struct kgdb_state *kdb_ks;$/;"	v	typeref:struct:kgdb_state	file:
kdb_local	debug/kdb/kdb_main.c	/^static int kdb_local(kdb_reason_t reason, int error, struct pt_regs *regs,$/;"	f	file:
kdb_lsmod	debug/kdb/kdb_main.c	/^static int kdb_lsmod(int argc, const char **argv)$/;"	f	file:
kdb_machreg_fmt	debug/kdb/kdb_private.h	43;"	d
kdb_machreg_fmt	debug/kdb/kdb_private.h	55;"	d
kdb_machreg_fmt0	debug/kdb/kdb_private.h	44;"	d
kdb_machreg_fmt0	debug/kdb/kdb_private.h	56;"	d
kdb_main_loop	debug/kdb/kdb_main.c	/^int kdb_main_loop(kdb_reason_t reason, kdb_reason_t reason2, int error,$/;"	f
kdb_max_commands	debug/kdb/kdb_main.c	/^static int kdb_max_commands = KDB_BASE_CMD_MAX;$/;"	v	file:
kdb_md	debug/kdb/kdb_main.c	/^static int kdb_md(int argc, const char **argv)$/;"	f	file:
kdb_md_line	debug/kdb/kdb_main.c	/^static void kdb_md_line(const char *fmtstr, unsigned long addr,$/;"	f	file:
kdb_mdr	debug/kdb/kdb_main.c	/^static int kdb_mdr(unsigned long addr, unsigned int count)$/;"	f	file:
kdb_mm	debug/kdb/kdb_main.c	/^static int kdb_mm(int argc, const char **argv)$/;"	f	file:
kdb_modules	module.c	/^struct list_head *kdb_modules = &modules; \/* kdb needs the list of modules *\/$/;"	v	typeref:struct:list_head
kdb_name_table	debug/kdb/kdb_support.c	/^static char *kdb_name_table[100];	\/* arbitrary size *\/$/;"	v	file:
kdb_nextline	debug/kdb/kdb_main.c	/^int kdb_nextline = 1;$/;"	v
kdb_nmi_disabled	debug/kdb/kdb_main.c	/^static atomic_t kdb_nmi_disabled;$/;"	v	file:
kdb_param_enable_nmi	debug/kdb/kdb_main.c	/^static int kdb_param_enable_nmi(const char *val, const struct kernel_param *kp)$/;"	f	file:
kdb_param_ops_enable_nmi	debug/kdb/kdb_main.c	/^static const struct kernel_param_ops kdb_param_ops_enable_nmi = {$/;"	v	typeref:struct:kernel_param_ops	file:
kdb_parse	debug/kdb/kdb_main.c	/^int kdb_parse(const char *cmdstr)$/;"	f
kdb_parsebp	debug/kdb/kdb_bp.c	/^static int kdb_parsebp(int argc, const char **argv, int *nextargp, kdb_bp_t *bp)$/;"	f	file:
kdb_per_cpu	debug/kdb/kdb_main.c	/^static int kdb_per_cpu(int argc, const char **argv)$/;"	f	file:
kdb_pid	debug/kdb/kdb_main.c	/^static int kdb_pid(int argc, const char **argv)$/;"	f	file:
kdb_poll_funcs	debug/kdb/kdb_debugger.c	/^EXPORT_SYMBOL_GPL(kdb_poll_funcs);$/;"	v
kdb_poll_funcs	debug/kdb/kdb_debugger.c	/^get_char_func kdb_poll_funcs[] = {$/;"	v
kdb_poll_idx	debug/kdb/kdb_debugger.c	/^EXPORT_SYMBOL_GPL(kdb_poll_idx);$/;"	v
kdb_poll_idx	debug/kdb/kdb_debugger.c	/^int kdb_poll_idx = 1;$/;"	v
kdb_print_nameval	debug/kdb/kdb_support.c	/^void kdb_print_nameval(const char *name, unsigned long val)$/;"	f
kdb_print_state	debug/kdb/kdb_main.c	/^void kdb_print_state(const char *text, int value)$/;"	f
kdb_printbp	debug/kdb/kdb_bp.c	/^static void kdb_printbp(kdb_bp_t *bp, int i)$/;"	f	file:
kdb_printf	debug/kdb/kdb_io.c	/^EXPORT_SYMBOL_GPL(kdb_printf);$/;"	v
kdb_printf	debug/kdb/kdb_io.c	/^int kdb_printf(const char *fmt, ...)$/;"	f
kdb_prompt_str	debug/kdb/kdb_io.c	/^char kdb_prompt_str[CMD_BUFLEN];$/;"	v
kdb_ps	debug/kdb/kdb_main.c	/^static int kdb_ps(int argc, const char **argv)$/;"	f	file:
kdb_ps1	debug/kdb/kdb_main.c	/^void kdb_ps1(const struct task_struct *p)$/;"	f
kdb_ps_suppressed	debug/kdb/kdb_main.c	/^void kdb_ps_suppressed(void)$/;"	f
kdb_putarea	debug/kdb/kdb_private.h	98;"	d
kdb_putarea_size	debug/kdb/kdb_support.c	/^int kdb_putarea_size(unsigned long addr, void *res, size_t size)$/;"	f
kdb_putword	debug/kdb/kdb_support.c	/^int kdb_putword(unsigned long addr, unsigned long word, size_t size)$/;"	f
kdb_rd	debug/kdb/kdb_main.c	/^static int kdb_rd(int argc, const char **argv)$/;"	f	file:
kdb_read	debug/kdb/kdb_io.c	/^static char *kdb_read(char *buffer, size_t bufsize)$/;"	f	file:
kdb_read_get_key	debug/kdb/kdb_io.c	/^static int kdb_read_get_key(char *buffer, size_t bufsize)$/;"	f	file:
kdb_reboot	debug/kdb/kdb_main.c	/^static int kdb_reboot(int argc, const char **argv)$/;"	f	file:
kdb_register	debug/kdb/kdb_main.c	/^EXPORT_SYMBOL_GPL(kdb_register);$/;"	v
kdb_register	debug/kdb/kdb_main.c	/^int kdb_register(char *cmd,$/;"	f
kdb_register_repeat	debug/kdb/kdb_main.c	/^EXPORT_SYMBOL_GPL(kdb_register_repeat);$/;"	v
kdb_register_repeat	debug/kdb/kdb_main.c	/^int kdb_register_repeat(char *cmd,$/;"	f
kdb_restore_flags	debug/kdb/kdb_support.c	/^void kdb_restore_flags(void)$/;"	f
kdb_rm	debug/kdb/kdb_main.c	/^static int kdb_rm(int argc, const char **argv)$/;"	f	file:
kdb_rwtypes	debug/kdb/kdb_bp.c	/^static char *kdb_rwtypes[] = {$/;"	v	file:
kdb_save_flags	debug/kdb/kdb_support.c	/^void kdb_save_flags(void)$/;"	f
kdb_search_string	debug/kdb/kdb_io.c	/^static int kdb_search_string(char *searched, char *searchfor)$/;"	f	file:
kdb_send_sig_info	signal.c	/^kdb_send_sig_info(struct task_struct *t, struct siginfo *info)$/;"	f
kdb_set	debug/kdb/kdb_main.c	/^int kdb_set(int argc, const char **argv)$/;"	f
kdb_set_current_task	debug/kdb/kdb_main.c	/^void kdb_set_current_task(struct task_struct *p)$/;"	f
kdb_setsinglestep	debug/kdb/kdb_bp.c	/^static void kdb_setsinglestep(struct pt_regs *regs)$/;"	f	file:
kdb_show_stack	debug/kdb/kdb_bt.c	/^static void kdb_show_stack(struct task_struct *p, void *addr)$/;"	f	file:
kdb_sr	debug/kdb/kdb_main.c	/^static int kdb_sr(int argc, const char **argv)$/;"	f	file:
kdb_ss	debug/kdb/kdb_bp.c	/^static int kdb_ss(int argc, const char **argv)$/;"	f	file:
kdb_state	debug/kdb/kdb_main.c	/^int kdb_state;			\/* General KDB state *\/$/;"	v
kdb_strdup	debug/kdb/kdb_support.c	/^char *kdb_strdup(const char *str, gfp_t type)$/;"	f
kdb_stub	debug/debug_core.h	/^static inline int kdb_stub(struct kgdb_state *ks)$/;"	f
kdb_stub	debug/kdb/kdb_debugger.c	/^int kdb_stub(struct kgdb_state *ks)$/;"	f
kdb_summary	debug/kdb/kdb_main.c	/^static int kdb_summary(int argc, const char **argv)$/;"	f	file:
kdb_symbol_print	debug/kdb/kdb_support.c	/^void kdb_symbol_print(unsigned long addr, const kdb_symtab_t *symtab_p,$/;"	f
kdb_symtab_t	debug/kdb/kdb_private.h	/^		} kdb_symtab_t;$/;"	t	typeref:struct:__ksymtab
kdb_sysinfo	debug/kdb/kdb_main.c	/^static void kdb_sysinfo(struct sysinfo *val)$/;"	f	file:
kdb_task_has_cpu	debug/kdb/kdb_private.h	230;"	d
kdb_task_state	debug/kdb/kdb_support.c	/^unsigned long kdb_task_state(const struct task_struct *p, unsigned long mask)$/;"	f
kdb_task_state_char	debug/kdb/kdb_support.c	/^char kdb_task_state_char (const struct task_struct *p)$/;"	f
kdb_task_state_string	debug/kdb/kdb_support.c	/^unsigned long kdb_task_state_string(const char *s)$/;"	f
kdb_tm	debug/kdb/kdb_main.c	/^struct kdb_tm {$/;"	s	file:
kdb_trap_printk	debug/kdb/kdb_io.c	/^int kdb_trap_printk;$/;"	v
kdb_unregister	debug/kdb/kdb_main.c	/^EXPORT_SYMBOL_GPL(kdb_unregister);$/;"	v
kdb_unregister	debug/kdb/kdb_main.c	/^int kdb_unregister(char *cmd)$/;"	f
kdb_walk_kallsyms	kallsyms.c	/^const char *kdb_walk_kallsyms(loff_t *pos)$/;"	f
kdb_while_each_thread	debug/kdb/kdb_private.h	234;"	d
kdballocenv	debug/kdb/kdb_main.c	/^static char *kdballocenv(size_t bytes)$/;"	f	file:
kdbgetaddrarg	debug/kdb/kdb_main.c	/^int kdbgetaddrarg(int argc, const char **argv, int *nextarg,$/;"	f
kdbgetenv	debug/kdb/kdb_main.c	/^char *kdbgetenv(const char *match)$/;"	f
kdbgetintenv	debug/kdb/kdb_main.c	/^int kdbgetintenv(const char *match, int *value)$/;"	f
kdbgetsymval	debug/kdb/kdb_support.c	/^EXPORT_SYMBOL(kdbgetsymval);$/;"	v
kdbgetsymval	debug/kdb/kdb_support.c	/^int kdbgetsymval(const char *symname, kdb_symtab_t *symtab)$/;"	f
kdbgetu64arg	debug/kdb/kdb_main.c	/^int kdbgetu64arg(const char *arg, u64 *value)$/;"	f
kdbgetularg	debug/kdb/kdb_main.c	/^int kdbgetularg(const char *arg, unsigned long *value)$/;"	f
kdbgetulenv	debug/kdb/kdb_main.c	/^static int kdbgetulenv(const char *match, unsigned long *value)$/;"	f	file:
kdbmsg_t	debug/kdb/kdb_main.c	/^} kdbmsg_t;$/;"	t	typeref:struct:_kdbmsg	file:
kdbmsgs	debug/kdb/kdb_main.c	/^static kdbmsg_t kdbmsgs[] = {$/;"	v	file:
kdbnearsym	debug/kdb/kdb_support.c	/^int kdbnearsym(unsigned long addr, kdb_symtab_t *symtab)$/;"	f
kdbnearsym_cleanup	debug/kdb/kdb_support.c	/^void kdbnearsym_cleanup(void)$/;"	f
kdbtab_t	debug/kdb/kdb_private.h	/^} kdbtab_t;$/;"	t	typeref:struct:_kdbtab
kdebug	cred.c	26;"	d	file:
keep_bootcon	printk.c	/^static int __read_mostly keep_bootcon;$/;"	v	file:
keep_bootcon_setup	printk.c	/^static int __init keep_bootcon_setup(char *str)$/;"	f	file:
keep_working	workqueue.c	/^static bool keep_working(struct worker_pool *pool)$/;"	f	file:
kern_path	pid_namespace.c	/^static struct ctl_path kern_path[] = { { .procname = "kernel", }, { } };$/;"	v	typeref:struct:ctl_path	file:
kern_table	sysctl.c	/^static struct ctl_table kern_table[] = {$/;"	v	typeref:struct:ctl_table	file:
kern_table	sysctl.c	/^static struct ctl_table kern_table[];$/;"	v	typeref:struct:ctl_table	file:
kernel_add_sysfs_param	params.c	/^static void __init kernel_add_sysfs_param(const char *name,$/;"	f	file:
kernel_attr_group	ksysfs.c	/^static struct attribute_group kernel_attr_group = {$/;"	v	typeref:struct:attribute_group	file:
kernel_attrs	ksysfs.c	/^static struct attribute * kernel_attrs[] = {$/;"	v	typeref:struct:attribute	file:
kernel_config_data_size	configs.c	52;"	d	file:
kernel_cpustat	sched/core.c	/^EXPORT_PER_CPU_SYMBOL(kernel_cpustat);$/;"	v
kernel_halt	sys.c	/^EXPORT_SYMBOL_GPL(kernel_halt);$/;"	v
kernel_halt	sys.c	/^void kernel_halt(void)$/;"	f
kernel_kobj	ksysfs.c	/^EXPORT_SYMBOL_GPL(kernel_kobj);$/;"	v
kernel_kobj	ksysfs.c	/^struct kobject *kernel_kobj;$/;"	v	typeref:struct:kobject
kernel_power_off	sys.c	/^EXPORT_SYMBOL_GPL(kernel_power_off);$/;"	v
kernel_power_off	sys.c	/^void kernel_power_off(void)$/;"	f
kernel_restart	sys.c	/^EXPORT_SYMBOL_GPL(kernel_restart);$/;"	v
kernel_restart	sys.c	/^void kernel_restart(char *cmd)$/;"	f
kernel_restart_prepare	sys.c	/^void kernel_restart_prepare(char *cmd)$/;"	f
kernel_shutdown_prepare	sys.c	/^static void kernel_shutdown_prepare(enum system_states state)$/;"	f	file:
kernel_text_address	extable.c	/^int kernel_text_address(unsigned long addr)$/;"	f
kernel_thread	fork.c	/^pid_t kernel_thread(int (*fn)(void *), void *arg, unsigned long flags)$/;"	f
kexec_crash_image	kexec.c	/^struct kimage *kexec_crash_image;$/;"	v	typeref:struct:kimage
kexec_crash_loaded	ksysfs.c	/^KERNEL_ATTR_RO(kexec_crash_loaded);$/;"	v
kexec_crash_loaded_show	ksysfs.c	/^static ssize_t kexec_crash_loaded_show(struct kobject *kobj,$/;"	f	file:
kexec_crash_size	ksysfs.c	/^KERNEL_ATTR_RW(kexec_crash_size);$/;"	v
kexec_crash_size_show	ksysfs.c	/^static ssize_t kexec_crash_size_show(struct kobject *kobj,$/;"	f	file:
kexec_crash_size_store	ksysfs.c	/^static ssize_t kexec_crash_size_store(struct kobject *kobj,$/;"	f	file:
kexec_image	kexec.c	/^struct kimage *kexec_image;$/;"	v	typeref:struct:kimage
kexec_in_progress	kexec.c	/^bool kexec_in_progress = false;$/;"	v
kexec_loaded	ksysfs.c	/^KERNEL_ATTR_RO(kexec_loaded);$/;"	v
kexec_loaded_show	ksysfs.c	/^static ssize_t kexec_loaded_show(struct kobject *kobj,$/;"	f	file:
kexec_should_crash	kexec.c	/^int kexec_should_crash(struct task_struct *p)$/;"	f
key	cgroup.c	/^	struct { enum cgroup_filetype type; struct pid_namespace *ns; } key;$/;"	m	struct:cgroup_pidlist	typeref:struct:cgroup_pidlist::__anon65	file:
key	futex.c	/^	union futex_key key;$/;"	m	struct:futex_pi_state	typeref:union:futex_pi_state::futex_key	file:
key	futex.c	/^	union futex_key key;$/;"	m	struct:futex_q	typeref:union:futex_q::futex_key	file:
key_f	swap/ks_features/ks_map.h	/^	key_func_t key_f;$/;"	m	struct:map
key_func_t	swap/ks_features/ks_map.h	/^typedef void *(*key_func_t)(void *);$/;"	t
key_id_len	module_signing.c	/^	u8	key_id_len;	\/* Length of key identifier *\/$/;"	m	struct:module_signature	file:
kfree_call_rcu	rcutree_plugin.h	/^EXPORT_SYMBOL_GPL(kfree_call_rcu);$/;"	v
kfree_call_rcu	rcutree_plugin.h	/^void kfree_call_rcu(struct rcu_head *head,$/;"	f
kgdb_active	debug/debug_core.c	/^EXPORT_SYMBOL_GPL(kgdb_active);$/;"	v
kgdb_active	debug/debug_core.c	/^atomic_t			kgdb_active = ATOMIC_INIT(-1);$/;"	v
kgdb_arch_init	debug/debug_core.c	/^int __weak kgdb_arch_init(void)$/;"	f
kgdb_arch_late	debug/debug_core.c	/^void __weak kgdb_arch_late(void)$/;"	f
kgdb_arch_pc	debug/debug_core.c	/^unsigned long __weak kgdb_arch_pc(int exception, struct pt_regs *regs)$/;"	f
kgdb_arch_remove_breakpoint	debug/debug_core.c	/^int __weak kgdb_arch_remove_breakpoint(struct kgdb_bkpt *bpt)$/;"	f
kgdb_arch_set_breakpoint	debug/debug_core.c	/^int __weak kgdb_arch_set_breakpoint(struct kgdb_bkpt *bpt)$/;"	f
kgdb_break	debug/debug_core.c	/^static struct kgdb_bkpt		kgdb_break[KGDB_MAX_BREAKPOINTS] = {$/;"	v	typeref:struct:kgdb_bkpt	file:
kgdb_break_asap	debug/debug_core.c	/^static int kgdb_break_asap;$/;"	v	file:
kgdb_break_tasklet_var	debug/debug_core.c	/^static atomic_t			kgdb_break_tasklet_var;$/;"	v	file:
kgdb_breakpoint	debug/debug_core.c	/^EXPORT_SYMBOL_GPL(kgdb_breakpoint);$/;"	v
kgdb_breakpoint	debug/debug_core.c	/^void kgdb_breakpoint(void)$/;"	f
kgdb_con_registered	debug/debug_core.c	/^static int kgdb_con_registered;$/;"	v	file:
kgdb_connected	debug/debug_core.c	/^EXPORT_SYMBOL_GPL(kgdb_connected);$/;"	v
kgdb_connected	debug/debug_core.c	/^int				kgdb_connected;$/;"	v
kgdb_console_write	debug/debug_core.c	/^static void kgdb_console_write(struct console *co, const char *s,$/;"	f	file:
kgdb_contthread	debug/debug_core.c	/^struct task_struct		*kgdb_contthread;$/;"	v	typeref:struct:task_struct
kgdb_cpu_doing_single_step	debug/debug_core.c	/^atomic_t			kgdb_cpu_doing_single_step = ATOMIC_INIT(-1);$/;"	v
kgdb_cpu_enter	debug/debug_core.c	/^static int kgdb_cpu_enter(struct kgdb_state *ks, struct pt_regs *regs,$/;"	f	file:
kgdb_do_roundup	debug/debug_core.c	/^static int kgdb_do_roundup = 1;$/;"	v	file:
kgdb_ebin2mem	debug/gdbstub.c	/^static int kgdb_ebin2mem(char *buf, char *mem, int count)$/;"	f	file:
kgdb_flush_swbreak_addr	debug/debug_core.c	/^static void kgdb_flush_swbreak_addr(unsigned long addr)$/;"	f	file:
kgdb_handle_exception	debug/debug_core.c	/^kgdb_handle_exception(int evector, int signo, int ecode, struct pt_regs *regs)$/;"	f
kgdb_hex2long	debug/gdbstub.c	/^int kgdb_hex2long(char **ptr, unsigned long *long_val)$/;"	f
kgdb_hex2mem	debug/gdbstub.c	/^int kgdb_hex2mem(char *buf, char *mem, int count)$/;"	f
kgdb_info	debug/debug_core.c	/^struct debuggerinfo_struct kgdb_info[NR_CPUS];$/;"	v	typeref:struct:debuggerinfo_struct
kgdb_initial_breakpoint	debug/debug_core.c	/^static void kgdb_initial_breakpoint(void)$/;"	f	file:
kgdb_io_module_registered	debug/debug_core.c	/^int			kgdb_io_module_registered;$/;"	v
kgdb_io_ready	debug/debug_core.c	/^static int kgdb_io_ready(int print_wait)$/;"	f	file:
kgdb_isremovedbreak	debug/debug_core.c	/^int kgdb_isremovedbreak(unsigned long addr)$/;"	f
kgdb_mem2hex	debug/gdbstub.c	/^char *kgdb_mem2hex(char *mem, char *buf, int count)$/;"	f
kgdb_nmicallback	debug/debug_core.c	/^int kgdb_nmicallback(int cpu, void *regs)$/;"	f
kgdb_panic_event	debug/debug_core.c	/^static int kgdb_panic_event(struct notifier_block *self,$/;"	f	file:
kgdb_panic_event_nb	debug/debug_core.c	/^static struct notifier_block kgdb_panic_event_nb = {$/;"	v	typeref:struct:notifier_block	file:
kgdb_reenter_check	debug/debug_core.c	/^static int kgdb_reenter_check(struct kgdb_state *ks)$/;"	f	file:
kgdb_register_callbacks	debug/debug_core.c	/^static void kgdb_register_callbacks(void)$/;"	f	file:
kgdb_register_io_module	debug/debug_core.c	/^EXPORT_SYMBOL_GPL(kgdb_register_io_module);$/;"	v
kgdb_register_io_module	debug/debug_core.c	/^int kgdb_register_io_module(struct kgdb_io *new_dbg_io_ops)$/;"	f
kgdb_schedule_breakpoint	debug/debug_core.c	/^EXPORT_SYMBOL_GPL(kgdb_schedule_breakpoint);$/;"	v
kgdb_schedule_breakpoint	debug/debug_core.c	/^void kgdb_schedule_breakpoint(void)$/;"	f
kgdb_setting_breakpoint	debug/debug_core.c	/^atomic_t			kgdb_setting_breakpoint;$/;"	v
kgdb_single_step	debug/debug_core.c	/^int				kgdb_single_step;$/;"	v
kgdb_skipexception	debug/debug_core.c	/^int __weak kgdb_skipexception(int exception, struct pt_regs *regs)$/;"	f
kgdb_sstep_pid	debug/debug_core.c	/^static pid_t			kgdb_sstep_pid;$/;"	v	file:
kgdb_state	debug/debug_core.h	/^struct kgdb_state {$/;"	s
kgdb_tasklet_bpt	debug/debug_core.c	/^static void kgdb_tasklet_bpt(unsigned long ing)$/;"	f	file:
kgdb_transition_check	debug/kdb/kdb_io.c	/^static int kgdb_transition_check(char *buffer)$/;"	f	file:
kgdb_unregister_callbacks	debug/debug_core.c	/^static void kgdb_unregister_callbacks(void)$/;"	f	file:
kgdb_unregister_io_module	debug/debug_core.c	/^EXPORT_SYMBOL_GPL(kgdb_unregister_io_module);$/;"	v
kgdb_unregister_io_module	debug/debug_core.c	/^void kgdb_unregister_io_module(struct kgdb_io *old_dbg_io_ops)$/;"	f
kgdb_use_con	debug/debug_core.c	/^static int kgdb_use_con;$/;"	v	file:
kgdb_usethread	debug/debug_core.c	/^struct task_struct		*kgdb_usethread;$/;"	v	typeref:struct:task_struct
kgdb_usethreadid	debug/debug_core.h	/^	long			kgdb_usethreadid;$/;"	m	struct:kgdb_state
kgdb_validate_break_address	debug/debug_core.c	/^int __weak kgdb_validate_break_address(unsigned long addr)$/;"	f
kgdbcons	debug/debug_core.c	/^static struct console kgdbcons = {$/;"	v	typeref:struct:console	file:
kgdbreboot	debug/debug_core.c	/^static int kgdbreboot;$/;"	v	file:
khelper_wq	kmod.c	/^static struct workqueue_struct *khelper_wq;$/;"	v	typeref:struct:workqueue_struct	file:
kick_all_cpus_sync	smp.c	/^EXPORT_SYMBOL_GPL(kick_all_cpus_sync);$/;"	v
kick_all_cpus_sync	smp.c	/^void kick_all_cpus_sync(void)$/;"	f
kick_kprobe_optimizer	kprobes.c	/^static __kprobes void kick_kprobe_optimizer(void)$/;"	f	file:
kick_process	sched/core.c	/^EXPORT_SYMBOL_GPL(kick_process);$/;"	v
kick_process	sched/core.c	/^void kick_process(struct task_struct *p)$/;"	f
kill_as_cred_perm	signal.c	/^static int kill_as_cred_perm(const struct cred *cred,$/;"	f	file:
kill_kprobe	kprobes.c	/^static void __kprobes kill_kprobe(struct kprobe *p)$/;"	f	file:
kill_ok_by_cred	signal.c	/^static int kill_ok_by_cred(struct task_struct *t)$/;"	f	file:
kill_optimized_kprobe	kprobes.c	/^static void __kprobes kill_optimized_kprobe(struct kprobe *p)$/;"	f	file:
kill_optimized_kprobe	kprobes.c	916;"	d	file:
kill_orphaned_pgrp	exit.c	/^kill_orphaned_pgrp(struct task_struct *tsk, struct task_struct *parent)$/;"	f	file:
kill_pgrp	signal.c	/^EXPORT_SYMBOL(kill_pgrp);$/;"	v
kill_pgrp	signal.c	/^int kill_pgrp(struct pid *pid, int sig, int priv)$/;"	f
kill_pid	signal.c	/^EXPORT_SYMBOL(kill_pid);$/;"	v
kill_pid	signal.c	/^int kill_pid(struct pid *pid, int sig, int priv)$/;"	f
kill_pid_info	signal.c	/^int kill_pid_info(int sig, struct siginfo *info, struct pid *pid)$/;"	f
kill_pid_info_as_cred	signal.c	/^EXPORT_SYMBOL_GPL(kill_pid_info_as_cred);$/;"	v
kill_pid_info_as_cred	signal.c	/^int kill_pid_info_as_cred(int sig, struct siginfo *info, struct pid *pid,$/;"	f
kill_proc_info	signal.c	/^int kill_proc_info(int sig, struct siginfo *info, pid_t pid)$/;"	f
kill_rules	audit_tree.c	/^static void kill_rules(struct audit_tree *tree)$/;"	f	file:
kill_something_info	signal.c	/^static int kill_something_info(int sig, struct siginfo *info, pid_t pid)$/;"	f	file:
kill_test	trace/ring_buffer_benchmark.c	/^static int kill_test;$/;"	v	file:
killed_trees	audit.h	/^	struct list_head killed_trees;$/;"	m	struct:audit_context	typeref:struct:audit_context::list_head
kimage_add_entry	kexec.c	/^static int kimage_add_entry(struct kimage *image, kimage_entry_t entry)$/;"	f	file:
kimage_add_page	kexec.c	/^static int kimage_add_page(struct kimage *image, unsigned long page)$/;"	f	file:
kimage_alloc_control_pages	kexec.c	/^struct page *kimage_alloc_control_pages(struct kimage *image,$/;"	f
kimage_alloc_crash_control_pages	kexec.c	/^static struct page *kimage_alloc_crash_control_pages(struct kimage *image,$/;"	f	file:
kimage_alloc_normal_control_pages	kexec.c	/^static struct page *kimage_alloc_normal_control_pages(struct kimage *image,$/;"	f	file:
kimage_alloc_page	kexec.c	/^static struct page *kimage_alloc_page(struct kimage *image,$/;"	f	file:
kimage_alloc_pages	kexec.c	/^static struct page *kimage_alloc_pages(gfp_t gfp_mask, unsigned int order)$/;"	f	file:
kimage_crash_alloc	kexec.c	/^static int kimage_crash_alloc(struct kimage **rimage, unsigned long entry,$/;"	f	file:
kimage_dst_used	kexec.c	/^static kimage_entry_t *kimage_dst_used(struct kimage *image,$/;"	f	file:
kimage_free	kexec.c	/^static void kimage_free(struct kimage *image)$/;"	f	file:
kimage_free_entry	kexec.c	/^static void kimage_free_entry(kimage_entry_t entry)$/;"	f	file:
kimage_free_extra_pages	kexec.c	/^static void kimage_free_extra_pages(struct kimage *image)$/;"	f	file:
kimage_free_page_list	kexec.c	/^static void kimage_free_page_list(struct list_head *list)$/;"	f	file:
kimage_free_pages	kexec.c	/^static void kimage_free_pages(struct page *page)$/;"	f	file:
kimage_is_destination_range	kexec.c	/^static int kimage_is_destination_range(struct kimage *image,$/;"	f	file:
kimage_load_crash_segment	kexec.c	/^static int kimage_load_crash_segment(struct kimage *image,$/;"	f	file:
kimage_load_normal_segment	kexec.c	/^static int kimage_load_normal_segment(struct kimage *image,$/;"	f	file:
kimage_load_segment	kexec.c	/^static int kimage_load_segment(struct kimage *image,$/;"	f	file:
kimage_normal_alloc	kexec.c	/^static int kimage_normal_alloc(struct kimage **rimage, unsigned long entry,$/;"	f	file:
kimage_set_destination	kexec.c	/^static int kimage_set_destination(struct kimage *image,$/;"	f	file:
kimage_terminate	kexec.c	/^static void kimage_terminate(struct kimage *image)$/;"	f	file:
kj_cb_data	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^struct kj_cb_data {$/;"	s	file:
kj_cb_data	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^struct kj_cb_data {$/;"	s	file:
kjump_exit	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^static void kjump_exit(void)$/;"	f	file:
kjump_exit	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^static void kjump_exit(void)$/;"	f	file:
kjump_handler	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^static struct kj_cb_data * __used kjump_handler(struct kj_cb_data *data)$/;"	f	file:
kjump_handler	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^static struct kj_cb_data * __used kjump_handler(struct kj_cb_data *data)$/;"	f	file:
kjump_init	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^static int kjump_init(void)$/;"	f	file:
kjump_init	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^static int kjump_init(void)$/;"	f	file:
kjump_kprobe	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^static struct kprobe kjump_kprobe = {$/;"	v	typeref:struct:kprobe	file:
kjump_pre_handler	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^static int kjump_pre_handler(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
km_diag	debug/kdb/kdb_main.c	/^	int	km_diag;	\/* kdb diagnostic *\/$/;"	m	struct:_kdbmsg	file:
km_msg	debug/kdb/kdb_main.c	/^	char	*km_msg;	\/* Corresponding message text *\/$/;"	m	struct:_kdbmsg	file:
kmalloc_parameter	params.c	/^static void *kmalloc_parameter(unsigned int size)$/;"	f	file:
kmalloced_param	params.c	/^struct kmalloced_param {$/;"	s	file:
kmem_info	swap/parser/usm_msg.c	/^struct kmem_info {$/;"	s	file:
kmem_info_fill	swap/parser/usm_msg.c	/^static void kmem_info_fill(struct kmem_info *info, struct mm_struct *mm)$/;"	f	file:
kmemleak_load_module	module.c	/^static inline void kmemleak_load_module(const struct module *mod,$/;"	f	file:
kmemleak_load_module	module.c	/^static void kmemleak_load_module(const struct module *mod,$/;"	f	file:
kmod_thread_locker	kmod.c	/^static const struct task_struct *kmod_thread_locker;$/;"	v	typeref:struct:task_struct	file:
kmsg_dump	printk.c	/^void kmsg_dump(enum kmsg_dump_reason reason)$/;"	f
kmsg_dump_get_buffer	printk.c	/^EXPORT_SYMBOL_GPL(kmsg_dump_get_buffer);$/;"	v
kmsg_dump_get_buffer	printk.c	/^bool kmsg_dump_get_buffer(struct kmsg_dumper *dumper, bool syslog,$/;"	f
kmsg_dump_get_line	printk.c	/^EXPORT_SYMBOL_GPL(kmsg_dump_get_line);$/;"	v
kmsg_dump_get_line	printk.c	/^bool kmsg_dump_get_line(struct kmsg_dumper *dumper, bool syslog,$/;"	f
kmsg_dump_get_line_nolock	printk.c	/^bool kmsg_dump_get_line_nolock(struct kmsg_dumper *dumper, bool syslog,$/;"	f
kmsg_dump_register	printk.c	/^EXPORT_SYMBOL_GPL(kmsg_dump_register);$/;"	v
kmsg_dump_register	printk.c	/^int kmsg_dump_register(struct kmsg_dumper *dumper)$/;"	f
kmsg_dump_rewind	printk.c	/^EXPORT_SYMBOL_GPL(kmsg_dump_rewind);$/;"	v
kmsg_dump_rewind	printk.c	/^void kmsg_dump_rewind(struct kmsg_dumper *dumper)$/;"	f
kmsg_dump_rewind_nolock	printk.c	/^void kmsg_dump_rewind_nolock(struct kmsg_dumper *dumper)$/;"	f
kmsg_dump_unregister	printk.c	/^EXPORT_SYMBOL_GPL(kmsg_dump_unregister);$/;"	v
kmsg_dump_unregister	printk.c	/^int kmsg_dump_unregister(struct kmsg_dumper *dumper)$/;"	f
kmsg_fops	printk.c	/^const struct file_operations kmsg_fops = {$/;"	v	typeref:struct:file_operations
knt1_size	debug/kdb/kdb_support.c	87;"	d	file:
kobj2pinst	padata.c	903;"	d	file:
kp	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	/^	struct kprobe *kp;$/;"	m	struct:prev_kprobe	typeref:struct:prev_kprobe::kprobe
kp	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	/^	struct kprobe *kp;$/;"	m	struct:prev_kprobe	typeref:struct:prev_kprobe::kprobe
kp	swap/kprobe/swap_kprobes.h	/^	struct kprobe kp;                    \/**< Kprobe of this kretprobe.*\/$/;"	m	struct:kretprobe	typeref:struct:kretprobe::kprobe
kp	swap/kprobe/swap_kprobes.h	/^	struct kprobe kp;                   \/**< This probes kprobe.*\/$/;"	m	struct:jprobe	typeref:struct:jprobe::kprobe
kp	swap/uprobe/swap_uprobes.h	/^	struct kprobe kp;                   \/**< Kprobe for this uprobe *\/$/;"	m	struct:uprobe	typeref:struct:uprobe::kprobe
kp	test_kprobes.c	/^static struct kprobe kp = {$/;"	v	typeref:struct:kprobe	file:
kp2	test_kprobes.c	/^static struct kprobe kp2 = {$/;"	v	typeref:struct:kprobe	file:
kp2up	swap/uprobe/swap_uprobes.h	/^static inline struct uprobe *kp2up(struct kprobe *p)$/;"	f
kp_post_handler	test_kprobes.c	/^static void kp_post_handler(struct kprobe *p, struct pt_regs *regs,$/;"	f	file:
kp_post_handler2	test_kprobes.c	/^static void kp_post_handler2(struct kprobe *p, struct pt_regs *regs,$/;"	f	file:
kp_pre_handler	test_kprobes.c	/^static int kp_pre_handler(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
kp_pre_handler2	test_kprobes.c	/^static int kp_pre_handler2(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
kprobe	swap/kprobe/swap_kprobes.h	/^struct kprobe {$/;"	s
kprobe_addr	kprobes.c	/^static kprobe_opcode_t __kprobes *kprobe_addr(struct kprobe *p)$/;"	f	file:
kprobe_aggrprobe	kprobes.c	/^static inline int kprobe_aggrprobe(struct kprobe *p)$/;"	f	file:
kprobe_blacklist	kprobes.c	/^static struct kprobe_blackpoint kprobe_blacklist[] = {$/;"	v	typeref:struct:kprobe_blackpoint	file:
kprobe_break_handler_t	swap/kprobe/swap_kprobes.h	/^typedef int (*kprobe_break_handler_t) (struct kprobe *, struct pt_regs *);$/;"	t
kprobe_count	swap/kprobe/swap_kprobes.c	/^EXPORT_SYMBOL_GPL(kprobe_count);$/;"	v
kprobe_count	swap/kprobe/swap_kprobes.c	/^atomic_t kprobe_count;$/;"	v
kprobe_ctlblk	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	/^struct kprobe_ctlblk {$/;"	s
kprobe_ctlblk	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	/^struct kprobe_ctlblk {$/;"	s
kprobe_disarmed	kprobes.c	/^static inline int kprobe_disarmed(struct kprobe *p)$/;"	f	file:
kprobe_disarmed	kprobes.c	921;"	d	file:
kprobe_dispatcher	trace/trace_kprobe.c	/^int kprobe_dispatcher(struct kprobe *kp, struct pt_regs *regs)$/;"	f	file:
kprobe_event_define_fields	trace/trace_kprobe.c	/^static int kprobe_event_define_fields(struct ftrace_event_call *event_call)$/;"	f	file:
kprobe_events_ops	trace/trace_kprobe.c	/^static const struct file_operations kprobe_events_ops = {$/;"	v	typeref:struct:file_operations	file:
kprobe_exceptions_nb	kprobes.c	/^static struct notifier_block kprobe_exceptions_nb = {$/;"	v	typeref:struct:notifier_block	file:
kprobe_exceptions_nb	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^static struct notifier_block kprobe_exceptions_nb = {$/;"	v	typeref:struct:notifier_block	file:
kprobe_exceptions_notify	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^static int kprobe_exceptions_notify(struct notifier_block *self,$/;"	f	file:
kprobe_fault_handler	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^static int kprobe_fault_handler(struct pt_regs *regs, int trapnr)$/;"	f	file:
kprobe_fault_handler_t	swap/kprobe/swap_kprobes.h	/^typedef int (*kprobe_fault_handler_t) (struct kprobe *,$/;"	t
kprobe_flush_task	kprobes.c	/^void __kprobes kprobe_flush_task(struct task_struct *tk)$/;"	f
kprobe_ftrace_enabled	kprobes.c	/^static int kprobe_ftrace_enabled;$/;"	v	file:
kprobe_funcs	trace/trace_kprobe.c	/^static struct trace_event_functions kprobe_funcs = {$/;"	v	typeref:struct:trace_event_functions	file:
kprobe_handler	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^static int kprobe_handler(struct pt_regs *regs)$/;"	f	file:
kprobe_handler	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^static int kprobe_handler(struct pt_regs *regs)$/;"	f	file:
kprobe_insn_cache	kprobes.c	/^struct kprobe_insn_cache {$/;"	s	file:
kprobe_insn_page	kprobes.c	/^struct kprobe_insn_page {$/;"	s	file:
kprobe_insn_slots	kprobes.c	/^static struct kprobe_insn_cache kprobe_insn_slots = {$/;"	v	typeref:struct:kprobe_insn_cache	file:
kprobe_lookup_name	kprobes.c	66;"	d	file:
kprobe_module_nb	kprobes.c	/^static struct notifier_block kprobe_module_nb = {$/;"	v	typeref:struct:notifier_block	file:
kprobe_old_eflags	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	/^	unsigned long kprobe_old_eflags;$/;"	m	struct:kprobe_ctlblk
kprobe_opcode_t	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	/^typedef unsigned long kprobe_opcode_t;$/;"	t
kprobe_opcode_t	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	/^typedef u8 kprobe_opcode_t;$/;"	t
kprobe_optimizer	kprobes.c	/^static __kprobes void kprobe_optimizer(struct work_struct *work)$/;"	f	file:
kprobe_optinsn_slots	kprobes.c	/^static struct kprobe_insn_cache kprobe_optinsn_slots = {$/;"	v	typeref:struct:kprobe_insn_cache	file:
kprobe_optready	kprobes.c	/^static inline int kprobe_optready(struct kprobe *p)$/;"	f	file:
kprobe_perf_func	trace/trace_kprobe.c	/^kprobe_perf_func(struct trace_probe *tp, struct pt_regs *regs)$/;"	f	file:
kprobe_post_handler_t	swap/kprobe/swap_kprobes.h	/^typedef void (*kprobe_post_handler_t) (struct kprobe *,$/;"	t
kprobe_pre_entry_handler_t	swap/kprobe/swap_kprobes.h	/^typedef unsigned long (*kprobe_pre_entry_handler_t) (void *priv_arg,$/;"	t
kprobe_pre_handler_t	swap/kprobe/swap_kprobes.h	/^typedef int (*kprobe_pre_handler_t) (struct kprobe *, struct pt_regs *);$/;"	t
kprobe_profile_ops	trace/trace_kprobe.c	/^static const struct file_operations kprobe_profile_ops = {$/;"	v	typeref:struct:file_operations	file:
kprobe_queued	kprobes.c	/^static int __kprobes kprobe_queued(struct kprobe *p)$/;"	f	file:
kprobe_register	trace/trace_kprobe.c	/^int kprobe_register(struct ftrace_event_call *event,$/;"	f	file:
kprobe_saved_eflags	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	/^	unsigned long kprobe_saved_eflags;$/;"	m	struct:kprobe_ctlblk
kprobe_seq_next	kprobes.c	/^static void __kprobes *kprobe_seq_next(struct seq_file *f, void *v, loff_t *pos)$/;"	f	file:
kprobe_seq_start	kprobes.c	/^static void __kprobes *kprobe_seq_start(struct seq_file *f, loff_t *pos)$/;"	f	file:
kprobe_seq_stop	kprobes.c	/^static void __kprobes kprobe_seq_stop(struct seq_file *f, void *v)$/;"	f	file:
kprobe_slot_state	kprobes.c	/^enum kprobe_slot_state {$/;"	g	file:
kprobe_status	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	/^	unsigned long kprobe_status;$/;"	m	struct:kprobe_ctlblk
kprobe_status	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	/^	unsigned long kprobe_status;$/;"	m	struct:kprobe_ctlblk
kprobe_table	kprobes.c	/^static struct hlist_head kprobe_table[KPROBE_TABLE_SIZE];$/;"	v	typeref:struct:hlist_head	file:
kprobe_table	swap/kprobe/swap_kprobes.c	/^struct hlist_head kprobe_table[KPROBE_TABLE_SIZE];$/;"	v	typeref:struct:hlist_head
kprobe_target	test_kprobes.c	/^static noinline u32 kprobe_target(u32 value)$/;"	f	file:
kprobe_target2	test_kprobes.c	/^static noinline u32 kprobe_target2(u32 value)$/;"	f	file:
kprobe_trace_entry_head	trace/trace.h	/^struct kprobe_trace_entry_head {$/;"	s
kprobe_trace_func	trace/trace_kprobe.c	/^kprobe_trace_func(struct trace_probe *tp, struct pt_regs *regs)$/;"	f	file:
kprobe_trace_self_tests_init	trace/trace_kprobe.c	/^late_initcall(kprobe_trace_self_tests_init);$/;"	v
kprobe_trace_self_tests_init	trace/trace_kprobe.c	/^static __init int kprobe_trace_self_tests_init(void)$/;"	f	file:
kprobe_trace_selftest_target	trace/trace_kprobe.c	/^static __used int kprobe_trace_selftest_target(int a1, int a2, int a3,$/;"	f	file:
kprobe_trap_handler	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^int kprobe_trap_handler(struct pt_regs *regs, unsigned int instr)$/;"	f
kprobe_unused	kprobes.c	/^static inline int kprobe_unused(struct kprobe *p)$/;"	f	file:
kprobes_all_disarmed	kprobes.c	/^static bool kprobes_all_disarmed;$/;"	v	file:
kprobes_allow_optimization	kprobes.c	/^static bool kprobes_allow_optimization;$/;"	v	file:
kprobes_inc_nmissed_count	kprobes.c	/^void __kprobes kprobes_inc_nmissed_count(struct kprobe *p)$/;"	f
kprobes_initialized	kprobes.c	/^static int kprobes_initialized;$/;"	v	file:
kprobes_module_callback	kprobes.c	/^static int __kprobes kprobes_module_callback(struct notifier_block *nb,$/;"	f	file:
kprobes_open	kprobes.c	/^static int __kprobes kprobes_open(struct inode *inode, struct file *filp)$/;"	f	file:
kprobes_seq_ops	kprobes.c	/^static const struct seq_operations kprobes_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
kptr_obfuscate	kcmp.c	/^static long kptr_obfuscate(long v, int type)$/;"	f	file:
kref	sched/auto_group.h	/^	struct kref		kref;$/;"	m	struct:autogroup	typeref:struct:autogroup::kref
kretprobe	swap/kprobe/swap_kprobes.h	/^struct kretprobe {$/;"	s
kretprobe_assert	swap/kprobe/swap_kprobes.c	/^static void kretprobe_assert(struct kretprobe_instance *ri,$/;"	f	file:
kretprobe_dispatcher	trace/trace_kprobe.c	/^int kretprobe_dispatcher(struct kretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
kretprobe_event_define_fields	trace/trace_kprobe.c	/^static int kretprobe_event_define_fields(struct ftrace_event_call *event_call)$/;"	f	file:
kretprobe_funcs	trace/trace_kprobe.c	/^static struct trace_event_functions kretprobe_funcs = {$/;"	v	typeref:struct:trace_event_functions	file:
kretprobe_handler_t	swap/kprobe/swap_kprobes.h	/^typedef int (*kretprobe_handler_t) (struct kretprobe_instance *,$/;"	t
kretprobe_inst_table	kprobes.c	/^static struct hlist_head kretprobe_inst_table[KPROBE_TABLE_SIZE];$/;"	v	typeref:struct:hlist_head	file:
kretprobe_inst_table	swap/kprobe/swap_kprobes.c	/^static struct hlist_head kretprobe_inst_table[KPROBE_TABLE_SIZE];$/;"	v	typeref:struct:hlist_head	file:
kretprobe_inst_table_head	swap/kprobe/swap_kprobes.c	/^static struct hlist_head *kretprobe_inst_table_head(void *hash_key)$/;"	f	file:
kretprobe_instance	swap/kprobe/swap_kprobes.h	/^struct kretprobe_instance {$/;"	s
kretprobe_perf_func	trace/trace_kprobe.c	/^kretprobe_perf_func(struct trace_probe *tp, struct kretprobe_instance *ri,$/;"	f	file:
kretprobe_table_lock_ptr	kprobes.c	/^static raw_spinlock_t *kretprobe_table_lock_ptr(unsigned long hash)$/;"	f	file:
kretprobe_table_locks	kprobes.c	/^} kretprobe_table_locks[KPROBE_TABLE_SIZE];$/;"	v	typeref:struct:__anon1	file:
kretprobe_trace_entry_head	trace/trace.h	/^struct kretprobe_trace_entry_head {$/;"	s
kretprobe_trace_func	trace/trace_kprobe.c	/^kretprobe_trace_func(struct trace_probe *tp, struct kretprobe_instance *ri,$/;"	f	file:
kretprobed	trace/trace_output.c	/^static inline const char *kretprobed(const char *name)$/;"	f	file:
krp_inst_flush	swap/kprobe/swap_kprobes.c	/^static void krp_inst_flush(struct task_struct *task)$/;"	f	file:
krph_val	test_kprobes.c	/^static u32 krph_val;$/;"	v	file:
ks_namebuf	debug/kdb/kdb_support.c	/^static char ks_namebuf[KSYM_NAME_LEN+1], ks_namebuf_prev[KSYM_NAME_LEN+1];$/;"	v	file:
ks_namebuf_prev	debug/kdb/kdb_support.c	/^static char ks_namebuf[KSYM_NAME_LEN+1], ks_namebuf_prev[KSYM_NAME_LEN+1];$/;"	v	file:
ks_probe	swap/ks_features/ks_features.c	/^struct ks_probe {$/;"	s	file:
ksf_msg_entry	swap/ks_features/ksf_msg.c	/^void ksf_msg_entry(struct pt_regs *regs, unsigned long func_addr,$/;"	f
ksf_msg_exit	swap/ks_features/ksf_msg.c	/^void ksf_msg_exit(struct pt_regs *regs, unsigned long func_addr,$/;"	f
ksf_msg_file_entry	swap/ks_features/ksf_msg.c	/^void ksf_msg_file_entry(int fd, enum file_api_t api, const char *path)$/;"	f
ksf_msg_file_entry_lock	swap/ks_features/ksf_msg.c	/^void ksf_msg_file_entry_lock(int fd, enum file_api_t api, const char *path,$/;"	f
ksf_msg_file_entry_open	swap/ks_features/ksf_msg.c	/^void ksf_msg_file_entry_open(int fd, enum file_api_t api, const char *path,$/;"	f
ksf_msg_file_exit	swap/ks_features/ksf_msg.c	/^void ksf_msg_file_exit(struct pt_regs *regs, char ret_type)$/;"	f
ksf_switch_entry	swap/ks_features/ksf_msg.c	/^void ksf_switch_entry(struct pt_regs *regs)$/;"	f
ksf_switch_exit	swap/ks_features/ksf_msg.c	/^void ksf_switch_exit(struct pt_regs *regs)$/;"	f
ksoftirqd_should_run	softirq.c	/^static int ksoftirqd_should_run(unsigned int cpu)$/;"	f	file:
ksp	swap/ks_features/ks_features.c	/^static struct ks_probe ksp[] = {$/;"	v	typeref:struct:ks_probe	file:
kstat	sched/core.c	/^EXPORT_PER_CPU_SYMBOL(kstat);$/;"	v
kstat_irqs	irq/irqdesc.c	/^unsigned int kstat_irqs(unsigned int irq)$/;"	f
kstat_irqs_cpu	irq/irqdesc.c	/^unsigned int kstat_irqs_cpu(unsigned int irq, int cpu)$/;"	f
ksyms_exit	swap/ksyms/ksyms_init.h	/^static inline void ksyms_exit(void)$/;"	f
ksyms_exit	swap/ksyms/no_ksyms.c	/^void ksyms_exit(void)$/;"	f
ksyms_init	swap/ksyms/ksyms_init.h	/^static inline int ksyms_init(void)$/;"	f
ksyms_init	swap/ksyms/no_ksyms.c	/^int ksyms_init(void)$/;"	f
ksysfs_init	ksysfs.c	/^core_initcall(ksysfs_init);$/;"	v
ksysfs_init	ksysfs.c	/^static int __init ksysfs_init(void)$/;"	f	file:
kthread	kthread.c	/^static int kthread(void *_create)$/;"	f	file:
kthread	kthread.c	/^struct kthread {$/;"	s	file:
kthread_bind	kthread.c	/^EXPORT_SYMBOL(kthread_bind);$/;"	v
kthread_bind	kthread.c	/^void kthread_bind(struct task_struct *p, unsigned int cpu)$/;"	f
kthread_create_info	kthread.c	/^struct kthread_create_info$/;"	s	file:
kthread_create_on_cpu	kthread.c	/^struct task_struct *kthread_create_on_cpu(int (*threadfn)(void *data),$/;"	f
kthread_create_on_node	kthread.c	/^EXPORT_SYMBOL(kthread_create_on_node);$/;"	v
kthread_create_on_node	kthread.c	/^struct task_struct *kthread_create_on_node(int (*threadfn)(void *data),$/;"	f
kthread_data	kthread.c	/^void *kthread_data(struct task_struct *task)$/;"	f
kthread_flush_work	kthread.c	/^struct kthread_flush_work {$/;"	s	file:
kthread_flush_work_fn	kthread.c	/^static void kthread_flush_work_fn(struct kthread_work *work)$/;"	f	file:
kthread_freezable_should_stop	kthread.c	/^EXPORT_SYMBOL_GPL(kthread_freezable_should_stop);$/;"	v
kthread_freezable_should_stop	kthread.c	/^bool kthread_freezable_should_stop(bool *was_frozen)$/;"	f
kthread_park	kthread.c	/^int kthread_park(struct task_struct *k)$/;"	f
kthread_parkme	kthread.c	/^void kthread_parkme(void)$/;"	f
kthread_should_park	kthread.c	/^bool kthread_should_park(void)$/;"	f
kthread_should_stop	kthread.c	/^EXPORT_SYMBOL(kthread_should_stop);$/;"	v
kthread_should_stop	kthread.c	/^bool kthread_should_stop(void)$/;"	f
kthread_stop	kthread.c	/^EXPORT_SYMBOL(kthread_stop);$/;"	v
kthread_stop	kthread.c	/^int kthread_stop(struct task_struct *k)$/;"	f
kthread_unpark	kthread.c	/^void kthread_unpark(struct task_struct *k)$/;"	f
kthread_worker_fn	kthread.c	/^EXPORT_SYMBOL_GPL(kthread_worker_fn);$/;"	v
kthread_worker_fn	kthread.c	/^int kthread_worker_fn(void *worker_ptr)$/;"	f
kthreadd	kthread.c	/^int kthreadd(void *unused)$/;"	f
kthreadd_task	kthread.c	/^struct task_struct *kthreadd_task;$/;"	v	typeref:struct:task_struct
ktime_add_ns	hrtimer.c	/^EXPORT_SYMBOL_GPL(ktime_add_ns);$/;"	v
ktime_add_ns	hrtimer.c	/^ktime_t ktime_add_ns(const ktime_t kt, u64 nsec)$/;"	f
ktime_add_safe	hrtimer.c	/^EXPORT_SYMBOL_GPL(ktime_add_safe);$/;"	v
ktime_add_safe	hrtimer.c	/^ktime_t ktime_add_safe(const ktime_t lhs, const ktime_t rhs)$/;"	f
ktime_divns	hrtimer.c	/^u64 ktime_divns(const ktime_t kt, s64 div)$/;"	f
ktime_get	time/timekeeping.c	/^EXPORT_SYMBOL_GPL(ktime_get);$/;"	v
ktime_get	time/timekeeping.c	/^ktime_t ktime_get(void)$/;"	f
ktime_get_boottime	time/timekeeping.c	/^EXPORT_SYMBOL_GPL(ktime_get_boottime);$/;"	v
ktime_get_boottime	time/timekeeping.c	/^ktime_t ktime_get_boottime(void)$/;"	f
ktime_get_clocktai	time/timekeeping.c	/^EXPORT_SYMBOL(ktime_get_clocktai);$/;"	v
ktime_get_clocktai	time/timekeeping.c	/^ktime_t ktime_get_clocktai(void)$/;"	f
ktime_get_monotonic_offset	time/timekeeping.c	/^EXPORT_SYMBOL_GPL(ktime_get_monotonic_offset);$/;"	v
ktime_get_monotonic_offset	time/timekeeping.c	/^ktime_t ktime_get_monotonic_offset(void)$/;"	f
ktime_get_real	time/timekeeping.c	/^EXPORT_SYMBOL_GPL(ktime_get_real);$/;"	v
ktime_get_real	time/timekeeping.c	/^ktime_t ktime_get_real(void)$/;"	f
ktime_get_ts	time/timekeeping.c	/^EXPORT_SYMBOL_GPL(ktime_get_ts);$/;"	v
ktime_get_ts	time/timekeeping.c	/^void ktime_get_ts(struct timespec *ts)$/;"	f
ktime_get_update_offsets	time/timekeeping.c	/^ktime_t ktime_get_update_offsets(ktime_t *offs_real, ktime_t *offs_boot,$/;"	f
ktime_sub_ns	hrtimer.c	/^EXPORT_SYMBOL_GPL(ktime_sub_ns);$/;"	v
ktime_sub_ns	hrtimer.c	/^ktime_t ktime_sub_ns(const ktime_t kt, u64 nsec)$/;"	f
l_next	lockdep_proc.c	/^static void *l_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
l_show	lockdep_proc.c	/^static int l_show(struct seq_file *m, void *v)$/;"	f	file:
l_start	lockdep_proc.c	/^static void *l_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
l_stop	lockdep_proc.c	/^static void l_stop(struct seq_file *m, void *v)$/;"	f	file:
label	power/power.h	/^	const char *label;$/;"	m	struct:pm_sleep_state
last	sched/sched.h	/^	struct sched_entity *curr, *next, *last, *skip;$/;"	m	struct:cfs_rq	typeref:struct:cfs_rq::
last_accelerate	rcutree.h	/^	unsigned long last_accelerate;$/;"	m	struct:rcu_dynticks
last_active	workqueue_internal.h	/^	unsigned long		last_active;	\/* L: last active timestamp *\/$/;"	m	struct:worker
last_decay	sched/sched.h	/^	u64 last_decay;$/;"	m	struct:cfs_rq
last_ftrace_enabled	trace/ftrace.c	/^static int last_ftrace_enabled;$/;"	v	file:
last_highmem_page	power/snapshot.c	/^static struct page *last_highmem_page;$/;"	v	typeref:struct:page	file:
last_highmem_page_copied	power/snapshot.c	/^static inline int last_highmem_page_copied(void) { return 1; }$/;"	f	file:
last_highmem_page_copied	power/snapshot.c	/^static inline int last_highmem_page_copied(void)$/;"	f	file:
last_jiffies_update	time/tick-sched.c	/^static ktime_t last_jiffies_update;$/;"	v	file:
last_load_update_tick	sched/sched.h	/^	unsigned long last_load_update_tick;$/;"	m	struct:rq
last_overrun	trace/ring_buffer.c	/^	unsigned long			last_overrun;$/;"	m	struct:ring_buffer_per_cpu	file:
last_pid	trace/trace_functions_graph.c	/^	pid_t		last_pid;$/;"	m	struct:fgraph_cpu_data	file:
last_resume_reason_show	power/wakeup_reason.c	/^static ssize_t last_resume_reason_show(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
last_sched_tick	sched/sched.h	/^	unsigned long last_sched_tick;$/;"	m	struct:rq
last_sleep_time_update	power/wakelock.c	/^static ktime_t last_sleep_time_update;$/;"	v	file:
last_stack_tracer_enabled	trace/trace_stack.c	/^static int last_stack_tracer_enabled;$/;"	v	file:
last_unloaded_module	module.c	/^static char last_unloaded_module[MODULE_NAME_LEN+1];$/;"	v	file:
lasterr	trace/trace_events_filter.c	/^	int lasterr;$/;"	m	struct:filter_parse_state	file:
lasterr_pos	trace/trace_events_filter.c	/^	int lasterr_pos;$/;"	m	struct:filter_parse_state	file:
lat_print_generic	trace/trace_output.c	/^lat_print_generic(struct trace_seq *s, struct trace_entry *entry, int cpu)$/;"	f	file:
lat_print_timestamp	trace/trace_output.c	/^lat_print_timestamp(struct trace_iterator *iter, u64 next_ts)$/;"	f	file:
late_resume	power/earlysuspend.c	/^static void late_resume(struct work_struct *work)$/;"	f	file:
latency_record	latencytop.c	/^static struct latency_record latency_record[MAXLR];$/;"	v	typeref:struct:latency_record	file:
latencytop_enabled	latencytop.c	/^int latencytop_enabled;$/;"	v
layout_and_allocate	module.c	/^static struct module *layout_and_allocate(struct load_info *info, int flags)$/;"	f	file:
layout_sections	module.c	/^static void layout_sections(struct module *mod, struct load_info *info)$/;"	f	file:
layout_symtab	module.c	/^static inline void layout_symtab(struct module *mod, struct load_info *info)$/;"	f	file:
layout_symtab	module.c	/^static void layout_symtab(struct module *mod, struct load_info *info)$/;"	f	file:
lb_env	sched/fair.c	/^struct lb_env {$/;"	s	file:
lc_next	lockdep_proc.c	/^static void *lc_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
lc_show	lockdep_proc.c	/^static int lc_show(struct seq_file *m, void *v)$/;"	f	file:
lc_start	lockdep_proc.c	/^static void *lc_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
lc_stop	lockdep_proc.c	/^static void lc_stop(struct seq_file *m, void *v)$/;"	f	file:
lcd_action_type	swap/energy/lcd/lcd_base.h	/^enum lcd_action_type {$/;"	g
lcd_dir	swap/energy/lcd/lcd_debugfs.c	/^static struct dentry *lcd_dir;$/;"	v	typeref:struct:dentry	file:
lcd_exit	swap/energy/lcd/lcd_base.c	/^void lcd_exit(void)$/;"	f
lcd_init	swap/energy/lcd/lcd_base.c	/^int lcd_init(void)$/;"	f
lcd_ops	swap/energy/lcd/lcd_base.c	/^get_ops_t lcd_ops[] = DEFINITION_LCD_ARRAY;$/;"	v
lcd_ops	swap/energy/lcd/lcd_base.h	/^struct lcd_ops {$/;"	s
lcd_ops_cnt	swap/energy/lcd/lcd_base.c	/^enum { lcd_ops_cnt = sizeof(lcd_ops) \/ sizeof(get_ops_t) };$/;"	e	enum:__anon45	file:
lcd_parameter_type	swap/energy/lcd/lcd_base.h	/^enum lcd_parameter_type {$/;"	g
lcd_priv_data	swap/energy/lcd/lcd_base.c	/^struct lcd_priv_data {$/;"	s	file:
lcd_set_energy	swap/energy/lcd/lcd_base.c	/^int lcd_set_energy(void)$/;"	f
lcd_unset_energy	swap/energy/lcd/lcd_base.c	/^void lcd_unset_energy(void)$/;"	f
leaf_cfs_rq_list	sched/sched.h	/^	struct list_head leaf_cfs_rq_list;$/;"	m	struct:cfs_rq	typeref:struct:cfs_rq::list_head
leaf_cfs_rq_list	sched/sched.h	/^	struct list_head leaf_cfs_rq_list;$/;"	m	struct:rq	typeref:struct:rq::list_head
leaf_rt_rq_list	sched/sched.h	/^	struct list_head leaf_rt_rq_list;$/;"	m	struct:rq	typeref:struct:rq::list_head
leaf_rt_rq_list	sched/sched.h	/^	struct list_head leaf_rt_rq_list;$/;"	m	struct:rt_rq	typeref:struct:rt_rq::list_head
leaps_between	time/timeconv.c	/^static long leaps_between(long y1, long y2)$/;"	f	file:
left	trace/trace.h	/^	unsigned short		left;$/;"	m	struct:filter_pred
legacy_queue	signal.c	/^static inline int legacy_queue(struct sigpending *signals, int sig)$/;"	f	file:
len	events/core.c	/^		u64				len;$/;"	m	struct:perf_mmap_event::__anon8	file:
len	module.c	/^	unsigned long len;$/;"	m	struct:load_info	file:
len	printk.c	/^	size_t len;			\/* length == 0 means unused buffer *\/$/;"	m	struct:cont	file:
len	printk.c	/^	size_t len;$/;"	m	struct:cont	file:
len	printk.c	/^	u16 len;		\/* length of entire record *\/$/;"	m	struct:log	file:
len	seccomp.c	/^	unsigned short len;  \/* Instruction count *\/$/;"	m	struct:seccomp_filter	file:
len	swap/ks_features/file_ops.c	/^	s64 len;$/;"	m	struct:lock_arg	file:
len	swap/ks_features/ksf_msg.c	/^	u64 len;$/;"	m	struct:lock_arg	file:
len	swap/ksyms/ksyms.c	/^	size_t len;$/;"	m	struct:symbol_data	file:
len	swap/parser/swap_msg_parser.c	/^	u32 len;                            \/**< Message length. *\/$/;"	m	struct:basic_msg_fmt	file:
len	swap/us_manager/helper.c	/^	size_t len;$/;"	m	struct:unmap_data	file:
len	swap/writer/swap_msg.c	/^	u32 len;$/;"	m	struct:swap_msg	file:
len	trace/trace.h	/^	int			len;$/;"	m	struct:regex
length	cgroup.c	/^	int length;$/;"	m	struct:cgroup_pidlist	file:
level	printk.c	/^	u8 level:3;		\/* syslog level *\/$/;"	m	struct:log	file:
level	printk.c	/^	u8 level;			\/* log level of first message *\/$/;"	m	struct:cont	file:
level	printk.c	/^	u8 level;$/;"	m	struct:cont	file:
level	rcutree.h	/^	struct rcu_node *level[RCU_NUM_LVLS];	\/* Hierarchy levels. *\/$/;"	m	struct:rcu_state	typeref:struct:rcu_state::rcu_node
level	rcutree.h	/^	u8	level;		\/* root is at level 0. *\/$/;"	m	struct:rcu_node
levelcnt	rcutree.h	/^	u32 levelcnt[MAX_RCU_LVLS + 1];		\/* # nodes in each level. *\/$/;"	m	struct:rcu_state
levelspread	rcutree.h	/^	u8 levelspread[RCU_NUM_LVLS];		\/* kids\/node in each level. *\/$/;"	m	struct:rcu_state
lg_global_lock	lglock.c	/^EXPORT_SYMBOL(lg_global_lock);$/;"	v
lg_global_lock	lglock.c	/^void lg_global_lock(struct lglock *lg)$/;"	f
lg_global_unlock	lglock.c	/^EXPORT_SYMBOL(lg_global_unlock);$/;"	v
lg_global_unlock	lglock.c	/^void lg_global_unlock(struct lglock *lg)$/;"	f
lg_local_lock	lglock.c	/^EXPORT_SYMBOL(lg_local_lock);$/;"	v
lg_local_lock	lglock.c	/^void lg_local_lock(struct lglock *lg)$/;"	f
lg_local_lock_cpu	lglock.c	/^EXPORT_SYMBOL(lg_local_lock_cpu);$/;"	v
lg_local_lock_cpu	lglock.c	/^void lg_local_lock_cpu(struct lglock *lg, int cpu)$/;"	f
lg_local_unlock	lglock.c	/^EXPORT_SYMBOL(lg_local_unlock);$/;"	v
lg_local_unlock	lglock.c	/^void lg_local_unlock(struct lglock *lg)$/;"	f
lg_local_unlock_cpu	lglock.c	/^EXPORT_SYMBOL(lg_local_unlock_cpu);$/;"	v
lg_local_unlock_cpu	lglock.c	/^void lg_local_unlock_cpu(struct lglock *lg, int cpu)$/;"	f
lg_lock_init	lglock.c	/^EXPORT_SYMBOL(lg_lock_init);$/;"	v
lg_lock_init	lglock.c	/^void lg_lock_init(struct lglock *lg, char *name)$/;"	f
lib	swap/parser/msg_parser.h	/^	struct lib_inst_data **lib;         \/**< Pointer to the libs array. *\/$/;"	m	struct:app_inst_data	typeref:struct:app_inst_data::lib_inst_data
lib_dentry	swap/webprobe/webprobe_prof.c	/^	struct dentry *lib_dentry;$/;"	m	struct:web_prof_data	typeref:struct:web_prof_data::dentry	file:
lib_inst_data	swap/parser/msg_parser.h	/^struct lib_inst_data {$/;"	s
lib_obj	swap/parser/usm_msg.c	/^struct lib_obj {$/;"	s	file:
lib_path	swap/parser/usm_msg.c	/^	char lib_path[0];$/;"	m	struct:lib_obj	file:
libappcore_dentry	swap/nsp/nsp.c	/^static struct dentry *libappcore_dentry;$/;"	v	typeref:struct:dentry	file:
libappcore_path	swap/nsp/nsp.c	/^static const char *libappcore_path;$/;"	v	file:
libftrace-y	trace/Makefile	/^libftrace-y := ftrace.o$/;"	m
link	swap/buffer/Makefile	/^    link = arm$/;"	m
link	swap/buffer/Makefile	/^    link = x86$/;"	m
link	swap/driver/Makefile	/^    link = arm$/;"	m
link	swap/driver/Makefile	/^    link = x86$/;"	m
link	swap/energy/Makefile	/^    link = arm$/;"	m
link	swap/energy/Makefile	/^    link = x86$/;"	m
link	swap/fbiprobe/Makefile	/^    link = arm$/;"	m
link	swap/fbiprobe/Makefile	/^    link = x86$/;"	m
link	swap/kprobe/Makefile	/^    link = arm$/;"	m
link	swap/kprobe/Makefile	/^    link = x86$/;"	m
link	swap/ks_features/Makefile	/^    link = arm$/;"	m
link	swap/ks_features/Makefile	/^    link = x86$/;"	m
link	swap/ksyms/Makefile	/^    link = arm$/;"	m
link	swap/ksyms/Makefile	/^    link = x86$/;"	m
link	swap/master/Makefile	/^    link = arm$/;"	m
link	swap/master/Makefile	/^    link = x86$/;"	m
link	swap/nsp/Makefile	/^    link = arm$/;"	m
link	swap/nsp/Makefile	/^    link = x86$/;"	m
link	swap/parser/Makefile	/^    link = arm$/;"	m
link	swap/parser/Makefile	/^    link = x86$/;"	m
link	swap/preload/Makefile	/^    link = arm$/;"	m
link	swap/preload/Makefile	/^    link = x86$/;"	m
link	swap/retprobe/Makefile	/^    link = arm$/;"	m
link	swap/retprobe/Makefile	/^    link = x86$/;"	m
link	swap/sampler/Makefile	/^    link = arm$/;"	m
link	swap/sampler/Makefile	/^    link = x86$/;"	m
link	swap/task_data/Makefile	/^    link = arm$/;"	m
link	swap/task_data/Makefile	/^    link = x86$/;"	m
link	swap/uprobe/Makefile	/^    link = arm$/;"	m
link	swap/uprobe/Makefile	/^    link = x86$/;"	m
link	swap/us_manager/Makefile	/^    link = arm$/;"	m
link	swap/us_manager/Makefile	/^    link = x86$/;"	m
link	swap/webprobe/Makefile	/^    link = arm$/;"	m
link	swap/webprobe/Makefile	/^    link = x86$/;"	m
link	swap/writer/Makefile	/^    link = arm$/;"	m
link	swap/writer/Makefile	/^    link = x86$/;"	m
link	swap/wsp/Makefile	/^    link = arm$/;"	m
link	swap/wsp/Makefile	/^    link = x86$/;"	m
link	trace/trace.h	/^	struct list_head	link;$/;"	m	struct:ftrace_event_field	typeref:struct:ftrace_event_field::list_head
link_css_set	cgroup.c	/^static void link_css_set(struct list_head *tmp_cg_links,$/;"	f	file:
link_pwq	workqueue.c	/^static void link_pwq(struct pool_workqueue *pwq)$/;"	f	file:
link_target	gcov/fs.c	/^static char *link_target(const char *dir, const char *path, const char *ext)$/;"	f	file:
linked_page	power/snapshot.c	/^struct linked_page {$/;"	s	file:
linker_path_file_ops	swap/preload/preload_debugfs.c	/^static const struct file_operations linker_path_file_ops = {$/;"	v	typeref:struct:file_operations	file:
linker_path_write	swap/preload/preload_debugfs.c	/^static ssize_t linker_path_write(struct file *file, const char __user *buf,$/;"	f	file:
links	cgroup.c	/^	struct list_head links;$/;"	m	struct:cgroup_pidlist	typeref:struct:cgroup_pidlist::list_head	file:
links	gcov/fs.c	/^	struct dentry **links;$/;"	m	struct:gcov_node	typeref:struct:gcov_node::dentry	file:
linux_regs	debug/debug_core.h	/^	struct pt_regs		*linux_regs;$/;"	m	struct:kgdb_state	typeref:struct:kgdb_state::pt_regs
list	acct.c	/^	struct list_head	list;$/;"	m	struct:bsd_acct_struct	typeref:struct:bsd_acct_struct::list_head	file:
list	audit.c	/^	struct list_head     list;$/;"	m	struct:audit_buffer	typeref:struct:audit_buffer::list_head	file:
list	audit.h	/^	struct list_head	list;		\/* audit_context->names_list *\/$/;"	m	struct:audit_names	typeref:struct:audit_names::list_head
list	audit.h	/^	struct list_head	list;$/;"	m	struct:audit_entry	typeref:struct:audit_entry::list_head
list	audit_tree.c	/^		struct list_head list;$/;"	m	struct:audit_chunk::node	typeref:struct:audit_chunk::node::list_head	file:
list	audit_tree.c	/^	struct list_head list;$/;"	m	struct:audit_tree	typeref:struct:audit_tree::list_head	file:
list	cgroup.c	/^	pid_t *list;$/;"	m	struct:cgroup_pidlist	file:
list	cgroup.c	/^	struct list_head list;$/;"	m	struct:cgroup_event	typeref:struct:cgroup_event::list_head	file:
list	futex.c	/^	struct list_head list;$/;"	m	struct:futex_pi_state	typeref:struct:futex_pi_state::list_head	file:
list	futex.c	/^	struct plist_node list;$/;"	m	struct:futex_q	typeref:struct:futex_q::plist_node	file:
list	gcov/fs.c	/^	struct list_head list;$/;"	m	struct:gcov_node	typeref:struct:gcov_node::list_head	file:
list	kprobes.c	/^	struct list_head list;$/;"	m	struct:kprobe_insn_page	typeref:struct:kprobe_insn_page::list_head	file:
list	kthread.c	/^	struct list_head list;$/;"	m	struct:kthread_create_info	typeref:struct:kthread_create_info::list_head	file:
list	params.c	/^	struct list_head list;$/;"	m	struct:kmalloced_param	typeref:struct:kmalloced_param::list_head	file:
list	pid_namespace.c	/^	struct list_head list;$/;"	m	struct:pid_cache	typeref:struct:pid_cache::list_head	file:
list	power/snapshot.c	/^	struct list_head list;$/;"	m	struct:nosave_region	typeref:struct:nosave_region::list_head	file:
list	sched/sched.h	/^	struct list_head list;$/;"	m	struct:task_group	typeref:struct:task_group::list_head
list	semaphore.c	/^	struct list_head list;$/;"	m	struct:semaphore_waiter	typeref:struct:semaphore_waiter::list_head	file:
list	smp.c	/^	struct list_head	list;$/;"	m	struct:call_single_queue	typeref:struct:call_single_queue::list_head	file:
list	swap/kprobe/swap_kprobes.h	/^	struct list_head				list;$/;"	m	struct:kprobe	typeref:struct:kprobe::list_head
list	swap/ksyms/no_ksyms.c	/^	struct list_head list;$/;"	m	struct:sys_map_item	typeref:struct:sys_map_item::list_head	file:
list	swap/master/swap_initializer.h	/^	struct list_head list;$/;"	m	struct:swap_init_struct	typeref:struct:swap_init_struct::list_head
list	swap/nsp/nsp.c	/^	struct list_head list;$/;"	m	struct:nsp_data	typeref:struct:nsp_data::list_head	file:
list	swap/nsp/nsp_tdata.c	/^	struct list_head list;$/;"	m	struct:priv_tdata	typeref:struct:priv_tdata::list_head	file:
list	swap/parser/us_inst.c	/^	struct list_head list;$/;"	m	struct:pfg_item	typeref:struct:pfg_item::list_head	file:
list	swap/preload/preload_threads.c	/^	struct list_head list;$/;"	m	struct:disabled_addr	typeref:struct:disabled_addr::list_head	file:
list	swap/preload/preload_threads.c	/^	struct list_head list;$/;"	m	struct:thread_slot	typeref:struct:thread_slot::list_head	file:
list	swap/us_manager/callbacks.c	/^	struct list_head list;$/;"	m	struct:cb_item	typeref:struct:cb_item::list_head	file:
list	swap/us_manager/img/img_file.h	/^	struct list_head list;		\/**< For img_proc *\/$/;"	m	struct:img_file	typeref:struct:img_file::list_head
list	swap/us_manager/img/img_ip.h	/^	struct list_head list;		\/**< For img_file *\/$/;"	m	struct:img_ip	typeref:struct:img_ip::list_head
list	swap/us_manager/pf/pf_group.c	/^	struct list_head list;$/;"	m	struct:pf_group	typeref:struct:pf_group::list_head	file:
list	swap/us_manager/pf/pf_group.c	/^	struct list_head list;$/;"	m	struct:pl_struct	typeref:struct:pl_struct::list_head	file:
list	swap/us_manager/sspt/ip.h	/^	struct list_head list;      \/**< For sspt_page *\/$/;"	m	struct:us_ip	typeref:struct:us_ip::list_head
list	swap/us_manager/sspt/sspt_feature.c	/^	struct list_head list;$/;"	m	struct:sspt_feature_data	typeref:struct:sspt_feature_data::list_head	file:
list	swap/us_manager/sspt/sspt_feature.c	/^	struct list_head list;$/;"	m	struct:sspt_feature_img	typeref:struct:sspt_feature_img::list_head	file:
list	swap/us_manager/sspt/sspt_file.h	/^	struct list_head list;		\/**< For sspt_proc *\/$/;"	m	struct:sspt_file	typeref:struct:sspt_file::list_head
list	swap/us_manager/sspt/sspt_filter.h	/^	struct list_head list;$/;"	m	struct:sspt_filter	typeref:struct:sspt_filter::list_head
list	swap/us_manager/sspt/sspt_proc.h	/^	struct list_head list;		\/**< For global process list *\/$/;"	m	struct:sspt_proc	typeref:struct:sspt_proc::list_head
list	swap/writer/event_filter.h	/^	struct list_head list;                  \/**< Filter list head. *\/$/;"	m	struct:ev_filter	typeref:struct:ev_filter::list_head
list	swap/wsp/wsp_res.h	/^	struct list_head list;$/;"	m	struct:wsp_res	typeref:struct:wsp_res::list_head
list	taskstats.c	/^	struct list_head list;$/;"	m	struct:listener	typeref:struct:listener::list_head	file:
list	taskstats.c	/^	struct list_head list;$/;"	m	struct:listener_list	typeref:struct:listener_list::list_head	file:
list	trace/ftrace.c	/^	struct list_head list;$/;"	m	struct:ftrace_pid	typeref:struct:ftrace_pid::list_head	file:
list	trace/ring_buffer.c	/^	struct list_head list;		\/* list of buffer pages *\/$/;"	m	struct:buffer_page	typeref:struct:buffer_page::list_head	file:
list	trace/trace.h	/^	struct list_head		list;$/;"	m	struct:ftrace_subsystem_dir	typeref:struct:ftrace_subsystem_dir::list_head
list	trace/trace.h	/^	struct list_head	list;$/;"	m	struct:event_subsystem	typeref:struct:event_subsystem::list_head
list	trace/trace.h	/^	struct list_head	list;$/;"	m	struct:trace_array	typeref:struct:trace_array::list_head
list	trace/trace_events.c	/^	struct list_head		list;$/;"	m	struct:ftrace_module_file_ops	typeref:struct:ftrace_module_file_ops::list_head	file:
list	trace/trace_events_filter.c	/^	struct list_head	list;$/;"	m	struct:filter_list	typeref:struct:filter_list::list_head	file:
list	trace/trace_events_filter.c	/^	struct list_head list;$/;"	m	struct:opstack_op	typeref:struct:opstack_op::list_head	file:
list	trace/trace_events_filter.c	/^	struct list_head list;$/;"	m	struct:postfix_elt	typeref:struct:postfix_elt::list_head	file:
list	trace/trace_kprobe.c	/^	struct list_head	list;$/;"	m	struct:trace_probe	typeref:struct:trace_probe::list_head	file:
list	trace/trace_printk.c	/^	struct list_head list;$/;"	m	struct:trace_bprintk_fmt	typeref:struct:trace_bprintk_fmt::list_head	file:
list	trace/trace_uprobe.c	/^	struct list_head		list;$/;"	m	struct:trace_uprobe	typeref:struct:trace_uprobe::list_head	file:
list	tracepoint.c	/^		struct list_head list;$/;"	m	union:tp_probes::__anon13	typeref:struct:tp_probes::__anon13::list_head	file:
list	workqueue.c	/^	struct list_head	list;		\/* PL: list of all workqueues *\/$/;"	m	struct:workqueue_struct	typeref:struct:workqueue_struct::list_head	file:
list	workqueue.c	/^	struct list_head	list;		\/* WQ: list of flushers *\/$/;"	m	struct:wq_flusher	typeref:struct:wq_flusher::list_head	file:
list_add_event	events/core.c	/^list_add_event(struct perf_event *event, struct perf_event_context *ctx)$/;"	f	file:
list_add_leaf_cfs_rq	sched/fair.c	/^static inline void list_add_leaf_cfs_rq(struct cfs_rq *cfs_rq)$/;"	f	file:
list_add_leaf_rt_rq	sched/rt.c	/^static inline void list_add_leaf_rt_rq(struct rt_rq *rt_rq)$/;"	f	file:
list_del_event	events/core.c	/^list_del_event(struct perf_event *event, struct perf_event_context *ctx)$/;"	f	file:
list_del_leaf_cfs_rq	sched/fair.c	/^static inline void list_del_leaf_cfs_rq(struct cfs_rq *cfs_rq)$/;"	f	file:
list_del_leaf_rt_rq	sched/rt.c	/^static inline void list_del_leaf_rt_rq(struct rt_rq *rt_rq)$/;"	f	file:
list_entries	lockdep.c	/^static struct lock_list list_entries[MAX_LOCKDEP_ENTRIES];$/;"	v	typeref:struct:lock_list	file:
list_entry	rtmutex_common.h	/^	struct plist_node	list_entry;$/;"	m	struct:rt_mutex_waiter	typeref:struct:rt_mutex_waiter::plist_node
list_first_entry_or_null	swap/kprobe/swap_kprobes_deps.h	50;"	d
list_last_entry	swap/preload/preload_threads.c	177;"	d	file:
listener	taskstats.c	/^struct listener {$/;"	s	file:
listener_list	taskstats.c	/^struct listener_list {$/;"	s	file:
load	sched/sched.h	/^	struct load_weight load;$/;"	m	struct:cfs_rq	typeref:struct:cfs_rq::load_weight
load	sched/sched.h	/^	struct load_weight load;$/;"	m	struct:rq	typeref:struct:rq::load_weight
load_avg	sched/sched.h	/^	atomic64_t load_avg;$/;"	m	struct:task_group
load_balance	sched/fair.c	/^static int load_balance(int this_cpu, struct rq *this_rq,$/;"	f	file:
load_header	power/snapshot.c	/^load_header(struct swsusp_info *info)$/;"	f	file:
load_image	power/swap.c	/^static int load_image(struct swap_map_handle *handle,$/;"	f	file:
load_image_lzo	power/swap.c	/^static int load_image_lzo(struct swap_map_handle *handle,$/;"	f	file:
load_info	module.c	/^struct load_info {$/;"	s	file:
load_module	module.c	/^static int load_module(struct load_info *info, const char __user *uargs,$/;"	f	file:
load_module_signing_keys	modsign_pubkey.c	/^late_initcall(load_module_signing_keys);$/;"	v
load_module_signing_keys	modsign_pubkey.c	/^static __init int load_module_signing_keys(void)$/;"	f	file:
load_weight	sched/sched.h	/^	atomic_t load_weight;$/;"	m	struct:task_group
loaded	swap/us_manager/sspt/sspt_file.h	/^	unsigned loaded:1;			\/**< Flag of loading *\/$/;"	m	struct:sspt_file
loaded_info	gcov/fs.c	/^	struct gcov_info **loaded_info;$/;"	m	struct:gcov_node	typeref:struct:gcov_node::gcov_info	file:
loader_base	swap/preload/preload_pd.c	/^	unsigned long loader_base;$/;"	m	struct:process_data	file:
loader_info	swap/preload/preload_debugfs.c	/^struct loader_info {$/;"	s	file:
loader_path_file_ops	swap/preload/preload_debugfs.c	/^static const struct file_operations loader_path_file_ops = {$/;"	v	typeref:struct:file_operations	file:
loader_path_write	swap/preload/preload_debugfs.c	/^static ssize_t loader_path_write(struct file *file, const char __user *buf,$/;"	f	file:
loads	sys.c	/^	u32 loads[3];$/;"	m	struct:compat_sysinfo	file:
local_bh_disable	softirq.c	/^EXPORT_SYMBOL(local_bh_disable);$/;"	v
local_bh_disable	softirq.c	/^void local_bh_disable(void)$/;"	f
local_bh_enable	softirq.c	/^EXPORT_SYMBOL(local_bh_enable);$/;"	v
local_bh_enable	softirq.c	/^void local_bh_enable(void)$/;"	f
local_bh_enable_ip	softirq.c	/^EXPORT_SYMBOL(local_bh_enable_ip);$/;"	v
local_bh_enable_ip	softirq.c	/^void local_bh_enable_ip(unsigned long ip)$/;"	f
local_clock	sched/clock.c	/^EXPORT_SYMBOL_GPL(local_clock);$/;"	v
local_clock	sched/clock.c	/^u64 local_clock(void)$/;"	f
locate_module_kobject	params.c	/^static struct module_kobject * __init locate_module_kobject(const char *name)$/;"	f	file:
lock	cgroup_freezer.c	/^	spinlock_t			lock;$/;"	m	struct:freezer	file:
lock	cpu.c	/^	struct mutex lock; \/* Synchronizes accesses to refcount, *\/$/;"	m	struct:__anon70	typeref:struct:__anon70::mutex	file:
lock	cpuset.c	/^	spinlock_t lock;	\/* guards read or write of above *\/$/;"	m	struct:fmeter	file:
lock	dma.c	/^	int  lock;$/;"	m	struct:dma_chan	file:
lock	futex.c	/^	spinlock_t lock;$/;"	m	struct:futex_hash_bucket	file:
lock	printk.c	/^	struct mutex lock;$/;"	m	struct:devkmsg_user	typeref:struct:devkmsg_user::mutex	file:
lock	rcutree.h	/^	raw_spinlock_t lock;	\/* Root rcu_node's lock protects some *\/$/;"	m	struct:rcu_node
lock	rtmutex_common.h	/^	struct rt_mutex		*lock;$/;"	m	struct:rt_mutex_waiter	typeref:struct:rt_mutex_waiter::rt_mutex
lock	sched/auto_group.h	/^	struct rw_semaphore	lock;$/;"	m	struct:autogroup	typeref:struct:autogroup::rw_semaphore
lock	sched/sched.h	/^	raw_spinlock_t lock;$/;"	m	struct:cfs_bandwidth
lock	sched/sched.h	/^	raw_spinlock_t lock;$/;"	m	struct:rq
lock	smp.c	/^	raw_spinlock_t		lock;$/;"	m	struct:call_single_queue	file:
lock	stop_machine.c	/^	spinlock_t		lock;$/;"	m	struct:cpu_stopper	file:
lock	swap/energy/energy.c	/^	spinlock_t lock; \/* for concurrent access *\/$/;"	m	struct:cpus_time	file:
lock	swap/kprobe/swap_slots.c	/^	spinlock_t    lock;$/;"	m	struct:chunk	file:
lock	swap/us_manager/sspt/sspt_page.h	/^	spinlock_t lock;			\/**< Lock page *\/$/;"	m	struct:sspt_page
lock	swap/wsp/wsp_res.c	/^	spinlock_t lock;$/;"	m	struct:wsp_tdata	file:
lock	time/alarmtimer.c	/^	spinlock_t		lock;$/;"	m	struct:alarm_base	file:
lock	time/time_history.c	/^	spinlock_t lock;$/;"	m	struct:time_history	file:
lock	timer.c	/^	spinlock_t lock;$/;"	m	struct:tvec_base	file:
lock	trace/ring_buffer.c	/^	arch_spinlock_t			lock;$/;"	m	struct:ring_buffer_per_cpu	file:
lock	trace/trace_clock.c	/^	arch_spinlock_t lock;$/;"	m	struct:__anon82	file:
lock	workqueue.c	/^	spinlock_t		lock;		\/* the pool lock *\/$/;"	m	struct:worker_pool	file:
lock_accessed	lockdep.c	/^static inline unsigned long lock_accessed(struct lock_list *lock)$/;"	f	file:
lock_acquire	lockdep.c	/^EXPORT_SYMBOL_GPL(lock_acquire);$/;"	v
lock_acquire	lockdep.c	/^void lock_acquire(struct lockdep_map *lock, unsigned int subclass,$/;"	f
lock_acquired	lockdep.c	/^EXPORT_SYMBOL_GPL(lock_acquired);$/;"	v
lock_acquired	lockdep.c	/^void lock_acquired(struct lockdep_map *lock, unsigned long ip)$/;"	f
lock_arg	swap/ks_features/file_ops.c	/^struct lock_arg {$/;"	s	file:
lock_arg	swap/ks_features/ksf_msg.c	/^struct lock_arg {$/;"	s	file:
lock_arg_init	swap/ks_features/file_ops.c	/^static int lock_arg_init(int id, struct pt_regs *regs, struct lock_arg *arg)$/;"	f	file:
lock_chain_get_class	lockdep.c	/^struct lock_class *lock_chain_get_class(struct lock_chain *chain, int i)$/;"	f
lock_chains	lockdep.c	/^struct lock_chain lock_chains[MAX_LOCKDEP_CHAINS];$/;"	v	typeref:struct:lock_chain
lock_classes	lockdep.c	/^static struct lock_class lock_classes[MAX_LOCKDEP_KEYS];$/;"	v	typeref:struct:lock_class	file:
lock_contended	lockdep.c	/^EXPORT_SYMBOL_GPL(lock_contended);$/;"	v
lock_contended	lockdep.c	/^void lock_contended(struct lockdep_map *lock, unsigned long ip)$/;"	f
lock_cq	lockdep.c	/^static struct circular_queue lock_cq;$/;"	v	typeref:struct:circular_queue	file:
lock_entry_handler	swap/ks_features/file_ops.c	/^static int lock_entry_handler(struct kretprobe_instance *ri,$/;"	f	file:
lock_flag	lockdep.c	/^static inline unsigned long lock_flag(enum lock_usage_bit bit)$/;"	f	file:
lock_hrtimer_base	hrtimer.c	/^lock_hrtimer_base(const struct hrtimer *timer, unsigned long *flags)$/;"	f	file:
lock_hrtimer_base	hrtimer.c	/^struct hrtimer_clock_base *lock_hrtimer_base(const struct hrtimer *timer,$/;"	f	file:
lock_init_error	lockdep.c	/^static const char *lock_init_error;$/;"	v	file:
lock_is_held	lockdep.c	/^EXPORT_SYMBOL_GPL(lock_is_held);$/;"	v
lock_is_held	lockdep.c	/^int lock_is_held(struct lockdep_map *lock)$/;"	f
lock_key	trace/ring_buffer.c	/^	struct lock_class_key		lock_key;$/;"	m	struct:ring_buffer_per_cpu	typeref:struct:ring_buffer_per_cpu::lock_class_key	file:
lock_point	lockdep.c	/^static int lock_point(unsigned long points[], unsigned long ip)$/;"	f	file:
lock_ptr	futex.c	/^	spinlock_t *lock_ptr;$/;"	m	struct:futex_q	file:
lock_release	lockdep.c	/^EXPORT_SYMBOL_GPL(lock_release);$/;"	v
lock_release	lockdep.c	/^void lock_release(struct lockdep_map *lock, int nested,$/;"	f
lock_release_holdtime	lockdep.c	/^static inline void lock_release_holdtime(struct held_lock *hlock)$/;"	f	file:
lock_release_holdtime	lockdep.c	/^static void lock_release_holdtime(struct held_lock *hlock)$/;"	f	file:
lock_release_nested	lockdep.c	/^static int lock_release_nested(struct task_struct *curr,$/;"	f	file:
lock_release_non_nested	lockdep.c	/^lock_release_non_nested(struct task_struct *curr,$/;"	f	file:
lock_ret_handler	swap/ks_features/file_ops.c	/^static int lock_ret_handler(struct kretprobe_instance *ri,$/;"	f	file:
lock_set_class	lockdep.c	/^EXPORT_SYMBOL_GPL(lock_set_class);$/;"	v
lock_set_class	lockdep.c	/^void lock_set_class(struct lockdep_map *lock, const char *name,$/;"	f
lock_stat	lockdep.c	/^int lock_stat = 1;$/;"	v
lock_stat	lockdep.c	67;"	d	file:
lock_stat_cmp	lockdep_proc.c	/^static int lock_stat_cmp(const void *l, const void *r)$/;"	f	file:
lock_stat_data	lockdep_proc.c	/^struct lock_stat_data {$/;"	s	file:
lock_stat_open	lockdep_proc.c	/^static int lock_stat_open(struct inode *inode, struct file *file)$/;"	f	file:
lock_stat_release	lockdep_proc.c	/^static int lock_stat_release(struct inode *inode, struct file *file)$/;"	f	file:
lock_stat_seq	lockdep_proc.c	/^struct lock_stat_seq {$/;"	s	file:
lock_stat_write	lockdep_proc.c	/^static ssize_t lock_stat_write(struct file *file, const char __user *buf,$/;"	f	file:
lock_stats	lockdep.c	/^struct lock_class_stats lock_stats(struct lock_class *class)$/;"	f
lock_time_add	lockdep.c	/^static inline void lock_time_add(struct lock_time *src, struct lock_time *dst)$/;"	f	file:
lock_time_inc	lockdep.c	/^static void lock_time_inc(struct lock_time *lt, u64 time)$/;"	f	file:
lock_timer	posix-timers.c	142;"	d	file:
lock_tms	swap/energy/lcd/lcd_base.c	/^	spinlock_t lock_tms;$/;"	m	struct:lcd_priv_data	file:
lock_usage_bit	lockdep_internals.h	/^enum lock_usage_bit {$/;"	g
lockdep_chains_open	lockdep_proc.c	/^static int lockdep_chains_open(struct inode *inode, struct file *file)$/;"	f	file:
lockdep_chains_ops	lockdep_proc.c	/^static const struct seq_operations lockdep_chains_ops = {$/;"	v	typeref:struct:seq_operations	file:
lockdep_clear_current_reclaim_state	lockdep.c	/^void lockdep_clear_current_reclaim_state(void)$/;"	f
lockdep_count_backward_deps	lockdep.c	/^unsigned long lockdep_count_backward_deps(struct lock_class *class)$/;"	f
lockdep_count_backward_deps	lockdep_internals.h	/^lockdep_count_backward_deps(struct lock_class *class)$/;"	f
lockdep_count_forward_deps	lockdep.c	/^unsigned long lockdep_count_forward_deps(struct lock_class *class)$/;"	f
lockdep_count_forward_deps	lockdep_internals.h	/^lockdep_count_forward_deps(struct lock_class *class)$/;"	f
lockdep_dependency_gen_id	lockdep.c	/^static unsigned int lockdep_dependency_gen_id;$/;"	v	file:
lockdep_free_key_range	lockdep.c	/^void lockdep_free_key_range(void *start, unsigned long size)$/;"	f
lockdep_info	lockdep.c	/^void __init lockdep_info(void)$/;"	f
lockdep_init	lockdep.c	/^void lockdep_init(void)$/;"	f
lockdep_init_error	lockdep.c	/^static int lockdep_init_error;$/;"	v	file:
lockdep_init_map	lockdep.c	/^EXPORT_SYMBOL_GPL(lockdep_init_map);$/;"	v
lockdep_init_map	lockdep.c	/^void lockdep_init_map(struct lockdep_map *lock, const char *name,$/;"	f
lockdep_init_trace	lockdep.c	/^static struct stack_trace lockdep_init_trace = {$/;"	v	typeref:struct:stack_trace	file:
lockdep_init_trace_data	lockdep.c	/^static unsigned long lockdep_init_trace_data[20];$/;"	v	file:
lockdep_initialized	lockdep.c	/^static int lockdep_initialized;$/;"	v	file:
lockdep_lock	lockdep.c	/^static arch_spinlock_t lockdep_lock = (arch_spinlock_t)__ARCH_SPIN_LOCK_UNLOCKED;$/;"	v	file:
lockdep_map	workqueue.c	/^	struct lockdep_map	lockdep_map;$/;"	m	struct:workqueue_struct	typeref:struct:workqueue_struct::lockdep_map	file:
lockdep_off	lockdep.c	/^EXPORT_SYMBOL(lockdep_off);$/;"	v
lockdep_off	lockdep.c	/^void lockdep_off(void)$/;"	f
lockdep_on	lockdep.c	/^EXPORT_SYMBOL(lockdep_on);$/;"	v
lockdep_on	lockdep.c	/^void lockdep_on(void)$/;"	f
lockdep_open	lockdep_proc.c	/^static int lockdep_open(struct inode *inode, struct file *file)$/;"	f	file:
lockdep_ops	lockdep_proc.c	/^static const struct seq_operations lockdep_ops = {$/;"	v	typeref:struct:seq_operations	file:
lockdep_print_held_locks	lockdep.c	/^static void lockdep_print_held_locks(struct task_struct *curr)$/;"	f	file:
lockdep_proc_init	lockdep_proc.c	/^__initcall(lockdep_proc_init);$/;"	v
lockdep_proc_init	lockdep_proc.c	/^static int __init lockdep_proc_init(void)$/;"	f	file:
lockdep_rcu_suspicious	lockdep.c	/^EXPORT_SYMBOL_GPL(lockdep_rcu_suspicious);$/;"	v
lockdep_rcu_suspicious	lockdep.c	/^void lockdep_rcu_suspicious(const char *file, const int line, const char *s)$/;"	f
lockdep_reset	lockdep.c	/^void lockdep_reset(void)$/;"	f
lockdep_reset_lock	lockdep.c	/^void lockdep_reset_lock(struct lockdep_map *lock)$/;"	f
lockdep_set_current_reclaim_state	lockdep.c	/^void lockdep_set_current_reclaim_state(gfp_t gfp_mask)$/;"	f
lockdep_stats	lockdep_internals.h	/^struct lockdep_stats {$/;"	s
lockdep_stats_debug_show	lockdep_proc.c	/^static void lockdep_stats_debug_show(struct seq_file *m)$/;"	f	file:
lockdep_stats_open	lockdep_proc.c	/^static int lockdep_stats_open(struct inode *inode, struct file *file)$/;"	f	file:
lockdep_stats_show	lockdep_proc.c	/^static int lockdep_stats_show(struct seq_file *m, void *v)$/;"	f	file:
lockdep_sys_exit	lockdep.c	/^void lockdep_sys_exit(void)$/;"	f
lockdep_tasklist_lock_is_held	fork.c	/^EXPORT_SYMBOL_GPL(lockdep_tasklist_lock_is_held);$/;"	v
lockdep_tasklist_lock_is_held	fork.c	/^int lockdep_tasklist_lock_is_held(void)$/;"	f
lockdep_trace_alloc	lockdep.c	/^void lockdep_trace_alloc(gfp_t gfp_mask)$/;"	f
locked	mutex.c	/^	int		  locked;	\/* 1 if lock acquired *\/$/;"	m	struct:mspin_node	file:
lockstat_clock	lockdep.c	/^static inline u64 lockstat_clock(void)$/;"	f	file:
lockstat_ops	lockdep_proc.c	/^static const struct seq_operations lockstat_ops = {$/;"	v	typeref:struct:seq_operations	file:
lockup_detector_init	watchdog.c	/^void __init lockup_detector_init(void)$/;"	f
log	printk.c	/^struct log {$/;"	s	file:
log_buf	printk.c	/^static char *log_buf = __log_buf;$/;"	v	file:
log_buf_kexec_setup	printk.c	/^void log_buf_kexec_setup(void)$/;"	f
log_buf_len	printk.c	/^static u32 log_buf_len = __LOG_BUF_LEN;$/;"	v	file:
log_buf_len_setup	printk.c	/^static int __init log_buf_len_setup(char *str)$/;"	f	file:
log_dict	printk.c	/^static char *log_dict(const struct log *msg)$/;"	f	file:
log_first_idx	printk.c	/^static u32 log_first_idx;$/;"	v	file:
log_first_seq	printk.c	/^static u64 log_first_seq;$/;"	v	file:
log_flags	printk.c	/^enum log_flags {$/;"	g	file:
log_from_idx	printk.c	/^static struct log *log_from_idx(u32 idx) { return NULL; }$/;"	f	file:
log_from_idx	printk.c	/^static struct log *log_from_idx(u32 idx)$/;"	f	file:
log_next	printk.c	/^static u32 log_next(u32 idx) { return 0; }$/;"	f	file:
log_next	printk.c	/^static u32 log_next(u32 idx)$/;"	f	file:
log_next_idx	printk.c	/^static u32 log_next_idx;$/;"	v	file:
log_next_seq	printk.c	/^static u64 log_next_seq;$/;"	v	file:
log_store	printk.c	/^static void log_store(int facility, int level,$/;"	f	file:
log_suspend_abort_reason	power/wakeup_reason.c	/^void log_suspend_abort_reason(const char *fmt, ...)$/;"	f
log_text	printk.c	/^static char *log_text(const struct log *msg)$/;"	f	file:
log_text_hook	printk.c	/^static void (*log_text_hook)(char *text, size_t size);$/;"	v	file:
log_wait	printk.c	/^DECLARE_WAIT_QUEUE_HEAD(log_wait);$/;"	v
log_wakeup_reason	power/wakeup_reason.c	/^void log_wakeup_reason(int irq)$/;"	f
logarithmic_accumulation	time/timekeeping.c	/^static cycle_t logarithmic_accumulation(struct timekeeper *tk, cycle_t offset,$/;"	f	file:
logbuf_cpu	printk.c	/^static volatile unsigned int logbuf_cpu = UINT_MAX;$/;"	v	file:
longjmp_break_uhandler	swap/uprobe/arch/arm/swap-asm/swap_uprobes.h	/^static inline int longjmp_break_uhandler(struct kprobe *p, struct pt_regs *regs)$/;"	f
longjmp_break_uhandler	swap/uprobe/arch/x86/swap-asm/swap_uprobes.h	/^static inline int longjmp_break_uhandler(struct kprobe *p, struct pt_regs *regs)$/;"	f
look_up_lock_class	lockdep.c	/^look_up_lock_class(struct lockdep_map *lock, unsigned int subclass)$/;"	f	file:
lookup_chain_cache	lockdep.c	/^static inline int lookup_chain_cache(struct task_struct *curr,$/;"	f	file:
lookup_exec_domain	exec_domain.c	/^lookup_exec_domain(unsigned int personality)$/;"	f	file:
lookup_format	trace/trace_printk.c	/^static inline struct trace_bprintk_fmt *lookup_format(const char *fmt)$/;"	f	file:
lookup_module_symbol_attrs	module.c	/^int lookup_module_symbol_attrs(unsigned long addr, unsigned long *size,$/;"	f
lookup_module_symbol_name	module.c	/^int lookup_module_symbol_name(unsigned long addr, char *symname)$/;"	f
lookup_pi_state	futex.c	/^lookup_pi_state(u32 uval, struct futex_hash_bucket *hb,$/;"	f	file:
lookup_resource	resource.c	/^struct resource *lookup_resource(struct resource *root, resource_size_t start)$/;"	f
lookup_symbol	module.c	/^static const struct kernel_symbol *lookup_symbol(const char *name,$/;"	f	file:
lookup_symbol_attrs	kallsyms.c	/^int lookup_symbol_attrs(unsigned long addr, unsigned long *size,$/;"	f
lookup_symbol_name	kallsyms.c	/^int lookup_symbol_name(unsigned long addr, char *symname)$/;"	f
lookup_wake_lock_name	power/userwakelock.c	/^static struct user_wake_lock *lookup_wake_lock_name($/;"	f	file:
loop	sched/fair.c	/^	unsigned int		loop;$/;"	m	struct:lb_env	file:
loop_break	sched/fair.c	/^	unsigned int		loop_break;$/;"	m	struct:lb_env	file:
loop_max	sched/fair.c	/^	unsigned int		loop_max;$/;"	m	struct:lb_env	file:
loops_per_msec	printk.c	/^static unsigned long long loops_per_msec;	\/* based on boot_delay *\/$/;"	v	file:
lost	events/internal.h	/^	local_t				lost;		\/* nr records lost   *\/$/;"	m	struct:ring_buffer
lost_events	trace/ring_buffer.c	/^	unsigned long			lost_events;$/;"	m	struct:ring_buffer_per_cpu	file:
low_addr	swap/parser/usm_msg.c	/^	u64 low_addr;$/;"	m	struct:lib_obj	file:
low_addr	swap/parser/usm_msg.c	/^	u64 low_addr;$/;"	m	struct:proc_info_bottom	file:
low_addr	swap/parser/usm_msg.c	/^	u64 low_addr;$/;"	m	struct:proc_map	file:
low_addr	swap/parser/usm_msg.c	/^	u64 low_addr;$/;"	m	struct:proc_unmap	file:
low_free_pages	power/swap.c	/^static inline unsigned long low_free_pages(void)$/;"	f	file:
low_mem_cb	swap/buffer/swap_buffer_module.c	/^static int (*low_mem_cb)(void);$/;"	v	file:
low_mem_cb	swap/buffer/swap_buffer_module.h	/^	int (*low_mem_cb)(void);$/;"	m	struct:buffer_init_t
low_shift	trace/trace_probe.c	/^	unsigned char		low_shift;$/;"	m	struct:bitfield_fetch_param	file:
lower_threshold	swap/buffer/swap_buffer_module.h	/^	unsigned char lower_threshold;$/;"	m	struct:buffer_init_t
lowest_in_progress	async.c	/^static async_cookie_t lowest_in_progress(struct async_domain *domain)$/;"	f	file:
lpad_dentry	swap/nsp/nsp.c	/^static struct dentry *lpad_dentry;$/;"	v	typeref:struct:dentry	file:
lpad_path	swap/nsp/nsp.c	/^static const char *lpad_path;$/;"	v	file:
ls_next	lockdep_proc.c	/^static void *ls_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
ls_show	lockdep_proc.c	/^static int ls_show(struct seq_file *m, void *v)$/;"	f	file:
ls_start	lockdep_proc.c	/^static void *ls_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
ls_stop	lockdep_proc.c	/^static void ls_stop(struct seq_file *m, void *v)$/;"	f	file:
lstats_fops	latencytop.c	/^static const struct file_operations lstats_fops = {$/;"	v	typeref:struct:file_operations	file:
lstats_open	latencytop.c	/^static int lstats_open(struct inode *inode, struct file *filp)$/;"	f	file:
lstats_show	latencytop.c	/^static int lstats_show(struct seq_file *m, void *v)$/;"	f	file:
lstats_write	latencytop.c	/^lstats_write(struct file *file, const char __user *buf, size_t count,$/;"	f	file:
lzo_compress_threadfn	power/swap.c	/^static int lzo_compress_threadfn(void *data)$/;"	f	file:
lzo_decompress_threadfn	power/swap.c	/^static int lzo_decompress_threadfn(void *data)$/;"	f	file:
m_buffer	swap/webprobe/web_msg.c	/^		void *m_buffer;$/;"	m	union:MStringImpl::__anon39	file:
m_copyData16	swap/webprobe/web_msg.c	/^		unsigned short *m_copyData16;$/;"	m	union:MStringImpl::__anon39	file:
m_data16	swap/webprobe/web_msg.c	/^		const unsigned short *m_data16;$/;"	m	union:MStringImpl::__anon38	file:
m_data8	swap/webprobe/web_msg.c	/^		const unsigned char *m_data8;$/;"	m	union:MStringImpl::__anon38	file:
m_hashAndFlags	swap/webprobe/web_msg.c	/^	unsigned m_hashAndFlags;$/;"	m	struct:MStringImpl	file:
m_length	swap/webprobe/web_msg.c	/^	unsigned m_length;$/;"	m	struct:MStringImpl	file:
m_lineNumber	swap/webprobe/web_msg.c	/^	unsigned m_lineNumber;$/;"	m	struct:MCallIdentifier	file:
m_name	swap/webprobe/web_msg.c	/^	struct MStringImpl *m_name;$/;"	m	struct:MCallIdentifier	typeref:struct:MCallIdentifier::MStringImpl	file:
m_next	module.c	/^static void *m_next(struct seq_file *m, void *p, loff_t *pos)$/;"	f	file:
m_next	user_namespace.c	/^static void *m_next(struct seq_file *seq, void *v, loff_t *pos)$/;"	f	file:
m_refCount	swap/webprobe/web_msg.c	/^	unsigned m_refCount;$/;"	m	struct:MStringImpl	file:
m_show	module.c	/^static int m_show(struct seq_file *m, void *p)$/;"	f	file:
m_start	module.c	/^static void *m_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
m_start	user_namespace.c	/^static void *m_start(struct seq_file *seq, loff_t *ppos, struct uid_gid_map *map)$/;"	f	file:
m_stop	module.c	/^static void m_stop(struct seq_file *m, void *p)$/;"	f	file:
m_stop	user_namespace.c	/^static void m_stop(struct seq_file *seq, void *v)$/;"	f	file:
m_substringBuffer	swap/webprobe/web_msg.c	/^		struct MStringImpl *m_substringBuffer;$/;"	m	union:MStringImpl::__anon39	typeref:struct:MStringImpl::__anon39::MStringImpl	file:
m_url	swap/webprobe/web_msg.c	/^	struct MStringImpl *m_url;$/;"	m	struct:MCallIdentifier	typeref:struct:MCallIdentifier::MStringImpl	file:
mach_panic_string	panic.c	/^char *mach_panic_string;$/;"	v
magic	swap/task_data/task_data.c	/^	unsigned long magic;$/;"	m	struct:task_data	file:
main_eh	swap/nsp/nsp.c	/^static int main_eh(struct uretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
main_extable_sort_needed	extable.c	/^u32 __initdata main_extable_sort_needed = 1;$/;"	v
main_h	swap/nsp/nsp.c	/^static int main_h(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
main_rh	swap/nsp/nsp.c	/^static int main_rh(struct uretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
main_wake_lock	power/wakelock.c	/^struct wake_lock main_wake_lock;$/;"	v	typeref:struct:wake_lock
major	audit.h	/^	int		    major;      \/* syscall number *\/$/;"	m	struct:audit_context
make_branch_tarmpoline	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^static int make_branch_tarmpoline(unsigned long addr, unsigned long insn,$/;"	f	file:
make_data_rloc	trace/trace_probe.h	72;"	d
make_kgid	user_namespace.c	/^EXPORT_SYMBOL(make_kgid);$/;"	v
make_kgid	user_namespace.c	/^kgid_t make_kgid(struct user_namespace *ns, gid_t gid)$/;"	f
make_kprojid	user_namespace.c	/^EXPORT_SYMBOL(make_kprojid);$/;"	v
make_kprojid	user_namespace.c	/^kprojid_t make_kprojid(struct user_namespace *ns, projid_t projid)$/;"	f
make_kuid	user_namespace.c	/^EXPORT_SYMBOL(make_kuid);$/;"	v
make_kuid	user_namespace.c	/^kuid_t make_kuid(struct user_namespace *ns, uid_t uid)$/;"	f
make_preload_path	swap/preload/preload_pd.c	/^static unsigned long make_preload_path(void)$/;"	f	file:
manage_workers	workqueue.c	/^static bool manage_workers(struct worker *worker)$/;"	f	file:
manager_arb	workqueue.c	/^	struct mutex		manager_arb;	\/* manager arbitration *\/$/;"	m	struct:worker_pool	typeref:struct:worker_pool::mutex	file:
manager_mutex	workqueue.c	/^	struct mutex		manager_mutex;	\/* manager exclusion *\/$/;"	m	struct:worker_pool	typeref:struct:worker_pool::mutex	file:
map	power/swap.c	/^	struct swap_map_page *map;$/;"	m	struct:swap_map_page_list	typeref:struct:swap_map_page_list::swap_map_page	file:
map	swap/ks_features/ks_map.h	/^struct map {$/;"	s
map_cmdline_to_pid	trace/trace.c	/^static unsigned map_cmdline_to_pid[SAVED_CMDLINES];$/;"	v	file:
map_id_down	user_namespace.c	/^static u32 map_id_down(struct uid_gid_map *map, u32 id)$/;"	f	file:
map_id_range_down	user_namespace.c	/^static u32 map_id_range_down(struct uid_gid_map *map, u32 id, u32 count)$/;"	f	file:
map_id_up	user_namespace.c	/^static u32 map_id_up(struct uid_gid_map *map, u32 id)$/;"	f	file:
map_info	events/uprobes.c	/^struct map_info {$/;"	s	file:
map_pid_to_cmdline	trace/trace.c	/^static unsigned map_pid_to_cmdline[PID_MAX_DEFAULT+1];$/;"	v	file:
map_write	user_namespace.c	/^static ssize_t map_write(struct file *file, const char __user *buf,$/;"	f	file:
mappings_overlap	user_namespace.c	/^static bool mappings_overlap(struct uid_gid_map *new_map, struct uid_gid_extent *extent)$/;"	f	file:
maps	power/swap.c	/^	struct swap_map_page_list *maps;$/;"	m	struct:swap_map_handle	typeref:struct:swap_map_handle::swap_map_page_list	file:
mark	audit_tree.c	/^	struct fsnotify_mark mark;$/;"	m	struct:audit_chunk	typeref:struct:audit_chunk::fsnotify_mark	file:
mark	audit_watch.c	/^	struct fsnotify_mark mark; \/* fsnotify mark on the inode *\/$/;"	m	struct:audit_parent	typeref:struct:audit_parent::fsnotify_mark	file:
mark_held_locks	lockdep.c	/^mark_held_locks(struct task_struct *curr, enum mark_type mark)$/;"	f	file:
mark_irqflags	lockdep.c	/^static inline int mark_irqflags(struct task_struct *curr,$/;"	f	file:
mark_irqflags	lockdep.c	/^static int mark_irqflags(struct task_struct *curr, struct held_lock *hlock)$/;"	f	file:
mark_lock	lockdep.c	/^static int mark_lock(struct task_struct *curr, struct held_lock *this,$/;"	f	file:
mark_lock_accessed	lockdep.c	/^static inline void mark_lock_accessed(struct lock_list *lock,$/;"	f	file:
mark_lock_irq	lockdep.c	/^int mark_lock_irq(struct task_struct *curr, struct held_lock *this,$/;"	f	file:
mark_lock_irq	lockdep.c	/^mark_lock_irq(struct task_struct *curr, struct held_lock *this,$/;"	f	file:
mark_nosave_pages	power/snapshot.c	/^static void mark_nosave_pages(struct memory_bitmap *bm)$/;"	f	file:
mark_rt_mutex_waiters	rtmutex.c	/^static inline void mark_rt_mutex_waiters(struct rt_mutex *lock)$/;"	f	file:
mark_swapfiles	power/swap.c	/^static int mark_swapfiles(struct swap_map_handle *handle, unsigned int flags)$/;"	f	file:
mark_type	lockdep.c	/^enum mark_type {$/;"	g	file:
mark_unsafe_pages	power/snapshot.c	/^static int mark_unsafe_pages(struct memory_bitmap *bm)$/;"	f	file:
mark_work_canceling	workqueue.c	/^static void mark_work_canceling(struct work_struct *work)$/;"	f	file:
maru	swap/energy/lcd/maru.c	/^struct lcd_ops *LCD_MAKE_FNAME(maru)(void)$/;"	f
maru_check	swap/energy/lcd/maru.c	/^static int maru_check(struct lcd_ops *ops)$/;"	f	file:
maru_get_parameter	swap/energy/lcd/maru.c	/^static unsigned long maru_get_parameter(struct lcd_ops *ops,$/;"	f	file:
maru_ops	swap/energy/lcd/maru.c	/^static struct lcd_ops maru_ops = {$/;"	v	typeref:struct:lcd_ops	file:
maru_set	swap/energy/lcd/maru.c	/^static int maru_set(struct lcd_ops *ops)$/;"	f	file:
maru_unset	swap/energy/lcd/maru.c	/^static int maru_unset(struct lcd_ops *ops)$/;"	f	file:
mask	sched/core.c	/^	sched_domain_mask_f mask;$/;"	m	struct:sched_domain_topology_level	file:
mask	sched/cpupri.h	/^	cpumask_var_t	mask;$/;"	m	struct:cpupri_vec
mask	trace/blktrace.c	/^	int mask;$/;"	m	struct:__anon85	file:
mask_ack_irq	irq/chip.c	/^static inline void mask_ack_irq(struct irq_desc *desc)$/;"	f	file:
mask_irq	irq/chip.c	/^void mask_irq(struct irq_desc *desc)$/;"	f
mask_maps	trace/blktrace.c	/^} mask_maps[] = {$/;"	v	typeref:struct:__anon85	file:
mask_str	trace/trace.c	/^static char mask_str[NR_CPUS + 1];$/;"	v	file:
master_exit	swap/master/master_module.c	/^module_exit(master_exit);$/;"	v
master_exit	swap/master/master_module.c	/^static void __exit master_exit(void)$/;"	f	file:
master_init	swap/master/master_module.c	/^module_init(master_init);$/;"	v
master_init	swap/master/master_module.c	/^static int __init master_init(void)$/;"	f	file:
masters_in_kgdb	debug/debug_core.c	/^static atomic_t			masters_in_kgdb;$/;"	v	file:
match	trace/trace.h	/^	regex_match_func	match;$/;"	m	struct:regex
match	trace/trace_events_filter.c	/^	int match;$/;"	m	struct:filter_match_preds_data	file:
match	trace/trace_events_filter.c	/^	int match;$/;"	m	struct:test_filter_data_t	file:
match_entries	time/timer_stats.c	/^static int match_entries(struct entry *entry1, struct entry *entry2)$/;"	f	file:
match_futex	futex.c	/^static inline int match_futex(union futex_key *key1, union futex_key *key2)$/;"	f	file:
match_held_lock	lockdep.c	/^static int match_held_lock(struct held_lock *hlock, struct lockdep_map *lock)$/;"	f	file:
match_records	trace/ftrace.c	/^match_records(struct ftrace_hash *hash, char *buff,$/;"	f	file:
match_tree_refs	auditsc.c	/^static int match_tree_refs(struct audit_context *ctx, struct audit_tree *tree)$/;"	f	file:
match_uprobe	events/uprobes.c	/^static int match_uprobe(struct uprobe *l, struct uprobe *r)$/;"	f	file:
math_div	time/timeconv.c	/^static long math_div(long a, long b)$/;"	f	file:
mattr	module.c	/^	struct module_attribute mattr;$/;"	m	struct:module_sect_attr	typeref:struct:module_sect_attr::module_attribute	file:
mattr	params.c	/^	struct module_attribute mattr;$/;"	m	struct:param_attribute	typeref:struct:param_attribute::module_attribute	file:
max	resource.c	/^	resource_size_t min, max, align;$/;"	m	struct:resource_constraint	file:
max	sched/fair.c	/^	u32 max;$/;"	m	struct:cpufreq_extents	file:
max	sysctl.c	/^	int *max;$/;"	m	struct:do_proc_dointvec_minmax_conv_param	file:
max	trace/trace_events_filter.c	/^	int max;$/;"	m	struct:check_pred_data	file:
max_active	workqueue.c	/^	int			max_active;	\/* L: max active works *\/$/;"	m	struct:pool_workqueue	file:
max_bfs_queue_depth	lockdep.c	/^unsigned int max_bfs_queue_depth;$/;"	v
max_brt	swap/energy/lcd/lcd_base.c	/^	int max_brt;$/;"	m	struct:lcd_priv_data	file:
max_buffer	trace/trace.h	/^	struct trace_buffer	max_buffer;$/;"	m	struct:trace_array	typeref:struct:trace_array::trace_buffer
max_bytes_for_cpu	trace/trace_functions_graph.c	/^static int max_bytes_for_cpu;$/;"	v	file:
max_cfs_quota_period	sched/core.c	/^const u64 max_cfs_quota_period = 1 * NSEC_PER_SEC; \/* 1s *\/$/;"	v
max_coef	swap/energy/lcd/lcd_base.h	/^	struct rational max_coef;	\/**< Maximum coefficient *\/$/;"	m	struct:lcd_ops	typeref:struct:lcd_ops::rational
max_count	swap/webprobe/webprobe_debugfs.c	/^enum { max_count = 256 };$/;"	e	enum:__anon41	file:
max_denom	swap/energy/lcd/lcd_base.c	/^	u64 max_denom;$/;"	m	struct:lcd_priv_data	file:
max_depth	trace/trace_functions_graph.c	/^static unsigned int max_depth;$/;"	v	file:
max_extfrag_threshold	sysctl.c	/^static int max_extfrag_threshold = 1000;$/;"	v	file:
max_load	sched/fair.c	/^	unsigned long max_load;$/;"	m	struct:sd_lb_stats	file:
max_load_balance_interval	sched/fair.c	/^static unsigned long __read_mostly max_load_balance_interval = HZ\/10;$/;"	v	file:
max_load_idx	sched/core.c	/^static int max_load_idx = CPU_LOAD_IDX_MAX-1;$/;"	v	file:
max_lock_depth	rtmutex.c	/^int max_lock_depth = 1024;$/;"	v
max_lockdep_depth	lockdep.c	/^unsigned int max_lockdep_depth;$/;"	v
max_num	swap/energy/lcd/lcd_base.c	/^	u64 max_num;$/;"	m	struct:lcd_priv_data	file:
max_offline	rcutorture.c	/^static int max_offline;$/;"	v	file:
max_online	rcutorture.c	/^static int max_online;$/;"	v	file:
max_sched_granularity_ns	sysctl.c	/^static int max_sched_granularity_ns = NSEC_PER_SEC;	\/* 1 second *\/$/;"	v	file:
max_sched_tunable_scaling	sysctl.c	/^static int max_sched_tunable_scaling = SCHED_TUNABLESCALING_END-1;$/;"	v	file:
max_sequence	trace/trace_irqsoff.c	/^static __cacheline_aligned_in_smp	unsigned long max_sequence;$/;"	v	file:
max_size	trace/ring_buffer.c	/^	int			max_size;$/;"	m	struct:rb_test_data	file:
max_size_nested	trace/ring_buffer.c	/^	int			max_size_nested;$/;"	m	struct:rb_test_data	file:
max_stack_lock	trace/trace_stack.c	/^static arch_spinlock_t max_stack_lock =$/;"	v	file:
max_stack_size	trace/trace_stack.c	/^static unsigned long max_stack_size;$/;"	v	file:
max_stack_trace	trace/trace_stack.c	/^static struct stack_trace max_stack_trace = {$/;"	v	typeref:struct:stack_trace	file:
max_task_bp_pinned	events/hw_breakpoint.c	/^static unsigned int max_task_bp_pinned(int cpu, enum bp_type_idx type)$/;"	f	file:
max_threads	fork.c	/^int max_threads;		\/* tunable limit on nr_threads *\/$/;"	v
max_vruntime	sched/fair.c	/^static inline u64 max_vruntime(u64 max_vruntime, u64 vruntime)$/;"	f	file:
max_wakeup_granularity_ns	sysctl.c	/^static int max_wakeup_granularity_ns = NSEC_PER_SEC;	\/* 1 second *\/$/;"	v	file:
maxactive	swap/kprobe/swap_kprobes.h	/^	int maxactive;$/;"	m	struct:kretprobe
maxactive	swap/uprobe/swap_uprobes.h	/^	int maxactive;$/;"	m	struct:uretprobe
maxcpus	smp.c	/^static int __init maxcpus(char *str)$/;"	f	file:
maxolduid	sysctl.c	/^static int maxolduid = 65535;$/;"	v	file:
may_init_module	module.c	/^static int may_init_module(void)$/;"	f	file:
may_ptrace_stop	signal.c	/^static inline int may_ptrace_stop(void)$/;"	f	file:
may_setgroups	groups.c	/^bool may_setgroups(void)$/;"	f
may_start_working	workqueue.c	/^static bool may_start_working(struct worker_pool *pool)$/;"	f	file:
maybe_destroy_workers	workqueue.c	/^static bool maybe_destroy_workers(struct worker_pool *pool)$/;"	f	file:
maybe_kfree_parameter	params.c	/^static void maybe_kfree_parameter(void *param)$/;"	f	file:
maybe_relocated	module.c	/^static unsigned long maybe_relocated(unsigned long crc,$/;"	f	file:
mayday_node	workqueue.c	/^	struct list_head	mayday_node;	\/* MD: node on wq->maydays *\/$/;"	m	struct:pool_workqueue	typeref:struct:pool_workqueue::list_head	file:
mayday_timer	workqueue.c	/^	struct timer_list	mayday_timer;	\/* L: SOS timer for workers *\/$/;"	m	struct:worker_pool	typeref:struct:worker_pool::timer_list	file:
maydays	workqueue.c	/^	struct list_head	maydays;	\/* MD: pwqs requesting rescue *\/$/;"	m	struct:workqueue_struct	typeref:struct:workqueue_struct::list_head	file:
mem_bm_set_bit_check	power/snapshot.c	/^static int mem_bm_set_bit_check(struct memory_bitmap *bm, unsigned long pfn)$/;"	f	file:
mem_extent	power/snapshot.c	/^struct mem_extent {$/;"	s	file:
mem_rwx_once	swap/kprobe/arch/arm/swap-asm/memory_rwx.c	/^int mem_rwx_once(void)$/;"	f
mem_rwx_write_u32	swap/kprobe/arch/arm/swap-asm/memory_rwx.c	/^void mem_rwx_write_u32(unsigned long addr, unsigned long val)$/;"	f
mem_unit	sys.c	/^	u32 mem_unit;$/;"	m	struct:compat_sysinfo	file:
memcpy_common	events/internal.h	/^static inline int memcpy_common(void *dst, const void *src, size_t n)$/;"	f
memory_allocation	swap/buffer/kernel_operations.h	147;"	d
memory_bitmap	power/snapshot.c	/^struct memory_bitmap {$/;"	s	file:
memory_bm_clear_bit	power/snapshot.c	/^static void memory_bm_clear_bit(struct memory_bitmap *bm, unsigned long pfn)$/;"	f	file:
memory_bm_create	power/snapshot.c	/^memory_bm_create(struct memory_bitmap *bm, gfp_t gfp_mask, int safe_needed)$/;"	f	file:
memory_bm_find_bit	power/snapshot.c	/^static int memory_bm_find_bit(struct memory_bitmap *bm, unsigned long pfn,$/;"	f	file:
memory_bm_free	power/snapshot.c	/^static void memory_bm_free(struct memory_bitmap *bm, int clear_nosave_free)$/;"	f	file:
memory_bm_next_pfn	power/snapshot.c	/^static unsigned long memory_bm_next_pfn(struct memory_bitmap *bm)$/;"	f	file:
memory_bm_pfn_present	power/snapshot.c	/^static bool memory_bm_pfn_present(struct memory_bitmap *bm, unsigned long pfn)$/;"	f	file:
memory_bm_position_reset	power/snapshot.c	/^static void memory_bm_position_reset(struct memory_bitmap *bm)$/;"	f	file:
memory_bm_set_bit	power/snapshot.c	/^static void memory_bm_set_bit(struct memory_bitmap *bm, unsigned long pfn)$/;"	f	file:
memory_bm_test_bit	power/snapshot.c	/^static int memory_bm_test_bit(struct memory_bitmap *bm, unsigned long pfn)$/;"	f	file:
memory_free	swap/buffer/kernel_operations.h	149;"	d
mems_allowed	cpuset.c	/^	nodemask_t mems_allowed;	\/* Memory Nodes allowed to tasks *\/$/;"	m	struct:cpuset	file:
merge	gcov/gcov.h	/^	void		(*merge)(gcov_type *, unsigned int);$/;"	m	struct:gcov_ctr_info
methods_exist	swap/us_manager/probes/probes.c	/^static inline int methods_exist(enum probe_t probe_type)$/;"	f	file:
mf_kretprobe	swap/us_manager/helper.c	/^static struct kretprobe mf_kretprobe = {$/;"	v	typeref:struct:kretprobe	file:
migrate_hrtimer_list	hrtimer.c	/^static void migrate_hrtimer_list(struct hrtimer_clock_base *old_base,$/;"	f	file:
migrate_hrtimers	hrtimer.c	/^static void migrate_hrtimers(int scpu)$/;"	f	file:
migrate_task	sched/sched.h	/^	struct task_struct *migrate_task;$/;"	m	struct:rq	typeref:struct:rq::task_struct
migrate_task_rq	sched/sched.h	/^	void (*migrate_task_rq)(struct task_struct *p, int next_cpu);$/;"	m	struct:sched_class
migrate_task_rq_fair	sched/fair.c	/^migrate_task_rq_fair(struct task_struct *p, int next_cpu)$/;"	f	file:
migrate_tasks	sched/core.c	/^static void migrate_tasks(unsigned int dead_cpu)$/;"	f	file:
migrate_timer_list	timer.c	/^static void migrate_timer_list(struct tvec_base *new_base, struct list_head *head)$/;"	f	file:
migrate_timers	timer.c	/^static void __cpuinit migrate_timers(int cpu)$/;"	f	file:
migrate_to_reboot_cpu	sys.c	/^static void migrate_to_reboot_cpu(void)$/;"	f	file:
migration_arg	sched/core.c	/^struct migration_arg {$/;"	s	file:
migration_call	sched/core.c	/^migration_call(struct notifier_block *nfb, unsigned long action, void *hcpu)$/;"	f	file:
migration_cpu_stop	sched/core.c	/^static int migration_cpu_stop(void *data)$/;"	f	file:
migration_init	sched/core.c	/^early_initcall(migration_init);$/;"	v
migration_init	sched/core.c	/^static int __init migration_init(void)$/;"	f	file:
migration_notifier	sched/core.c	/^static struct notifier_block __cpuinitdata migration_notifier = {$/;"	v	typeref:struct:__cpuinitdata	file:
min	resource.c	/^	resource_size_t min, max, align;$/;"	m	struct:resource_constraint	file:
min	sched/fair.c	/^	u32 min;$/;"	m	struct:cpufreq_extents	file:
min	sysctl.c	/^	int *min;$/;"	m	struct:do_proc_dointvec_minmax_conv_param	file:
min_bandwidth_expiration	sched/fair.c	/^static const u64 min_bandwidth_expiration = 2 * NSEC_PER_MSEC;$/;"	v	file:
min_brt	swap/energy/lcd/lcd_base.c	/^	int min_brt;$/;"	m	struct:lcd_priv_data	file:
min_cfs_quota_period	sched/core.c	/^const u64 min_cfs_quota_period = 1 * NSEC_PER_MSEC; \/* 1ms *\/$/;"	v
min_cfs_rq_runtime	sched/fair.c	/^static const u64 min_cfs_rq_runtime = 1 * NSEC_PER_MSEC;$/;"	v	file:
min_coef	swap/energy/lcd/lcd_base.h	/^	struct rational min_coef;	\/**< Minimum coefficient *\/$/;"	m	struct:lcd_ops	typeref:struct:lcd_ops::rational
min_denom	swap/energy/lcd/lcd_base.c	/^	u64 min_denom;$/;"	m	struct:lcd_priv_data	file:
min_extfrag_threshold	sysctl.c	/^static int min_extfrag_threshold;$/;"	v	file:
min_load_idx	sched/core.c	/^static int min_load_idx = 0;$/;"	v	file:
min_num	swap/energy/lcd/lcd_base.c	/^	u64 min_num;$/;"	m	struct:lcd_priv_data	file:
min_offline	rcutorture.c	/^static int min_offline = -1;$/;"	v	file:
min_online	rcutorture.c	/^static int min_online = -1;$/;"	v	file:
min_percpu_pagelist_fract	sysctl.c	/^static int min_percpu_pagelist_fract = 8;$/;"	v	file:
min_sched_granularity_ns	sysctl.c	/^static int min_sched_granularity_ns = 100000;		\/* 100 usecs *\/$/;"	v	file:
min_sched_tunable_scaling	sysctl.c	/^static int min_sched_tunable_scaling = SCHED_TUNABLESCALING_NONE;$/;"	v	file:
min_size	trace/ring_buffer.c	/^	int			min_size;$/;"	m	struct:rb_test_data	file:
min_size_nested	trace/ring_buffer.c	/^	int			min_size_nested;$/;"	m	struct:rb_test_data	file:
min_vruntime	sched/fair.c	/^static inline u64 min_vruntime(u64 min_vruntime, u64 vruntime)$/;"	f	file:
min_vruntime	sched/sched.h	/^	u64 min_vruntime;$/;"	m	struct:cfs_rq
min_vruntime_copy	sched/sched.h	/^	u64 min_vruntime_copy;$/;"	m	struct:cfs_rq
min_wakeup_granularity_ns	sysctl.c	/^static int min_wakeup_granularity_ns;			\/* 0 usecs *\/$/;"	v	file:
min_writable_bufs	swap/buffer/swap_buffer_module.c	/^static unsigned int min_writable_bufs;$/;"	v	file:
minimum_image_size	power/snapshot.c	/^static unsigned long minimum_image_size(unsigned long saveable)$/;"	f	file:
minolduid	sysctl.c	/^static int minolduid;$/;"	v	file:
misrouted_irq	irq/spurious.c	/^static int misrouted_irq(int irq)$/;"	f	file:
mk_pid	pid.c	/^static inline int mk_pid(struct pid_namespace *pid_ns,$/;"	f	file:
mk_reply	taskstats.c	/^static struct taskstats *mk_reply(struct sk_buff *skb, int type, u32 pid)$/;"	f	file:
mktime	time.c	/^EXPORT_SYMBOL(mktime);$/;"	v
mktime	time.c	/^mktime(const unsigned int year0, const unsigned int mon0,$/;"	f
mm	auditsc.c	/^	struct mm_struct *mm;$/;"	m	struct:audit_aux_data_execve	typeref:struct:audit_aux_data_execve::mm_struct	file:
mm	events/uprobes.c	/^	struct mm_struct *mm;$/;"	m	struct:map_info	typeref:struct:map_info::mm_struct	file:
mm_access	fork.c	/^struct mm_struct *mm_access(struct task_struct *task, unsigned int mode)$/;"	f
mm_alloc	fork.c	/^struct mm_struct *mm_alloc(void)$/;"	f
mm_alloc_pgd	fork.c	/^static inline int mm_alloc_pgd(struct mm_struct *mm)$/;"	f	file:
mm_alloc_pgd	fork.c	525;"	d	file:
mm_cachep	fork.c	/^static struct kmem_cache *mm_cachep;$/;"	v	typeref:struct:kmem_cache	file:
mm_free_pgd	fork.c	/^static inline void mm_free_pgd(struct mm_struct *mm)$/;"	f	file:
mm_free_pgd	fork.c	526;"	d	file:
mm_init	fork.c	/^static struct mm_struct *mm_init(struct mm_struct *mm, struct task_struct *p)$/;"	f	file:
mm_init_aio	fork.c	/^static void mm_init_aio(struct mm_struct *mm)$/;"	f	file:
mm_init_owner	fork.c	/^void mm_init_owner(struct mm_struct *mm, struct task_struct *p)$/;"	f
mm_release	fork.c	/^void mm_release(struct task_struct *tsk, struct mm_struct *mm)$/;"	f
mm_release_cnt	swap/us_manager/helper.c	/^static atomic_t mm_release_cnt = ATOMIC_INIT(0);$/;"	v	file:
mm_update_next_owner	exit.c	/^void mm_update_next_owner(struct mm_struct *mm)$/;"	f
mmap	audit.h	/^		} mmap;$/;"	m	union:audit_context::__anon15	typeref:struct:audit_context::__anon15::__anon23
mmap_count	events/internal.h	/^	atomic_t			mmap_count;$/;"	m	struct:ring_buffer
mmap_entry_handler	swap/preload/preload_module.c	/^static int mmap_entry_handler(struct kretprobe_instance *ri,$/;"	f	file:
mmap_kretprobe	swap/us_manager/helper.c	/^static struct kretprobe mmap_kretprobe = {$/;"	v	typeref:struct:kretprobe	file:
mmap_locked	events/internal.h	/^	unsigned long			mmap_locked;$/;"	m	struct:ring_buffer
mmap_priv	swap/preload/preload_module.c	/^struct mmap_priv {$/;"	s	file:
mmap_ret_handler	swap/preload/preload_module.c	/^static int mmap_ret_handler(struct kretprobe_instance *ri,$/;"	f	file:
mmap_rp	swap/preload/preload_module.c	/^static struct kretprobe mmap_rp = {$/;"	v	typeref:struct:kretprobe	file:
mmap_type_t	swap/preload/preload_module.c	/^enum mmap_type_t {$/;"	g	file:
mmap_user	events/internal.h	/^	struct user_struct		*mmap_user;$/;"	m	struct:ring_buffer	typeref:struct:ring_buffer::user_struct
mmf_recalc_uprobes	events/uprobes.c	/^static void mmf_recalc_uprobes(struct mm_struct *mm)$/;"	f	file:
mmio_close	trace/trace_mmiotrace.c	/^static void mmio_close(struct trace_iterator *iter)$/;"	f	file:
mmio_pipe_open	trace/trace_mmiotrace.c	/^static void mmio_pipe_open(struct trace_iterator *iter)$/;"	f	file:
mmio_print_line	trace/trace_mmiotrace.c	/^static enum print_line_t mmio_print_line(struct trace_iterator *iter)$/;"	f	file:
mmio_print_map	trace/trace_mmiotrace.c	/^static enum print_line_t mmio_print_map(struct trace_iterator *iter)$/;"	f	file:
mmio_print_mark	trace/trace_mmiotrace.c	/^static enum print_line_t mmio_print_mark(struct trace_iterator *iter)$/;"	f	file:
mmio_print_pcidev	trace/trace_mmiotrace.c	/^static int mmio_print_pcidev(struct trace_seq *s, const struct pci_dev *dev)$/;"	f	file:
mmio_print_rw	trace/trace_mmiotrace.c	/^static enum print_line_t mmio_print_rw(struct trace_iterator *iter)$/;"	f	file:
mmio_read	trace/trace_mmiotrace.c	/^static ssize_t mmio_read(struct trace_iterator *iter, struct file *filp,$/;"	f	file:
mmio_reset_data	trace/trace_mmiotrace.c	/^static void mmio_reset_data(struct trace_array *tr)$/;"	f	file:
mmio_trace_array	trace/trace_mmiotrace.c	/^static struct trace_array *mmio_trace_array;$/;"	v	typeref:struct:trace_array	file:
mmio_trace_init	trace/trace_mmiotrace.c	/^static int mmio_trace_init(struct trace_array *tr)$/;"	f	file:
mmio_trace_mapping	trace/trace_mmiotrace.c	/^void mmio_trace_mapping(struct mmiotrace_map *map)$/;"	f
mmio_trace_printk	trace/trace_mmiotrace.c	/^int mmio_trace_printk(const char *fmt, va_list args)$/;"	f
mmio_trace_reset	trace/trace_mmiotrace.c	/^static void mmio_trace_reset(struct trace_array *tr)$/;"	f	file:
mmio_trace_rw	trace/trace_mmiotrace.c	/^void mmio_trace_rw(struct mmiotrace_rw *rw)$/;"	f
mmio_trace_start	trace/trace_mmiotrace.c	/^static void mmio_trace_start(struct trace_array *tr)$/;"	f	file:
mmput	fork.c	/^EXPORT_SYMBOL_GPL(mmput);$/;"	v
mmput	fork.c	/^void mmput(struct mm_struct *mm)$/;"	f
mod	cpu.c	/^	unsigned long mod;$/;"	m	struct:take_cpu_down_param	file:
mod	jump_label.c	/^	struct module *mod;$/;"	m	struct:static_key_mod	typeref:struct:static_key_mod::module	file:
mod	module.c	/^		unsigned int sym, str, mod, vers, info, pcpu;$/;"	m	struct:load_info::__anon26	file:
mod	module.c	/^	struct module *mod;$/;"	m	struct:stopref	typeref:struct:stopref::module	file:
mod	trace/trace_events.c	/^	struct module			*mod;$/;"	m	struct:ftrace_module_file_ops	typeref:struct:ftrace_module_file_ops::module	file:
mod_delayed_work_on	workqueue.c	/^EXPORT_SYMBOL_GPL(mod_delayed_work_on);$/;"	v
mod_delayed_work_on	workqueue.c	/^bool mod_delayed_work_on(int cpu, struct workqueue_struct *wq,$/;"	f
mod_end	debug/kdb/kdb_private.h	/^		unsigned long mod_end;$/;"	m	struct:__ksymtab
mod_extract_mpi_array	module_signing.c	/^static int mod_extract_mpi_array(struct public_key_signature *pks,$/;"	f	file:
mod_find_symname	module.c	/^static unsigned long mod_find_symname(struct module *mod, const char *name)$/;"	f	file:
mod_func_inst	swap/parser/us_inst.c	/^static int mod_func_inst(struct func_inst_data *func, struct pf_group *pfg,$/;"	f	file:
mod_lib_inst	swap/parser/us_inst.c	/^static int mod_lib_inst(struct lib_inst_data *lib, struct pf_group *pfg,$/;"	f	file:
mod_make_digest	module_signing.c	/^static struct public_key_signature *mod_make_digest(enum pkey_hash_algo hash,$/;"	f	file:
mod_name	debug/kdb/kdb_private.h	/^		const char *mod_name;	\/* Module containing symbol or$/;"	m	struct:__ksymtab
mod_percpu	module.c	/^static inline void __percpu *mod_percpu(struct module *mod)$/;"	f	file:
mod_refcounted	swap/kprobe/swap_kprobes.h	/^	unsigned int					mod_refcounted;$/;"	m	struct:kprobe
mod_start	debug/kdb/kdb_private.h	/^		unsigned long mod_start;$/;"	m	struct:__ksymtab
mod_sysfs_fini	module.c	/^static void mod_sysfs_fini(struct module *mod)$/;"	f	file:
mod_sysfs_init	module.c	/^static int mod_sysfs_init(struct module *mod)$/;"	f	file:
mod_sysfs_setup	module.c	/^static int mod_sysfs_setup(struct module *mod,$/;"	f	file:
mod_sysfs_teardown	module.c	/^static void mod_sysfs_teardown(struct module *mod)$/;"	f	file:
mod_timer	timer.c	/^EXPORT_SYMBOL(mod_timer);$/;"	v
mod_timer	timer.c	/^int mod_timer(struct timer_list *timer, unsigned long expires)$/;"	f
mod_timer_pending	timer.c	/^EXPORT_SYMBOL(mod_timer_pending);$/;"	v
mod_timer_pending	timer.c	/^int mod_timer_pending(struct timer_list *timer, unsigned long expires)$/;"	f
mod_timer_pinned	timer.c	/^EXPORT_SYMBOL(mod_timer_pinned);$/;"	v
mod_timer_pinned	timer.c	/^int mod_timer_pinned(struct timer_list *timer, unsigned long expires)$/;"	f
mod_us_app_inst	swap/parser/us_inst.c	/^static int mod_us_app_inst(struct app_inst_data *app_inst, enum MOD_TYPE mt)$/;"	f	file:
mod_us_inst	swap/parser/us_inst.c	/^int mod_us_inst(struct us_inst_data *us_inst, enum MOD_TYPE mt)$/;"	f
mod_verify_sig	module_signing.c	/^int mod_verify_sig(const void *mod, unsigned long *_modlen)$/;"	f
mode	audit.h	/^			umode_t			mode;$/;"	m	struct:audit_context::__anon15::__anon17
mode	audit.h	/^			umode_t			mode;$/;"	m	struct:audit_context::__anon15::__anon21
mode	audit.h	/^	umode_t			mode;$/;"	m	struct:audit_names
mode	power/user.c	/^	int mode;$/;"	m	struct:snapshot_data	file:
mode1_syscalls	seccomp.c	/^static int mode1_syscalls[] = {$/;"	v	file:
mode1_syscalls_32	seccomp.c	/^static int mode1_syscalls_32[] = {$/;"	v	file:
modify_user_hw_breakpoint	events/hw_breakpoint.c	/^EXPORT_SYMBOL_GPL(modify_user_hw_breakpoint);$/;"	v
modify_user_hw_breakpoint	events/hw_breakpoint.c	/^int modify_user_hw_breakpoint(struct perf_event *bp, struct perf_event_attr *attr)$/;"	f
modinfo_attrs	module.c	/^static struct module_attribute *modinfo_attrs[] = {$/;"	v	typeref:struct:module_attribute	file:
modinfo_coresize	module.c	/^static struct module_attribute modinfo_coresize =$/;"	v	typeref:struct:module_attribute	file:
modinfo_initsize	module.c	/^static struct module_attribute modinfo_initsize =$/;"	v	typeref:struct:module_attribute	file:
modinfo_initstate	module.c	/^static struct module_attribute modinfo_initstate =$/;"	v	typeref:struct:module_attribute	file:
modinfo_refcnt	module.c	/^static struct module_attribute modinfo_refcnt =$/;"	v	typeref:struct:module_attribute	file:
modinfo_taint	module.c	/^static struct module_attribute modinfo_taint =$/;"	v	typeref:struct:module_attribute	file:
modprobe_path	kmod.c	/^char modprobe_path[KMOD_PATH_LEN] = "\/sbin\/modprobe";$/;"	v
modsign_keyring	modsign_pubkey.c	/^struct key *modsign_keyring;$/;"	v	typeref:struct:key
module_add_modinfo_attrs	module.c	/^static int module_add_modinfo_attrs(struct module *mod)$/;"	f	file:
module_addr_max	module.c	/^static unsigned long module_addr_min = -1UL, module_addr_max = 0;$/;"	v	file:
module_addr_min	module.c	/^static unsigned long module_addr_min = -1UL, module_addr_max = 0;$/;"	v	file:
module_address_lookup	module.c	/^const char *module_address_lookup(unsigned long addr,$/;"	f
module_alloc	module.c	/^void * __weak module_alloc(unsigned long size)$/;"	f
module_alloc	swap/kprobe/swap_kprobes.c	/^static void *(*module_alloc)(unsigned long size);$/;"	v	file:
module_alloc_update_bounds	module.c	/^static void *module_alloc_update_bounds(unsigned long size)$/;"	f	file:
module_arch_cleanup	module.c	/^void __weak module_arch_cleanup(struct module *mod)$/;"	f
module_attr_show	params.c	/^static ssize_t module_attr_show(struct kobject *kobj,$/;"	f	file:
module_attr_store	params.c	/^static ssize_t module_attr_store(struct kobject *kobj,$/;"	f	file:
module_deallocate	module.c	/^static void module_deallocate(struct module *mod, struct load_info *info)$/;"	f	file:
module_event	debug/debug_core.c	/^static int module_event(struct notifier_block *self, unsigned long val,$/;"	f	file:
module_finalize	module.c	/^int __weak module_finalize(const Elf_Ehdr *hdr,$/;"	f
module_flags	module.c	/^static char *module_flags(struct module *mod, char *buf)$/;"	f	file:
module_flags_taint	module.c	/^static size_t module_flags_taint(struct module *mod, char *buf)$/;"	f	file:
module_free	module.c	/^void __weak module_free(struct module *mod, void *module_region)$/;"	f
module_free	swap/kprobe/swap_kprobes.c	/^static void *(*module_free)(struct module *mod, void *module_region);$/;"	v	file:
module_frob_arch_sections	module.c	/^int __weak module_frob_arch_sections(Elf_Ehdr *hdr,$/;"	f
module_get	module.c	/^EXPORT_TRACEPOINT_SYMBOL(module_get);$/;"	v
module_get_kallsym	module.c	/^int module_get_kallsym(unsigned int symnum, unsigned long *value, char *type,$/;"	f
module_init	kexec.c	/^module_init(crash_save_vmcoreinfo_init)$/;"	f
module_kallsyms_lookup_name	module.c	/^unsigned long module_kallsyms_lookup_name(const char *name)$/;"	f
module_kallsyms_on_each_symbol	module.c	/^int module_kallsyms_on_each_symbol(int (*fn)(void *, const char *,$/;"	f
module_kset	params.c	/^struct kset *module_kset;$/;"	v	typeref:struct:kset
module_ktype	params.c	/^struct kobj_type module_ktype = {$/;"	v	typeref:struct:kobj_type
module_layout	module.c	/^EXPORT_SYMBOL(module_layout);$/;"	v
module_layout	module.c	/^void module_layout(struct module *mod,$/;"	f
module_mutex	module.c	/^DEFINE_MUTEX(module_mutex);$/;"	v
module_mutex	module.c	/^EXPORT_SYMBOL_GPL(module_mutex);$/;"	v
module_name	kallsyms.c	/^	char module_name[MODULE_NAME_LEN];$/;"	m	struct:kallsym_iter	file:
module_notes_attrs	module.c	/^struct module_notes_attrs {$/;"	s	file:
module_notes_read	module.c	/^static ssize_t module_notes_read(struct file *filp, struct kobject *kobj,$/;"	f	file:
module_param_attrs	params.c	/^struct module_param_attrs$/;"	s	file:
module_param_sysfs_remove	params.c	/^void module_param_sysfs_remove(struct module *mod)$/;"	f
module_param_sysfs_setup	params.c	/^int module_param_sysfs_setup(struct module *mod,$/;"	f
module_put	module.c	/^EXPORT_SYMBOL(module_put);$/;"	v
module_put	module.c	/^void module_put(struct module *module)$/;"	f
module_refcount	module.c	/^EXPORT_SYMBOL(module_refcount);$/;"	v
module_refcount	module.c	/^unsigned long module_refcount(struct module *mod)$/;"	f
module_remove_modinfo_attrs	module.c	/^static void module_remove_modinfo_attrs(struct module *mod)$/;"	f	file:
module_sect_attr	module.c	/^struct module_sect_attr$/;"	s	file:
module_sect_attrs	module.c	/^struct module_sect_attrs$/;"	s	file:
module_sect_show	module.c	/^static ssize_t module_sect_show(struct module_attribute *mattr,$/;"	f	file:
module_sig_check	module.c	/^static int module_sig_check(struct load_info *info)$/;"	f	file:
module_signature	module_signing.c	/^struct module_signature {$/;"	s	file:
module_sysfs_initialized	params.c	/^int module_sysfs_initialized;$/;"	v
module_sysfs_ops	params.c	/^static const struct sysfs_ops module_sysfs_ops = {$/;"	v	typeref:struct:sysfs_ops	file:
module_trace_bprintk_format_nb	trace/trace_printk.c	/^struct notifier_block module_trace_bprintk_format_nb = {$/;"	v	typeref:struct:notifier_block	file:
module_trace_bprintk_format_notify	trace/trace_printk.c	/^module_trace_bprintk_format_notify(struct notifier_block *self,$/;"	f	file:
module_trace_bprintk_format_notify	trace/trace_printk.c	/^static int module_trace_bprintk_format_notify(struct notifier_block *self,$/;"	f	file:
module_uevent	module.c	/^struct module_attribute module_uevent =$/;"	v	typeref:struct:module_attribute
module_uevent_ops	params.c	/^static const struct kset_uevent_ops module_uevent_ops = {$/;"	v	typeref:struct:kset_uevent_ops	file:
module_unload_free	module.c	/^static inline void module_unload_free(struct module *mod)$/;"	f	file:
module_unload_free	module.c	/^static void module_unload_free(struct module *mod)$/;"	f	file:
module_unload_init	module.c	/^static inline int module_unload_init(struct module *mod)$/;"	f	file:
module_unload_init	module.c	/^static int module_unload_init(struct module *mod)$/;"	f	file:
module_update_tracepoints	tracepoint.c	/^void module_update_tracepoints(void)$/;"	f
module_verify_init	modsign_pubkey.c	/^device_initcall(module_verify_init);$/;"	v
module_verify_init	modsign_pubkey.c	/^static __init int module_verify_init(void)$/;"	f	file:
modules_disabled	module.c	/^int modules_disabled = 0;$/;"	v
modules_op	module.c	/^static const struct seq_operations modules_op = {$/;"	v	typeref:struct:seq_operations	file:
modules_open	module.c	/^static int modules_open(struct inode *inode, struct file *file)$/;"	f	file:
monotonic	time/time_history.c	/^	struct timespec monotonic;$/;"	m	struct:time_log_entry	typeref:struct:time_log_entry::timespec	file:
monotonic_to_bootbased	time/timekeeping.c	/^EXPORT_SYMBOL_GPL(monotonic_to_bootbased);$/;"	v
monotonic_to_bootbased	time/timekeeping.c	/^void monotonic_to_bootbased(struct timespec *ts)$/;"	f
move_iter	time/time_history.c	/^static void *move_iter(struct time_history_iter *iter)$/;"	f	file:
move_iter	time/timer_list.c	/^static void *move_iter(struct timer_list_iter *iter, loff_t offset)$/;"	f	file:
move_linked_works	workqueue.c	/^static void move_linked_works(struct work_struct *work, struct list_head *head,$/;"	f	file:
move_module	module.c	/^static int move_module(struct module *mod, struct load_info *info)$/;"	f	file:
move_one_task	sched/fair.c	/^static int move_one_task(struct lb_env *env)$/;"	f	file:
move_specific_task	sched/fair.c	/^static int move_specific_task(struct lb_env *env, struct task_struct *pm)$/;"	f	file:
move_task	sched/fair.c	/^static void move_task(struct task_struct *p, struct lb_env *env)$/;"	f	file:
move_tasks	sched/fair.c	/^static int move_tasks(struct lb_env *env)$/;"	f	file:
move_type	trace/trace_events_filter.c	/^enum move_type {$/;"	g	file:
mq_getsetattr	audit.h	/^		} mq_getsetattr;$/;"	m	union:audit_context::__anon15	typeref:struct:audit_context::__anon15::__anon18
mq_notify	audit.h	/^		} mq_notify;$/;"	m	union:audit_context::__anon15	typeref:struct:audit_context::__anon15::__anon19
mq_open	audit.h	/^		} mq_open;$/;"	m	union:audit_context::__anon15	typeref:struct:audit_context::__anon15::__anon21
mq_sendrecv	audit.h	/^		} mq_sendrecv;$/;"	m	union:audit_context::__anon15	typeref:struct:audit_context::__anon15::__anon20
mqdes	audit.h	/^			mqd_t			mqdes;$/;"	m	struct:audit_context::__anon15::__anon18
mqdes	audit.h	/^			mqd_t			mqdes;$/;"	m	struct:audit_context::__anon15::__anon19
mqdes	audit.h	/^			mqd_t			mqdes;$/;"	m	struct:audit_context::__anon15::__anon20
mqstat	audit.h	/^			struct mq_attr		mqstat;$/;"	m	struct:audit_context::__anon15::__anon18	typeref:struct:audit_context::__anon15::__anon18::mq_attr
mr_cb	swap/us_manager/helper.c	/^static unsigned long mr_cb(void *data)$/;"	f	file:
mr_kprobe	swap/us_manager/helper.c	/^static struct kprobe mr_kprobe = {$/;"	v	typeref:struct:kprobe	file:
mr_pre_handler	swap/us_manager/helper.c	/^static int mr_pre_handler(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
mres_adata	swap/wsp/wsp.c	/^static struct probe_info_new mres_adata =$/;"	v	typeref:struct:probe_info_new	file:
mres_adata_eh	swap/wsp/wsp.c	/^static int mres_adata_eh(struct uretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
mres_adata_rh	swap/wsp/wsp.c	/^static int mres_adata_rh(struct uretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
mres_finish	swap/wsp/wsp.c	/^static struct probe_info_new mres_finish = MAKE_UPROBE(mres_finish_handle);$/;"	v	typeref:struct:probe_info_new	file:
mres_finish_handle	swap/wsp/wsp.c	/^static int mres_finish_handle(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
mres_req	swap/wsp/wsp.c	/^static struct probe_info_new mres_req = MAKE_UPROBE(mres_req_handle);$/;"	v	typeref:struct:probe_info_new	file:
mres_req_handle	swap/wsp/wsp.c	/^static int mres_req_handle(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
msecs_to_jiffies	time.c	/^EXPORT_SYMBOL(msecs_to_jiffies);$/;"	v
msecs_to_jiffies	time.c	/^unsigned long msecs_to_jiffies(const unsigned int m)$/;"	f
msg_buf	swap/parser/msg_buf.h	/^struct msg_buf {$/;"	s
msg_cb	swap/parser/us_inst.c	/^static struct pfg_msg_cb msg_cb = {$/;"	v	typeref:struct:pfg_msg_cb	file:
msg_cb	swap/us_manager/pf/pf_group.c	/^	struct pfg_msg_cb *msg_cb;$/;"	m	struct:pf_group	typeref:struct:pf_group::pfg_msg_cb	file:
msg_config	swap/parser/msg_cmd.c	/^int msg_config(struct msg_buf *mb)$/;"	f
msg_context_switch	swap/ks_features/ksf_msg.c	/^struct msg_context_switch {$/;"	s	file:
msg_counter	swap/driver/us_interaction.c	/^static u32 msg_counter;$/;"	v	file:
msg_entry	swap/retprobe/rp_msg.c	/^struct msg_entry {$/;"	s	file:
msg_exit	swap/retprobe/rp_msg.c	/^struct msg_exit {$/;"	s	file:
msg_fbi	swap/fbiprobe/fbi_msg.c	/^struct msg_fbi {$/;"	s	file:
msg_file_entry	swap/ks_features/ksf_msg.c	/^struct msg_file_entry {$/;"	s	file:
msg_file_exit	swap/ks_features/ksf_msg.c	/^struct msg_file_exit {$/;"	s	file:
msg_handler	swap/driver/device_driver.c	/^static msg_handler_t msg_handler;$/;"	v	file:
msg_handler	swap/parser/swap_msg_parser.c	/^static int msg_handler(void __user *msg)$/;"	f	file:
msg_handler_t	swap/driver/driver_to_msg.h	/^typedef int (*msg_handler_t)(void __user *data);$/;"	t
msg_id	swap/parser/swap_msg_parser.c	/^	u32 msg_id;                         \/**< Message ID. *\/$/;"	m	struct:basic_msg_fmt	file:
msg_id	swap/writer/swap_msg.c	/^	u32 msg_id;$/;"	m	struct:swap_msg	file:
msg_info	swap/us_manager/pf/pf_group.c	/^static void msg_info(struct sspt_filter *f, void *data)$/;"	f	file:
msg_info	swap/us_manager/pf/pf_group.h	/^	void (*msg_info)(struct task_struct *task, struct dentry *dentry);$/;"	m	struct:pfg_msg_cb
msg_keep_alive	swap/parser/msg_cmd.c	/^int msg_keep_alive(struct msg_buf *mb)$/;"	f
msg_len	audit.h	/^			size_t			msg_len;$/;"	m	struct:audit_context::__anon15::__anon20
msg_map	swap/us_manager/helper.c	/^static void msg_map(struct sspt_filter *f, void *data)$/;"	f	file:
msg_map	swap/us_manager/pf/pf_group.h	/^	void (*msg_map)(struct vm_area_struct *vma);$/;"	m	struct:pfg_msg_cb
msg_print_text	printk.c	/^static size_t msg_print_text(const struct log *msg, enum log_flags prev,$/;"	f	file:
msg_prio	audit.h	/^			unsigned int		msg_prio;$/;"	m	struct:audit_context::__anon15::__anon20
msg_start	swap/parser/msg_cmd.c	/^int msg_start(struct msg_buf *mb)$/;"	f
msg_status_info	swap/us_manager/pf/pf_group.h	/^	void (*msg_status_info)(struct task_struct *task);$/;"	m	struct:pfg_msg_cb
msg_stop	swap/parser/msg_cmd.c	/^int msg_stop(struct msg_buf *mb)$/;"	f
msg_swap_inst_add	swap/parser/msg_cmd.c	/^int msg_swap_inst_add(struct msg_buf *mb)$/;"	f
msg_swap_inst_remove	swap/parser/msg_cmd.c	/^int msg_swap_inst_remove(struct msg_buf *mb)$/;"	f
msg_sys_entry	swap/ks_features/ksf_msg.c	/^struct msg_sys_entry {$/;"	s	file:
msg_sys_exit	swap/ks_features/ksf_msg.c	/^struct msg_sys_exit {$/;"	s	file:
msg_sys_header	swap/ks_features/ksf_msg.c	/^struct msg_sys_header {$/;"	s	file:
msg_term	swap/us_manager/pf/pf_group.h	/^	void (*msg_term)(struct task_struct *task);$/;"	m	struct:pfg_msg_cb
msg_unmap	swap/us_manager/helper.c	/^static void msg_unmap(struct sspt_filter *f, void *data)$/;"	f	file:
msg_unmap	swap/us_manager/pf/pf_group.h	/^	void (*msg_unmap)(unsigned long start, unsigned long end);$/;"	m	struct:pfg_msg_cb
msg_unmap_data	swap/us_manager/helper.c	/^struct msg_unmap_data {$/;"	s	file:
msleep	timer.c	/^EXPORT_SYMBOL(msleep);$/;"	v
msleep	timer.c	/^void msleep(unsigned int msecs)$/;"	f
msleep_interruptible	timer.c	/^EXPORT_SYMBOL(msleep_interruptible);$/;"	v
msleep_interruptible	timer.c	/^unsigned long msleep_interruptible(unsigned int msecs)$/;"	f
mspin_lock	mutex.c	/^void mspin_lock(struct mspin_node **lock, struct mspin_node *node)$/;"	f	file:
mspin_node	mutex.c	/^struct mspin_node {$/;"	s	file:
mspin_unlock	mutex.c	/^static void mspin_unlock(struct mspin_node **lock, struct mspin_node *node)$/;"	f	file:
multiplier	sched/fair.c	/^	int multiplier; \/* used to scale the time delta *\/$/;"	m	struct:hmp_data_struct	file:
mutex	cgroup.c	/^	struct rw_semaphore mutex;$/;"	m	struct:cgroup_pidlist	typeref:struct:cgroup_pidlist::rw_semaphore	file:
mutex	trace/ring_buffer.c	/^	struct mutex			mutex;$/;"	m	struct:ring_buffer	typeref:struct:ring_buffer::mutex	file:
mutex	workqueue.c	/^	struct mutex		mutex;		\/* protects this wq *\/$/;"	m	struct:workqueue_struct	typeref:struct:workqueue_struct::mutex	file:
mutex_can_spin_on_owner	mutex.c	/^static inline int mutex_can_spin_on_owner(struct mutex *lock)$/;"	f	file:
mutex_clear_owner	mutex-debug.h	/^static inline void mutex_clear_owner(struct mutex *lock)$/;"	f
mutex_clear_owner	mutex.h	/^static inline void mutex_clear_owner(struct mutex *lock)$/;"	f
mutex_destroy	mutex-debug.c	/^EXPORT_SYMBOL_GPL(mutex_destroy);$/;"	v
mutex_destroy	mutex-debug.c	/^void mutex_destroy(struct mutex *lock)$/;"	f
mutex_lock	mutex.c	/^EXPORT_SYMBOL(mutex_lock);$/;"	v
mutex_lock	mutex.c	/^void __sched mutex_lock(struct mutex *lock)$/;"	f
mutex_lock_interruptible	mutex.c	/^EXPORT_SYMBOL(mutex_lock_interruptible);$/;"	v
mutex_lock_interruptible	mutex.c	/^int __sched mutex_lock_interruptible(struct mutex *lock)$/;"	f
mutex_lock_interruptible_nested	mutex.c	/^EXPORT_SYMBOL_GPL(mutex_lock_interruptible_nested);$/;"	v
mutex_lock_interruptible_nested	mutex.c	/^mutex_lock_interruptible_nested(struct mutex *lock, unsigned int subclass)$/;"	f
mutex_lock_killable	mutex.c	/^EXPORT_SYMBOL(mutex_lock_killable);$/;"	v
mutex_lock_killable	mutex.c	/^int __sched mutex_lock_killable(struct mutex *lock)$/;"	f
mutex_lock_killable_nested	mutex.c	/^EXPORT_SYMBOL_GPL(mutex_lock_killable_nested);$/;"	v
mutex_lock_killable_nested	mutex.c	/^mutex_lock_killable_nested(struct mutex *lock, unsigned int subclass)$/;"	f
mutex_lock_nested	mutex.c	/^EXPORT_SYMBOL_GPL(mutex_lock_nested);$/;"	v
mutex_lock_nested	mutex.c	/^mutex_lock_nested(struct mutex *lock, unsigned int subclass)$/;"	f
mutex_remove_waiter	mutex-debug.c	/^void mutex_remove_waiter(struct mutex *lock, struct mutex_waiter *waiter,$/;"	f
mutex_remove_waiter	mutex.h	16;"	d
mutex_set_owner	mutex-debug.h	/^static inline void mutex_set_owner(struct mutex *lock)$/;"	f
mutex_set_owner	mutex.h	/^static inline void mutex_set_owner(struct mutex *lock)$/;"	f
mutex_spin_on_owner	mutex.c	/^int mutex_spin_on_owner(struct mutex *lock, struct task_struct *owner)$/;"	f	file:
mutex_trylock	mutex.c	/^EXPORT_SYMBOL(mutex_trylock);$/;"	v
mutex_trylock	mutex.c	/^int __sched mutex_trylock(struct mutex *lock)$/;"	f
mutex_unlock	mutex.c	/^EXPORT_SYMBOL(mutex_unlock);$/;"	v
mutex_unlock	mutex.c	/^void __sched mutex_unlock(struct mutex *lock)$/;"	f
mutexes	rtmutex-tester.c	/^	int			mutexes[MAX_RT_TEST_MUTEXES];$/;"	m	struct:test_thread_data	file:
mutexes	rtmutex-tester.c	/^static struct rt_mutex mutexes[MAX_RT_TEST_MUTEXES];$/;"	v	typeref:struct:rt_mutex	file:
mynode	rcutree.h	/^	struct rcu_node *mynode;	\/* This CPU's leaf of hierarchy *\/$/;"	m	struct:rcu_data	typeref:struct:rcu_data::rcu_node
n	resource.c	/^	resource_size_t n;$/;"	m	struct:region_devres	file:
n_balk_blkd_tasks	rcutiny_plugin.h	/^	unsigned long n_balk_blkd_tasks;$/;"	m	struct:rcu_preempt_ctrlblk
n_balk_blkd_tasks	rcutree.h	/^	unsigned long n_balk_blkd_tasks;$/;"	m	struct:rcu_node
n_balk_boost_tasks	rcutiny_plugin.h	/^	unsigned long n_balk_boost_tasks;$/;"	m	struct:rcu_preempt_ctrlblk
n_balk_boost_tasks	rcutree.h	/^	unsigned long n_balk_boost_tasks;$/;"	m	struct:rcu_node
n_balk_exp_gp_tasks	rcutiny_plugin.h	/^	unsigned long n_balk_exp_gp_tasks;$/;"	m	struct:rcu_preempt_ctrlblk
n_balk_exp_gp_tasks	rcutree.h	/^	unsigned long n_balk_exp_gp_tasks;$/;"	m	struct:rcu_node
n_balk_nos	rcutiny_plugin.h	/^	unsigned long n_balk_nos;$/;"	m	struct:rcu_preempt_ctrlblk
n_balk_nos	rcutree.h	/^	unsigned long n_balk_nos;$/;"	m	struct:rcu_node
n_balk_notblocked	rcutree.h	/^	unsigned long n_balk_notblocked;$/;"	m	struct:rcu_node
n_balk_notyet	rcutiny_plugin.h	/^	unsigned long n_balk_notyet;$/;"	m	struct:rcu_preempt_ctrlblk
n_balk_notyet	rcutree.h	/^	unsigned long n_balk_notyet;$/;"	m	struct:rcu_node
n_barrier_attempts	rcutorture.c	/^static long n_barrier_attempts;$/;"	v	file:
n_barrier_cbs	rcutorture.c	/^static int n_barrier_cbs;	\/* Number of callbacks to test RCU barriers. *\/$/;"	v	file:
n_barrier_done	rcutree.h	/^	unsigned long n_barrier_done;		\/* ++ at start and end of *\/$/;"	m	struct:rcu_state
n_barrier_successes	rcutorture.c	/^static long n_barrier_successes;$/;"	v	file:
n_cbs_adopted	rcutree.h	/^	unsigned long   n_cbs_adopted;  \/* RCU cbs adopted from dying CPU *\/$/;"	m	struct:rcu_data
n_cbs_invoked	rcutree.h	/^	unsigned long	n_cbs_invoked;	\/* count of RCU cbs invoked. *\/$/;"	m	struct:rcu_data
n_cbs_orphaned	rcutree.h	/^	unsigned long   n_cbs_orphaned; \/* RCU cbs orphaned by dying CPU *\/$/;"	m	struct:rcu_data
n_ctrs	gcov/gcov.h	/^	unsigned int n_ctrs[0];$/;"	m	struct:gcov_fn_info
n_exp_boosts	rcutiny_plugin.h	/^	unsigned long n_exp_boosts;$/;"	m	struct:rcu_preempt_ctrlblk
n_exp_boosts	rcutree.h	/^	unsigned long n_exp_boosts;$/;"	m	struct:rcu_node
n_force_qs	rcutree.h	/^	unsigned long n_force_qs;		\/* Number of calls to *\/$/;"	m	struct:rcu_state
n_force_qs_lh	rcutree.h	/^	unsigned long n_force_qs_lh;		\/* ~Number of calls leaving *\/$/;"	m	struct:rcu_state
n_force_qs_ngp	rcutree.h	/^	unsigned long n_force_qs_ngp;		\/* Number of calls leaving *\/$/;"	m	struct:rcu_state
n_force_qs_snap	rcutree.h	/^	unsigned long	n_force_qs_snap;$/;"	m	struct:rcu_data
n_functions	gcov/gcov.h	/^	unsigned int			n_functions;$/;"	m	struct:gcov_info
n_grace_periods	rcutiny_plugin.h	/^	unsigned long n_grace_periods;$/;"	m	struct:rcu_preempt_ctrlblk
n_nocbs_invoked	rcutree.h	/^	unsigned long	n_nocbs_invoked; \/* count of no-CBs RCU cbs invoked. *\/$/;"	m	struct:rcu_data
n_normal_boosts	rcutiny_plugin.h	/^	unsigned long n_normal_boosts;$/;"	m	struct:rcu_preempt_ctrlblk
n_normal_boosts	rcutree.h	/^	unsigned long n_normal_boosts;$/;"	m	struct:rcu_node
n_offline_attempts	rcutorture.c	/^static long n_offline_attempts;$/;"	v	file:
n_offline_successes	rcutorture.c	/^static long n_offline_successes;$/;"	v	file:
n_online_attempts	rcutorture.c	/^static long n_online_attempts;$/;"	v	file:
n_online_successes	rcutorture.c	/^static long n_online_successes;$/;"	v	file:
n_preds	trace/trace.h	/^	int			n_preds;	\/* Number assigned *\/$/;"	m	struct:event_filter
n_rcu_pending	rcutree.h	/^	unsigned long n_rcu_pending;	\/* rcu_pending() calls since boot. *\/$/;"	m	struct:rcu_data
n_rcu_torture_alloc	rcutorture.c	/^static atomic_t n_rcu_torture_alloc;$/;"	v	file:
n_rcu_torture_alloc_fail	rcutorture.c	/^static atomic_t n_rcu_torture_alloc_fail;$/;"	v	file:
n_rcu_torture_barrier_error	rcutorture.c	/^static long n_rcu_torture_barrier_error;$/;"	v	file:
n_rcu_torture_boost_failure	rcutorture.c	/^static long n_rcu_torture_boost_failure;$/;"	v	file:
n_rcu_torture_boost_ktrerror	rcutorture.c	/^static long n_rcu_torture_boost_ktrerror;$/;"	v	file:
n_rcu_torture_boost_rterror	rcutorture.c	/^static long n_rcu_torture_boost_rterror;$/;"	v	file:
n_rcu_torture_boosts	rcutorture.c	/^static long n_rcu_torture_boosts;$/;"	v	file:
n_rcu_torture_error	rcutorture.c	/^static atomic_t n_rcu_torture_error;$/;"	v	file:
n_rcu_torture_free	rcutorture.c	/^static atomic_t n_rcu_torture_free;$/;"	v	file:
n_rcu_torture_mberror	rcutorture.c	/^static atomic_t n_rcu_torture_mberror;$/;"	v	file:
n_rcu_torture_timers	rcutorture.c	/^static long n_rcu_torture_timers;$/;"	v	file:
n_rp_cb_ready	rcutree.h	/^	unsigned long n_rp_cb_ready;$/;"	m	struct:rcu_data
n_rp_cpu_needs_gp	rcutree.h	/^	unsigned long n_rp_cpu_needs_gp;$/;"	m	struct:rcu_data
n_rp_gp_completed	rcutree.h	/^	unsigned long n_rp_gp_completed;$/;"	m	struct:rcu_data
n_rp_gp_started	rcutree.h	/^	unsigned long n_rp_gp_started;$/;"	m	struct:rcu_data
n_rp_need_nothing	rcutree.h	/^	unsigned long n_rp_need_nothing;$/;"	m	struct:rcu_data
n_rp_qs_pending	rcutree.h	/^	unsigned long n_rp_qs_pending;$/;"	m	struct:rcu_data
n_rp_report_qs	rcutree.h	/^	unsigned long n_rp_report_qs;$/;"	m	struct:rcu_data
n_tasks_boosted	rcutiny_plugin.h	/^	unsigned long n_tasks_boosted;$/;"	m	struct:rcu_preempt_ctrlblk
n_tasks_boosted	rcutree.h	/^	unsigned long n_tasks_boosted;$/;"	m	struct:rcu_node
name	audit.h	/^	struct filename		*name;$/;"	m	struct:audit_names	typeref:struct:audit_names::filename
name	cgroup.c	/^	char *name;$/;"	m	struct:cgroup_sb_opts	file:
name	debug/kdb/kdb_main.c	/^	char *name;$/;"	m	struct:defcmd_set	file:
name	gcov/fs.c	/^	char name[0];$/;"	m	struct:gcov_node	file:
name	kallsyms.c	/^	char name[KSYM_NAME_LEN];$/;"	m	struct:kallsym_iter	file:
name	module.c	/^	char *name;$/;"	m	struct:module_sect_attr	file:
name	module.c	/^	const char *name;$/;"	m	struct:find_symbol_arg	file:
name	pid_namespace.c	/^	char name[16];$/;"	m	struct:pid_cache	file:
name	power/qos.c	/^	char *name;$/;"	m	struct:pm_qos_object	file:
name	power/sleep_history.c	/^	char name[16];$/;"	m	struct:slp_ws	file:
name	power/userwakelock.c	/^	char			name[0];$/;"	m	struct:user_wake_lock	file:
name	printk.c	/^	char	name[8];			\/* Name of the driver	    *\/$/;"	m	struct:console_cmdline	file:
name	rcutorture.c	/^	char *name;$/;"	m	struct:rcu_torture_ops	file:
name	rcutree.h	/^	char *name;				\/* Name of structure. *\/$/;"	m	struct:rcu_state
name	swap/energy/debugfs_energy.c	/^	char *name;$/;"	m	struct:param_data	file:
name	swap/energy/lcd/lcd_base.h	/^	char *name;			\/**< LCD driver name *\/$/;"	m	struct:lcd_ops
name	swap/ks_features/file_ops.c	/^	const char __user *name;$/;"	m	struct:open_private	file:
name	swap/ksyms/ksyms.c	/^	const char *name;$/;"	m	struct:symbol_data	file:
name	swap/ksyms/no_ksyms.c	/^	char *name;$/;"	m	struct:sys_map_item	file:
name	swap/parser/features.c	/^	char *name;$/;"	m	struct:feature_item	file:
name	swap/parser/usm_msg.c	/^	const char *name;$/;"	m	struct:kmem_info	file:
name	swap/writer/event_filter.h	/^	char *name;                             \/**< Filter name. *\/$/;"	m	struct:ev_filter
name	swap/wsp/wsp.c	/^	const char *name;$/;"	m	struct:wsp_bin	file:
name	swap/wsp/wsp.c	/^	const char *name;$/;"	m	struct:wsp_probe	file:
name	sysctl_binary.c	/^	compat_uptr_t	name;$/;"	m	struct:compat_sysctl_args	file:
name	trace/trace.c	/^	const char *name;$/;"	m	struct:__anon76	file:
name	trace/trace.h	/^	char			*name;$/;"	m	struct:trace_array
name	trace/trace.h	/^	const char		*name;$/;"	m	struct:event_subsystem
name	trace/trace.h	/^	const char		*name;$/;"	m	struct:ftrace_event_field
name	trace/trace.h	/^	const char		*name;$/;"	m	struct:tracer
name	trace/trace.h	/^	const char	*name; \/* Will appear on the trace_options file *\/$/;"	m	struct:tracer_opt
name	trace/trace_probe.h	/^	const char		*name;		\/* Name of type *\/$/;"	m	struct:fetch_type
name	trace/trace_probe.h	/^	const char		*name;	\/* Name of this argument *\/$/;"	m	struct:probe_arg
name	trace/trace_stat.h	/^	const char		*name;$/;"	m	struct:tracer_stat
name	tracepoint.c	/^	char name[0];$/;"	m	struct:tracepoint_entry	file:
name	workqueue.c	/^	char			name[WQ_NAME_LEN]; \/* I: workqueue name *\/$/;"	m	struct:workqueue_struct	file:
name_count	audit.h	/^	int		    name_count; \/* total records in names_list *\/$/;"	m	struct:audit_context
name_len	audit.h	/^	int			name_len;	\/* number of chars to log *\/$/;"	m	struct:audit_names
name_put	audit.h	/^	bool			name_put;	\/* call __putname()? *\/$/;"	m	struct:audit_names
name_unique	irq/proc.c	/^static int name_unique(unsigned int irq, struct irqaction *new_action)$/;"	f	file:
nameoff	kallsyms.c	/^	unsigned int nameoff; \/* If iterating in core kernel symbols. *\/$/;"	m	struct:kallsym_iter	file:
names_list	audit.h	/^	struct list_head    names_list;	\/* struct audit_names->list anchor *\/$/;"	m	struct:audit_context	typeref:struct:audit_context::list_head
nargs	audit.h	/^			int nargs;$/;"	m	struct:audit_context::__anon15::__anon16
ndoms_cur	sched/core.c	/^static int ndoms_cur;		\/* number of sched domains in 'doms_cur' *\/$/;"	v	file:
nearest_hardwall_ancestor	cpuset.c	/^static const struct cpuset *nearest_hardwall_ancestor(const struct cpuset *cs)$/;"	f	file:
nearest_power_of_two	swap/buffer/kernel_operations.h	/^static inline unsigned int nearest_power_of_two(unsigned int number)$/;"	f
need_active_balance	sched/fair.c	/^static int need_active_balance(struct lb_env *env)$/;"	f	file:
need_future_gp	rcutree.h	/^	int need_future_gp[2];$/;"	m	struct:rcu_node
need_more_worker	workqueue.c	/^static bool need_more_worker(struct worker_pool *pool)$/;"	f	file:
need_to_create_worker	workqueue.c	/^static bool need_to_create_worker(struct worker_pool *pool)$/;"	f	file:
need_to_manage_workers	workqueue.c	/^static bool need_to_manage_workers(struct worker_pool *pool)$/;"	f	file:
need_update	tracepoint.c	/^static int need_update;$/;"	v	file:
needcheck	acct.c	/^	unsigned long		needcheck;$/;"	m	struct:bsd_acct_struct	file:
neg_one	sysctl.c	/^static int neg_one = -1;$/;"	v	file:
nest	events/internal.h	/^	local_t				nest;		\/* nested writers    *\/$/;"	m	struct:ring_buffer
network_lat_constraints	power/qos.c	/^static struct pm_qos_constraints network_lat_constraints = {$/;"	v	typeref:struct:pm_qos_constraints	file:
network_lat_pm_qos	power/qos.c	/^static struct pm_qos_object network_lat_pm_qos = {$/;"	v	typeref:struct:pm_qos_object	file:
network_throughput_pm_qos	power/qos.c	/^static struct pm_qos_object network_throughput_pm_qos = {$/;"	v	typeref:struct:pm_qos_object	file:
network_tput_constraints	power/qos.c	/^static struct pm_qos_constraints network_tput_constraints = {$/;"	v	typeref:struct:pm_qos_constraints	file:
new_dst_cpu	sched/fair.c	/^	int			new_dst_cpu;$/;"	m	struct:lb_env	file:
new_idmap_permitted	user_namespace.c	/^static bool new_idmap_permitted(const struct file *file, $/;"	f	file:
new_instance_create	trace/trace.c	/^static int new_instance_create(const char *name)$/;"	f	file:
new_log_buf_len	printk.c	/^static unsigned long __initdata new_log_buf_len;$/;"	v	file:
new_node	gcov/fs.c	/^static struct gcov_node *new_node(struct gcov_node *parent,$/;"	f	file:
new_pages	trace/ring_buffer.c	/^	struct list_head		new_pages; \/* new pages to add *\/$/;"	m	struct:ring_buffer_per_cpu	typeref:struct:ring_buffer_per_cpu::list_head	file:
new_pcap	auditsc.c	/^	struct audit_cap_data	new_pcap;$/;"	m	struct:audit_aux_data_bprm_fcaps	typeref:struct:audit_aux_data_bprm_fcaps::audit_cap_data	file:
new_root	cgroup.c	/^	struct cgroupfs_root *new_root;$/;"	m	struct:cgroup_sb_opts	typeref:struct:cgroup_sb_opts::cgroupfs_root	file:
newlen	sysctl_binary.c	/^	compat_size_t	newlen;$/;"	m	struct:compat_sysctl_args	file:
newtime	time/time_history.c	/^	struct timespec newtime;$/;"	m	struct:time_log_entry	typeref:struct:time_log_entry::timespec	file:
newval	sysctl_binary.c	/^	compat_uptr_t	newval;$/;"	m	struct:compat_sysctl_args	file:
next	auditsc.c	/^	struct audit_aux_data	*next;$/;"	m	struct:audit_aux_data	typeref:struct:audit_aux_data::audit_aux_data	file:
next	auditsc.c	/^	struct audit_tree_refs *next;$/;"	m	struct:audit_tree_refs	typeref:struct:audit_tree_refs::audit_tree_refs	file:
next	debug/kdb/kdb_support.c	/^	u32 next;	\/* offset of next header from start of pool *\/$/;"	m	struct:debug_alloc_header	file:
next	events/uprobes.c	/^	struct map_info *next;$/;"	m	struct:map_info	typeref:struct:map_info::map_info	file:
next	events/uprobes.c	/^	struct return_instance	*next;		\/* keep as stack *\/$/;"	m	struct:return_instance	typeref:struct:return_instance::return_instance	file:
next	gcov/gcov.h	/^	struct gcov_info		*next;$/;"	m	struct:gcov_info	typeref:struct:gcov_info::gcov_info
next	jump_label.c	/^	struct static_key_mod *next;$/;"	m	struct:static_key_mod	typeref:struct:static_key_mod::static_key_mod	file:
next	mutex.c	/^	struct mspin_node *next ;$/;"	m	struct:mspin_node	typeref:struct:mspin_node::mspin_node	file:
next	power/snapshot.c	/^	struct highmem_pbe *next;$/;"	m	struct:highmem_pbe	typeref:struct:highmem_pbe::highmem_pbe	file:
next	power/snapshot.c	/^	struct linked_page *next;$/;"	m	struct:linked_page	typeref:struct:linked_page::linked_page	file:
next	power/swap.c	/^	struct swap_map_page_list *next;$/;"	m	struct:swap_map_page_list	typeref:struct:swap_map_page_list::swap_map_page_list	file:
next	sched/sched.h	/^		int next; \/* next highest *\/$/;"	m	struct:rt_rq::__anon4
next	sched/sched.h	/^	const struct sched_class *next;$/;"	m	struct:sched_class	typeref:struct:sched_class::sched_class
next	sched/sched.h	/^	struct sched_entity *curr, *next, *last, *skip;$/;"	m	struct:cfs_rq	typeref:struct:cfs_rq::
next	sched/sched.h	/^	struct sched_group *next;	\/* Must be a circular list *\/$/;"	m	struct:sched_group	typeref:struct:sched_group::sched_group
next	time/timer_stats.c	/^	struct entry		*next;$/;"	m	struct:entry	typeref:struct:entry::entry	file:
next	trace/ftrace.c	/^	struct ftrace_page	*next;$/;"	m	struct:ftrace_page	typeref:struct:ftrace_page::ftrace_page	file:
next	trace/ftrace.c	/^	struct ftrace_profile_page	*next;$/;"	m	struct:ftrace_profile_page	typeref:struct:ftrace_profile_page::ftrace_profile_page	file:
next	trace/trace.h	/^	struct tracer		*next;$/;"	m	struct:tracer	typeref:struct:tracer::tracer
next_arg	params.c	/^static char *next_arg(char *args, char **param, char **val)$/;"	f	file:
next_avail	debug/kdb/kdb_io.c	/^static char *next_avail = kdb_buffer;$/;"	v	file:
next_balance	sched/fair.c	/^	unsigned long next_balance;     \/* in jiffy units *\/$/;"	m	struct:__anon3	file:
next_balance	sched/sched.h	/^	unsigned long next_balance;$/;"	m	struct:rq
next_cookie	async.c	/^static async_cookie_t next_cookie = 1;$/;"	v	file:
next_event_type	trace/trace_output.c	/^static int next_event_type = __TRACE_LAST_TYPE + 1;$/;"	v	file:
next_hierarchy_id	cgroup.c	/^static int next_hierarchy_id;$/;"	v	file:
next_in_queue	swap/buffer/buffer_description.h	/^	struct swap_subbuffer *next_in_queue;$/;"	m	struct:swap_subbuffer	typeref:struct:swap_subbuffer::swap_subbuffer
next_pidmap	pid.c	/^int next_pidmap(struct pid_namespace *pid_ns, unsigned int last)$/;"	f
next_queue_element	swap/buffer/buffer_queue.c	/^static void next_queue_element(struct queue_t *queue)$/;"	f	file:
next_signal	signal.c	/^int next_signal(struct sigpending *pending, sigset_t *mask)$/;"	f
next_string	module.c	/^static char *next_string(char *string, unsigned long *secsize)$/;"	f	file:
next_swap	power/swap.c	/^	sector_t next_swap;$/;"	m	struct:swap_map_page	file:
next_task_group	sched/rt.c	/^static inline struct task_group *next_task_group(struct task_group *tg)$/;"	f	file:
next_timer	timer.c	/^	unsigned long next_timer;$/;"	m	struct:tvec_base	file:
next_to_ftrace_page	trace/ftrace.c	4173;"	d	file:
next_update	sched/sched.h	/^	unsigned long next_update;$/;"	m	struct:sched_group_power
nexttail	rcutiny_plugin.h	/^	struct rcu_head **nexttail;$/;"	m	struct:rcu_preempt_ctrlblk	typeref:struct:rcu_preempt_ctrlblk::rcu_head
nfakewriters	rcutorture.c	/^static int nfakewriters = 4;	\/* # fake writer threads *\/$/;"	v	file:
ngarbage	kprobes.c	/^	int ngarbage;$/;"	m	struct:kprobe_insn_page	file:
ngroups_max	sysctl.c	/^static int ngroups_max = NGROUPS_MAX;$/;"	v	file:
nhit	trace/trace_kprobe.c	/^	unsigned long 		nhit;$/;"	m	struct:trace_probe	file:
nhit	trace/trace_uprobe.c	/^	unsigned long			nhit;$/;"	m	struct:trace_uprobe	file:
nice	sched/auto_group.h	/^	int			nice;$/;"	m	struct:autogroup
nice	trace/trace.h	/^	unsigned long		nice;$/;"	m	struct:trace_array_cpu
nitz_update	time/time_history.c	/^	int nitz_update;$/;"	m	struct:time_history	file:
nlen	sysctl_binary.c	/^	int		nlen;$/;"	m	struct:compat_sysctl_args	file:
nmissed	swap/kprobe/swap_kprobes.h	/^	int nmissed;$/;"	m	struct:kretprobe
nmissed	swap/kprobe/swap_kprobes.h	/^	unsigned long					nmissed;$/;"	m	struct:kprobe
nmissed	swap/uprobe/swap_uprobes.h	/^	int nmissed;$/;"	m	struct:uretprobe
no_action	irq/handle.c	/^irqreturn_t no_action(int cpl, void *dev_id)$/;"	f
no_blink	panic.c	/^static long no_blink(int state)$/;"	f	file:
no_irq_affinity	irq/proc.c	/^int no_irq_affinity;$/;"	v
no_irq_chip	irq/dummychip.c	/^struct irq_chip no_irq_chip = {$/;"	v	typeref:struct:irq_chip
no_uprobe_events	events/uprobes.c	49;"	d	file:
nocb_buf	rcutree_plugin.h	/^static char __initdata nocb_buf[NR_CPUS * 5];$/;"	v
nocb_gp_wq	rcutree.h	/^	wait_queue_head_t nocb_gp_wq[2];$/;"	m	struct:rcu_node
nocb_head	rcutree.h	/^	struct rcu_head *nocb_head;	\/* CBs waiting for kthread. *\/$/;"	m	struct:rcu_data	typeref:struct:rcu_data::rcu_head
nocb_kthread	rcutree.h	/^	struct task_struct *nocb_kthread;$/;"	m	struct:rcu_data	typeref:struct:rcu_data::task_struct
nocb_p_count	rcutree.h	/^	int nocb_p_count;		\/* # CBs being invoked by kthread *\/$/;"	m	struct:rcu_data
nocb_p_count_lazy	rcutree.h	/^	int nocb_p_count_lazy;		\/*  (approximate). *\/$/;"	m	struct:rcu_data
nocb_q_count	rcutree.h	/^	atomic_long_t nocb_q_count;	\/* # CBs waiting for kthread *\/$/;"	m	struct:rcu_data
nocb_q_count_lazy	rcutree.h	/^	atomic_long_t nocb_q_count_lazy; \/*  (approximate). *\/$/;"	m	struct:rcu_data
nocb_tail	rcutree.h	/^	struct rcu_head **nocb_tail;$/;"	m	struct:rcu_data	typeref:struct:rcu_data::rcu_head
nocb_wq	rcutree.h	/^	wait_queue_head_t nocb_wq;	\/* For nocb kthreads to sleep on. *\/$/;"	m	struct:rcu_data
nocompress	power/hibernate.c	/^static int nocompress;$/;"	v	file:
node	audit_tree.c	/^	struct node {$/;"	s	struct:audit_chunk	file:
node	cgroup.c	/^	struct list_head		node;$/;"	m	struct:cfent	typeref:struct:cfent::list_head	file:
node	kthread.c	/^	int node;$/;"	m	struct:kthread_create_info	file:
node	power/swap.c	/^	struct rb_node node;$/;"	m	struct:swsusp_extent	typeref:struct:swsusp_extent::rb_node	file:
node	power/userwakelock.c	/^	struct rb_node		node;$/;"	m	struct:user_wake_lock	typeref:struct:user_wake_lock::rb_node	file:
node	rcutree.h	/^	struct rcu_node node[NUM_RCU_NODES];	\/* Hierarchy. *\/$/;"	m	struct:rcu_state	typeref:struct:rcu_state::rcu_node
node	swap/ks_features/ks_map.c	/^	struct rb_node node;$/;"	m	struct:entry	typeref:struct:entry::rb_node	file:
node	trace/ftrace.c	/^	struct hlist_node		node;$/;"	m	struct:ftrace_profile	typeref:struct:ftrace_profile::hlist_node	file:
node	trace/ftrace.c	/^	struct hlist_node	node;$/;"	m	struct:ftrace_func_probe	typeref:struct:ftrace_func_probe::hlist_node	file:
node	trace/trace_stat.c	/^	struct rb_node		node;$/;"	m	struct:stat_node	typeref:struct:stat_node::rb_node	file:
node	workqueue.c	/^	int			node;		\/* I: the associated node ID *\/$/;"	m	struct:worker_pool	file:
nohz_balance_enter_idle	sched/fair.c	/^void nohz_balance_enter_idle(int cpu)$/;"	f
nohz_balance_exit_idle	sched/fair.c	/^static inline void nohz_balance_exit_idle(int cpu)$/;"	f	file:
nohz_balancer_kick	sched/fair.c	/^static void nohz_balancer_kick(int cpu)$/;"	f	file:
nohz_flags	sched/sched.h	/^	unsigned long nohz_flags;$/;"	m	struct:rq
nohz_flags	sched/sched.h	1340;"	d
nohz_full_buf	time/tick-sched.c	/^static char __initdata nohz_full_buf[NR_CPUS + 1];$/;"	v	file:
nohz_full_kick_ipi	time/tick-sched.c	/^static void nohz_full_kick_ipi(void *info)$/;"	f	file:
nohz_full_kick_work_func	time/tick-sched.c	/^static void nohz_full_kick_work_func(struct irq_work *work)$/;"	f	file:
nohz_full_mask	time/tick-sched.c	/^static cpumask_var_t nohz_full_mask;$/;"	v	file:
nohz_idle_balance	sched/fair.c	/^static void nohz_idle_balance(int this_cpu, enum cpu_idle_type idle) { }$/;"	f	file:
nohz_idle_balance	sched/fair.c	/^static void nohz_idle_balance(int this_cpu, enum cpu_idle_type idle)$/;"	f	file:
nohz_kick_needed	sched/fair.c	/^static inline int nohz_kick_needed(struct rq *rq, int cpu)$/;"	f	file:
nohz_kick_work_fn	posix-cpu-timers.c	/^static void nohz_kick_work_fn(struct work_struct *work)$/;"	f	file:
nohz_stamp	sched/sched.h	/^	u64 nohz_stamp;$/;"	m	struct:rq
nohz_test_cpu	sched/fair.c	/^static inline int nohz_test_cpu(int cpu)$/;"	f	file:
nohz_test_cpu	sched/fair.c	/^static int nohz_test_cpu(int cpu)$/;"	f	file:
noirqdebug_setup	irq/spurious.c	/^int noirqdebug_setup(char *str)$/;"	f
none	cgroup.c	/^	bool none;$/;"	m	struct:cgroup_sb_opts	file:
nonlazy_posted	rcutree.h	/^	unsigned long nonlazy_posted;$/;"	m	struct:rcu_dynticks
nonlazy_posted_snap	rcutree.h	/^	unsigned long nonlazy_posted_snap;$/;"	m	struct:rcu_dynticks
noop	irq/dummychip.c	/^static void noop(struct irq_data *data) { }$/;"	f	file:
noop_count	lockdep.c	/^static int noop_count(struct lock_list *entry, void *data)$/;"	f	file:
noop_ret	irq/dummychip.c	/^static unsigned int noop_ret(struct irq_data *data)$/;"	f	file:
nop_flags	trace/trace_nop.c	/^static struct tracer_flags nop_flags = {$/;"	v	typeref:struct:tracer_flags	file:
nop_opts	trace/trace_nop.c	/^static struct tracer_opt nop_opts[] = {$/;"	v	typeref:struct:tracer_opt	file:
nop_set_flag	trace/trace_nop.c	/^static int nop_set_flag(u32 old_flags, u32 bit, int set)$/;"	f	file:
nop_trace_init	trace/trace_nop.c	/^static int nop_trace_init(struct trace_array *tr)$/;"	f	file:
nop_trace_reset	trace/trace_nop.c	/^static void nop_trace_reset(struct trace_array *tr)$/;"	f	file:
noresume	power/hibernate.c	/^static int noresume;$/;"	v	file:
noresume_setup	power/hibernate.c	/^static int __init noresume_setup(char *str)$/;"	f	file:
normal_prio	sched/core.c	/^static inline int normal_prio(struct task_struct *p)$/;"	f	file:
normalize_cfs_quota	sched/core.c	/^static u64 normalize_cfs_quota(struct task_group *tg,$/;"	f	file:
normalize_rt_tasks	sched/core.c	/^void normalize_rt_tasks(void)$/;"	f
normalize_task	sched/core.c	/^static void normalize_task(struct rq *rq, struct task_struct *p)$/;"	f	file:
normalized_sysctl_sched_latency	sched/fair.c	/^unsigned int normalized_sysctl_sched_latency = 6000000ULL;$/;"	v
normalized_sysctl_sched_min_granularity	sched/fair.c	/^unsigned int normalized_sysctl_sched_min_granularity = 750000ULL;$/;"	v
normalized_sysctl_sched_wakeup_granularity	sched/fair.c	/^unsigned int normalized_sysctl_sched_wakeup_granularity = 1000000UL;$/;"	v
nosave_region	power/snapshot.c	/^struct nosave_region {$/;"	s	file:
nosmp	smp.c	/^static int __init nosmp(char *str)$/;"	f	file:
nosoftlockup_setup	watchdog.c	/^static int __init nosoftlockup_setup(char *str)$/;"	f	file:
not	trace/trace.h	/^	int 			not;$/;"	m	struct:filter_pred
not_in_range	lockdep.c	/^static inline int not_in_range(const void* mem_from, unsigned long mem_len,$/;"	f	file:
not_visited	trace/trace_events_filter.c	/^	char *not_visited;$/;"	m	struct:test_filter_data_t	file:
notask_error	exit.c	/^	int			notask_error;$/;"	m	struct:wait_opts	file:
note_interrupt	irq/spurious.c	/^void note_interrupt(unsigned int irq, struct irq_desc *desc,$/;"	f
note_new_gpnum	rcutree.c	/^static void note_new_gpnum(struct rcu_state *rsp, struct rcu_data *rdp)$/;"	f	file:
notes	module.c	/^	unsigned int notes;$/;"	m	struct:module_notes_attrs	file:
notes_attr	ksysfs.c	/^static struct bin_attribute notes_attr = {$/;"	v	typeref:struct:bin_attribute	file:
notes_read	ksysfs.c	/^static ssize_t notes_read(struct file *filp, struct kobject *kobj,$/;"	f	file:
notes_size	ksysfs.c	165;"	d	file:
notifier	swap/energy/lcd/lcd_base.h	/^	notifier_lcd notifier;		\/**< Notifier *\/$/;"	m	struct:lcd_ops
notifier_call_chain	notifier.c	/^static int __kprobes notifier_call_chain(struct notifier_block **nl,$/;"	f	file:
notifier_chain_cond_register	notifier.c	/^static int notifier_chain_cond_register(struct notifier_block **nl,$/;"	f	file:
notifier_chain_register	notifier.c	/^static int notifier_chain_register(struct notifier_block **nl,$/;"	f	file:
notifier_chain_unregister	notifier.c	/^static int notifier_chain_unregister(struct notifier_block **nl,$/;"	f	file:
notifier_lcd	swap/energy/lcd/lcd_base.h	/^typedef int (*notifier_lcd)(struct lcd_ops *ops, enum lcd_action_type action,$/;"	t
notify_cpu_starting	cpu.c	/^void __cpuinit notify_cpu_starting(unsigned int cpu)$/;"	f
notify_die	notifier.c	/^int notrace __kprobes notify_die(enum die_val val, const char *str,$/;"	f
notify_on_release	cgroup.c	/^static int notify_on_release(const struct cgroup *cgrp)$/;"	f	file:
now	time/timer_list.c	/^	u64 now;$/;"	m	struct:timer_list_iter	file:
nowatchdog_setup	watchdog.c	/^static int __init nowatchdog_setup(char *str)$/;"	f	file:
np	swap/uprobe/arch/arm/swap-asm/trampoline_thumb.S	/^np:             nop                     \/\/ stored PC-4(next insn addr) hi$/;"	l
np1	swap/kprobe/arch/arm/swap-asm/trampoline_arm.S	/^np1:		nop			\/\/ stored PC-4 (next insn addr)$/;"	l
np2	swap/kprobe/arch/arm/swap-asm/trampoline_arm.S	/^np2:		nop			\/\/ stored PC-4 (next insn addr)$/;"	l
np2	swap/uprobe/arch/arm/swap-asm/trampoline_thumb.S	/^np2:            nop                     \/\/ stored PC-4(next insn addr) hi$/;"	l
np3	swap/kprobe/arch/arm/swap-asm/trampoline_arm.S	/^np3:		nop			\/\/ stored PC-4 (next insn addr)$/;"	l
np3	swap/uprobe/arch/arm/swap-asm/trampoline_thumb.S	/^np3:            nop                     \/\/ stored PC-4(next insn addr) hi$/;"	l
np4	swap/uprobe/arch/arm/swap-asm/trampoline_thumb.S	/^np4:            nop                     \/\/ stored PC-4(next insn addr) hi$/;"	l
np5	swap/uprobe/arch/arm/swap-asm/trampoline_thumb.S	/^np5:            nop                     \/\/ stored PC-4(next insn addr) hi$/;"	l
nr	trace/trace.h	/^	int			nr;$/;"	m	struct:syscall_trace_enter
nr	trace/trace.h	/^	int			nr;$/;"	m	struct:syscall_trace_exit
nr_active	workqueue.c	/^	int			nr_active;	\/* L: nr of active works *\/$/;"	m	struct:pool_workqueue	file:
nr_args	trace/trace_kprobe.c	/^	unsigned int		nr_args;$/;"	m	struct:trace_probe	file:
nr_args	trace/trace_uprobe.c	/^	unsigned int			nr_args;$/;"	m	struct:trace_uprobe	file:
nr_busy_cpus	sched/sched.h	/^	atomic_t nr_busy_cpus;$/;"	m	struct:sched_group_power
nr_callchain_events	events/callchain.c	/^static atomic_t nr_callchain_events;$/;"	v	file:
nr_chain_hlocks	lockdep.c	/^int nr_chain_hlocks;$/;"	v
nr_context_switches	sched/core.c	/^unsigned long long nr_context_switches(void)$/;"	f
nr_copy_pages	power/snapshot.c	/^static unsigned int nr_copy_pages;$/;"	v	file:
nr_cpu_ids	smp.c	/^EXPORT_SYMBOL(nr_cpu_ids);$/;"	v
nr_cpus	sched/fair.c	/^	atomic_t nr_cpus;$/;"	m	struct:__anon3	file:
nr_cyclic_check_recursions	lockdep_internals.h	/^	int	nr_cyclic_check_recursions;$/;"	m	struct:lockdep_stats
nr_cyclic_checks	lockdep_internals.h	/^	int	nr_cyclic_checks;$/;"	m	struct:lockdep_stats
nr_drainers	workqueue.c	/^	int			nr_drainers;	\/* WQ: drain in progress *\/$/;"	m	struct:workqueue_struct	file:
nr_entries	time/timer_stats.c	/^static unsigned long nr_entries;$/;"	v	file:
nr_events	trace/trace.h	/^	int				nr_events;$/;"	m	struct:ftrace_subsystem_dir
nr_find_usage_backwards_checks	lockdep_internals.h	/^	int	nr_find_usage_backwards_checks;$/;"	m	struct:lockdep_stats
nr_find_usage_backwards_recursions	lockdep_internals.h	/^	int	nr_find_usage_backwards_recursions;$/;"	m	struct:lockdep_stats
nr_find_usage_forwards_checks	lockdep_internals.h	/^	int	nr_find_usage_forwards_checks;$/;"	m	struct:lockdep_stats
nr_find_usage_forwards_recursions	lockdep_internals.h	/^	int	nr_find_usage_forwards_recursions;$/;"	m	struct:lockdep_stats
nr_garbage	kprobes.c	/^	int nr_garbage;$/;"	m	struct:kprobe_insn_cache	file:
nr_hardirq_chains	lockdep.c	/^unsigned int nr_hardirq_chains;$/;"	v
nr_idle	workqueue.c	/^	int			nr_idle;	\/* L: currently idle ones *\/$/;"	m	struct:worker_pool	file:
nr_ids	pid_namespace.c	/^	int nr_ids;$/;"	m	struct:pid_cache	file:
nr_in_flight	workqueue.c	/^	int			nr_in_flight[WORK_NR_COLORS];$/;"	m	struct:pool_workqueue	file:
nr_iowait	sched/core.c	/^unsigned long nr_iowait(void)$/;"	f
nr_iowait	sched/sched.h	/^	atomic_t nr_iowait;$/;"	m	struct:rq
nr_iowait_cpu	sched/core.c	/^unsigned long nr_iowait_cpu(int cpu)$/;"	f
nr_irqs	irq/irqdesc.c	/^EXPORT_SYMBOL_GPL(nr_irqs);$/;"	v
nr_irqs	irq/irqdesc.c	/^int nr_irqs = NR_IRQS;$/;"	v
nr_list_entries	lockdep.c	/^unsigned long nr_list_entries;$/;"	v
nr_load_updates	sched/sched.h	/^	unsigned long nr_load_updates;$/;"	m	struct:rq
nr_lock_chains	lockdep.c	/^unsigned long nr_lock_chains;$/;"	v
nr_lock_classes	lockdep.c	/^unsigned long nr_lock_classes;$/;"	v
nr_meta_pages	power/snapshot.c	/^static unsigned int nr_meta_pages;$/;"	v	file:
nr_pages	events/internal.h	/^	int				nr_pages;	\/* nr of data pages  *\/$/;"	m	struct:ring_buffer
nr_pages	trace/ring_buffer.c	/^	unsigned int			nr_pages;$/;"	m	struct:ring_buffer_per_cpu	file:
nr_pages_to_update	trace/ring_buffer.c	/^	int				nr_pages_to_update;$/;"	m	struct:ring_buffer_per_cpu	file:
nr_periods	sched/sched.h	/^	int nr_periods, nr_throttled;$/;"	m	struct:cfs_bandwidth
nr_process_chains	lockdep.c	/^unsigned int nr_process_chains;$/;"	v
nr_processes	fork.c	/^int nr_processes(void)$/;"	f
nr_pwqs_to_flush	workqueue.c	/^	atomic_t		nr_pwqs_to_flush; \/* flush in progress *\/$/;"	m	struct:workqueue_struct	file:
nr_running	sched/core.c	/^unsigned long nr_running(void)$/;"	f
nr_running	sched/sched.h	/^	unsigned int nr_running, h_nr_running;$/;"	m	struct:cfs_rq
nr_running	sched/sched.h	/^	unsigned int nr_running;$/;"	m	struct:rq
nr_slots	events/hw_breakpoint.c	/^static int nr_slots[TYPE_MAX];$/;"	v	file:
nr_softirq_chains	lockdep.c	/^unsigned int nr_softirq_chains;$/;"	v
nr_spread_over	sched/sched.h	/^	unsigned int nr_spread_over;$/;"	m	struct:cfs_rq
nr_stack_trace_entries	lockdep.c	/^unsigned long nr_stack_trace_entries;$/;"	v
nr_subbuffers	swap/buffer/swap_buffer_module.h	/^	unsigned int nr_subbuffers;$/;"	m	struct:buffer_init_t
nr_switches	sched/sched.h	/^	u64 nr_switches;$/;"	m	struct:rq
nr_systemwide	trace/trace_uprobe.c	/^	int			nr_systemwide;$/;"	m	struct:trace_uprobe_filter	file:
nr_threads	fork.c	/^int nr_threads;			\/* The idle threads do not count.. *\/$/;"	v
nr_throttled	sched/sched.h	/^	int nr_periods, nr_throttled;$/;"	m	struct:cfs_bandwidth
nr_todo	stop_machine.c	/^	atomic_t		nr_todo;	\/* nr left to execute *\/$/;"	m	struct:cpu_stop_done	file:
nr_uninterruptible	sched/sched.h	/^	unsigned long nr_uninterruptible;$/;"	m	struct:rq
nr_unused_locks	lockdep_internals.h	/^	int	nr_unused_locks;$/;"	m	struct:lockdep_stats
nr_workers	workqueue.c	/^	int			nr_workers;	\/* L: total number of workers *\/$/;"	m	struct:worker_pool	file:
nrcpus	smp.c	/^static int __init nrcpus(char *str)$/;"	f	file:
nreaders	rcutorture.c	/^static int nreaders = -1;	\/* # reader threads, defaults to 2*ncpus *\/$/;"	v	file:
nrealreaders	rcutorture.c	/^static int nrealreaders;$/;"	v	file:
ns	acct.c	/^	struct pid_namespace	*ns;$/;"	m	struct:bsd_acct_struct	typeref:struct:bsd_acct_struct::pid_namespace	file:
ns	cgroup.c	/^	struct { enum cgroup_filetype type; struct pid_namespace *ns; } key;$/;"	m	struct:cgroup_pidlist::__anon65	typeref:struct:cgroup_pidlist::__anon65::pid_namespace	file:
ns2usecs	trace/trace.c	/^unsigned long long ns2usecs(cycle_t nsec)$/;"	f
ns_capable	capability.c	/^EXPORT_SYMBOL(ns_capable);$/;"	v
ns_capable	capability.c	/^bool ns_capable(struct user_namespace *ns, int cap)$/;"	f
ns_to_timespec	time.c	/^EXPORT_SYMBOL(ns_to_timespec);$/;"	v
ns_to_timespec	time.c	/^struct timespec ns_to_timespec(const s64 nsec)$/;"	f
ns_to_timeval	time.c	/^EXPORT_SYMBOL(ns_to_timeval);$/;"	v
ns_to_timeval	time.c	/^struct timeval ns_to_timeval(const s64 nsec)$/;"	f
nsec	time/ntp.c	/^	long		nsec;	\/* nanoseconds *\/$/;"	m	struct:pps_normtime	file:
nsec_high	sched/debug.c	/^static long long nsec_high(unsigned long long nsec)$/;"	f	file:
nsec_low	sched/debug.c	/^static unsigned long nsec_low(unsigned long long nsec)$/;"	f	file:
nsec_to_clock_t	time.c	/^u64 nsec_to_clock_t(u64 x)$/;"	f
nsecs_to_jiffies	time.c	/^unsigned long nsecs_to_jiffies(u64 n)$/;"	f
nsecs_to_jiffies64	time.c	/^u64 nsecs_to_jiffies64(u64 n)$/;"	f
nsecs_to_usecs	trace/trace.c	/^unsigned long nsecs_to_usecs(unsigned long nsecs)$/;"	f
nsections	module.c	/^	unsigned int nsections;$/;"	m	struct:module_sect_attrs	file:
nsown_capable	capability.c	/^bool nsown_capable(int cap)$/;"	f
nsp_data	swap/nsp/nsp.c	/^struct nsp_data {$/;"	s	file:
nsp_data	swap/nsp/nsp_tdata.h	/^	struct nsp_data *nsp_data;$/;"	m	struct:tdata	typeref:struct:tdata::nsp_data
nsp_data_add	swap/nsp/nsp.c	/^static void nsp_data_add(struct nsp_data *data)$/;"	f	file:
nsp_data_create	swap/nsp/nsp.c	/^static struct nsp_data *nsp_data_create(const char *app_path,$/;"	f	file:
nsp_data_destroy	swap/nsp/nsp.c	/^static void nsp_data_destroy(struct nsp_data *data)$/;"	f	file:
nsp_data_find	swap/nsp/nsp.c	/^static struct nsp_data *nsp_data_find(const struct dentry *dentry)$/;"	f	file:
nsp_data_find_by_path	swap/nsp/nsp.c	/^static struct nsp_data *nsp_data_find_by_path(const char *path)$/;"	f	file:
nsp_data_inst	swap/nsp/nsp.c	/^static int nsp_data_inst(struct nsp_data *data)$/;"	f	file:
nsp_data_rm	swap/nsp/nsp.c	/^static void nsp_data_rm(struct nsp_data *data)$/;"	f	file:
nsp_data_uninst	swap/nsp/nsp.c	/^static void nsp_data_uninst(struct nsp_data *data)$/;"	f	file:
nsp_debugfs_exit	swap/nsp/nsp_debugfs.c	/^void nsp_debugfs_exit(void)$/;"	f
nsp_debugfs_init	swap/nsp/nsp_debugfs.c	/^int nsp_debugfs_init(void)$/;"	f
nsp_dir	swap/nsp/nsp_debugfs.c	/^static struct dentry *nsp_dir = NULL;$/;"	v	typeref:struct:dentry	file:
nsp_exit	swap/nsp/nsp.c	/^void nsp_exit(void)$/;"	f
nsp_get_stat	swap/nsp/nsp.c	/^enum nsp_stat nsp_get_stat(void)$/;"	f
nsp_init	swap/nsp/nsp.c	/^int nsp_init(void)$/;"	f
nsp_msg	swap/nsp/nsp_msg.c	/^void nsp_msg(enum nsp_msg_stage stage, u64 begin_time, u64 end_time)$/;"	f
nsp_msg_stage	swap/nsp/nsp_msg.h	/^enum nsp_msg_stage {$/;"	g
nsp_msg_struct	swap/nsp/nsp_msg.c	/^struct nsp_msg_struct {$/;"	s	file:
nsp_print	swap/nsp/nsp_print.h	31;"	d
nsp_proc_stat	swap/nsp/nsp_tdata.h	/^enum nsp_proc_stat {$/;"	g
nsp_set_stat	swap/nsp/nsp.c	/^int nsp_set_stat(enum nsp_stat st)$/;"	f
nsp_stat	swap/nsp/nsp.h	/^enum nsp_stat {$/;"	g
nsproxy_cache_init	nsproxy.c	/^int __init nsproxy_cache_init(void)$/;"	f
nsproxy_cachep	nsproxy.c	/^static struct kmem_cache *nsproxy_cachep;$/;"	v	typeref:struct:kmem_cache	file:
ntp_clear	time/ntp.c	/^void ntp_clear(void)$/;"	f
ntp_init	time/ntp.c	/^void __init ntp_init(void)$/;"	f
ntp_notify_cmos_timer	time/ntp.c	/^void ntp_notify_cmos_timer(void) { }$/;"	f
ntp_notify_cmos_timer	time/ntp.c	/^void ntp_notify_cmos_timer(void)$/;"	f
ntp_offset_chunk	time/ntp.c	/^static inline s64 ntp_offset_chunk(s64 offset)$/;"	f	file:
ntp_synced	time/ntp.c	/^static inline int ntp_synced(void)$/;"	f	file:
ntp_tick_adj	time/ntp.c	/^static s64			ntp_tick_adj;$/;"	v	file:
ntp_tick_adj_setup	time/ntp.c	/^static int __init ntp_tick_adj_setup(char *str)$/;"	f	file:
ntp_tick_length	time/ntp.c	/^u64 ntp_tick_length(void)$/;"	f
ntp_update_frequency	time/ntp.c	/^static void ntp_update_frequency(void)$/;"	f	file:
ntp_update_offset	time/ntp.c	/^static void ntp_update_offset(long offset)$/;"	f	file:
ntp_update_offset_fll	time/ntp.c	/^static inline s64 ntp_update_offset_fll(s64 offset64, long secs)$/;"	f	file:
ntp_validate_timex	time/ntp.c	/^int ntp_validate_timex(struct timex *txc)$/;"	f
null_pm_qos	power/qos.c	/^static struct pm_qos_object null_pm_qos;$/;"	v	typeref:struct:pm_qos_object	file:
num	gcov/gcov.h	/^	unsigned int	num;$/;"	m	struct:gcov_ctr_info
num	params.c	/^	unsigned int num;$/;"	m	struct:module_param_attrs	file:
num	swap/energy/rational_debugfs.h	/^	u64 num;		\/**< Numerator *\/$/;"	m	struct:rational
num_counter_active	gcov/gcc_3_4.c	/^static unsigned int num_counter_active(struct gcov_info *info)$/;"	f	file:
num_cpus_frozen	sched/core.c	/^static int num_cpus_frozen;	\/* used to mark begin\/end of suspend\/resume *\/$/;"	v	file:
num_debug	module.c	/^	unsigned int num_debug;$/;"	m	struct:load_info	file:
num_loaded	gcov/fs.c	/^	int num_loaded;$/;"	m	struct:gcov_node	file:
num_physpages	power/power.h	/^	unsigned long		num_physpages;$/;"	m	struct:swsusp_info
num_rcu_lvl	rcutree.c	/^static int num_rcu_lvl[] = {  \/* Number of rcu_nodes at specified level. *\/$/;"	v	file:
num_tests	test_kprobes.c	/^static int errors, handler_errors, num_tests;$/;"	v	file:
num_threads	stop_machine.c	/^	unsigned int		num_threads;$/;"	m	struct:stop_machine_data	file:
num_types	gcov/gcc_3_4.c	/^	int num_types;$/;"	m	struct:gcov_iterator	file:
numa_level	sched/core.c	/^	int		    numa_level;$/;"	m	struct:sched_domain_topology_level	file:
numa_pwq_tbl	workqueue.c	/^	struct pool_workqueue __rcu *numa_pwq_tbl[]; \/* FR: unbound pwqs indexed by node *\/$/;"	m	struct:workqueue_struct	typeref:struct:workqueue_struct::__rcu	file:
numa_pwq_tbl_install	workqueue.c	/^static struct pool_workqueue *numa_pwq_tbl_install(struct workqueue_struct *wq,$/;"	f	file:
numabalancing_enabled	sched/core.c	/^__read_mostly bool numabalancing_enabled;$/;"	v
numabalancing_enabled	sched/sched.h	774;"	d
numabalancing_enabled	sched/sched.h	780;"	d
nused	kprobes.c	/^	int nused;$/;"	m	struct:kprobe_insn_page	file:
nxtcompleted	rcutree.h	/^	unsigned long	nxtcompleted[RCU_NEXT_SIZE];$/;"	m	struct:rcu_data
nxtlist	rcutree.h	/^	struct rcu_head *nxtlist;$/;"	m	struct:rcu_data	typeref:struct:rcu_data::rcu_head
nxttail	rcutree.h	/^	struct rcu_head **nxttail[RCU_NEXT_SIZE];$/;"	m	struct:rcu_data	typeref:struct:rcu_data::rcu_head
obj-y	Makefile	/^obj-y     = fork.o exec_domain.o panic.o printk.o \\$/;"	m
obj-y	cpu/Makefile	/^obj-y	= idle.o$/;"	m
obj-y	debug/kdb/Makefile	/^obj-y := kdb_io.o kdb_main.o kdb_support.o kdb_bt.o gen-kdb_cmds.o kdb_bp.o kdb_debugger.o$/;"	m
obj-y	events/Makefile	/^obj-y := core.o ring_buffer.o callchain.o$/;"	m
obj-y	irq/Makefile	/^obj-y := irqdesc.o handle.o manage.o spurious.o resend.o chip.o dummychip.o devres.o$/;"	m
objtree	gcov/fs.c	/^static const char objtree[] = OBJTREE;$/;"	v	file:
offline_fqs	rcutree.h	/^	unsigned long offline_fqs;	\/* Kicked due to being offline. *\/$/;"	m	struct:rcu_data
offset	events/uprobes.c	/^	loff_t			offset;$/;"	m	struct:uprobe	file:
offset	gcov/gcc_3_4.c	/^	unsigned int offset;$/;"	m	struct:type_info	file:
offset	power/user.c	/^	compat_loff_t offset;$/;"	m	struct:compat_resume_swap_area	file:
offset	swap/kprobe/swap_kprobes.h	/^	unsigned int					offset;$/;"	m	struct:kprobe
offset	swap/preload/preload_debugfs.c	/^	unsigned long offset;$/;"	m	struct:loader_info	file:
offset	swap/us_manager/probes/probe_info_new.h	/^	unsigned long offset;$/;"	m	struct:probe_new
offset	swap/us_manager/sspt/ip.h	/^	unsigned long offset;       \/**< Page offset *\/$/;"	m	struct:us_ip
offset	swap/us_manager/sspt/sspt_page.h	/^	unsigned long offset;			\/**< File offset *\/$/;"	m	struct:sspt_page
offset	trace/trace.h	/^	int			offset;$/;"	m	struct:ftrace_event_field
offset	trace/trace.h	/^	int 			offset;$/;"	m	struct:filter_pred
offset	trace/trace_probe.c	/^	long		offset;$/;"	m	struct:symbol_cache	file:
offset	trace/trace_probe.h	/^	unsigned int		offset;	\/* Offset from argument entry *\/$/;"	m	struct:probe_arg
offset	trace/trace_uprobe.c	/^	unsigned long			offset;$/;"	m	struct:trace_uprobe	file:
offset_t	swap/nsp/nsp.h	/^enum offset_t {$/;"	g
offset_to_vaddr	events/uprobes.c	/^static unsigned long offset_to_vaddr(struct vm_area_struct *vma, loff_t offset)$/;"	f	file:
ofile	swap/parser/usm_msg.c	/^struct ofile {$/;"	s	file:
oflag	audit.h	/^			int			oflag;$/;"	m	struct:audit_context::__anon15::__anon21
old_pcap	auditsc.c	/^	struct audit_cap_data	old_pcap;$/;"	m	struct:audit_aux_data_bprm_fcaps	typeref:struct:audit_aux_data_bprm_fcaps::audit_cap_data	file:
old_vsyscall_fixup	time/timekeeping.c	/^static inline void old_vsyscall_fixup(struct timekeeper *tk)$/;"	f	file:
old_vsyscall_fixup	time/timekeeping.c	1339;"	d	file:
oldlenp	sysctl_binary.c	/^	compat_uptr_t	oldlenp;$/;"	m	struct:compat_sysctl_args	file:
oldtime	time/time_history.c	/^	struct timespec oldtime;$/;"	m	struct:time_log_entry	typeref:struct:time_log_entry::timespec	file:
oldval	sysctl_binary.c	/^	compat_uptr_t	oldval;$/;"	m	struct:compat_sysctl_args	file:
on_each_cpu	smp.c	/^EXPORT_SYMBOL(on_each_cpu);$/;"	v
on_each_cpu	smp.c	/^int on_each_cpu(void (*func) (void *info), void *info, int wait)$/;"	f
on_each_cpu_cond	smp.c	/^EXPORT_SYMBOL(on_each_cpu_cond);$/;"	v
on_each_cpu_cond	smp.c	/^void on_each_cpu_cond(bool (*cond_func)(int cpu, void *info),$/;"	f
on_each_cpu_mask	smp.c	/^EXPORT_SYMBOL(on_each_cpu_mask);$/;"	v
on_each_cpu_mask	smp.c	/^void on_each_cpu_mask(const struct cpumask *mask, smp_call_func_t func,$/;"	f
on_each_proc	swap/us_manager/sspt/sspt_proc.c	/^EXPORT_SYMBOL_GPL(on_each_proc);$/;"	v
on_each_proc	swap/us_manager/sspt/sspt_proc.c	/^void on_each_proc(void (*func)(struct sspt_proc *, void *), void *data)$/;"	f
on_each_proc_callback	swap/us_manager/debugfs_us_manager.c	/^static void on_each_proc_callback(struct sspt_proc *proc, void *data)$/;"	f	file:
on_each_proc_no_lock	swap/us_manager/sspt/sspt_proc.c	/^void on_each_proc_no_lock(void (*func)(struct sspt_proc *, void *), void *data)$/;"	f
on_list	sched/sched.h	/^	int on_list;$/;"	m	struct:cfs_rq
on_null_domain	sched/fair.c	/^static inline int on_null_domain(int cpu)$/;"	f	file:
on_rt_rq	sched/rt.c	/^static inline int on_rt_rq(struct sched_rt_entity *rt_se)$/;"	f	file:
once	swap/kprobe/swap_kprobes.c	/^static int once(void)$/;"	f	file:
once	swap/ks_features/ks_features.c	/^static int once(void)$/;"	f	file:
once	swap/master/swap_initializer.h	/^	swap_init_t once;	\/* to call only on the first initialization *\/$/;"	m	struct:swap_init_struct
once	swap/parser/swap_msg_parser.c	/^static int once(void)$/;"	f	file:
once	swap/uprobe/swap_uprobes.c	/^static int once(void)$/;"	f	file:
once_cmd	swap/parser/msg_cmd.c	/^int once_cmd(void)$/;"	f
once_features	swap/parser/features.c	/^int once_features(void)$/;"	f
once_flag	swap/master/swap_initializer.h	/^	unsigned once_flag:1;$/;"	m	struct:swap_init_struct
once_helper	swap/us_manager/helper.c	/^int once_helper(void)$/;"	f
one	sysctl.c	/^static int __maybe_unused one = 1;$/;"	v	file:
one_hundred	sysctl.c	/^static int one_hundred = 100;$/;"	v	file:
one_ul	sysctl.c	/^static unsigned long one_ul = 1;$/;"	v	file:
onecputick	posix-cpu-timers.c	/^static u32 onecputick;$/;"	v	file:
online	events/core.c	/^	bool				online;$/;"	m	struct:swevent_htable	file:
online	sched/sched.h	/^	cpumask_var_t online;$/;"	m	struct:root_domain
online	sched/sched.h	/^	int online;$/;"	m	struct:rq
online_css	cgroup.c	/^static int online_css(struct cgroup_subsys *ss, struct cgroup *cgrp)$/;"	f	file:
onoff_holdoff	rcutorture.c	/^static int onoff_holdoff;	\/* Seconds after boot before CPU hotplugs. *\/$/;"	v	file:
onoff_interval	rcutorture.c	/^static int onoff_interval;	\/* Wait time between CPU hotplugs, 0=disable. *\/$/;"	v	file:
onoff_mutex	rcutree.h	/^	struct mutex onoff_mutex;		\/* Coordinate hotplug & GPs. *\/$/;"	m	struct:rcu_state	typeref:struct:rcu_state::mutex
onoff_task	rcutorture.c	/^static struct task_struct *onoff_task;$/;"	v	typeref:struct:task_struct	file:
oom_callback_count	rcutree_plugin.h	/^static atomic_t oom_callback_count;$/;"	v
oom_head	rcutree.h	/^	struct rcu_head oom_head;$/;"	m	struct:rcu_data	typeref:struct:rcu_data::rcu_head
oops_enter	panic.c	/^void oops_enter(void)$/;"	f
oops_exit	panic.c	/^void oops_exit(void)$/;"	f
oops_id	panic.c	/^static u64 oops_id;$/;"	v	file:
oops_in_progress	printk.c	/^EXPORT_SYMBOL(oops_in_progress);$/;"	v
oops_in_progress	printk.c	/^int oops_in_progress;$/;"	v
oops_may_print	panic.c	/^int oops_may_print(void)$/;"	f
oops_setup	panic.c	/^static int __init oops_setup(char *s)$/;"	f	file:
op	trace/trace.h	/^	int 			op;$/;"	m	struct:filter_pred
op	trace/trace_events_filter.c	/^	int op;$/;"	m	struct:opstack_op	file:
op	trace/trace_events_filter.c	/^	int op;$/;"	m	struct:postfix_elt	file:
opcode	rtmutex-tester.c	/^	int			opcode;$/;"	m	struct:test_thread_data	file:
opcode	swap/kprobe/swap_kprobes.h	/^	kprobe_opcode_t					opcode;$/;"	m	struct:kprobe
opcode	swap/uprobe/swap_uprobes.h	/^	kprobe_opcode_t	opcode;$/;"	m	struct:uinst_info
opdata	rtmutex-tester.c	/^	int			opdata;$/;"	m	struct:test_thread_data	file:
open	trace/trace.h	/^	void			(*open)(struct trace_iterator *iter);$/;"	m	struct:tracer
open_arg	auditsc.c	/^static inline int open_arg(int flags, int mask)$/;"	f	file:
open_entry_handler	swap/ks_features/file_ops.c	/^static int open_entry_handler(struct kretprobe_instance *ri,$/;"	f	file:
open_private	swap/ks_features/file_ops.c	/^struct open_private {$/;"	s	file:
open_private_init	swap/ks_features/file_ops.c	/^static int open_private_init(const char *args, struct pt_regs *regs,$/;"	f	file:
open_ret_handler	swap/ks_features/file_ops.c	/^static int open_ret_handler(struct kretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
open_softirq	softirq.c	/^void open_softirq(int nr, void (*action)(struct softirq_action *))$/;"	f
operand	trace/trace_events_filter.c	/^	char *operand;$/;"	m	struct:postfix_elt	file:
operand	trace/trace_events_filter.c	/^	} operand;$/;"	m	struct:filter_parse_state	typeref:struct:filter_parse_state::__anon91	file:
ops	trace/ftrace.c	/^	struct ftrace_ops		*ops;$/;"	m	struct:ftrace_iterator	typeref:struct:ftrace_iterator::ftrace_ops	file:
ops	trace/ftrace.c	/^	struct ftrace_probe_ops	*ops;$/;"	m	struct:ftrace_func_probe	typeref:struct:ftrace_func_probe::ftrace_probe_ops	file:
ops	trace/trace.h	/^	unsigned short		*ops;$/;"	m	struct:filter_pred
ops	trace/trace_events_filter.c	/^	struct filter_op *ops;$/;"	m	struct:filter_parse_state	typeref:struct:filter_parse_state::filter_op	file:
ops	trace/trace_events_filter.c	/^	struct ftrace_ops *ops;$/;"	m	struct:function_filter_data	typeref:struct:function_filter_data::ftrace_ops	file:
ops_references_rec	trace/ftrace.c	/^ops_references_rec(struct ftrace_ops *ops, struct dyn_ftrace *rec)$/;"	f	file:
ops_traces_mod	trace/ftrace.c	/^static inline int ops_traces_mod(struct ftrace_ops *ops)$/;"	f	file:
opstack	trace/trace_events_filter.c	/^	struct list_head opstack;$/;"	m	struct:filter_parse_state	typeref:struct:filter_parse_state::list_head	file:
opstack_op	trace/trace_events_filter.c	/^struct opstack_op {$/;"	s	file:
opt	trace/trace.c	/^	struct tracer_opt		*opt;$/;"	m	struct:trace_option_dentry	typeref:struct:trace_option_dentry::tracer_opt	file:
opt_kgdb_con	debug/debug_core.c	/^static int __init opt_kgdb_con(char *str)$/;"	f	file:
opt_kgdb_wait	debug/debug_core.c	/^static int __init opt_kgdb_wait(char *str)$/;"	f	file:
opt_nokgdbroundup	debug/debug_core.c	/^static int __init opt_nokgdbroundup(char *str)$/;"	f	file:
opt_pre_handler	kprobes.c	/^void __kprobes opt_pre_handler(struct kprobe *p, struct pt_regs *regs)$/;"	f
optimize_all_kprobes	kprobes.c	/^static void __kprobes optimize_all_kprobes(void)$/;"	f	file:
optimize_kprobe	kprobes.c	/^static __kprobes void optimize_kprobe(struct kprobe *p)$/;"	f	file:
optimize_kprobe	kprobes.c	914;"	d	file:
options	printk.c	/^	char	*options;			\/* Options for the driver   *\/$/;"	m	struct:console_cmdline	file:
options	trace/trace.h	/^	struct dentry		*options;$/;"	m	struct:trace_array	typeref:struct:trace_array::dentry
opts	trace/trace.h	/^	struct tracer_opt	*opts;$/;"	m	struct:tracer_flags	typeref:struct:tracer_flags::tracer_opt
ordered_wq_attrs	workqueue.c	/^static struct workqueue_attrs *ordered_wq_attrs[NR_STD_WORKER_POOLS];$/;"	v	typeref:struct:workqueue_attrs	file:
orderly_poweroff	sys.c	/^EXPORT_SYMBOL_GPL(orderly_poweroff);$/;"	v
orderly_poweroff	sys.c	/^int orderly_poweroff(bool force)$/;"	f
orig	trace/trace_probe.c	/^	struct fetch_param	orig;$/;"	m	struct:bitfield_fetch_param	typeref:struct:bitfield_fetch_param::fetch_param	file:
orig_addr	swap/us_manager/sspt/ip.h	/^	unsigned long orig_addr;    \/**< Function address *\/$/;"	m	struct:us_ip
orig_bm	power/snapshot.c	/^static struct memory_bitmap orig_bm;$/;"	v	typeref:struct:memory_bitmap	file:
orig_fgconsole	power/console.c	/^static int orig_fgconsole, orig_kmsg;$/;"	v	file:
orig_fgconsole	power/consoleearlysuspend.c	/^static int orig_fgconsole;$/;"	v	file:
orig_kmsg	power/console.c	/^static int orig_fgconsole, orig_kmsg;$/;"	v	file:
orig_page	power/snapshot.c	/^	struct page *orig_page;	\/* data was here before the suspend *\/$/;"	m	struct:highmem_pbe	typeref:struct:highmem_pbe::page	file:
orig_ret_vaddr	events/uprobes.c	/^	unsigned long		orig_ret_vaddr; \/* original return address *\/$/;"	m	struct:return_instance	file:
orig_sig	power/swap.c	/^	char	orig_sig[10];$/;"	m	struct:swsusp_header	file:
origin	swap/preload/preload_module.c	/^	unsigned long origin;$/;"	m	struct:us_priv	file:
original_syscall	swap/uprobe/arch/x86/swap-asm/swap_sc_patch.c	/^static unsigned long original_syscall;$/;"	v	file:
orphan_donelist	rcutree.h	/^	struct rcu_head *orphan_donelist;	\/* Orphaned callbacks that *\/$/;"	m	struct:rcu_state	typeref:struct:rcu_state::rcu_head
orphan_donetail	rcutree.h	/^	struct rcu_head **orphan_donetail;	\/* Tail of above. *\/$/;"	m	struct:rcu_state	typeref:struct:rcu_state::rcu_head
orphan_nxtlist	rcutree.h	/^	struct rcu_head *orphan_nxtlist;	\/* Orphaned callbacks that *\/$/;"	m	struct:rcu_state	typeref:struct:rcu_state::rcu_head
orphan_nxttail	rcutree.h	/^	struct rcu_head **orphan_nxttail;	\/* Tail of above. *\/$/;"	m	struct:rcu_state	typeref:struct:rcu_state::rcu_head
osid	audit.h	/^			u32			osid;$/;"	m	struct:audit_context::__anon15::__anon17
osid	audit.h	/^	u32			osid;$/;"	m	struct:audit_names
out_of_line_wait_on_bit	wait.c	/^EXPORT_SYMBOL(out_of_line_wait_on_bit);$/;"	v
out_of_line_wait_on_bit	wait.c	/^int __sched out_of_line_wait_on_bit(void *word, int bit,$/;"	f
out_of_line_wait_on_bit_lock	wait.c	/^EXPORT_SYMBOL(out_of_line_wait_on_bit_lock);$/;"	v
out_of_line_wait_on_bit_lock	wait.c	/^int __sched out_of_line_wait_on_bit_lock(void *word, int bit,$/;"	f
overflow_count	time/timer_stats.c	/^static atomic_t overflow_count;$/;"	v	file:
overflowgid	sys.c	/^EXPORT_SYMBOL(overflowgid);$/;"	v
overflowgid	sys.c	/^int overflowgid = DEFAULT_OVERFLOWGID;$/;"	v
overflowuid	sys.c	/^EXPORT_SYMBOL(overflowuid);$/;"	v
overflowuid	sys.c	/^int overflowuid = DEFAULT_OVERFLOWUID;$/;"	v
overloaded	sched/sched.h	/^	int overloaded;$/;"	m	struct:rt_rq
override_architecture	sys.c	1352;"	d	file:
override_architecture	sys.c	1357;"	d	file:
override_creds	cred.c	/^EXPORT_SYMBOL(override_creds);$/;"	v
override_creds	cred.c	/^const struct cred *override_creds(const struct cred *new)$/;"	f
override_name	time/clocksource.c	/^static char override_name[32];$/;"	v	file:
override_release	sys.c	/^static int override_release(char __user *release, size_t len)$/;"	f	file:
overrun	trace/ring_buffer.c	/^	local_t				overrun;$/;"	m	struct:ring_buffer_per_cpu	file:
overrun_detected	trace/trace_mmiotrace.c	/^static bool overrun_detected;$/;"	v	file:
overwrite	events/internal.h	/^	int				overwrite;	\/* can overwrite itself *\/$/;"	m	struct:ring_buffer
owner	audit_tree.c	/^		struct audit_tree *owner;$/;"	m	struct:audit_chunk::node	typeref:struct:audit_chunk::node::audit_tree	file:
owner	cgroup.c	/^	struct cgroup *owner;$/;"	m	struct:cgroup_pidlist	typeref:struct:cgroup_pidlist::cgroup	file:
owner	futex.c	/^	struct task_struct *owner;$/;"	m	struct:futex_pi_state	typeref:struct:futex_pi_state::task_struct	file:
owner	module.c	/^	struct module *owner;$/;"	m	struct:find_symbol_arg	typeref:struct:find_symbol_arg::module	file:
owner	printk.c	/^	struct task_struct *owner;	\/* task of first print*\/$/;"	m	struct:cont	typeref:struct:cont::task_struct	file:
owner	time/time_history.c	/^	char owner[OWNER_LEN + 1];$/;"	m	struct:alarm_info	file:
owner_filter	time/time_history.c	/^static char owner_filter[32] = "-";$/;"	v	file:
owner_running	mutex.c	/^static inline bool owner_running(struct mutex *lock, struct task_struct *owner)$/;"	f	file:
owners	audit_tree.c	/^	} owners[];$/;"	m	struct:audit_chunk	typeref:struct:audit_chunk::node	file:
p	events/core.c	/^	struct task_struct	*p;$/;"	m	struct:remote_function_call	typeref:struct:remote_function_call::task_struct	file:
p	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^	struct kprobe *p;$/;"	m	struct:kj_cb_data	typeref:struct:kj_cb_data::kprobe	file:
p	swap/uprobe/arch/x86/swap-asm/swap_uprobes.c	/^	struct kprobe *p;               \/**< Pointer to the uprobe's kprobe *\/$/;"	m	struct:uprobe_ctlblk	typeref:struct:uprobe_ctlblk::kprobe	file:
p	swap/us_manager/probes/probe_info_new.h	/^		} p;$/;"	m	union:probe_info_new::__anon57	typeref:struct:probe_info_new::__anon57::__anon58
p_ac_efl_main	swap/nsp/nsp.c	/^static struct probe_new p_ac_efl_main = {$/;"	v	typeref:struct:probe_new	file:
p_ac_init	swap/nsp/nsp.c	/^static struct probe_new p_ac_init = {$/;"	v	typeref:struct:probe_new	file:
p_dlopen	swap/nsp/nsp.c	/^static struct probe_new p_dlopen = {$/;"	v	typeref:struct:probe_new	file:
p_dlsym	swap/nsp/nsp.c	/^static struct probe_new p_dlsym = {$/;"	v	typeref:struct:probe_new	file:
p_do_app	swap/nsp/nsp.c	/^static struct probe_new p_do_app = {$/;"	v	typeref:struct:probe_new	file:
p_elm_run	swap/nsp/nsp.c	/^static struct probe_new p_elm_run = {$/;"	v	typeref:struct:probe_new	file:
p_list	power/snapshot.c	/^	struct linked_page *p_list;	\/* list of pages used to store zone$/;"	m	struct:memory_bitmap	typeref:struct:memory_bitmap::linked_page	file:
p_main	swap/nsp/nsp.c	/^	struct probe_new p_main;$/;"	m	struct:nsp_data	typeref:struct:nsp_data::probe_new	file:
p_main	swap/nsp/nsp_tdata.h	/^	struct probe_new p_main;$/;"	m	struct:tdata	typeref:struct:tdata::probe_new
pack_entry_header	swap/ks_features/ksf_msg.c	/^static void pack_entry_header(struct msg_sys_entry *e, struct pt_regs *regs,$/;"	f	file:
pack_exit_header	swap/ks_features/ksf_msg.c	/^static void pack_exit_header(struct msg_sys_exit *e, unsigned long func_addr,$/;"	f	file:
pack_fbi_info	swap/fbiprobe/fbi_msg.c	/^static char *pack_fbi_info(char *payload, unsigned long var_id, size_t size,$/;"	f	file:
pack_file_entry_head	swap/ks_features/ksf_msg.c	/^static int pack_file_entry_head(void *data, size_t size, enum file_info info,$/;"	f	file:
pack_header	swap/ks_features/ksf_msg.c	/^static void pack_header(struct msg_sys_header *h, unsigned long func_addr,$/;"	f	file:
pack_lib_obj	swap/parser/usm_msg.c	/^static int pack_lib_obj(void *data, size_t size, struct vm_area_struct *vma)$/;"	f	file:
pack_libs	swap/parser/usm_msg.c	/^static int pack_libs(void *data, size_t size, struct mm_struct *mm)$/;"	f	file:
pack_ofile	swap/parser/usm_msg.c	/^static int pack_ofile(void *data, size_t size, int fd, struct file *file,$/;"	f	file:
pack_path	swap/parser/usm_msg.c	/^static int pack_path(void *data, size_t size, struct file *file)$/;"	f	file:
pack_pfns	power/snapshot.c	/^pack_pfns(unsigned long *buf, struct memory_bitmap *bm)$/;"	f	file:
pack_proc_info	swap/parser/usm_msg.c	/^static int pack_proc_info(void *data, size_t size, struct task_struct *task,$/;"	f	file:
pack_proc_info_bottom	swap/parser/usm_msg.c	/^static int pack_proc_info_bottom(void *data, size_t size,$/;"	f	file:
pack_proc_info_top	swap/parser/usm_msg.c	/^static int pack_proc_info_top(void *data, size_t size,$/;"	f	file:
pack_proc_map	swap/parser/usm_msg.c	/^static int pack_proc_map(void *data, size_t size, struct vm_area_struct *vma)$/;"	f	file:
pack_shared_kmem	swap/parser/usm_msg.c	/^static int pack_shared_kmem(void *data, size_t size, struct mm_struct *mm)$/;"	f	file:
pack_status_info	swap/parser/usm_msg.c	/^static int pack_status_info(void *data, size_t size, struct task_struct *task)$/;"	f	file:
pack_threadid	debug/gdbstub.c	/^static char *pack_threadid(char *pkt, unsigned char *id)$/;"	f	file:
pack_web_string	swap/webprobe/web_msg.c	/^static int pack_web_string(void *data, size_t size,$/;"	f	file:
pack_wsp_msg	swap/wsp/wsp_msg.c	/^static int pack_wsp_msg(void *data, size_t size, enum wsp_id id,$/;"	f	file:
pad	sys.c	/^	u16 pad;$/;"	m	struct:compat_sysinfo	file:
padata_add_cpu	padata.c	/^EXPORT_SYMBOL(padata_add_cpu);$/;"	v
padata_add_cpu	padata.c	/^int padata_add_cpu(struct padata_instance *pinst, int cpu, int mask)$/;"	f
padata_alloc	padata.c	/^EXPORT_SYMBOL(padata_alloc);$/;"	v
padata_alloc	padata.c	/^struct padata_instance *padata_alloc(struct workqueue_struct *wq,$/;"	f
padata_alloc_pd	padata.c	/^static struct parallel_data *padata_alloc_pd(struct padata_instance *pinst,$/;"	f	file:
padata_alloc_possible	padata.c	/^EXPORT_SYMBOL(padata_alloc_possible);$/;"	v
padata_alloc_possible	padata.c	/^struct padata_instance *padata_alloc_possible(struct workqueue_struct *wq)$/;"	f
padata_attr_type	padata.c	/^static struct kobj_type padata_attr_type = {$/;"	v	typeref:struct:kobj_type	file:
padata_cpu_callback	padata.c	/^static int padata_cpu_callback(struct notifier_block *nfb,$/;"	f	file:
padata_cpu_hash	padata.c	/^static int padata_cpu_hash(struct parallel_data *pd)$/;"	f	file:
padata_default_attrs	padata.c	/^static struct attribute *padata_default_attrs[] = {$/;"	v	typeref:struct:attribute	file:
padata_do_parallel	padata.c	/^EXPORT_SYMBOL(padata_do_parallel);$/;"	v
padata_do_parallel	padata.c	/^int padata_do_parallel(struct padata_instance *pinst,$/;"	f
padata_do_serial	padata.c	/^EXPORT_SYMBOL(padata_do_serial);$/;"	v
padata_do_serial	padata.c	/^void padata_do_serial(struct padata_priv *padata)$/;"	f
padata_flush_queues	padata.c	/^static void padata_flush_queues(struct parallel_data *pd)$/;"	f	file:
padata_free	padata.c	/^EXPORT_SYMBOL(padata_free);$/;"	v
padata_free	padata.c	/^void padata_free(struct padata_instance *pinst)$/;"	f
padata_free_pd	padata.c	/^static void padata_free_pd(struct parallel_data *pd)$/;"	f	file:
padata_get_next	padata.c	/^static struct padata_priv *padata_get_next(struct parallel_data *pd)$/;"	f	file:
padata_index_to_cpu	padata.c	/^static int padata_index_to_cpu(struct parallel_data *pd, int cpu_index)$/;"	f	file:
padata_init_pqueues	padata.c	/^static void padata_init_pqueues(struct parallel_data *pd)$/;"	f	file:
padata_init_squeues	padata.c	/^static void padata_init_squeues(struct parallel_data *pd)$/;"	f	file:
padata_parallel_worker	padata.c	/^static void padata_parallel_worker(struct work_struct *parallel_work)$/;"	f	file:
padata_register_cpumask_notifier	padata.c	/^EXPORT_SYMBOL(padata_register_cpumask_notifier);$/;"	v
padata_register_cpumask_notifier	padata.c	/^int padata_register_cpumask_notifier(struct padata_instance *pinst,$/;"	f
padata_remove_cpu	padata.c	/^EXPORT_SYMBOL(padata_remove_cpu);$/;"	v
padata_remove_cpu	padata.c	/^int padata_remove_cpu(struct padata_instance *pinst, int cpu, int mask)$/;"	f
padata_reorder	padata.c	/^static void padata_reorder(struct parallel_data *pd)$/;"	f	file:
padata_reorder_timer	padata.c	/^static void padata_reorder_timer(unsigned long arg)$/;"	f	file:
padata_replace	padata.c	/^static void padata_replace(struct padata_instance *pinst,$/;"	f	file:
padata_serial_worker	padata.c	/^static void padata_serial_worker(struct work_struct *serial_work)$/;"	f	file:
padata_set_cpumask	padata.c	/^EXPORT_SYMBOL(padata_set_cpumask);$/;"	v
padata_set_cpumask	padata.c	/^int padata_set_cpumask(struct padata_instance *pinst, int cpumask_type,$/;"	f
padata_set_cpumasks	padata.c	/^EXPORT_SYMBOL(padata_set_cpumasks);$/;"	v
padata_set_cpumasks	padata.c	/^int padata_set_cpumasks(struct padata_instance *pinst, cpumask_var_t pcpumask,$/;"	f
padata_setup_cpumasks	padata.c	/^static int padata_setup_cpumasks(struct parallel_data *pd,$/;"	f	file:
padata_start	padata.c	/^EXPORT_SYMBOL(padata_start);$/;"	v
padata_start	padata.c	/^int padata_start(struct padata_instance *pinst)$/;"	f
padata_stop	padata.c	/^EXPORT_SYMBOL(padata_stop);$/;"	v
padata_stop	padata.c	/^void padata_stop(struct padata_instance *pinst)$/;"	f
padata_sysfs_entry	padata.c	/^struct padata_sysfs_entry {$/;"	s	file:
padata_sysfs_ops	padata.c	/^static const struct sysfs_ops padata_sysfs_ops = {$/;"	v	typeref:struct:sysfs_ops	file:
padata_sysfs_release	padata.c	/^static void padata_sysfs_release(struct kobject *kobj)$/;"	f	file:
padata_sysfs_show	padata.c	/^static ssize_t padata_sysfs_show(struct kobject *kobj,$/;"	f	file:
padata_sysfs_store	padata.c	/^static ssize_t padata_sysfs_store(struct kobject *kobj, struct attribute *attr,$/;"	f	file:
padata_unregister_cpumask_notifier	padata.c	/^EXPORT_SYMBOL(padata_unregister_cpumask_notifier);$/;"	v
padata_unregister_cpumask_notifier	padata.c	/^int padata_unregister_cpumask_notifier(struct padata_instance *pinst,$/;"	f
padata_validate_cpumask	padata.c	/^static bool padata_validate_cpumask(struct padata_instance *pinst,$/;"	f	file:
paddr_vmcoreinfo_note	kexec.c	/^unsigned long __attribute__ ((weak)) paddr_vmcoreinfo_note(void)$/;"	f
page	swap/us_manager/sspt/ip.h	/^	struct sspt_page *page;     \/**< Pointer on the page (parent) *\/$/;"	m	struct:us_ip	typeref:struct:us_ip::sspt_page
page	trace/ring_buffer.c	/^	struct buffer_data_page *page;	\/* Actual data page *\/$/;"	m	struct:buffer_page	typeref:struct:buffer_page::buffer_data_page	file:
page	trace/trace.c	/^	void			*page;$/;"	m	struct:buffer_ref	file:
page_is_ram	resource.c	/^int __weak page_is_ram(unsigned long pfn)$/;"	f
page_is_saveable	power/snapshot.c	/^page_is_saveable(struct zone *zone, unsigned long pfn)$/;"	f	file:
page_is_saveable	power/snapshot.c	1024;"	d	file:
page_list	swap/kprobe/swap_slots.h	/^	struct hlist_head page_list;$/;"	m	struct:slot_manager	typeref:struct:slot_manager::hlist_head
page_order	events/internal.h	/^	int				page_order;	\/* allocation order  *\/$/;"	m	struct:ring_buffer
page_order	events/internal.h	/^static inline int page_order(struct ring_buffer *rb)$/;"	f
page_present	swap/kprobe/swap_kprobes_deps.c	/^EXPORT_SYMBOL_GPL(page_present);$/;"	v
page_present	swap/kprobe/swap_kprobes_deps.c	/^int page_present(struct mm_struct *mm, unsigned long address)$/;"	f
page_probes_hash_bits	swap/us_manager/sspt/sspt_file.h	/^	unsigned long page_probes_hash_bits;	\/**< Hash-table size *\/$/;"	m	struct:sspt_file
page_probes_table	swap/us_manager/sspt/sspt_file.h	/^	struct hlist_head *page_probes_table;	\/**< Hash-table for pages *\/$/;"	m	struct:sspt_file	typeref:struct:sspt_file::hlist_head
page_to_dentry	swap/preload/preload_module.c	34;"	d	file:
page_to_proc	swap/preload/preload_module.c	33;"	d	file:
pages	kprobes.c	/^	struct list_head pages;	\/* list of kprobe_insn_page *\/$/;"	m	struct:kprobe_insn_cache	typeref:struct:kprobe_insn_cache::list_head	file:
pages	power/power.h	/^	unsigned long		pages;$/;"	m	struct:swsusp_info
pages	trace/ftrace.c	/^	struct ftrace_profile_page	*pages;$/;"	m	struct:ftrace_profile_stat	typeref:struct:ftrace_profile_stat::ftrace_profile_page	file:
pages	trace/ring_buffer.c	/^	struct list_head		*pages;$/;"	m	struct:ring_buffer_per_cpu	typeref:struct:ring_buffer_per_cpu::list_head	file:
pages_order_in_subbuffer	swap/buffer/buffer_queue.c	/^static int pages_order_in_subbuffer;$/;"	v	file:
pages_per_buffer	swap/driver/driver_to_buffer.c	/^static int pages_per_buffer;$/;"	v	file:
panic	panic.c	/^EXPORT_SYMBOL(panic);$/;"	v
panic	panic.c	/^void panic(const char *fmt, ...)$/;"	f
panic_blink	panic.c	/^EXPORT_SYMBOL(panic_blink);$/;"	v
panic_blink	panic.c	/^long (*panic_blink)(int state);$/;"	v
panic_block	hung_task.c	/^static struct notifier_block panic_block = {$/;"	v	typeref:struct:notifier_block	file:
panic_notifier_list	panic.c	/^ATOMIC_NOTIFIER_HEAD(panic_notifier_list);$/;"	v
panic_notifier_list	panic.c	/^EXPORT_SYMBOL(panic_notifier_list);$/;"	v
panic_on_oops	panic.c	/^int panic_on_oops = CONFIG_PANIC_ON_OOPS_VALUE;$/;"	v
panic_smp_self_stop	panic.c	/^void __weak panic_smp_self_stop(void)$/;"	f
panic_timeout	panic.c	/^EXPORT_SYMBOL_GPL(panic_timeout);$/;"	v
panic_timeout	panic.c	/^int panic_timeout = CONFIG_PANIC_TIMEOUT;$/;"	v
param	params.c	/^	const struct kernel_param *param;$/;"	m	struct:param_attribute	typeref:struct:param_attribute::kernel_param	file:
param_array	params.c	/^static int param_array(const char *name,$/;"	f	file:
param_array_free	params.c	/^static void param_array_free(void *arg)$/;"	f	file:
param_array_get	params.c	/^static int param_array_get(char *buffer, const struct kernel_param *kp)$/;"	f	file:
param_array_ops	params.c	/^EXPORT_SYMBOL(param_array_ops);$/;"	v
param_array_ops	params.c	/^struct kernel_param_ops param_array_ops = {$/;"	v	typeref:struct:kernel_param_ops
param_array_set	params.c	/^static int param_array_set(const char *val, const struct kernel_param *kp)$/;"	f	file:
param_attr_show	params.c	/^static ssize_t param_attr_show(struct module_attribute *mattr,$/;"	f	file:
param_attr_store	params.c	/^static ssize_t param_attr_store(struct module_attribute *mattr,$/;"	f	file:
param_attribute	params.c	/^struct param_attribute$/;"	s	file:
param_check_bool_enable_only	module.c	142;"	d	file:
param_data	swap/energy/debugfs_energy.c	/^struct param_data {$/;"	s	file:
param_free_charp	params.c	/^static void param_free_charp(void *arg)$/;"	f	file:
param_get_bool	params.c	/^EXPORT_SYMBOL(param_get_bool);$/;"	v
param_get_bool	params.c	/^int param_get_bool(char *buffer, const struct kernel_param *kp)$/;"	f
param_get_charp	params.c	/^EXPORT_SYMBOL(param_get_charp);$/;"	v
param_get_charp	params.c	/^int param_get_charp(char *buffer, const struct kernel_param *kp)$/;"	f
param_get_invbool	params.c	/^EXPORT_SYMBOL(param_get_invbool);$/;"	v
param_get_invbool	params.c	/^int param_get_invbool(char *buffer, const struct kernel_param *kp)$/;"	f
param_get_string	params.c	/^EXPORT_SYMBOL(param_get_string);$/;"	v
param_get_string	params.c	/^int param_get_string(char *buffer, const struct kernel_param *kp)$/;"	f
param_ops_bint	params.c	/^EXPORT_SYMBOL(param_ops_bint);$/;"	v
param_ops_bint	params.c	/^struct kernel_param_ops param_ops_bint = {$/;"	v	typeref:struct:kernel_param_ops
param_ops_bool	params.c	/^EXPORT_SYMBOL(param_ops_bool);$/;"	v
param_ops_bool	params.c	/^struct kernel_param_ops param_ops_bool = {$/;"	v	typeref:struct:kernel_param_ops
param_ops_bool_enable_only	module.c	/^static const struct kernel_param_ops param_ops_bool_enable_only = {$/;"	v	typeref:struct:kernel_param_ops	file:
param_ops_charp	params.c	/^EXPORT_SYMBOL(param_ops_charp);$/;"	v
param_ops_charp	params.c	/^struct kernel_param_ops param_ops_charp = {$/;"	v	typeref:struct:kernel_param_ops
param_ops_invbool	params.c	/^EXPORT_SYMBOL(param_ops_invbool);$/;"	v
param_ops_invbool	params.c	/^struct kernel_param_ops param_ops_invbool = {$/;"	v	typeref:struct:kernel_param_ops
param_ops_string	params.c	/^EXPORT_SYMBOL(param_ops_string);$/;"	v
param_ops_string	params.c	/^struct kernel_param_ops param_ops_string = {$/;"	v	typeref:struct:kernel_param_ops
param_set_bint	params.c	/^EXPORT_SYMBOL(param_set_bint);$/;"	v
param_set_bint	params.c	/^int param_set_bint(const char *val, const struct kernel_param *kp)$/;"	f
param_set_bool	params.c	/^EXPORT_SYMBOL(param_set_bool);$/;"	v
param_set_bool	params.c	/^int param_set_bool(const char *val, const struct kernel_param *kp)$/;"	f
param_set_bool_enable_only	module.c	/^static int param_set_bool_enable_only(const char *val,$/;"	f	file:
param_set_charp	params.c	/^EXPORT_SYMBOL(param_set_charp);$/;"	v
param_set_charp	params.c	/^int param_set_charp(const char *val, const struct kernel_param *kp)$/;"	f
param_set_copystring	params.c	/^EXPORT_SYMBOL(param_set_copystring);$/;"	v
param_set_copystring	params.c	/^int param_set_copystring(const char *val, const struct kernel_param *kp)$/;"	f
param_set_invbool	params.c	/^EXPORT_SYMBOL(param_set_invbool);$/;"	v
param_set_invbool	params.c	/^int param_set_invbool(const char *val, const struct kernel_param *kp)$/;"	f
param_sysfs_builtin	params.c	/^static void __init param_sysfs_builtin(void)$/;"	f	file:
param_sysfs_init	params.c	/^static int __init param_sysfs_init(void)$/;"	f	file:
param_sysfs_init	params.c	/^subsys_initcall(param_sysfs_init);$/;"	v
parameq	params.c	/^bool parameq(const char *a, const char *b)$/;"	f
parameqn	params.c	/^bool parameqn(const char *a, const char *b, size_t n)$/;"	f
parameter_energy	swap/energy/energy.h	/^enum parameter_energy {$/;"	g
parameter_type	swap/energy/energy.c	/^enum parameter_type {$/;"	g	file:
parameters	swap/energy/debugfs_energy.c	/^struct param_data parameters[] = {$/;"	v	typeref:struct:param_data
parameters_cnt	swap/energy/debugfs_energy.c	/^	parameters_cnt = sizeof(parameters) \/ sizeof(struct param_data)$/;"	e	enum:__anon43	file:
parent	audit_watch.c	/^	struct audit_parent	*parent; \/* associated parent *\/$/;"	m	struct:audit_watch	typeref:struct:audit_watch::audit_parent	file:
parent	gcov/fs.c	/^	struct gcov_node *parent;$/;"	m	struct:gcov_node	typeref:struct:gcov_node::gcov_node	file:
parent	rcutree.h	/^	struct rcu_node *parent;$/;"	m	struct:rcu_node	typeref:struct:rcu_node::rcu_node
parent	resource.c	/^	struct resource *parent;$/;"	m	struct:region_devres	typeref:struct:region_devres::resource	file:
parent	sched/sched.h	/^	struct task_group *parent;$/;"	m	struct:task_group	typeref:struct:task_group::task_group
parent	trace/trace.h	/^	unsigned short		parent;$/;"	m	struct:filter_pred
parent_ca	sched/cpuacct.c	/^static inline struct cpuacct *parent_ca(struct cpuacct *ca)$/;"	f	file:
parent_cs	cpuset.c	/^static inline struct cpuset *parent_cs(const struct cpuset *cs)$/;"	f	file:
parent_entity	sched/fair.c	/^static inline struct sched_entity *parent_entity(struct sched_entity *se)$/;"	f	file:
parent_freezer	cgroup_freezer.c	/^static struct freezer *parent_freezer(struct freezer *freezer)$/;"	f	file:
parent_len	auditfilter.c	/^int parent_len(const char *path)$/;"	f
parked	kthread.c	/^	struct completion parked;$/;"	m	struct:kthread	typeref:struct:kthread::completion	file:
parse	taskstats.c	/^static int parse(struct nlattr *na, struct cpumask *mask)$/;"	f	file:
parse_args	params.c	/^int parse_args(const char *doing,$/;"	f
parse_cgroupfs_options	cgroup.c	/^static int parse_cgroupfs_options(char *data, struct cgroup_sb_opts *opts)$/;"	f	file:
parse_crashkernel	kexec.c	/^int __init parse_crashkernel(char *cmdline,$/;"	f
parse_crashkernel_high	kexec.c	/^int __init parse_crashkernel_high(char *cmdline,$/;"	f
parse_crashkernel_low	kexec.c	/^int __init parse_crashkernel_low(char *cmdline,$/;"	f
parse_crashkernel_mem	kexec.c	/^static int __init parse_crashkernel_mem(char 			*cmdline,$/;"	f	file:
parse_crashkernel_simple	kexec.c	/^static int __init parse_crashkernel_simple(char 		*cmdline,$/;"	f	file:
parse_crashkernel_suffix	kexec.c	/^static int __init parse_crashkernel_suffix(char *cmdline,$/;"	f	file:
parse_error	trace/trace_events_filter.c	/^static void parse_error(struct filter_parse_state *ps, int err, int pos)$/;"	f	file:
parse_grep	debug/kdb/kdb_main.c	/^static void parse_grep(const char *str)$/;"	f	file:
parse_init	trace/trace_events_filter.c	/^static void parse_init(struct filter_parse_state *ps,$/;"	f	file:
parse_one	params.c	/^static int parse_one(char *param,$/;"	f	file:
parse_probe_arg	trace/trace_probe.c	/^static int parse_probe_arg(char *arg, const struct fetch_type *t,$/;"	f	file:
parse_probe_vars	trace/trace_probe.c	/^static int parse_probe_vars(char *arg, const struct fetch_type *t,$/;"	f	file:
parse_rcu_nocb_poll	rcutree_plugin.h	/^static int __init parse_rcu_nocb_poll(char *arg)$/;"	f
parser	trace/ftrace.c	/^	struct trace_parser		parser;$/;"	m	struct:ftrace_iterator	typeref:struct:ftrace_iterator::trace_parser	file:
parsing	swap/ksyms/no_ksyms.c	/^static void parsing(char *buf, int size)$/;"	f	file:
partition_sched_domains	sched/core.c	/^void partition_sched_domains(int ndoms_new, cpumask_var_t doms_new[],$/;"	f
pass_exception	debug/debug_core.h	/^	int			pass_exception;$/;"	m	struct:kgdb_state
passed_quiesce	rcutree.h	/^	bool		passed_quiesce;	\/* User-mode\/idle loop etc. *\/$/;"	m	struct:rcu_data
patch_syscall	swap/uprobe/arch/x86/swap-asm/swap_sc_patch.c	/^void patch_syscall(int syscall_n, unsigned long new_syscall_addr)$/;"	f
patched_syscall	swap/uprobe/arch/x86/swap-asm/swap_sc_patch.c	/^static int patched_syscall = -1;$/;"	v	file:
path	audit_watch.c	/^	char			*path;	\/* insertion path *\/$/;"	m	struct:audit_watch	file:
path	swap/nsp/nsp.h	/^	const char *path;$/;"	m	struct:appcore_info_data
path	swap/parser/msg_parser.h	/^	char *path;                 \/**< Library path. *\/$/;"	m	struct:lib_inst_data
path	swap/parser/usm_msg.c	/^	char path[0];$/;"	m	struct:ofile	file:
path	swap/preload/preload_debugfs.c	/^	char *path;$/;"	m	struct:loader_info	file:
path	swap/preload/preload_storage.h	/^	char *path;$/;"	m	struct:bin_info
path_backlight	swap/energy/lcd/maru.c	/^static const char path_backlight[]	=$/;"	v	file:
path_backlight	swap/energy/lcd/s6e8aa0.c	/^static const char path_backlight[] =$/;"	v	file:
path_backlight	swap/energy/lcd/s6e8aa0_panel.c	/^static const char path_backlight[] =$/;"	v	file:
path_backlight_max	swap/energy/lcd/maru.c	/^static const char path_backlight_max[]	=$/;"	v	file:
path_backlight_max	swap/energy/lcd/s6e8aa0.c	/^static const char path_backlight_max[] =$/;"	v	file:
path_backlight_max	swap/energy/lcd/s6e8aa0_panel.c	/^static const char path_backlight_max[] =$/;"	v	file:
path_backlight_min	swap/energy/lcd/maru.c	/^static const char path_backlight_min[]	=$/;"	v	file:
path_backlight_min	swap/energy/lcd/s6e8aa0.c	/^static const char path_backlight_min[] =$/;"	v	file:
path_power	swap/energy/lcd/maru.c	/^static const char path_power[]		=$/;"	v	file:
path_power	swap/energy/lcd/s6e8aa0.c	/^static const char path_power[] =$/;"	v	file:
path_power	swap/energy/lcd/s6e8aa0_panel.c	/^static const char path_power[] =$/;"	v	file:
pathname	audit_tree.c	/^	char pathname[];$/;"	m	struct:audit_tree	file:
pattern	trace/trace.h	/^	char			pattern[MAX_FILTER_STR_VAL];$/;"	m	struct:regex
pause_on_oops	panic.c	/^static int pause_on_oops;$/;"	v	file:
pause_on_oops_flag	panic.c	/^static int pause_on_oops_flag;$/;"	v	file:
payload	swap/writer/swap_msg.c	/^	char payload[0];$/;"	m	struct:swap_msg	file:
pc	profile.c	/^	u32 pc, hits;$/;"	m	struct:profile_hit	file:
pc_addr	swap/ks_features/ksf_msg.c	/^	u64 pc_addr;$/;"	m	struct:msg_context_switch	file:
pc_addr	swap/ks_features/ksf_msg.c	/^	u64 pc_addr;$/;"	m	struct:msg_sys_header	file:
pc_addr	swap/parser/features.c	/^	u64 pc_addr;$/;"	m	struct:sample	file:
pc_addr	swap/retprobe/rp_msg.c	/^	u64 pc_addr;$/;"	m	struct:msg_entry	file:
pc_addr	swap/retprobe/rp_msg.c	/^	u64 pc_addr;$/;"	m	struct:msg_exit	file:
pc_clock_adjtime	time/posix-clock.c	/^static int pc_clock_adjtime(clockid_t id, struct timex *tx)$/;"	f	file:
pc_clock_getres	time/posix-clock.c	/^static int pc_clock_getres(clockid_t id, struct timespec *ts)$/;"	f	file:
pc_clock_gettime	time/posix-clock.c	/^static int pc_clock_gettime(clockid_t id, struct timespec *ts)$/;"	f	file:
pc_clock_settime	time/posix-clock.c	/^static int pc_clock_settime(clockid_t id, const struct timespec *ts)$/;"	f	file:
pc_dep_insn_execbuf	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^EXPORT_SYMBOL_GPL(pc_dep_insn_execbuf);$/;"	v
pc_dep_insn_execbuf	swap/kprobe/arch/arm/swap-asm/trampoline_arm.S	/^pc_dep_insn_execbuf:$/;"	l
pc_dep_insn_execbuf_thumb	swap/uprobe/arch/arm/swap-asm/trampoline_thumb.S	/^pc_dep_insn_execbuf_thumb:$/;"	l
pc_timer_create	time/posix-clock.c	/^static int pc_timer_create(struct k_itimer *kit)$/;"	f	file:
pc_timer_delete	time/posix-clock.c	/^static int pc_timer_delete(struct k_itimer *kit)$/;"	f	file:
pc_timer_gettime	time/posix-clock.c	/^static void pc_timer_gettime(struct k_itimer *kit, struct itimerspec *ts)$/;"	f	file:
pc_timer_settime	time/posix-clock.c	/^static int pc_timer_settime(struct k_itimer *kit, int flags,$/;"	f	file:
pcpu	module.c	/^		unsigned int sym, str, mod, vers, info, pcpu;$/;"	m	struct:load_info::__anon26	file:
pd_cb	swap/preload/preload_pd.c	/^struct sspt_proc_cb pd_cb = {$/;"	v	typeref:struct:sspt_proc_cb
pd_create	swap/preload/preload_pd.c	/^static void *pd_create(struct sspt_proc *proc)$/;"	f	file:
pd_destroy	swap/preload/preload_pd.c	/^static void pd_destroy(struct sspt_proc *proc, void *data)$/;"	f	file:
pdu_start	trace/blktrace.c	/^static inline const void *pdu_start(const struct trace_entry *ent)$/;"	f	file:
peek_next_entry	trace/trace.c	/^peek_next_entry(struct trace_iterator *iter, int cpu, u64 *ts,$/;"	f	file:
pending_list	events/uprobes.c	/^	struct list_head	pending_list;$/;"	m	struct:uprobe	typeref:struct:uprobe::list_head	file:
percent_to_count	swap/buffer/swap_buffer_module.c	/^static inline unsigned int percent_to_count(unsigned char percent,$/;"	f	file:
percpu_dir	trace/trace.h	/^	struct dentry		*percpu_dir;$/;"	m	struct:trace_array	typeref:struct:trace_array::dentry
percpu_modalloc	module.c	/^static inline int percpu_modalloc(struct module *mod,$/;"	f	file:
percpu_modalloc	module.c	/^static int percpu_modalloc(struct module *mod,$/;"	f	file:
percpu_modcopy	module.c	/^static inline void percpu_modcopy(struct module *mod,$/;"	f	file:
percpu_modcopy	module.c	/^static void percpu_modcopy(struct module *mod,$/;"	f	file:
percpu_modfree	module.c	/^static inline void percpu_modfree(struct module *mod)$/;"	f	file:
percpu_modfree	module.c	/^static void percpu_modfree(struct module *mod)$/;"	f	file:
perf_adjust_freq_unthr_context	events/core.c	/^static void perf_adjust_freq_unthr_context(struct perf_event_context *ctx,$/;"	f	file:
perf_adjust_period	events/core.c	/^static void perf_adjust_period(struct perf_event *event, u64 nsec, u64 count, bool disable)$/;"	f	file:
perf_bp_event	events/core.c	/^void perf_bp_event(struct perf_event *bp, void *data)$/;"	f
perf_branch_stack_sched_in	events/core.c	/^static void perf_branch_stack_sched_in(struct task_struct *prev,$/;"	f	file:
perf_breakpoint	events/hw_breakpoint.c	/^static struct pmu perf_breakpoint = {$/;"	v	typeref:struct:pmu	file:
perf_calculate_period	events/core.c	/^static u64 perf_calculate_period(struct perf_event *event, u64 nsec, u64 count)$/;"	f	file:
perf_callchain	events/callchain.c	/^perf_callchain(struct perf_event *event, struct pt_regs *regs)$/;"	f
perf_callchain_kernel	events/callchain.c	/^__weak void perf_callchain_kernel(struct perf_callchain_entry *entry,$/;"	f
perf_callchain_user	events/callchain.c	/^__weak void perf_callchain_user(struct perf_callchain_entry *entry,$/;"	f
perf_cgroup	events/core.c	/^struct perf_cgroup {$/;"	s	file:
perf_cgroup_attach	events/core.c	/^static void perf_cgroup_attach(struct cgroup *cgrp, struct cgroup_taskset *tset)$/;"	f	file:
perf_cgroup_connect	events/core.c	/^static inline int perf_cgroup_connect(int fd, struct perf_event *event,$/;"	f	file:
perf_cgroup_connect	events/core.c	/^static inline int perf_cgroup_connect(pid_t pid, struct perf_event *event,$/;"	f	file:
perf_cgroup_css_alloc	events/core.c	/^static struct cgroup_subsys_state *perf_cgroup_css_alloc(struct cgroup *cont)$/;"	f	file:
perf_cgroup_css_free	events/core.c	/^static void perf_cgroup_css_free(struct cgroup *cont)$/;"	f	file:
perf_cgroup_defer_enabled	events/core.c	/^perf_cgroup_defer_enabled(struct perf_event *event)$/;"	f	file:
perf_cgroup_event_cgrp_time	events/core.c	/^static inline u64 perf_cgroup_event_cgrp_time(struct perf_event *event)$/;"	f	file:
perf_cgroup_event_time	events/core.c	/^static inline u64 perf_cgroup_event_time(struct perf_event *event)$/;"	f	file:
perf_cgroup_exit	events/core.c	/^static void perf_cgroup_exit(struct cgroup *cgrp, struct cgroup *old_cgrp,$/;"	f	file:
perf_cgroup_from_task	events/core.c	/^perf_cgroup_from_task(struct task_struct *task)$/;"	f	file:
perf_cgroup_info	events/core.c	/^struct perf_cgroup_info {$/;"	s	file:
perf_cgroup_mark_enabled	events/core.c	/^perf_cgroup_mark_enabled(struct perf_event *event,$/;"	f	file:
perf_cgroup_match	events/core.c	/^perf_cgroup_match(struct perf_event *event)$/;"	f	file:
perf_cgroup_sched_in	events/core.c	/^static inline void perf_cgroup_sched_in(struct task_struct *prev,$/;"	f	file:
perf_cgroup_sched_out	events/core.c	/^static inline void perf_cgroup_sched_out(struct task_struct *task,$/;"	f	file:
perf_cgroup_set_shadow_time	events/core.c	/^perf_cgroup_set_shadow_time(struct perf_event *event, u64 now)$/;"	f	file:
perf_cgroup_set_timestamp	events/core.c	/^perf_cgroup_set_timestamp(struct task_struct *task,$/;"	f	file:
perf_cgroup_switch	events/core.c	/^perf_cgroup_switch(struct task_struct *task, struct task_struct *next)$/;"	f
perf_cgroup_switch	events/core.c	/^void perf_cgroup_switch(struct task_struct *task, int mode)$/;"	f
perf_clock	events/core.c	/^static inline u64 perf_clock(void)$/;"	f	file:
perf_comm_event	events/core.c	/^struct perf_comm_event {$/;"	s	file:
perf_compat_ioctl	events/core.c	/^static long perf_compat_ioctl(struct file *file, unsigned int cmd,$/;"	f	file:
perf_compat_ioctl	events/core.c	3510;"	d	file:
perf_copy_attr	events/core.c	/^static int perf_copy_attr(struct perf_event_attr __user *uattr,$/;"	f	file:
perf_cpu_clock	events/core.c	/^static struct pmu perf_cpu_clock = {$/;"	v	typeref:struct:pmu	file:
perf_cpu_notify	events/core.c	/^perf_cpu_notify(struct notifier_block *self, unsigned long action, void *hcpu)$/;"	f	file:
perf_cpu_time_max_percent_handler	events/core.c	/^int perf_cpu_time_max_percent_handler(struct ctl_table *table, int write,$/;"	f
perf_ctx_lock	events/core.c	/^static void perf_ctx_lock(struct perf_cpu_context *cpuctx,$/;"	f	file:
perf_ctx_unlock	events/core.c	/^static void perf_ctx_unlock(struct perf_cpu_context *cpuctx,$/;"	f	file:
perf_data_size	events/internal.h	/^static inline unsigned long perf_data_size(struct ring_buffer *rb)$/;"	f
perf_detach_cgroup	events/core.c	/^static inline void perf_detach_cgroup(struct perf_event *event)$/;"	f	file:
perf_event__header_size	events/core.c	/^static void perf_event__header_size(struct perf_event *event)$/;"	f	file:
perf_event__id_header_size	events/core.c	/^static void perf_event__id_header_size(struct perf_event *event)$/;"	f	file:
perf_event__output_id_sample	events/core.c	/^void perf_event__output_id_sample(struct perf_event *event,$/;"	f
perf_event__read_size	events/core.c	/^static void perf_event__read_size(struct perf_event *event)$/;"	f	file:
perf_event__state_init	events/core.c	/^static inline void perf_event__state_init(struct perf_event *event)$/;"	f	file:
perf_event_alloc	events/core.c	/^perf_event_alloc(struct perf_event_attr *attr, int cpu,$/;"	f	file:
perf_event_aux	events/core.c	/^perf_event_aux(perf_event_aux_match_cb match,$/;"	f	file:
perf_event_aux_ctx	events/core.c	/^perf_event_aux_ctx(struct perf_event_context *ctx,$/;"	f	file:
perf_event_aux_match_cb	events/core.c	/^typedef int  (perf_event_aux_match_cb)(struct perf_event *event, void *data);$/;"	t	file:
perf_event_aux_output_cb	events/core.c	/^typedef void (perf_event_aux_output_cb)(struct perf_event *event, void *data);$/;"	t	file:
perf_event_can_stop_tick	events/core.c	/^bool perf_event_can_stop_tick(void)$/;"	f
perf_event_comm	events/core.c	/^void perf_event_comm(struct task_struct *task)$/;"	f
perf_event_comm_event	events/core.c	/^static void perf_event_comm_event(struct perf_comm_event *comm_event)$/;"	f	file:
perf_event_comm_match	events/core.c	/^static int perf_event_comm_match(struct perf_event *event,$/;"	f	file:
perf_event_comm_output	events/core.c	/^static void perf_event_comm_output(struct perf_event *event,$/;"	f	file:
perf_event_context_sched_in	events/core.c	/^static void perf_event_context_sched_in(struct perf_event_context *ctx,$/;"	f	file:
perf_event_context_sched_out	events/core.c	/^static void perf_event_context_sched_out(struct task_struct *task, int ctxn,$/;"	f	file:
perf_event_count	events/core.c	/^static inline u64 perf_event_count(struct perf_event *event)$/;"	f	file:
perf_event_create_kernel_counter	events/core.c	/^EXPORT_SYMBOL_GPL(perf_event_create_kernel_counter);$/;"	v
perf_event_create_kernel_counter	events/core.c	/^perf_event_create_kernel_counter(struct perf_event_attr *attr, int cpu,$/;"	f
perf_event_delayed_put	events/core.c	/^void perf_event_delayed_put(struct task_struct *task)$/;"	f
perf_event_disable	events/core.c	/^EXPORT_SYMBOL_GPL(perf_event_disable);$/;"	v
perf_event_disable	events/core.c	/^void perf_event_disable(struct perf_event *event)$/;"	f
perf_event_enable	events/core.c	/^EXPORT_SYMBOL_GPL(perf_event_enable);$/;"	v
perf_event_enable	events/core.c	/^void perf_event_enable(struct perf_event *event)$/;"	f
perf_event_enable_on_exec	events/core.c	/^static void perf_event_enable_on_exec(struct perf_event_context *ctx)$/;"	f	file:
perf_event_exit_cpu	events/core.c	/^static inline void perf_event_exit_cpu(int cpu) { }$/;"	f	file:
perf_event_exit_cpu	events/core.c	/^static void perf_event_exit_cpu(int cpu)$/;"	f	file:
perf_event_exit_cpu_context	events/core.c	/^static void perf_event_exit_cpu_context(int cpu)$/;"	f	file:
perf_event_exit_task	events/core.c	/^void perf_event_exit_task(struct task_struct *child)$/;"	f
perf_event_exit_task_context	events/core.c	/^static void perf_event_exit_task_context(struct task_struct *child, int ctxn)$/;"	f	file:
perf_event_for_each	events/core.c	/^static void perf_event_for_each(struct perf_event *event,$/;"	f	file:
perf_event_for_each_child	events/core.c	/^static void perf_event_for_each_child(struct perf_event *event,$/;"	f	file:
perf_event_fork	events/core.c	/^void perf_event_fork(struct task_struct *task)$/;"	f
perf_event_free_filter	events/core.c	/^static void perf_event_free_filter(struct perf_event *event)$/;"	f	file:
perf_event_free_task	events/core.c	/^void perf_event_free_task(struct task_struct *task)$/;"	f
perf_event_header__init_id	events/core.c	/^void perf_event_header__init_id(struct perf_event_header *header,$/;"	f
perf_event_id	events/core.c	/^static atomic64_t perf_event_id;$/;"	v	file:
perf_event_idx_default	events/core.c	/^static int perf_event_idx_default(struct perf_event *event)$/;"	f	file:
perf_event_index	events/core.c	/^static int perf_event_index(struct perf_event *event)$/;"	f	file:
perf_event_init	events/core.c	/^void __init perf_event_init(void)$/;"	f
perf_event_init_all_cpus	events/core.c	/^static void __init perf_event_init_all_cpus(void)$/;"	f	file:
perf_event_init_context	events/core.c	/^int perf_event_init_context(struct task_struct *child, int ctxn)$/;"	f
perf_event_init_cpu	events/core.c	/^static void __cpuinit perf_event_init_cpu(int cpu)$/;"	f	file:
perf_event_init_task	events/core.c	/^int perf_event_init_task(struct task_struct *child)$/;"	f
perf_event_mmap	events/core.c	/^void perf_event_mmap(struct vm_area_struct *vma)$/;"	f
perf_event_mmap_event	events/core.c	/^static void perf_event_mmap_event(struct perf_mmap_event *mmap_event)$/;"	f	file:
perf_event_mmap_match	events/core.c	/^static int perf_event_mmap_match(struct perf_event *event,$/;"	f	file:
perf_event_mmap_output	events/core.c	/^static void perf_event_mmap_output(struct perf_event *event,$/;"	f	file:
perf_event_output	events/core.c	/^static void perf_event_output(struct perf_event *event,$/;"	f	file:
perf_event_overflow	events/core.c	/^int perf_event_overflow(struct perf_event *event,$/;"	f
perf_event_period	events/core.c	/^static int perf_event_period(struct perf_event *event, u64 __user *arg)$/;"	f	file:
perf_event_pid	events/core.c	/^static u32 perf_event_pid(struct perf_event *event, struct task_struct *p)$/;"	f	file:
perf_event_print_debug	events/core.c	/^void __weak perf_event_print_debug(void)	{ }$/;"	f
perf_event_read	events/core.c	/^static u64 perf_event_read(struct perf_event *event)$/;"	f	file:
perf_event_read_event	events/core.c	/^perf_event_read_event(struct perf_event *event,$/;"	f	file:
perf_event_read_group	events/core.c	/^static int perf_event_read_group(struct perf_event *event,$/;"	f	file:
perf_event_read_one	events/core.c	/^static int perf_event_read_one(struct perf_event *event,$/;"	f	file:
perf_event_read_value	events/core.c	/^EXPORT_SYMBOL_GPL(perf_event_read_value);$/;"	v
perf_event_read_value	events/core.c	/^u64 perf_event_read_value(struct perf_event *event, u64 *enabled, u64 *running)$/;"	f
perf_event_refresh	events/core.c	/^EXPORT_SYMBOL_GPL(perf_event_refresh);$/;"	v
perf_event_refresh	events/core.c	/^int perf_event_refresh(struct perf_event *event, int refresh)$/;"	f
perf_event_release_kernel	events/core.c	/^EXPORT_SYMBOL_GPL(perf_event_release_kernel);$/;"	v
perf_event_release_kernel	events/core.c	/^int perf_event_release_kernel(struct perf_event *event)$/;"	f
perf_event_reset	events/core.c	/^static void perf_event_reset(struct perf_event *event)$/;"	f	file:
perf_event_sched_in	events/core.c	/^static void perf_event_sched_in(struct perf_cpu_context *cpuctx,$/;"	f	file:
perf_event_set_filter	events/core.c	/^static int perf_event_set_filter(struct perf_event *event, void __user *arg)$/;"	f	file:
perf_event_set_output	events/core.c	/^perf_event_set_output(struct perf_event *event, struct perf_event *output_event)$/;"	f	file:
perf_event_sync_stat	events/core.c	/^static void perf_event_sync_stat(struct perf_event_context *ctx,$/;"	f	file:
perf_event_sysfs_init	events/core.c	/^device_initcall(perf_event_sysfs_init);$/;"	v
perf_event_sysfs_init	events/core.c	/^static int __init perf_event_sysfs_init(void)$/;"	f	file:
perf_event_task	events/core.c	/^static void perf_event_task(struct task_struct *task,$/;"	f	file:
perf_event_task_disable	events/core.c	/^int perf_event_task_disable(void)$/;"	f
perf_event_task_enable	events/core.c	/^int perf_event_task_enable(void)$/;"	f
perf_event_task_match	events/core.c	/^static int perf_event_task_match(struct perf_event *event,$/;"	f	file:
perf_event_task_output	events/core.c	/^static void perf_event_task_output(struct perf_event *event,$/;"	f	file:
perf_event_task_tick	events/core.c	/^void perf_event_task_tick(void)$/;"	f
perf_event_tid	events/core.c	/^static u32 perf_event_tid(struct perf_event *event, struct task_struct *p)$/;"	f	file:
perf_event_time	events/core.c	/^static u64 perf_event_time(struct perf_event *event)$/;"	f	file:
perf_event_update_userpage	events/core.c	/^void perf_event_update_userpage(struct perf_event *event)$/;"	f
perf_event_wakeup	events/core.c	/^void perf_event_wakeup(struct perf_event *event)$/;"	f
perf_events	trace/trace_uprobe.c	/^	struct list_head	perf_events;$/;"	m	struct:trace_uprobe_filter	typeref:struct:trace_uprobe_filter::list_head	file:
perf_exclude_event	events/core.c	/^static int perf_exclude_event(struct perf_event *event,$/;"	f	file:
perf_fasync	events/core.c	/^static int perf_fasync(int fd, struct file *filp, int on)$/;"	f	file:
perf_fget_light	events/core.c	/^static inline int perf_fget_light(int fd, struct fd *p)$/;"	f	file:
perf_fops	events/core.c	/^static const struct file_operations perf_fops = {$/;"	v	typeref:struct:file_operations	file:
perf_fops	events/core.c	/^static const struct file_operations perf_fops;$/;"	v	typeref:struct:file_operations	file:
perf_free_event	events/core.c	/^static void perf_free_event(struct perf_event *event,$/;"	f	file:
perf_ftrace_event_register	trace/trace.h	1067;"	d
perf_ftrace_event_register	trace/trace_event_perf.c	/^int perf_ftrace_event_register(struct ftrace_event_call *call,$/;"	f
perf_ftrace_function_call	trace/trace_event_perf.c	/^perf_ftrace_function_call(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
perf_ftrace_function_disable	trace/trace_event_perf.c	/^static void perf_ftrace_function_disable(struct perf_event *event)$/;"	f	file:
perf_ftrace_function_enable	trace/trace_event_perf.c	/^static void perf_ftrace_function_enable(struct perf_event *event)$/;"	f	file:
perf_ftrace_function_register	trace/trace_event_perf.c	/^static int perf_ftrace_function_register(struct perf_event *event)$/;"	f	file:
perf_ftrace_function_unregister	trace/trace_event_perf.c	/^static int perf_ftrace_function_unregister(struct perf_event *event)$/;"	f	file:
perf_group_attach	events/core.c	/^static void perf_group_attach(struct perf_event *event)$/;"	f	file:
perf_group_detach	events/core.c	/^static void perf_group_detach(struct perf_event *event)$/;"	f	file:
perf_guest_cbs	events/core.c	/^struct perf_guest_info_callbacks *perf_guest_cbs;$/;"	v	typeref:struct:perf_guest_info_callbacks
perf_init_event	events/core.c	/^struct pmu *perf_init_event(struct perf_event *event)$/;"	f
perf_install_in_context	events/core.c	/^perf_install_in_context(struct perf_event_context *ctx,$/;"	f	file:
perf_ioctl	events/core.c	/^static long perf_ioctl(struct file *file, unsigned int cmd, unsigned long arg)$/;"	f	file:
perf_lock_task_context	events/core.c	/^perf_lock_task_context(struct task_struct *task, int ctxn, unsigned long *flags)$/;"	f	file:
perf_log_throttle	events/core.c	/^static void perf_log_throttle(struct perf_event *event, int enable)$/;"	f	file:
perf_mmap	events/core.c	/^static int perf_mmap(struct file *file, struct vm_area_struct *vma)$/;"	f	file:
perf_mmap_alloc_page	events/ring_buffer.c	/^static void *perf_mmap_alloc_page(int cpu)$/;"	f	file:
perf_mmap_close	events/core.c	/^static void perf_mmap_close(struct vm_area_struct *vma)$/;"	f	file:
perf_mmap_event	events/core.c	/^struct perf_mmap_event {$/;"	s	file:
perf_mmap_fault	events/core.c	/^static int perf_mmap_fault(struct vm_area_struct *vma, struct vm_fault *vmf)$/;"	f	file:
perf_mmap_free_page	events/ring_buffer.c	/^static void perf_mmap_free_page(unsigned long addr)$/;"	f	file:
perf_mmap_open	events/core.c	/^static void perf_mmap_open(struct vm_area_struct *vma)$/;"	f	file:
perf_mmap_to_page	events/ring_buffer.c	/^perf_mmap_to_page(struct ring_buffer *rb, unsigned long pgoff)$/;"	f
perf_mmap_unmark_page	events/ring_buffer.c	/^static void perf_mmap_unmark_page(void *addr)$/;"	f	file:
perf_mmap_vmops	events/core.c	/^static const struct vm_operations_struct perf_mmap_vmops = {$/;"	v	typeref:struct:vm_operations_struct	file:
perf_output_begin	events/ring_buffer.c	/^int perf_output_begin(struct perf_output_handle *handle,$/;"	f
perf_output_copy	events/ring_buffer.c	/^unsigned int perf_output_copy(struct perf_output_handle *handle,$/;"	f
perf_output_end	events/ring_buffer.c	/^void perf_output_end(struct perf_output_handle *handle)$/;"	f
perf_output_get_handle	events/ring_buffer.c	/^static void perf_output_get_handle(struct perf_output_handle *handle)$/;"	f	file:
perf_output_put_handle	events/ring_buffer.c	/^static void perf_output_put_handle(struct perf_output_handle *handle)$/;"	f	file:
perf_output_read	events/core.c	/^static void perf_output_read(struct perf_output_handle *handle,$/;"	f	file:
perf_output_read_group	events/core.c	/^static void perf_output_read_group(struct perf_output_handle *handle,$/;"	f	file:
perf_output_read_one	events/core.c	/^static void perf_output_read_one(struct perf_output_handle *handle,$/;"	f	file:
perf_output_sample	events/core.c	/^void perf_output_sample(struct perf_output_handle *handle,$/;"	f
perf_output_sample_regs	events/core.c	/^perf_output_sample_regs(struct perf_output_handle *handle,$/;"	f	file:
perf_output_sample_ustack	events/core.c	/^perf_output_sample_ustack(struct perf_output_handle *handle, u64 dump_size,$/;"	f	file:
perf_output_skip	events/ring_buffer.c	/^unsigned int perf_output_skip(struct perf_output_handle *handle,$/;"	f
perf_output_space	events/ring_buffer.c	/^static bool perf_output_space(struct ring_buffer *rb, unsigned long tail,$/;"	f	file:
perf_output_wakeup	events/ring_buffer.c	/^static void perf_output_wakeup(struct perf_output_handle *handle)$/;"	f	file:
perf_pending_event	events/core.c	/^static void perf_pending_event(struct irq_work *entry)$/;"	f	file:
perf_pin_task_context	events/core.c	/^perf_pin_task_context(struct task_struct *task, int ctxn)$/;"	f	file:
perf_pmu_cancel_txn	events/core.c	/^static void perf_pmu_cancel_txn(struct pmu *pmu)$/;"	f	file:
perf_pmu_commit_txn	events/core.c	/^static int perf_pmu_commit_txn(struct pmu *pmu)$/;"	f	file:
perf_pmu_disable	events/core.c	/^void perf_pmu_disable(struct pmu *pmu)$/;"	f
perf_pmu_enable	events/core.c	/^void perf_pmu_enable(struct pmu *pmu)$/;"	f
perf_pmu_migrate_context	events/core.c	/^EXPORT_SYMBOL_GPL(perf_pmu_migrate_context);$/;"	v
perf_pmu_migrate_context	events/core.c	/^void perf_pmu_migrate_context(struct pmu *pmu, int src_cpu, int dst_cpu)$/;"	f
perf_pmu_name	events/core.c	/^extern __weak const char *perf_pmu_name(void)$/;"	f
perf_pmu_nop_int	events/core.c	/^static int perf_pmu_nop_int(struct pmu *pmu)$/;"	f	file:
perf_pmu_nop_void	events/core.c	/^static void perf_pmu_nop_void(struct pmu *pmu)$/;"	f	file:
perf_pmu_register	events/core.c	/^int perf_pmu_register(struct pmu *pmu, char *name, int type)$/;"	f
perf_pmu_rotate_start	events/core.c	/^static void perf_pmu_rotate_start(struct pmu *pmu)$/;"	f	file:
perf_pmu_rotate_stop	events/core.c	/^static void perf_pmu_rotate_stop(struct pmu *pmu)$/;"	f	file:
perf_pmu_start_txn	events/core.c	/^static void perf_pmu_start_txn(struct pmu *pmu)$/;"	f	file:
perf_pmu_unregister	events/core.c	/^void perf_pmu_unregister(struct pmu *pmu)$/;"	f
perf_poll	events/core.c	/^static unsigned int perf_poll(struct file *file, poll_table *wait)$/;"	f	file:
perf_prepare_sample	events/core.c	/^void perf_prepare_sample(struct perf_event_header *header,$/;"	f
perf_proc_update_handler	events/core.c	/^int perf_proc_update_handler(struct ctl_table *table, int write,$/;"	f
perf_put_cgroup	events/core.c	/^static inline void perf_put_cgroup(struct perf_event *event)$/;"	f	file:
perf_read	events/core.c	/^perf_read(struct file *file, char __user *buf, size_t count, loff_t *ppos)$/;"	f	file:
perf_read_event	events/core.c	/^struct perf_read_event {$/;"	s	file:
perf_read_hw	events/core.c	/^perf_read_hw(struct perf_event *event, char __user *buf, size_t count)$/;"	f	file:
perf_reboot	events/core.c	/^perf_reboot(struct notifier_block *notifier, unsigned long val, void *v)$/;"	f	file:
perf_reboot_notifier	events/core.c	/^static struct notifier_block perf_reboot_notifier = {$/;"	v	typeref:struct:notifier_block	file:
perf_register_guest_info_callbacks	events/core.c	/^EXPORT_SYMBOL_GPL(perf_register_guest_info_callbacks);$/;"	v
perf_register_guest_info_callbacks	events/core.c	/^int perf_register_guest_info_callbacks(struct perf_guest_info_callbacks *cbs)$/;"	f
perf_release	events/core.c	/^static int perf_release(struct inode *inode, struct file *file)$/;"	f	file:
perf_remove_from_context	events/core.c	/^static void perf_remove_from_context(struct perf_event *event, bool detach_group)$/;"	f	file:
perf_rotate_context	events/core.c	/^static void perf_rotate_context(struct perf_cpu_context *cpuctx)$/;"	f	file:
perf_sample_event_took	events/core.c	/^void perf_sample_event_took(u64 sample_len_ns)$/;"	f
perf_sample_regs_user	events/core.c	/^static void perf_sample_regs_user(struct perf_regs_user *regs_user,$/;"	f	file:
perf_sample_ustack_size	events/core.c	/^perf_sample_ustack_size(u16 stack_size, u16 header_size,$/;"	f	file:
perf_set_shadow_time	events/core.c	/^static void perf_set_shadow_time(struct perf_event *event,$/;"	f	file:
perf_subsys	events/core.c	/^struct cgroup_subsys perf_subsys = {$/;"	v	typeref:struct:cgroup_subsys
perf_swevent	events/core.c	/^static struct pmu perf_swevent = {$/;"	v	typeref:struct:pmu	file:
perf_swevent_add	events/core.c	/^static int perf_swevent_add(struct perf_event *event, int flags)$/;"	f	file:
perf_swevent_cancel_hrtimer	events/core.c	/^static void perf_swevent_cancel_hrtimer(struct perf_event *event)$/;"	f	file:
perf_swevent_del	events/core.c	/^static void perf_swevent_del(struct perf_event *event, int flags)$/;"	f	file:
perf_swevent_enabled	events/core.c	/^struct static_key perf_swevent_enabled[PERF_COUNT_SW_MAX];$/;"	v	typeref:struct:static_key
perf_swevent_event	events/core.c	/^static void perf_swevent_event(struct perf_event *event, u64 nr,$/;"	f	file:
perf_swevent_event_idx	events/core.c	/^static int perf_swevent_event_idx(struct perf_event *event)$/;"	f	file:
perf_swevent_get_recursion_context	events/core.c	/^EXPORT_SYMBOL_GPL(perf_swevent_get_recursion_context);$/;"	v
perf_swevent_get_recursion_context	events/core.c	/^int perf_swevent_get_recursion_context(void)$/;"	f
perf_swevent_hrtimer	events/core.c	/^static enum hrtimer_restart perf_swevent_hrtimer(struct hrtimer *hrtimer)$/;"	f	file:
perf_swevent_init	events/core.c	/^static int perf_swevent_init(struct perf_event *event)$/;"	f	file:
perf_swevent_init_hrtimer	events/core.c	/^static void perf_swevent_init_hrtimer(struct perf_event *event)$/;"	f	file:
perf_swevent_match	events/core.c	/^static int perf_swevent_match(struct perf_event *event,$/;"	f	file:
perf_swevent_overflow	events/core.c	/^static void perf_swevent_overflow(struct perf_event *event, u64 overflow,$/;"	f	file:
perf_swevent_put_recursion_context	events/core.c	/^inline void perf_swevent_put_recursion_context(int rctx)$/;"	f
perf_swevent_read	events/core.c	/^static void perf_swevent_read(struct perf_event *event)$/;"	f	file:
perf_swevent_set_period	events/core.c	/^static u64 perf_swevent_set_period(struct perf_event *event)$/;"	f	file:
perf_swevent_start	events/core.c	/^static void perf_swevent_start(struct perf_event *event, int flags)$/;"	f	file:
perf_swevent_start_hrtimer	events/core.c	/^static void perf_swevent_start_hrtimer(struct perf_event *event)$/;"	f	file:
perf_swevent_stop	events/core.c	/^static void perf_swevent_stop(struct perf_event *event, int flags)$/;"	f	file:
perf_syscall_enter	trace/trace_syscalls.c	/^static void perf_syscall_enter(void *ignore, struct pt_regs *regs, long id)$/;"	f	file:
perf_syscall_exit	trace/trace_syscalls.c	/^static void perf_syscall_exit(void *ignore, struct pt_regs *regs, long ret)$/;"	f	file:
perf_sysenter_disable	trace/trace_syscalls.c	/^static void perf_sysenter_disable(struct ftrace_event_call *call)$/;"	f	file:
perf_sysenter_enable	trace/trace_syscalls.c	/^static int perf_sysenter_enable(struct ftrace_event_call *call)$/;"	f	file:
perf_sysexit_disable	trace/trace_syscalls.c	/^static void perf_sysexit_disable(struct ftrace_event_call *call)$/;"	f	file:
perf_sysexit_enable	trace/trace_syscalls.c	/^static int perf_sysexit_enable(struct ftrace_event_call *call)$/;"	f	file:
perf_task_clock	events/core.c	/^static struct pmu perf_task_clock = {$/;"	v	typeref:struct:pmu	file:
perf_task_event	events/core.c	/^struct perf_task_event {$/;"	s	file:
perf_tp_event	events/core.c	/^EXPORT_SYMBOL_GPL(perf_tp_event);$/;"	v
perf_tp_event	events/core.c	/^void perf_tp_event(u64 addr, u64 count, void *record, int entry_size,$/;"	f
perf_tp_event_init	events/core.c	/^static int perf_tp_event_init(struct perf_event *event)$/;"	f	file:
perf_tp_event_match	events/core.c	/^static int perf_tp_event_match(struct perf_event *event,$/;"	f	file:
perf_tp_filter_match	events/core.c	/^static int perf_tp_filter_match(struct perf_event *event,$/;"	f	file:
perf_tp_register	events/core.c	/^static inline void perf_tp_register(void)$/;"	f	file:
perf_trace_add	trace/trace_event_perf.c	/^int perf_trace_add(struct perf_event *p_event, int flags)$/;"	f
perf_trace_buf	trace/trace_event_perf.c	/^static char __percpu *perf_trace_buf[PERF_NR_CONTEXTS];$/;"	v	file:
perf_trace_buf_prepare	trace/trace_event_perf.c	/^EXPORT_SYMBOL_GPL(perf_trace_buf_prepare);$/;"	v
perf_trace_buf_prepare	trace/trace_event_perf.c	/^__kprobes void *perf_trace_buf_prepare(int size, unsigned short type,$/;"	f
perf_trace_del	trace/trace_event_perf.c	/^void perf_trace_del(struct perf_event *p_event, int flags)$/;"	f
perf_trace_destroy	trace/trace_event_perf.c	/^void perf_trace_destroy(struct perf_event *p_event)$/;"	f
perf_trace_event_close	trace/trace_event_perf.c	/^static void perf_trace_event_close(struct perf_event *p_event)$/;"	f	file:
perf_trace_event_init	trace/trace_event_perf.c	/^static int perf_trace_event_init(struct ftrace_event_call *tp_event,$/;"	f	file:
perf_trace_event_open	trace/trace_event_perf.c	/^static int perf_trace_event_open(struct perf_event *p_event)$/;"	f	file:
perf_trace_event_perm	trace/trace_event_perf.c	/^static int perf_trace_event_perm(struct ftrace_event_call *tp_event,$/;"	f	file:
perf_trace_event_reg	trace/trace_event_perf.c	/^static int perf_trace_event_reg(struct ftrace_event_call *tp_event,$/;"	f	file:
perf_trace_event_unreg	trace/trace_event_perf.c	/^static void perf_trace_event_unreg(struct perf_event *p_event)$/;"	f	file:
perf_trace_init	trace/trace_event_perf.c	/^int perf_trace_init(struct perf_event *p_event)$/;"	f
perf_trace_t	trace/trace_event_perf.c	/^	perf_trace_t;$/;"	t	file:
perf_tracepoint	events/core.c	/^static struct pmu perf_tracepoint = {$/;"	v	typeref:struct:pmu	file:
perf_tryget_cgroup	events/core.c	/^static inline bool perf_tryget_cgroup(struct perf_event *event)$/;"	f	file:
perf_unpin_context	events/core.c	/^static void perf_unpin_context(struct perf_event_context *ctx)$/;"	f	file:
perf_unregister_guest_info_callbacks	events/core.c	/^EXPORT_SYMBOL_GPL(perf_unregister_guest_info_callbacks);$/;"	v
perf_unregister_guest_info_callbacks	events/core.c	/^int perf_unregister_guest_info_callbacks(struct perf_guest_info_callbacks *cbs)$/;"	f
perf_user_stack_pointer	events/internal.h	171;"	d
perf_user_stack_pointer	events/internal.h	178;"	d
perf_ustack_task_size	events/core.c	/^static u64 perf_ustack_task_size(struct pt_regs *regs)$/;"	f	file:
period	sched/core.c	/^	u64 period, quota;$/;"	m	struct:cfs_schedulable_data	file:
period	sched/sched.h	/^	ktime_t period;$/;"	m	struct:cfs_bandwidth
period_timer	sched/sched.h	/^	struct hrtimer period_timer, slack_timer;$/;"	m	struct:cfs_bandwidth	typeref:struct:cfs_bandwidth::hrtimer
perm_gid	audit.h	/^			gid_t			perm_gid;$/;"	m	struct:audit_context::__anon15::__anon17
perm_mode	audit.h	/^			umode_t			perm_mode;$/;"	m	struct:audit_context::__anon15::__anon17
perm_uid	audit.h	/^			uid_t			perm_uid;$/;"	m	struct:audit_context::__anon15::__anon17
permitted	audit.h	/^	kernel_cap_t		permitted;$/;"	m	struct:audit_cap_data
persistent_clock_exist	time/timekeeping.c	/^bool __read_mostly persistent_clock_exist = false;$/;"	v
persistent_clock_is_local	time.c	/^int persistent_clock_is_local;$/;"	v
personality	audit.h	/^	unsigned long	    personality;$/;"	m	struct:audit_context
pf_data	swap/us_manager/helper.c	/^struct pf_data {$/;"	s	file:
pf_group	swap/us_manager/pf/pf_group.c	/^struct pf_group {$/;"	s	file:
pf_inst_flag	swap/us_manager/pf/pf_group.c	/^enum pf_inst_flag {$/;"	g	file:
pf_register_probe	swap/us_manager/pf/pf_group.c	/^EXPORT_SYMBOL_GPL(pf_register_probe);$/;"	v
pf_register_probe	swap/us_manager/pf/pf_group.c	/^int pf_register_probe(struct pf_group *pfg, struct dentry *dentry,$/;"	f
pf_regs	swap/us_manager/helper.c	/^	struct pt_regs *pf_regs;$/;"	m	struct:pf_data	typeref:struct:pf_data::pt_regs	file:
pf_unregister_probe	swap/us_manager/pf/pf_group.c	/^EXPORT_SYMBOL_GPL(pf_unregister_probe);$/;"	v
pf_unregister_probe	swap/us_manager/pf/pf_group.c	/^int pf_unregister_probe(struct pf_group *pfg, struct dentry *dentry,$/;"	f
pfg	swap/nsp/nsp.c	/^	struct pf_group *pfg;$/;"	m	struct:nsp_data	typeref:struct:nsp_data::pf_group	file:
pfg	swap/parser/us_inst.c	/^	struct pf_group *pfg;$/;"	m	struct:pfg_item	typeref:struct:pfg_item::pf_group	file:
pfg	swap/us_manager/sspt/sspt_filter.h	/^	struct pf_group *pfg;$/;"	m	struct:sspt_filter	typeref:struct:sspt_filter::pf_group
pfg	swap/webprobe/webprobe_prof.c	/^	struct pf_group *pfg;$/;"	m	struct:web_prof_data	typeref:struct:web_prof_data::pf_group	file:
pfg_add	swap/parser/us_inst.c	/^static int pfg_add(struct pf_group *pfg)$/;"	f	file:
pfg_add_proc	swap/us_manager/pf/pf_group.c	/^static int pfg_add_proc(struct pf_group *pfg, struct sspt_proc *proc)$/;"	f	file:
pfg_add_to_list	swap/us_manager/pf/pf_group.c	/^static void pfg_add_to_list(struct pf_group *pfg)$/;"	f	file:
pfg_check	swap/parser/us_inst.c	/^static bool pfg_check(struct pf_group *pfg)$/;"	f	file:
pfg_check_task	swap/us_manager/pf/pf_group.c	/^static enum pf_inst_flag pfg_check_task(struct task_struct *task)$/;"	f	file:
pfg_create	swap/us_manager/pf/pf_group.c	/^static struct pf_group *pfg_create(void)$/;"	f	file:
pfg_del_from_list	swap/us_manager/pf/pf_group.c	/^static void pfg_del_from_list(struct pf_group *pfg)$/;"	f	file:
pfg_free	swap/us_manager/pf/pf_group.c	/^static void pfg_free(struct pf_group *pfg)$/;"	f	file:
pfg_is_inst	swap/us_manager/sspt/sspt_filter.h	/^	bool pfg_is_inst;$/;"	m	struct:sspt_filter
pfg_item	swap/parser/us_inst.c	/^struct pfg_item {$/;"	s	file:
pfg_item_create	swap/parser/us_inst.c	/^static struct pfg_item *pfg_item_create(struct pf_group *pfg)$/;"	f	file:
pfg_item_free	swap/parser/us_inst.c	/^static void pfg_item_free(struct pfg_item *item)$/;"	f	file:
pfg_msg_cb	swap/us_manager/pf/pf_group.h	/^struct pfg_msg_cb {$/;"	s
pfg_msg_cb_get	swap/us_manager/pf/pf_group.c	/^struct pfg_msg_cb *pfg_msg_cb_get(struct pf_group *pfg)$/;"	f
pfg_msg_cb_reset	swap/us_manager/pf/pf_group.c	/^EXPORT_SYMBOL_GPL(pfg_msg_cb_reset);$/;"	v
pfg_msg_cb_reset	swap/us_manager/pf/pf_group.c	/^void pfg_msg_cb_reset(struct pf_group *pfg)$/;"	f
pfg_msg_cb_set	swap/us_manager/pf/pf_group.c	/^EXPORT_SYMBOL_GPL(pfg_msg_cb_set);$/;"	v
pfg_msg_cb_set	swap/us_manager/pf/pf_group.c	/^int pfg_msg_cb_set(struct pf_group *pfg, struct pfg_msg_cb *msg_cb)$/;"	f
pfg_print	swap/us_manager/pf/pf_group.c	/^EXPORT_SYMBOL_GPL(pfg_print);$/;"	v
pfg_print	swap/us_manager/pf/pf_group.c	/^void pfg_print(struct pf_group *pfg)$/;"	f
pfg_put_all	swap/parser/us_inst.c	/^void pfg_put_all(void)$/;"	f
pg	trace/ftrace.c	/^	struct ftrace_page		*pg;$/;"	m	struct:ftrace_iterator	typeref:struct:ftrace_iterator::ftrace_page	file:
pg	trace/ftrace.c	/^	struct ftrace_page	*pg;$/;"	m	struct:ftrace_rec_iter	typeref:struct:ftrace_rec_iter::ftrace_page	file:
pgd_offset_k	swap/kprobe/swap_kprobes_deps.c	45;"	d	file:
pgd_offset_k	swap/kprobe/swap_kprobes_deps.c	46;"	d	file:
pgoff	events/core.c	/^		u64				pgoff;$/;"	m	struct:perf_mmap_event::__anon8	file:
pi_list_entry	rtmutex_common.h	/^	struct plist_node	pi_list_entry;$/;"	m	struct:rt_mutex_waiter	typeref:struct:rt_mutex_waiter::plist_node
pi_mutex	futex.c	/^	struct rt_mutex pi_mutex;$/;"	m	struct:futex_pi_state	typeref:struct:futex_pi_state::rt_mutex	file:
pi_state	futex.c	/^	struct futex_pi_state *pi_state;$/;"	m	struct:futex_q	typeref:struct:futex_q::futex_pi_state	file:
pick_next_entity	sched/fair.c	/^static struct sched_entity *pick_next_entity(struct cfs_rq *cfs_rq)$/;"	f	file:
pick_next_highest_task_rt	sched/rt.c	/^static struct task_struct *pick_next_highest_task_rt(struct rq *rq, int cpu)$/;"	f	file:
pick_next_pushable_task	sched/rt.c	/^static struct task_struct *pick_next_pushable_task(struct rq *rq)$/;"	f	file:
pick_next_rt_entity	sched/rt.c	/^static struct sched_rt_entity *pick_next_rt_entity(struct rq *rq,$/;"	f	file:
pick_next_task	sched/core.c	/^pick_next_task(struct rq *rq)$/;"	f	file:
pick_next_task	sched/sched.h	/^	struct task_struct * (*pick_next_task) (struct rq *rq);$/;"	m	struct:sched_class	typeref:struct:sched_class::pick_next_task
pick_next_task_fair	sched/fair.c	/^static struct task_struct *pick_next_task_fair(struct rq *rq)$/;"	f	file:
pick_next_task_idle	sched/idle_task.c	/^static struct task_struct *pick_next_task_idle(struct rq *rq)$/;"	f	file:
pick_next_task_rt	sched/rt.c	/^static struct task_struct *pick_next_task_rt(struct rq *rq)$/;"	f	file:
pick_next_task_stop	sched/stop_task.c	/^static struct task_struct *pick_next_task_stop(struct rq *rq)$/;"	f	file:
pick_rt_task	sched/rt.c	/^static int pick_rt_task(struct rq *rq, struct task_struct *p, int cpu)$/;"	f	file:
pid	audit.c	/^	int pid;$/;"	m	struct:audit_reply	file:
pid	audit.h	/^			pid_t			pid;$/;"	m	struct:audit_context::__anon15::__anon22
pid	audit.h	/^	int pid;$/;"	m	struct:audit_netlink_list
pid	audit.h	/^	pid_t		    pid, ppid;$/;"	m	struct:audit_context
pid	auditsc.c	/^	pid_t			pid;$/;"	m	struct:audit_aux_data_capset	file:
pid	events/core.c	/^		u32				pid;$/;"	m	struct:perf_comm_event::__anon7	file:
pid	events/core.c	/^		u32				pid;$/;"	m	struct:perf_mmap_event::__anon8	file:
pid	events/core.c	/^		u32				pid;$/;"	m	struct:perf_task_event::__anon6	file:
pid	events/core.c	/^	u32				pid;$/;"	m	struct:perf_read_event	file:
pid	printk.c	/^	u16 pid;			\/* process id CONFIG_PRINTK_PROCESS *\/$/;"	m	struct:log	file:
pid	swap/ks_features/ksf_msg.c	/^	u32 pid;$/;"	m	struct:msg_context_switch	file:
pid	swap/ks_features/ksf_msg.c	/^	u32 pid;$/;"	m	struct:msg_file_entry	file:
pid	swap/ks_features/ksf_msg.c	/^	u32 pid;$/;"	m	struct:msg_file_exit	file:
pid	swap/ks_features/ksf_msg.c	/^	u32 pid;$/;"	m	struct:msg_sys_header	file:
pid	swap/nsp/nsp_msg.c	/^	u32 pid;$/;"	m	struct:nsp_msg_struct	file:
pid	swap/parser/features.c	/^	u32 pid;$/;"	m	struct:sample	file:
pid	swap/parser/usm_msg.c	/^	u32 pid;$/;"	m	struct:proc_comm	file:
pid	swap/parser/usm_msg.c	/^	u32 pid;$/;"	m	struct:proc_info_top	file:
pid	swap/parser/usm_msg.c	/^	u32 pid;$/;"	m	struct:proc_map	file:
pid	swap/parser/usm_msg.c	/^	u32 pid;$/;"	m	struct:proc_terminate	file:
pid	swap/parser/usm_msg.c	/^	u32 pid;$/;"	m	struct:proc_unmap	file:
pid	swap/retprobe/rp_msg.c	/^	u32 pid;$/;"	m	struct:msg_entry	file:
pid	swap/retprobe/rp_msg.c	/^	u32 pid;$/;"	m	struct:msg_exit	file:
pid	taskstats.c	/^	pid_t pid;$/;"	m	struct:listener	file:
pid	time/time_history.c	/^	pid_t pid;$/;"	m	struct:time_log_entry	file:
pid	time/timer_stats.c	/^	pid_t			pid;$/;"	m	struct:entry	file:
pid	trace/ftrace.c	/^	struct pid *pid;$/;"	m	struct:ftrace_pid	typeref:struct:ftrace_pid::pid	file:
pid	trace/trace.h	/^	pid_t			pid;$/;"	m	struct:trace_array_cpu
pid_before	pid.c	/^static int pid_before(int base, int a, int b)$/;"	f	file:
pid_cache	pid_namespace.c	/^struct pid_cache {$/;"	s	file:
pid_count	auditsc.c	/^	int			pid_count;$/;"	m	struct:audit_aux_data_pids	file:
pid_hash	pid.c	/^static struct hlist_head *pid_hash;$/;"	v	typeref:struct:hlist_head	file:
pid_hashfn	pid.c	42;"	d	file:
pid_max	pid.c	/^int pid_max = PID_MAX_DEFAULT;$/;"	v
pid_max_max	pid.c	/^int pid_max_max = PID_MAX_LIMIT;$/;"	v
pid_max_min	pid.c	/^int pid_max_min = RESERVED_PIDS + 1;$/;"	v
pid_namespaces_init	pid_namespace.c	/^__initcall(pid_namespaces_init);$/;"	v
pid_namespaces_init	pid_namespace.c	/^static __init int pid_namespaces_init(void)$/;"	f	file:
pid_nr_ns	pid.c	/^EXPORT_SYMBOL_GPL(pid_nr_ns);$/;"	v
pid_nr_ns	pid.c	/^pid_t pid_nr_ns(struct pid *pid, struct pid_namespace *ns)$/;"	f
pid_ns_cachep	pid_namespace.c	/^static struct kmem_cache *pid_ns_cachep;$/;"	v	typeref:struct:kmem_cache	file:
pid_ns_ctl_handler	pid_namespace.c	/^static int pid_ns_ctl_handler(struct ctl_table *table, int write,$/;"	f	file:
pid_ns_ctl_table	pid_namespace.c	/^static struct ctl_table pid_ns_ctl_table[] = {$/;"	v	typeref:struct:ctl_table	file:
pid_task	pid.c	/^EXPORT_SYMBOL(pid_task);$/;"	v
pid_task	pid.c	/^struct task_struct *pid_task(struct pid *pid, enum pid_type type)$/;"	f
pid_vnr	pid.c	/^EXPORT_SYMBOL_GPL(pid_vnr);$/;"	v
pid_vnr	pid.c	/^pid_t pid_vnr(struct pid *pid)$/;"	f
pidhash_init	pid.c	/^void __init pidhash_init(void)$/;"	f
pidhash_shift	pid.c	/^static unsigned int pidhash_shift = 4;$/;"	v	file:
pidlist_allocate	cgroup.c	/^static void *pidlist_allocate(int count)$/;"	f	file:
pidlist_array_load	cgroup.c	/^static int pidlist_array_load(struct cgroup *cgrp, enum cgroup_filetype type,$/;"	f	file:
pidlist_free	cgroup.c	/^static void pidlist_free(void *p)$/;"	f	file:
pidlist_uniq	cgroup.c	/^static int pidlist_uniq(pid_t *list, int length)$/;"	f	file:
pidmap_init	pid.c	/^void __init pidmap_init(void)$/;"	f
pidns_get	pid_namespace.c	/^static void *pidns_get(struct task_struct *task)$/;"	f	file:
pidns_install	pid_namespace.c	/^static int pidns_install(struct nsproxy *nsproxy, void *ns)$/;"	f	file:
pidns_inum	pid_namespace.c	/^static unsigned int pidns_inum(void *ns)$/;"	f	file:
pidns_operations	pid_namespace.c	/^const struct proc_ns_operations pidns_operations = {$/;"	v	typeref:struct:proc_ns_operations
pidns_put	pid_namespace.c	/^static void pidns_put(void *ns)$/;"	f	file:
pin_ac_efl_main	swap/nsp/nsp.c	/^static struct probe_info_new pin_ac_efl_main = MAKE_UPROBE(ac_efl_main_h);$/;"	v	typeref:struct:probe_info_new	file:
pin_ac_init	swap/nsp/nsp.c	/^static struct probe_info_new pin_ac_init = MAKE_URPROBE(NULL, ac_init_rh, 0);$/;"	v	typeref:struct:probe_info_new	file:
pin_dlopen	swap/nsp/nsp.c	/^static struct probe_info_new pin_dlopen = MAKE_URPROBE(dlopen_eh, dlopen_rh, 0);$/;"	v	typeref:struct:probe_info_new	file:
pin_dlsym	swap/nsp/nsp.c	/^static struct probe_info_new pin_dlsym = MAKE_URPROBE(dlsym_eh, dlsym_rh, 0);$/;"	v	typeref:struct:probe_info_new	file:
pin_do_app	swap/nsp/nsp.c	/^static struct probe_info_new pin_do_app = MAKE_URPROBE(do_app_eh, do_app_rh, 0);$/;"	v	typeref:struct:probe_info_new	file:
pin_elm_run	swap/nsp/nsp.c	/^static struct probe_info_new pin_elm_run = MAKE_UPROBE(elm_run_h);$/;"	v	typeref:struct:probe_info_new	file:
pin_exit	swap/us_manager/probes/probe_info_new.c	/^void pin_exit(void)$/;"	f
pin_init	swap/us_manager/probes/probe_info_new.c	/^int pin_init(void)$/;"	f
pin_main	swap/nsp/nsp.c	/^static struct probe_info_new pin_main = MAKE_URPROBE(main_eh, main_rh, 0);$/;"	v	typeref:struct:probe_info_new	file:
pin_register	swap/us_manager/probes/probe_info_new.c	/^EXPORT_SYMBOL_GPL(pin_register);$/;"	v
pin_register	swap/us_manager/probes/probe_info_new.c	/^int pin_register(struct probe_new *probe, struct pf_group *pfg,$/;"	f
pin_set_probe	swap/us_manager/probes/probe_info_new.c	/^EXPORT_SYMBOL_GPL(pin_set_probe);$/;"	v
pin_set_probe	swap/us_manager/probes/probe_info_new.c	/^void pin_set_probe(struct probe_info_otg *otg, unsigned long vaddr)$/;"	f
pin_unregister	swap/us_manager/probes/probe_info_new.c	/^EXPORT_SYMBOL_GPL(pin_unregister);$/;"	v
pin_unregister	swap/us_manager/probes/probe_info_new.c	/^int pin_unregister(struct probe_new *probe, struct pf_group *pfg,$/;"	f
pinned	events/hw_breakpoint.c	/^	unsigned int pinned;$/;"	m	struct:bp_busy_slots	file:
pinst_has_cpu	padata.c	/^static inline int pinst_has_cpu(struct padata_instance *pinst, int cpu)$/;"	f	file:
pipe_close	trace/trace.h	/^	void			(*pipe_close)(struct trace_iterator *iter);$/;"	m	struct:tracer
pipe_open	trace/trace.h	/^	void			(*pipe_open)(struct trace_iterator *iter);$/;"	m	struct:tracer
pl_i	swap/us_manager/probes/probes.h	/^		struct preload_info pl_i;$/;"	m	union:probe_info::__anon56	typeref:struct:probe_info::__anon56::preload_info
pl_lock	swap/us_manager/pf/pf_group.c	/^	spinlock_t pl_lock;	\/* for proc_list *\/$/;"	m	struct:pf_group	file:
pl_struct	swap/us_manager/pf/pf_group.c	/^struct pl_struct {$/;"	s	file:
place_entity	sched/fair.c	/^place_entity(struct cfs_rq *cfs_rq, struct sched_entity *se, int initial)$/;"	f	file:
platform_begin	power/hibernate.c	/^static int platform_begin(int platform_mode)$/;"	f	file:
platform_end	power/hibernate.c	/^static void platform_end(int platform_mode)$/;"	f	file:
platform_finish	power/hibernate.c	/^static void platform_finish(int platform_mode)$/;"	f	file:
platform_leave	power/hibernate.c	/^static void platform_leave(int platform_mode)$/;"	f	file:
platform_pre_restore	power/hibernate.c	/^static int platform_pre_restore(int platform_mode)$/;"	f	file:
platform_pre_snapshot	power/hibernate.c	/^static int platform_pre_snapshot(int platform_mode)$/;"	f	file:
platform_recover	power/hibernate.c	/^static void platform_recover(int platform_mode)$/;"	f	file:
platform_restore_cleanup	power/hibernate.c	/^static void platform_restore_cleanup(int platform_mode)$/;"	f	file:
platform_support	power/user.c	/^	char platform_support;$/;"	m	struct:snapshot_data	file:
pm_async	power/main.c	/^power_attr(pm_async);$/;"	v
pm_async_enabled	power/main.c	/^int pm_async_enabled = 1;$/;"	v
pm_async_show	power/main.c	/^static ssize_t pm_async_show(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
pm_async_store	power/main.c	/^static ssize_t pm_async_store(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
pm_autosleep_init	power/autosleep.c	/^int __init pm_autosleep_init(void)$/;"	f
pm_autosleep_init	power/power.h	/^static inline int pm_autosleep_init(void) { return 0; }$/;"	f
pm_autosleep_lock	power/autosleep.c	/^int pm_autosleep_lock(void)$/;"	f
pm_autosleep_lock	power/power.h	/^static inline int pm_autosleep_lock(void) { return 0; }$/;"	f
pm_autosleep_set_state	power/autosleep.c	/^int pm_autosleep_set_state(suspend_state_t state)$/;"	f
pm_autosleep_state	power/autosleep.c	/^suspend_state_t pm_autosleep_state(void)$/;"	f
pm_autosleep_state	power/power.h	/^static inline suspend_state_t pm_autosleep_state(void) { return PM_SUSPEND_ON; }$/;"	f
pm_autosleep_unlock	power/autosleep.c	/^void pm_autosleep_unlock(void)$/;"	f
pm_autosleep_unlock	power/power.h	/^static inline void pm_autosleep_unlock(void) {}$/;"	f
pm_debugfs_init	power/main.c	/^late_initcall(pm_debugfs_init);$/;"	v
pm_debugfs_init	power/main.c	/^static int __init pm_debugfs_init(void)$/;"	f	file:
pm_disk_init	power/hibernate.c	/^core_initcall(pm_disk_init);$/;"	v
pm_disk_init	power/hibernate.c	/^static int __init pm_disk_init(void)$/;"	f	file:
pm_freeze_timeout	power/main.c	/^power_attr(pm_freeze_timeout);$/;"	v
pm_freeze_timeout_show	power/main.c	/^static ssize_t pm_freeze_timeout_show(struct kobject *kobj,$/;"	f	file:
pm_freeze_timeout_store	power/main.c	/^static ssize_t pm_freeze_timeout_store(struct kobject *kobj,$/;"	f	file:
pm_freezing	freezer.c	/^EXPORT_SYMBOL_GPL(pm_freezing);$/;"	v
pm_freezing	freezer.c	/^bool pm_freezing;$/;"	v
pm_init	power/main.c	/^core_initcall(pm_init);$/;"	v
pm_init	power/main.c	/^static int __init pm_init(void)$/;"	f	file:
pm_mutex	power/main.c	/^DEFINE_MUTEX(pm_mutex);$/;"	v
pm_nosig_freezing	freezer.c	/^bool pm_nosig_freezing;$/;"	v
pm_notifier_call_chain	power/main.c	/^int pm_notifier_call_chain(unsigned long val)$/;"	f
pm_power_off_prepare	sys.c	/^void (*pm_power_off_prepare)(void);$/;"	v
pm_prepare_console	power/console.c	/^int pm_prepare_console(void)$/;"	f
pm_print_times	power/main.c	/^power_attr(pm_print_times);$/;"	v
pm_print_times_enabled	power/main.c	/^bool pm_print_times_enabled;$/;"	v
pm_print_times_init	power/main.c	/^static inline void pm_print_times_init(void) {}$/;"	f	file:
pm_print_times_init	power/main.c	/^static inline void pm_print_times_init(void)$/;"	f	file:
pm_print_times_show	power/main.c	/^static ssize_t pm_print_times_show(struct kobject *kobj,$/;"	f	file:
pm_print_times_store	power/main.c	/^static ssize_t pm_print_times_store(struct kobject *kobj,$/;"	f	file:
pm_qos_add_notifier	power/qos.c	/^EXPORT_SYMBOL_GPL(pm_qos_add_notifier);$/;"	v
pm_qos_add_notifier	power/qos.c	/^int pm_qos_add_notifier(int pm_qos_class, struct notifier_block *notifier)$/;"	f
pm_qos_add_request	power/qos.c	/^EXPORT_SYMBOL_GPL(pm_qos_add_request);$/;"	v
pm_qos_add_request	power/qos.c	/^void pm_qos_add_request(struct pm_qos_request *req,$/;"	f
pm_qos_array	power/qos.c	/^static struct pm_qos_object *pm_qos_array[] = {$/;"	v	typeref:struct:pm_qos_object	file:
pm_qos_debug_fops	power/qos.c	/^const static struct file_operations pm_qos_debug_fops = {$/;"	v	typeref:struct:file_operations	file:
pm_qos_debug_open	power/qos.c	/^static int pm_qos_debug_open(struct inode *inode, struct file *file)$/;"	f	file:
pm_qos_debug_show	power/qos.c	/^static int pm_qos_debug_show(struct seq_file *s, void *d)$/;"	f	file:
pm_qos_debug_show_one	power/qos.c	/^static void pm_qos_debug_show_one(struct seq_file *s, struct pm_qos_object *qos)$/;"	f	file:
pm_qos_flags_remove_req	power/qos.c	/^static void pm_qos_flags_remove_req(struct pm_qos_flags *pqf,$/;"	f	file:
pm_qos_get_value	power/qos.c	/^static inline int pm_qos_get_value(struct pm_qos_constraints *c)$/;"	f	file:
pm_qos_object	power/qos.c	/^struct pm_qos_object {$/;"	s	file:
pm_qos_power_fops	power/qos.c	/^static const struct file_operations pm_qos_power_fops = {$/;"	v	typeref:struct:file_operations	file:
pm_qos_power_init	power/qos.c	/^late_initcall(pm_qos_power_init);$/;"	v
pm_qos_power_init	power/qos.c	/^static int __init pm_qos_power_init(void)$/;"	f	file:
pm_qos_power_miscdev	power/qos.c	/^	struct miscdevice pm_qos_power_miscdev;$/;"	m	struct:pm_qos_object	typeref:struct:pm_qos_object::miscdevice	file:
pm_qos_power_open	power/qos.c	/^static int pm_qos_power_open(struct inode *inode, struct file *filp)$/;"	f	file:
pm_qos_power_read	power/qos.c	/^static ssize_t pm_qos_power_read(struct file *filp, char __user *buf,$/;"	f	file:
pm_qos_power_release	power/qos.c	/^static int pm_qos_power_release(struct inode *inode, struct file *filp)$/;"	f	file:
pm_qos_power_write	power/qos.c	/^static ssize_t pm_qos_power_write(struct file *filp, const char __user *buf,$/;"	f	file:
pm_qos_read_value	power/qos.c	/^s32 pm_qos_read_value(struct pm_qos_constraints *c)$/;"	f
pm_qos_remove_notifier	power/qos.c	/^EXPORT_SYMBOL_GPL(pm_qos_remove_notifier);$/;"	v
pm_qos_remove_notifier	power/qos.c	/^int pm_qos_remove_notifier(int pm_qos_class, struct notifier_block *notifier)$/;"	f
pm_qos_remove_request	power/qos.c	/^EXPORT_SYMBOL_GPL(pm_qos_remove_request);$/;"	v
pm_qos_remove_request	power/qos.c	/^void pm_qos_remove_request(struct pm_qos_request *req)$/;"	f
pm_qos_request	power/qos.c	/^EXPORT_SYMBOL_GPL(pm_qos_request);$/;"	v
pm_qos_request	power/qos.c	/^int pm_qos_request(int pm_qos_class)$/;"	f
pm_qos_request_active	power/qos.c	/^EXPORT_SYMBOL_GPL(pm_qos_request_active);$/;"	v
pm_qos_request_active	power/qos.c	/^int pm_qos_request_active(struct pm_qos_request *req)$/;"	f
pm_qos_set_value	power/qos.c	/^static inline void pm_qos_set_value(struct pm_qos_constraints *c, s32 value)$/;"	f	file:
pm_qos_update_flags	power/qos.c	/^bool pm_qos_update_flags(struct pm_qos_flags *pqf,$/;"	f
pm_qos_update_request	power/qos.c	/^EXPORT_SYMBOL_GPL(pm_qos_update_request);$/;"	v
pm_qos_update_request	power/qos.c	/^void pm_qos_update_request(struct pm_qos_request *req,$/;"	f
pm_qos_update_request_timeout	power/qos.c	/^void pm_qos_update_request_timeout(struct pm_qos_request *req, s32 new_value,$/;"	f
pm_qos_update_target	power/qos.c	/^int pm_qos_update_target(struct pm_qos_constraints *c, struct plist_node *node,$/;"	f
pm_qos_work_fn	power/qos.c	/^static void pm_qos_work_fn(struct work_struct *work)$/;"	f	file:
pm_restore_console	power/console.c	/^void pm_restore_console(void)$/;"	f
pm_sleep_state	power/power.h	/^struct pm_sleep_state {$/;"	s
pm_start_workqueue	power/main.c	/^static inline int pm_start_workqueue(void) { return 0; }$/;"	f	file:
pm_start_workqueue	power/main.c	/^static int __init pm_start_workqueue(void)$/;"	f	file:
pm_states	power/suspend.c	/^struct pm_sleep_state pm_states[PM_SUSPEND_MAX] = {$/;"	v	typeref:struct:pm_sleep_state
pm_suspend	power/suspend.c	/^EXPORT_SYMBOL(pm_suspend);$/;"	v
pm_suspend	power/suspend.c	/^int pm_suspend(suspend_state_t state)$/;"	f
pm_suspend_marker	power/suspend.c	/^static void pm_suspend_marker(char *annotation)$/;"	f	file:
pm_sysrq_init	power/poweroff.c	/^static int __init pm_sysrq_init(void)$/;"	f	file:
pm_sysrq_init	power/poweroff.c	/^subsys_initcall(pm_sysrq_init);$/;"	v
pm_test	power/main.c	/^power_attr(pm_test);$/;"	v
pm_test_level	power/main.c	/^int pm_test_level = TEST_NONE;$/;"	v
pm_test_show	power/main.c	/^static ssize_t pm_test_show(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
pm_test_store	power/main.c	/^static ssize_t pm_test_store(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
pm_tests	power/main.c	/^static const char * const pm_tests[__TEST_AFTER_LAST] = {$/;"	v	file:
pm_trace	power/main.c	/^power_attr(pm_trace);$/;"	v
pm_trace_dev_match	power/main.c	/^power_attr(pm_trace_dev_match);$/;"	v
pm_trace_dev_match_show	power/main.c	/^static ssize_t pm_trace_dev_match_show(struct kobject *kobj,$/;"	f	file:
pm_trace_dev_match_store	power/main.c	/^pm_trace_dev_match_store(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
pm_trace_enabled	power/main.c	/^int pm_trace_enabled;$/;"	v
pm_trace_show	power/main.c	/^static ssize_t pm_trace_show(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
pm_trace_store	power/main.c	/^pm_trace_store(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
pm_vt_switch	power/console.c	/^static bool pm_vt_switch(void)$/;"	f	file:
pm_vt_switch	power/console.c	/^struct pm_vt_switch {$/;"	s	file:
pm_vt_switch_required	power/console.c	/^EXPORT_SYMBOL(pm_vt_switch_required);$/;"	v
pm_vt_switch_required	power/console.c	/^void pm_vt_switch_required(struct device *dev, bool required)$/;"	f
pm_vt_switch_unregister	power/console.c	/^EXPORT_SYMBOL(pm_vt_switch_unregister);$/;"	v
pm_vt_switch_unregister	power/console.c	/^void pm_vt_switch_unregister(struct device *dev)$/;"	f
pm_wq	power/main.c	/^EXPORT_SYMBOL_GPL(pm_wq);$/;"	v
pm_wq	power/main.c	/^struct workqueue_struct *pm_wq;$/;"	v	typeref:struct:workqueue_struct
pmu_bus	events/core.c	/^static struct bus_type pmu_bus = {$/;"	v	typeref:struct:bus_type	file:
pmu_bus_running	events/core.c	/^static int pmu_bus_running;$/;"	v	file:
pmu_dev_alloc	events/core.c	/^static int pmu_dev_alloc(struct pmu *pmu)$/;"	f	file:
pmu_dev_attrs	events/core.c	/^static struct device_attribute pmu_dev_attrs[] = {$/;"	v	typeref:struct:device_attribute	file:
pmu_dev_release	events/core.c	/^static void pmu_dev_release(struct device *dev)$/;"	f	file:
pmu_idr	events/core.c	/^static struct idr pmu_idr;$/;"	v	typeref:struct:idr	file:
pmus_srcu	events/core.c	/^static struct srcu_struct pmus_srcu;$/;"	v	typeref:struct:srcu_struct	file:
pn	cpuset.c	/^	int pn;$/;"	m	struct:cpuset	file:
policy	trace/trace.h	/^	unsigned long		policy;$/;"	m	struct:trace_array_cpu
poll	events/internal.h	/^	atomic_t			poll;		\/* POLL_ for wakeups *\/$/;"	m	struct:ring_buffer
poll_spurious_irqs	irq/spurious.c	/^static void poll_spurious_irqs(unsigned long dummy)$/;"	f	file:
poll_wait_pipe	trace/trace.c	/^int poll_wait_pipe(struct trace_iterator *iter)$/;"	f
pool	workqueue.c	/^	struct worker_pool	*pool;		\/* I: the associated pool *\/$/;"	m	struct:pool_workqueue	typeref:struct:pool_workqueue::worker_pool	file:
pool	workqueue_internal.h	/^	struct worker_pool	*pool;		\/* I: the associated pool *\/$/;"	m	struct:worker	typeref:struct:worker::worker_pool
pool_mayday_timeout	workqueue.c	/^static void pool_mayday_timeout(unsigned long __pool)$/;"	f	file:
pool_workqueue	workqueue.c	/^struct pool_workqueue {$/;"	s	file:
pos	kallsyms.c	/^	loff_t pos;$/;"	m	struct:kallsym_iter	file:
pos	trace/ftrace.c	/^	loff_t				pos;$/;"	m	struct:ftrace_iterator	file:
pos	trace/trace_events_filter.c	/^		int pos;$/;"	m	struct:filter_parse_state::__anon91	file:
posix_clock_compat_ioctl	time/posix-clock.c	/^static long posix_clock_compat_ioctl(struct file *fp,$/;"	f	file:
posix_clock_desc	time/posix-clock.c	/^struct posix_clock_desc {$/;"	s	file:
posix_clock_fasync	time/posix-clock.c	/^static int posix_clock_fasync(int fd, struct file *fp, int on)$/;"	f	file:
posix_clock_file_operations	time/posix-clock.c	/^static const struct file_operations posix_clock_file_operations = {$/;"	v	typeref:struct:file_operations	file:
posix_clock_ioctl	time/posix-clock.c	/^static long posix_clock_ioctl(struct file *fp,$/;"	f	file:
posix_clock_mmap	time/posix-clock.c	/^static int posix_clock_mmap(struct file *fp, struct vm_area_struct *vma)$/;"	f	file:
posix_clock_open	time/posix-clock.c	/^static int posix_clock_open(struct inode *inode, struct file *fp)$/;"	f	file:
posix_clock_poll	time/posix-clock.c	/^static unsigned int posix_clock_poll(struct file *fp, poll_table *wait)$/;"	f	file:
posix_clock_read	time/posix-clock.c	/^static ssize_t posix_clock_read(struct file *fp, char __user *buf,$/;"	f	file:
posix_clock_realtime_adj	posix-timers.c	/^static int posix_clock_realtime_adj(const clockid_t which_clock,$/;"	f	file:
posix_clock_realtime_get	posix-timers.c	/^static int posix_clock_realtime_get(clockid_t which_clock, struct timespec *tp)$/;"	f	file:
posix_clock_realtime_set	posix-timers.c	/^static int posix_clock_realtime_set(const clockid_t which_clock,$/;"	f	file:
posix_clock_register	time/posix-clock.c	/^EXPORT_SYMBOL_GPL(posix_clock_register);$/;"	v
posix_clock_register	time/posix-clock.c	/^int posix_clock_register(struct posix_clock *clk, dev_t devid)$/;"	f
posix_clock_release	time/posix-clock.c	/^static int posix_clock_release(struct inode *inode, struct file *fp)$/;"	f	file:
posix_clock_unregister	time/posix-clock.c	/^EXPORT_SYMBOL_GPL(posix_clock_unregister);$/;"	v
posix_clock_unregister	time/posix-clock.c	/^void posix_clock_unregister(struct posix_clock *clk)$/;"	f
posix_clocks	posix-timers.c	/^static struct k_clock posix_clocks[MAX_CLOCKS];$/;"	v	typeref:struct:k_clock	file:
posix_cpu_clock_get	posix-cpu-timers.c	/^static int posix_cpu_clock_get(const clockid_t which_clock, struct timespec *tp)$/;"	f	file:
posix_cpu_clock_getres	posix-cpu-timers.c	/^posix_cpu_clock_getres(const clockid_t which_clock, struct timespec *tp)$/;"	f	file:
posix_cpu_clock_set	posix-cpu-timers.c	/^posix_cpu_clock_set(const clockid_t which_clock, const struct timespec *tp)$/;"	f	file:
posix_cpu_nsleep	posix-cpu-timers.c	/^static int posix_cpu_nsleep(const clockid_t which_clock, int flags,$/;"	f	file:
posix_cpu_nsleep_restart	posix-cpu-timers.c	/^static long posix_cpu_nsleep_restart(struct restart_block *restart_block)$/;"	f	file:
posix_cpu_timer_create	posix-cpu-timers.c	/^static int posix_cpu_timer_create(struct k_itimer *new_timer)$/;"	f	file:
posix_cpu_timer_del	posix-cpu-timers.c	/^static int posix_cpu_timer_del(struct k_itimer *timer)$/;"	f	file:
posix_cpu_timer_get	posix-cpu-timers.c	/^static void posix_cpu_timer_get(struct k_itimer *timer, struct itimerspec *itp)$/;"	f	file:
posix_cpu_timer_kick_nohz	posix-cpu-timers.c	/^static inline void posix_cpu_timer_kick_nohz(void) { }$/;"	f	file:
posix_cpu_timer_kick_nohz	posix-cpu-timers.c	/^static void posix_cpu_timer_kick_nohz(void)$/;"	f	file:
posix_cpu_timer_schedule	posix-cpu-timers.c	/^void posix_cpu_timer_schedule(struct k_itimer *timer)$/;"	f
posix_cpu_timer_set	posix-cpu-timers.c	/^static int posix_cpu_timer_set(struct k_itimer *timer, int flags,$/;"	f	file:
posix_cpu_timers_can_stop_tick	posix-cpu-timers.c	/^bool posix_cpu_timers_can_stop_tick(struct task_struct *tsk)$/;"	f
posix_cpu_timers_exit	posix-cpu-timers.c	/^void posix_cpu_timers_exit(struct task_struct *tsk)$/;"	f
posix_cpu_timers_exit_group	posix-cpu-timers.c	/^void posix_cpu_timers_exit_group(struct task_struct *tsk)$/;"	f
posix_cpu_timers_init	fork.c	/^static void posix_cpu_timers_init(struct task_struct *tsk)$/;"	f	file:
posix_cpu_timers_init_group	fork.c	/^static void posix_cpu_timers_init_group(struct signal_struct *sig)$/;"	f	file:
posix_get_boottime	posix-timers.c	/^static int posix_get_boottime(const clockid_t which_clock, struct timespec *tp)$/;"	f	file:
posix_get_coarse_res	posix-timers.c	/^static int posix_get_coarse_res(const clockid_t which_clock, struct timespec *tp)$/;"	f	file:
posix_get_monotonic_coarse	posix-timers.c	/^static int posix_get_monotonic_coarse(clockid_t which_clock,$/;"	f	file:
posix_get_monotonic_raw	posix-timers.c	/^static int posix_get_monotonic_raw(clockid_t which_clock, struct timespec *tp)$/;"	f	file:
posix_get_realtime_coarse	posix-timers.c	/^static int posix_get_realtime_coarse(clockid_t which_clock, struct timespec *tp)$/;"	f	file:
posix_get_tai	posix-timers.c	/^static int posix_get_tai(clockid_t which_clock, struct timespec *tp)$/;"	f	file:
posix_ktime_get_ts	posix-timers.c	/^static int posix_ktime_get_ts(clockid_t which_clock, struct timespec *tp)$/;"	f	file:
posix_timer_add	posix-timers.c	/^static int posix_timer_add(struct k_itimer *timer)$/;"	f	file:
posix_timer_by_id	posix-timers.c	/^static struct k_itimer *posix_timer_by_id(timer_t id)$/;"	f	file:
posix_timer_event	posix-timers.c	/^EXPORT_SYMBOL_GPL(posix_timer_event);$/;"	v
posix_timer_event	posix-timers.c	/^int posix_timer_event(struct k_itimer *timr, int si_private)$/;"	f
posix_timer_fn	posix-timers.c	/^static enum hrtimer_restart posix_timer_fn(struct hrtimer *timer)$/;"	f	file:
posix_timers_cache	posix-timers.c	/^static struct kmem_cache *posix_timers_cache;$/;"	v	typeref:struct:kmem_cache	file:
posix_timers_register_clock	posix-timers.c	/^EXPORT_SYMBOL_GPL(posix_timers_register_clock);$/;"	v
posix_timers_register_clock	posix-timers.c	/^void posix_timers_register_clock(const clockid_t clock_id,$/;"	f
post_handler	swap/kprobe/swap_kprobes.h	/^	kprobe_post_handler_t				post_handler;$/;"	m	struct:kprobe
post_kprobe_handler	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^static int post_kprobe_handler(struct pt_regs *regs)$/;"	f	file:
post_relocation	module.c	/^static int post_relocation(struct module *mod, const struct load_info *info)$/;"	f	file:
post_schedule	sched/core.c	/^static inline void post_schedule(struct rq *rq)$/;"	f	file:
post_schedule	sched/sched.h	/^	int post_schedule;$/;"	m	struct:rq
post_schedule	sched/sched.h	/^	void (*post_schedule) (struct rq *this_rq);$/;"	m	struct:sched_class
post_schedule_idle	sched/idle_task.c	/^static void post_schedule_idle(struct rq *rq)$/;"	f	file:
post_schedule_rt	sched/rt.c	/^static void post_schedule_rt(struct rq *rq)$/;"	f	file:
post_uprobe_handler	swap/uprobe/arch/x86/swap-asm/swap_uprobes.c	/^static int post_uprobe_handler(struct pt_regs *regs)$/;"	f	file:
postfix	trace/trace_events_filter.c	/^	struct list_head postfix;$/;"	m	struct:filter_parse_state	typeref:struct:filter_parse_state::list_head	file:
postfix_append_op	trace/trace_events_filter.c	/^static int postfix_append_op(struct filter_parse_state *ps, int op)$/;"	f	file:
postfix_append_operand	trace/trace_events_filter.c	/^static int postfix_append_operand(struct filter_parse_state *ps, char *operand)$/;"	f	file:
postfix_clear	trace/trace_events_filter.c	/^static void postfix_clear(struct filter_parse_state *ps)$/;"	f	file:
postfix_elt	trace/trace_events_filter.c	/^struct postfix_elt {$/;"	s	file:
posth_val	test_kprobes.c	/^static u32 rand1, preh_val, posth_val, jph_val;$/;"	v	file:
power	sched/sched.h	/^	unsigned int power, power_orig;$/;"	m	struct:sched_group_power
power	swap/energy/lcd/lcd_base.c	/^	enum power_t power;$/;"	m	struct:lcd_priv_data	typeref:enum:lcd_priv_data::power_t	file:
power_attr	power/power.h	67;"	d
power_device	power/wakelock.c	/^static struct platform_device power_device = {$/;"	v	typeref:struct:platform_device	file:
power_down	power/hibernate.c	/^static void power_down(void)$/;"	f	file:
power_driver	power/wakelock.c	/^static struct platform_driver power_driver = {$/;"	v	typeref:struct:platform_driver	file:
power_driver_pm_ops	power/wakelock.c	/^static struct dev_pm_ops power_driver_pm_ops = {$/;"	v	typeref:struct:dev_pm_ops	file:
power_kobj	power/main.c	/^struct kobject *power_kobj;$/;"	v	typeref:struct:kobject
power_of	sched/fair.c	/^static unsigned long power_of(int cpu)$/;"	f	file:
power_orig	sched/sched.h	/^	unsigned int power, power_orig;$/;"	m	struct:sched_group_power
power_ro_attr	power/fbearlysuspend.c	105;"	d	file:
power_suspend_late	power/wakelock.c	/^static int power_suspend_late(struct device *dev)$/;"	f	file:
power_t	swap/energy/lcd/lcd_base.c	/^enum power_t {$/;"	g	file:
poweroff_cmd	sys.c	/^char poweroff_cmd[POWEROFF_CMD_PATH_LEN] = "\/sbin\/poweroff";$/;"	v
poweroff_force	sys.c	/^static bool poweroff_force;$/;"	v	file:
poweroff_work_func	sys.c	/^static void poweroff_work_func(struct work_struct *work)$/;"	f	file:
ppc_rtas	sys_ni.c	/^cond_syscall(ppc_rtas);$/;"	v
ppid	audit.h	/^	pid_t		    pid, ppid;$/;"	m	struct:audit_context
ppid	events/core.c	/^		u32				ppid;$/;"	m	struct:perf_task_event::__anon6	file:
ppid	swap/parser/usm_msg.c	/^	u32 ppid;$/;"	m	struct:proc_info_bottom	file:
pps_calcnt	time/ntp.c	/^static long pps_calcnt;		\/* calibration intervals *\/$/;"	v	file:
pps_clear	time/ntp.c	/^static inline void pps_clear(void) {}$/;"	f	file:
pps_clear	time/ntp.c	/^static inline void pps_clear(void)$/;"	f	file:
pps_dec_freq_interval	time/ntp.c	/^static inline void pps_dec_freq_interval(void)$/;"	f	file:
pps_dec_valid	time/ntp.c	/^static inline void pps_dec_valid(void) {}$/;"	f	file:
pps_dec_valid	time/ntp.c	/^static inline void pps_dec_valid(void)$/;"	f	file:
pps_errcnt	time/ntp.c	/^static long pps_errcnt;		\/* calibration errors *\/$/;"	v	file:
pps_fbase	time/ntp.c	/^static struct timespec pps_fbase; \/* beginning of the last freq interval *\/$/;"	v	typeref:struct:timespec	file:
pps_fill_timex	time/ntp.c	/^static inline void pps_fill_timex(struct timex *txc)$/;"	f	file:
pps_freq	time/ntp.c	/^static s64 pps_freq;		\/* frequency offset (scaled ns\/s) *\/$/;"	v	file:
pps_inc_freq_interval	time/ntp.c	/^static inline void pps_inc_freq_interval(void)$/;"	f	file:
pps_intcnt	time/ntp.c	/^static int pps_intcnt;		\/* interval counter *\/$/;"	v	file:
pps_jitcnt	time/ntp.c	/^static long pps_jitcnt;		\/* jitter limit exceeded *\/$/;"	v	file:
pps_jitter	time/ntp.c	/^static long pps_jitter;		\/* current jitter (ns) *\/$/;"	v	file:
pps_normalize_ts	time/ntp.c	/^static inline struct pps_normtime pps_normalize_ts(struct timespec ts)$/;"	f	file:
pps_normtime	time/ntp.c	/^struct pps_normtime {$/;"	s	file:
pps_phase_filter_add	time/ntp.c	/^static inline void pps_phase_filter_add(long err)$/;"	f	file:
pps_phase_filter_get	time/ntp.c	/^static inline long pps_phase_filter_get(long *jitter)$/;"	f	file:
pps_reset_freq_interval	time/ntp.c	/^static inline void pps_reset_freq_interval(void) {}$/;"	f	file:
pps_reset_freq_interval	time/ntp.c	/^static inline void pps_reset_freq_interval(void)$/;"	f	file:
pps_set_freq	time/ntp.c	/^static inline void pps_set_freq(s64 freq) {}$/;"	f	file:
pps_set_freq	time/ntp.c	/^static inline void pps_set_freq(s64 freq)$/;"	f	file:
pps_shift	time/ntp.c	/^static int pps_shift;		\/* current interval duration (s) (shift) *\/$/;"	v	file:
pps_stabil	time/ntp.c	/^static long pps_stabil;		\/* current stability (scaled ns\/s) *\/$/;"	v	file:
pps_stbcnt	time/ntp.c	/^static long pps_stbcnt;		\/* stability limit exceeded *\/$/;"	v	file:
pps_tf	time/ntp.c	/^static long pps_tf[3];		\/* phase median filter *\/$/;"	v	file:
pps_valid	time/ntp.c	/^static int pps_valid;		\/* signal watchdog counter *\/$/;"	v	file:
pr_fmt	gcov/base.c	16;"	d	file:
pr_fmt	gcov/fs.c	17;"	d	file:
pr_fmt	irq/irqdomain.c	1;"	d	file:
pr_fmt	irq/manage.c	10;"	d	file:
pr_fmt	resource.c	10;"	d	file:
pr_fmt	watchdog.c	12;"	d	file:
prctl_get_seccomp	seccomp.c	/^long prctl_get_seccomp(void)$/;"	f
prctl_get_tid_address	sys.c	/^static int prctl_get_tid_address(struct task_struct *me, int __user **tid_addr)$/;"	f	file:
prctl_set_mm	sys.c	/^static int prctl_set_mm(int opt, unsigned long addr,$/;"	f	file:
prctl_set_mm_exe_file	sys.c	/^static int prctl_set_mm_exe_file(struct mm_struct *mm, unsigned int fd)$/;"	f	file:
prctl_set_seccomp	seccomp.c	/^long prctl_set_seccomp(unsigned long seccomp_mode, char __user *filter)$/;"	f
prctl_set_vma	sys.c	/^static int prctl_set_vma(unsigned long opt, unsigned long start,$/;"	f	file:
prctl_set_vma_anon_name	sys.c	/^static int prctl_set_vma_anon_name(unsigned long start, unsigned long end,$/;"	f	file:
prctl_update_vma_anon_name	sys.c	/^static int prctl_update_vma_anon_name(struct vm_area_struct *vma,$/;"	f	file:
pre_entry	swap/kprobe/swap_kprobes.h	/^	kprobe_pre_entry_handler_t pre_entry;$/;"	m	struct:jprobe
pre_entry	swap/uprobe/swap_uprobes.h	/^	uprobe_pre_entry_handler_t pre_entry;$/;"	m	struct:ujprobe
pre_handler	swap/kprobe/swap_kprobes.h	/^	kprobe_pre_handler_t				pre_handler;$/;"	m	struct:kprobe
pre_handler_cp	swap/us_manager/helper.c	/^static int pre_handler_cp(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
pre_handler_cp_cnt	swap/us_manager/helper.c	/^static atomic_t pre_handler_cp_cnt = ATOMIC_INIT(0);$/;"	v	file:
pre_handler_kretprobe	kprobes.c	/^static int __kprobes pre_handler_kretprobe(struct kprobe *p,$/;"	f	file:
pre_handler_kretprobe	swap/kprobe/swap_kprobes.c	/^static int pre_handler_kretprobe(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
pre_handler_uretprobe	swap/uprobe/swap_uprobes.c	/^static int pre_handler_uretprobe(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
pre_schedule	sched/core.c	/^static inline void pre_schedule(struct rq *rq, struct task_struct *p)$/;"	f	file:
pre_schedule	sched/core.c	/^static inline void pre_schedule(struct rq *rq, struct task_struct *prev)$/;"	f	file:
pre_schedule	sched/sched.h	/^	void (*pre_schedule) (struct rq *this_rq, struct task_struct *task);$/;"	m	struct:sched_class
pre_schedule_idle	sched/idle_task.c	/^static void pre_schedule_idle(struct rq *rq, struct task_struct *prev)$/;"	f	file:
pre_schedule_rt	sched/rt.c	/^static void pre_schedule_rt(struct rq *rq, struct task_struct *prev)$/;"	f	file:
pre_ssout	events/uprobes.c	/^pre_ssout(struct uprobe *uprobe, struct pt_regs *regs, unsigned long bp_vaddr)$/;"	f	file:
preallocate_highmem_fraction	power/snapshot.c	/^static inline unsigned long preallocate_highmem_fraction(unsigned long nr_pages,$/;"	f	file:
preallocate_highmem_fraction	power/snapshot.c	/^static unsigned long preallocate_highmem_fraction(unsigned long nr_pages,$/;"	f	file:
preallocate_image_highmem	power/snapshot.c	/^static inline unsigned long preallocate_image_highmem(unsigned long nr_pages)$/;"	f	file:
preallocate_image_highmem	power/snapshot.c	/^static unsigned long preallocate_image_highmem(unsigned long nr_pages)$/;"	f	file:
preallocate_image_memory	power/snapshot.c	/^static unsigned long preallocate_image_memory(unsigned long nr_pages,$/;"	f	file:
preallocate_image_pages	power/snapshot.c	/^static unsigned long preallocate_image_pages(unsigned long nr_pages, gfp_t mask)$/;"	f	file:
preallocated_names	audit.h	/^	struct audit_names  preallocated_names[AUDIT_NAMES];$/;"	m	struct:audit_context	typeref:struct:audit_context::audit_names
precedence	trace/trace_events_filter.c	/^	int precedence;$/;"	m	struct:filter_op	file:
pred_stack	trace/trace_events_filter.c	/^struct pred_stack {$/;"	s	file:
preds	trace/trace.h	/^	struct filter_pred	*preds;$/;"	m	struct:event_filter	typeref:struct:event_filter::filter_pred
preds	trace/trace_events_filter.c	/^	struct filter_pred	**preds;$/;"	m	struct:pred_stack	typeref:struct:pred_stack::filter_pred	file:
preds	trace/trace_events_filter.c	/^	struct filter_pred *preds;$/;"	m	struct:filter_match_preds_data	typeref:struct:filter_match_preds_data::filter_pred	file:
preempt_count_equals	sched/core.c	/^static inline int preempt_count_equals(int preempt_offset)$/;"	f	file:
preempt_mark_thresh_us	trace/trace_output.c	/^static unsigned long preempt_mark_thresh_us = 100;$/;"	v	file:
preempt_notifier_register	sched/core.c	/^EXPORT_SYMBOL_GPL(preempt_notifier_register);$/;"	v
preempt_notifier_register	sched/core.c	/^void preempt_notifier_register(struct preempt_notifier *notifier)$/;"	f
preempt_notifier_unregister	sched/core.c	/^EXPORT_SYMBOL_GPL(preempt_notifier_unregister);$/;"	v
preempt_notifier_unregister	sched/core.c	/^void preempt_notifier_unregister(struct preempt_notifier *notifier)$/;"	f
preempt_schedule	sched/core.c	/^EXPORT_SYMBOL(preempt_schedule);$/;"	v
preempt_schedule	sched/core.c	/^asmlinkage void __sched notrace preempt_schedule(void)$/;"	f
preempt_schedule_context	context_tracking.c	/^EXPORT_SYMBOL_GPL(preempt_schedule_context);$/;"	v
preempt_schedule_context	context_tracking.c	/^void __sched notrace preempt_schedule_context(void)$/;"	f
preempt_schedule_irq	sched/core.c	/^asmlinkage void __sched preempt_schedule_irq(void)$/;"	f
preempt_timestamp	trace/trace.h	/^	cycle_t			preempt_timestamp;$/;"	m	struct:trace_array_cpu
preempt_trace	trace/trace_irqsoff.c	/^preempt_trace(void)$/;"	f	file:
preempt_trace	trace/trace_irqsoff.c	48;"	d	file:
preemptible	rcutree.h	/^	bool		preemptible;	\/* Preemptible RCU? *\/$/;"	m	struct:rcu_data
preemptirqsoff_tracer_init	trace/trace_irqsoff.c	/^static int preemptirqsoff_tracer_init(struct trace_array *tr)$/;"	f	file:
preemptoff_tracer_init	trace/trace_irqsoff.c	/^static int preemptoff_tracer_init(struct trace_array *tr)$/;"	f	file:
preferred_console	printk.c	/^static int preferred_console = -1;$/;"	v	file:
preflow_handler	irq/chip.c	/^static inline void preflow_handler(struct irq_desc *desc) { }$/;"	f	file:
preflow_handler	irq/chip.c	/^static inline void preflow_handler(struct irq_desc *desc)$/;"	f	file:
preh_val	test_kprobes.c	/^static u32 rand1, preh_val, posth_val, jph_val;$/;"	v	file:
preload_call_type	swap/preload/preload_control.h	/^enum preload_call_type {$/;"	g
preload_control_add_instrumented_binary	swap/preload/preload_control.c	/^int preload_control_add_instrumented_binary(char *filename)$/;"	f
preload_control_call_type	swap/preload/preload_control.c	/^enum preload_call_type preload_control_call_type(struct us_ip *ip, void *caller)$/;"	f
preload_control_call_type_always_inst	swap/preload/preload_control.c	/^enum preload_call_type preload_control_call_type_always_inst(void *caller)$/;"	f
preload_control_clean_instrumented_bins	swap/preload/preload_control.c	/^int preload_control_clean_instrumented_bins(void)$/;"	f
preload_control_exit	swap/preload/preload_control.c	/^void preload_control_exit(void)$/;"	f
preload_control_get_bin_names	swap/preload/preload_control.c	/^unsigned int preload_control_get_bin_names(char ***filenames_p)$/;"	f
preload_control_init	swap/preload/preload_control.c	/^int preload_control_init(void)$/;"	f
preload_control_release_bin_names	swap/preload/preload_control.c	/^void preload_control_release_bin_names(char ***filenames_p)$/;"	f
preload_debugfs_exit	swap/preload/preload_debugfs.c	/^void preload_debugfs_exit(void)$/;"	f
preload_debugfs_get_loader_dentry	swap/preload/preload_debugfs.c	/^struct dentry *preload_debugfs_get_loader_dentry(void)$/;"	f
preload_debugfs_get_loader_offset	swap/preload/preload_debugfs.c	/^unsigned long preload_debugfs_get_loader_offset(void)$/;"	f
preload_debugfs_init	swap/preload/preload_debugfs.c	/^int preload_debugfs_init(void)$/;"	f
preload_debugfs_r_debug_offset	swap/preload/preload_debugfs.c	/^unsigned long preload_debugfs_r_debug_offset(void)$/;"	f
preload_get_uprobe	swap/preload/preload_probe.c	/^static struct uprobe *preload_get_uprobe(struct us_ip *ip)$/;"	f	file:
preload_iface	swap/preload/preload_probe.c	/^static struct probe_iface preload_iface = {$/;"	v	typeref:struct:probe_iface	file:
preload_info	swap/preload/preload_probe.h	/^struct preload_info {$/;"	s
preload_info_cleanup	swap/preload/preload_probe.c	/^static void preload_info_cleanup(struct probe_info *probe_i)$/;"	f	file:
preload_info_copy	swap/preload/preload_probe.c	/^static int preload_info_copy(struct probe_info *dest,$/;"	f	file:
preload_init	swap/preload/preload_probe.c	/^static void preload_init(struct us_ip *ip)$/;"	f	file:
preload_module_exit	swap/preload/preload_module.c	/^static void preload_module_exit(void)$/;"	f	file:
preload_module_get_call_type_exit	swap/preload/preload_module.c	/^void preload_module_get_call_type_exit(struct us_ip *ip)$/;"	f
preload_module_get_call_type_init	swap/preload/preload_module.c	/^int preload_module_get_call_type_init(struct us_ip *ip)$/;"	f
preload_module_get_caller_exit	swap/preload/preload_module.c	/^void preload_module_get_caller_exit(struct us_ip *ip)$/;"	f
preload_module_get_caller_init	swap/preload/preload_module.c	/^int preload_module_get_caller_init(struct us_ip *ip)$/;"	f
preload_module_init	swap/preload/preload_module.c	/^static int preload_module_init(void)$/;"	f	file:
preload_module_is_not_ready	swap/preload/preload_module.c	/^bool preload_module_is_not_ready(void)$/;"	f
preload_module_is_ready	swap/preload/preload_module.c	/^bool preload_module_is_ready(void)$/;"	f
preload_module_is_running	swap/preload/preload_module.c	/^bool preload_module_is_running(void)$/;"	f
preload_module_set_not_ready	swap/preload/preload_module.c	/^void preload_module_set_not_ready(void)$/;"	f
preload_module_set_ready	swap/preload/preload_module.c	/^void preload_module_set_ready(void)$/;"	f
preload_module_set_running	swap/preload/preload_module.c	/^void preload_module_set_running(void)$/;"	f
preload_module_uprobe_exit	swap/preload/preload_module.c	/^void preload_module_uprobe_exit(struct us_ip *ip)$/;"	f
preload_module_uprobe_init	swap/preload/preload_module.c	/^int preload_module_uprobe_init(struct us_ip *ip)$/;"	f
preload_module_write_msg_exit	swap/preload/preload_module.c	/^void preload_module_write_msg_exit(struct us_ip *ip)$/;"	f
preload_module_write_msg_init	swap/preload/preload_module.c	/^int preload_module_write_msg_init(struct us_ip *ip)$/;"	f
preload_pd_dec_attempts	swap/preload/preload_pd.c	/^void preload_pd_dec_attempts(struct process_data *pd)$/;"	f
preload_pd_dec_refs	swap/preload/preload_pd.c	/^void preload_pd_dec_refs(struct process_data *pd)$/;"	f
preload_pd_get	swap/preload/preload_pd.c	/^struct process_data *preload_pd_get(struct sspt_proc *proc)$/;"	f
preload_pd_get_attempts	swap/preload/preload_pd.c	/^long preload_pd_get_attempts(struct process_data *pd)$/;"	f
preload_pd_get_handle	swap/preload/preload_pd.c	/^void *preload_pd_get_handle(struct process_data *pd)$/;"	f
preload_pd_get_handlers_base	swap/preload/preload_pd.c	/^unsigned long preload_pd_get_handlers_base(struct process_data *pd)$/;"	f
preload_pd_get_loader_base	swap/preload/preload_pd.c	/^unsigned long preload_pd_get_loader_base(struct process_data *pd)$/;"	f
preload_pd_get_path	swap/preload/preload_pd.c	/^char __user *preload_pd_get_path(struct process_data *pd)$/;"	f
preload_pd_get_refs	swap/preload/preload_pd.c	/^long preload_pd_get_refs(struct process_data *pd)$/;"	f
preload_pd_get_state	swap/preload/preload_pd.c	/^enum preload_state_t preload_pd_get_state(struct process_data *pd)$/;"	f
preload_pd_inc_refs	swap/preload/preload_pd.c	/^void preload_pd_inc_refs(struct process_data *pd)$/;"	f
preload_pd_init	swap/preload/preload_pd.c	/^int preload_pd_init(void)$/;"	f
preload_pd_put_path	swap/preload/preload_pd.c	/^void preload_pd_put_path(struct process_data *pd)$/;"	f
preload_pd_set_handle	swap/preload/preload_pd.c	/^void preload_pd_set_handle(struct process_data *pd, void __user *handle)$/;"	f
preload_pd_set_handlers_base	swap/preload/preload_pd.c	/^void preload_pd_set_handlers_base(struct process_data *pd, unsigned long vaddr)$/;"	f
preload_pd_set_loader_base	swap/preload/preload_pd.c	/^void preload_pd_set_loader_base(struct process_data *pd, unsigned long vaddr)$/;"	f
preload_pd_set_state	swap/preload/preload_pd.c	/^void preload_pd_set_state(struct process_data *pd, enum preload_state_t state)$/;"	f
preload_pd_uninit	swap/preload/preload_pd.c	/^void preload_pd_uninit(void)$/;"	f
preload_register_probe	swap/preload/preload_probe.c	/^static int preload_register_probe(struct us_ip *ip)$/;"	f	file:
preload_root	swap/preload/preload_debugfs.c	/^static struct dentry *preload_root;$/;"	v	typeref:struct:dentry	file:
preload_set	swap/preload/preload_module.c	/^int preload_set(void)$/;"	f
preload_start_cb	swap/preload/preload_module.c	/^static void preload_start_cb(void)$/;"	f	file:
preload_state_t	swap/preload/preload_pd.h	/^enum preload_state_t {$/;"	g
preload_status_t	swap/preload/preload_module.c	/^enum preload_status_t {$/;"	g	file:
preload_stop_cb	swap/preload/preload_module.c	/^static void preload_stop_cb(void)$/;"	f	file:
preload_storage_exit	swap/preload/preload_storage.c	/^void preload_storage_exit(void)$/;"	f
preload_storage_get_handlers_info	swap/preload/preload_storage.c	/^struct bin_info *preload_storage_get_handlers_info(void)$/;"	f
preload_storage_get_libc_info	swap/preload/preload_storage.c	/^struct bin_info *preload_storage_get_libc_info(void)$/;"	f
preload_storage_get_linker_info	swap/preload/preload_storage.c	/^struct bin_info *preload_storage_get_linker_info(void)$/;"	f
preload_storage_init	swap/preload/preload_storage.c	/^int preload_storage_init(void)$/;"	f
preload_storage_put_handlers_info	swap/preload/preload_storage.c	/^void preload_storage_put_handlers_info(struct bin_info *info)$/;"	f
preload_storage_put_libc_info	swap/preload/preload_storage.c	/^void preload_storage_put_libc_info(struct bin_info *info)$/;"	f
preload_storage_put_linker_info	swap/preload/preload_storage.c	/^void preload_storage_put_linker_info(struct bin_info *info)$/;"	f
preload_storage_set_handlers_info	swap/preload/preload_storage.c	/^int preload_storage_set_handlers_info(char *path)$/;"	f
preload_storage_set_linker_info	swap/preload/preload_storage.c	/^int preload_storage_set_linker_info(char *path)$/;"	f
preload_td	swap/preload/preload_threads.c	/^struct preload_td {$/;"	s	file:
preload_threads_check_disabled_probe	swap/preload/preload_threads.c	/^bool preload_threads_check_disabled_probe(struct task_struct *task,$/;"	f
preload_threads_enable_probe	swap/preload/preload_threads.c	/^void preload_threads_enable_probe(struct task_struct *task, unsigned long addr)$/;"	f
preload_threads_exit	swap/preload/preload_threads.c	/^void preload_threads_exit(void)$/;"	f
preload_threads_get_call_type	swap/preload/preload_threads.c	/^int preload_threads_get_call_type(struct task_struct *task,$/;"	f
preload_threads_get_caller	swap/preload/preload_threads.c	/^int preload_threads_get_caller(struct task_struct *task, unsigned long *caller)$/;"	f
preload_threads_get_drop	swap/preload/preload_threads.c	/^int preload_threads_get_drop(struct task_struct *task)$/;"	f
preload_threads_init	swap/preload/preload_threads.c	/^int preload_threads_init(void)$/;"	f
preload_threads_put_data	swap/preload/preload_threads.c	/^int preload_threads_put_data(struct task_struct *task)$/;"	f
preload_threads_set_data	swap/preload/preload_threads.c	/^int preload_threads_set_data(struct task_struct *task, unsigned long caller,$/;"	f
preload_thumb	swap/uprobe/swap_uprobes.h	/^	int preload_thumb;$/;"	m	struct:uretprobe_instance
preload_uninit	swap/preload/preload_probe.c	/^static void preload_uninit(struct us_ip *ip)$/;"	f	file:
preload_unregister_probe	swap/preload/preload_probe.c	/^static void preload_unregister_probe(struct us_ip *ip, int disarm)$/;"	f	file:
preload_unset	swap/preload/preload_module.c	/^void preload_unset(void)$/;"	f
preload_us_entry	swap/preload/preload_module.c	/^static int preload_us_entry(struct uretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
preload_us_ret	swap/preload/preload_module.c	/^static int preload_us_ret(struct uretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
prep_pc_dep_insn_execbuf	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^static int prep_pc_dep_insn_execbuf(kprobe_opcode_t *insns,$/;"	f	file:
prep_pc_dep_insn_execbuf_thumb	swap/uprobe/arch/arm/swap-asm/swap_uprobes.c	/^static int prep_pc_dep_insn_execbuf_thumb(kprobe_opcode_t *insns,$/;"	f	file:
prepare_arch_switch	sched/sched.h	814;"	d
prepare_creds	cred.c	/^EXPORT_SYMBOL(prepare_creds);$/;"	v
prepare_creds	cred.c	/^struct cred *prepare_creds(void)$/;"	f
prepare_exec_creds	cred.c	/^struct cred *prepare_exec_creds(void)$/;"	f
prepare_highmem_image	power/snapshot.c	/^prepare_highmem_image(struct memory_bitmap *bm, unsigned int *nr_highmem_p)$/;"	f	file:
prepare_image	power/snapshot.c	/^prepare_image(struct memory_bitmap *new_bm, struct memory_bitmap *bm)$/;"	f	file:
prepare_kernel_cred	cred.c	/^EXPORT_SYMBOL(prepare_kernel_cred);$/;"	v
prepare_kernel_cred	cred.c	/^struct cred *prepare_kernel_cred(struct task_struct *daemon)$/;"	f
prepare_kprobe	kprobes.c	/^static int __kprobes prepare_kprobe(struct kprobe *p)$/;"	f	file:
prepare_kprobe	kprobes.c	989;"	d	file:
prepare_lock_switch	sched/sched.h	/^static inline void prepare_lock_switch(struct rq *rq, struct task_struct *next)$/;"	f
prepare_optimized_kprobe	kprobes.c	/^static __kprobes void prepare_optimized_kprobe(struct kprobe *p)$/;"	f	file:
prepare_optimized_kprobe	kprobes.c	917;"	d	file:
prepare_reply	taskstats.c	/^static int prepare_reply(struct genl_info *info, u8 cmd, struct sk_buff **skbp,$/;"	f	file:
prepare_signal	signal.c	/^static bool prepare_signal(int sig, struct task_struct *p, bool force)$/;"	f	file:
prepare_singlestep	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^EXPORT_SYMBOL_GPL(prepare_singlestep);$/;"	v
prepare_singlestep	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^void prepare_singlestep(struct kprobe *p, struct pt_regs *regs)$/;"	f
prepare_singlestep	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^EXPORT_SYMBOL_GPL(prepare_singlestep);$/;"	v
prepare_singlestep	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^void prepare_singlestep(struct kprobe *p, struct pt_regs *regs)$/;"	f
prepare_ss	swap/uprobe/arch/x86/swap-asm/swap_uprobes.c	/^static void prepare_ss(struct pt_regs *regs)$/;"	f	file:
prepare_ss_addr	swap/uprobe/arch/x86/swap-asm/swap_uprobes.c	/^static bool prepare_ss_addr(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
prepare_task_switch	sched/core.c	/^prepare_task_switch(struct rq *rq, struct task_struct *prev,$/;"	f	file:
prepare_to_wait	wait.c	/^EXPORT_SYMBOL(prepare_to_wait);$/;"	v
prepare_to_wait	wait.c	/^prepare_to_wait(wait_queue_head_t *q, wait_queue_t *wait, int state)$/;"	f
prepare_to_wait_exclusive	wait.c	/^EXPORT_SYMBOL(prepare_to_wait_exclusive);$/;"	v
prepare_to_wait_exclusive	wait.c	/^prepare_to_wait_exclusive(wait_queue_head_t *q, wait_queue_t *wait, int state)$/;"	f
prepare_uprobe	events/uprobes.c	/^static int prepare_uprobe(struct uprobe *uprobe, struct file *file,$/;"	f	file:
prepare_uretprobe	events/uprobes.c	/^static void prepare_uretprobe(struct uprobe *uprobe, struct pt_regs *regs)$/;"	f	file:
pretty_group	power/sleep_history.c	/^	int pretty_group[SLEEP_MONITOR_GROUP_SIZE];$/;"	m	struct:sleep_history	file:
prev	printk.c	/^	enum log_flags prev;$/;"	m	struct:devkmsg_user	typeref:enum:devkmsg_user::log_flags	file:
prev	seccomp.c	/^	struct seccomp_filter *prev;$/;"	m	struct:seccomp_filter	typeref:struct:seccomp_filter::seccomp_filter	file:
prev_irq_time	sched/sched.h	/^	u64 prev_irq_time;$/;"	m	struct:rq
prev_kprobe	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	/^	struct prev_kprobe prev_kprobe;$/;"	m	struct:kprobe_ctlblk	typeref:struct:kprobe_ctlblk::prev_kprobe
prev_kprobe	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	/^struct prev_kprobe {$/;"	s
prev_kprobe	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	/^	struct prev_kprobe prev_kprobe;$/;"	m	struct:kprobe_ctlblk	typeref:struct:kprobe_ctlblk::prev_kprobe
prev_kprobe	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	/^struct prev_kprobe {$/;"	s
prev_mm	sched/sched.h	/^	struct mm_struct *prev_mm;$/;"	m	struct:rq	typeref:struct:rq::mm_struct
prev_overruns	trace/trace_mmiotrace.c	/^static unsigned long prev_overruns;$/;"	v	file:
prev_steal_time	sched/sched.h	/^	u64 prev_steal_time;$/;"	m	struct:rq
prev_steal_time_rq	sched/sched.h	/^	u64 prev_steal_time_rq;$/;"	m	struct:rq
prev_time	trace/trace_clock.c	/^	u64 prev_time;$/;"	m	struct:__anon82	file:
prevent_time	power/sleep_history.c	/^	ktime_t prevent_time;$/;"	m	struct:slp_ws	file:
pri_to_cpu	sched/cpupri.h	/^	struct cpupri_vec pri_to_cpu[CPUPRI_NR_PRIORITIES];$/;"	m	struct:cpupri	typeref:struct:cpupri::cpupri_vec
primary_event_id	events/core.c	/^static u64 primary_event_id(struct perf_event *event)$/;"	f	file:
print	trace/blktrace.c	/^	int	   (*print)(struct trace_seq *s, const struct trace_entry *ent);$/;"	m	struct:__anon84	file:
print	trace/trace_probe.h	/^	print_type_func_t	print;		\/* Print functions *\/$/;"	m	struct:fetch_type
print_active_locks	power/wakelock.c	/^static void print_active_locks(int type)$/;"	f	file:
print_active_timers	time/timer_list.c	/^print_active_timers(struct seq_file *m, struct hrtimer_clock_base *base,$/;"	f	file:
print_all_syscall	swap/ks_features/ks_features.c	/^void print_all_syscall(void)$/;"	f
print_autoline_display	power/sleep_history.c	/^static int print_autoline_display(char* buffer, size_t count, int offset)$/;"	f	file:
print_bad_irq_dependency	lockdep.c	/^print_bad_irq_dependency(struct task_struct *curr,$/;"	f	file:
print_base	time/timer_list.c	/^print_base(struct seq_file *m, struct hrtimer_clock_base *base, u64 now)$/;"	f	file:
print_bfs_bug	lockdep.c	/^static noinline int print_bfs_bug(int ret)$/;"	f	file:
print_bin_fmt	trace/trace.c	/^static enum print_line_t print_bin_fmt(struct trace_iterator *iter)$/;"	f	file:
print_cfs_group_stats	sched/debug.c	/^static void print_cfs_group_stats(struct seq_file *m, int cpu, struct task_group *tg)$/;"	f	file:
print_cfs_rq	sched/debug.c	/^void print_cfs_rq(struct seq_file *m, int cpu, struct cfs_rq *cfs_rq)$/;"	f
print_cfs_stats	sched/fair.c	/^void print_cfs_stats(struct seq_file *m, int cpu)$/;"	f
print_circular_bug	lockdep.c	/^static noinline int print_circular_bug(struct lock_list *this,$/;"	f	file:
print_circular_bug_entry	lockdep.c	/^print_circular_bug_entry(struct lock_list *target, int depth)$/;"	f	file:
print_circular_bug_header	lockdep.c	/^print_circular_bug_header(struct lock_list *entry, unsigned int depth,$/;"	f	file:
print_circular_lock_scenario	lockdep.c	/^print_circular_lock_scenario(struct held_lock *src,$/;"	f	file:
print_counts	trace/trace_selftest.c	/^static void print_counts(void)$/;"	f	file:
print_cpu	sched/debug.c	/^static void print_cpu(struct seq_file *m, int cpu)$/;"	f	file:
print_cpu	time/timer_list.c	/^static void print_cpu(struct seq_file *m, int cpu, u64 now)$/;"	f	file:
print_cpu_stall	rcutree.c	/^static void print_cpu_stall(struct rcu_state *rsp)$/;"	f	file:
print_cpu_stall_fast_no_hz	rcutree_plugin.h	/^static void print_cpu_stall_fast_no_hz(char *cp, int cpu)$/;"	f
print_cpu_stall_info	rcutree_plugin.h	/^static void print_cpu_stall_info(struct rcu_state *rsp, int cpu)$/;"	f
print_cpu_stall_info_begin	rcutree_plugin.h	/^static void print_cpu_stall_info_begin(void)$/;"	f
print_cpu_stall_info_end	rcutree_plugin.h	/^static void print_cpu_stall_info_end(void)$/;"	f
print_crit	swap/buffer/kernel_operations.h	59;"	d
print_crit	swap/driver/driver_defs.h	47;"	d
print_crit	swap/fbiprobe/fbi_probe_module.h	92;"	d
print_crit	swap/fbiprobe/fbi_probe_module.h	95;"	d
print_crit	swap/parser/parser_defs.h	52;"	d
print_crit	swap/sampler/kernel_operations.h	48;"	d
print_crit	swap/writer/kernel_operations.h	54;"	d
print_deadlock_bug	lockdep.c	/^print_deadlock_bug(struct task_struct *curr, struct held_lock *prev,$/;"	f	file:
print_deadlock_scenario	lockdep.c	/^print_deadlock_scenario(struct held_lock *nxt,$/;"	f	file:
print_debug	swap/buffer/kernel_operations.h	47;"	d
print_debug	swap/driver/driver_defs.h	35;"	d
print_debug	swap/fbiprobe/fbi_probe_module.h	60;"	d
print_debug	swap/fbiprobe/fbi_probe_module.h	63;"	d
print_debug	swap/parser/parser_defs.h	40;"	d
print_debug	swap/sampler/kernel_operations.h	36;"	d
print_debug	swap/writer/kernel_operations.h	42;"	d
print_disabled	trace/trace_stack.c	/^static void print_disabled(struct seq_file *m)$/;"	f	file:
print_dropped_signal	signal.c	/^static inline void print_dropped_signal(int sig)$/;"	f	file:
print_err	swap/buffer/kernel_operations.h	56;"	d
print_err	swap/driver/driver_defs.h	44;"	d
print_err	swap/fbiprobe/fbi_probe_module.h	84;"	d
print_err	swap/fbiprobe/fbi_probe_module.h	87;"	d
print_err	swap/parser/parser_defs.h	49;"	d
print_err	swap/sampler/kernel_operations.h	45;"	d
print_err	swap/writer/kernel_operations.h	51;"	d
print_event_filter	trace/trace_events_filter.c	/^void print_event_filter(struct ftrace_event_call *call, struct trace_seq *s)$/;"	f
print_event_info	trace/trace.c	/^static void print_event_info(struct trace_buffer *buf, struct seq_file *m)$/;"	f	file:
print_fatal_signal	signal.c	/^static void print_fatal_signal(int signr)$/;"	f	file:
print_feature	swap/ks_features/ks_features.c	/^static void print_feature(struct feature *f)$/;"	f	file:
print_features	swap/ks_features/ks_features.c	/^void print_features(void)$/;"	f
print_file_probes	swap/us_manager/sspt/sspt_debug.h	/^static inline void print_file_probes(const struct sspt_file *file)$/;"	f
print_fn_t	time/timer_list.c	/^typedef void (*print_fn_t)(struct seq_file *m, unsigned int *classes);$/;"	t	file:
print_freed_lock_bug	lockdep.c	/^print_freed_lock_bug(struct task_struct *curr, const void *mem_from,$/;"	f	file:
print_func_help_header	trace/trace.c	/^static void print_func_help_header(struct trace_buffer *buf, struct seq_file *m)$/;"	f	file:
print_func_help_header_irq	trace/trace.c	/^static void print_func_help_header_irq(struct trace_buffer *buf, struct seq_file *m)$/;"	f	file:
print_func_help_header_irq_tgid	trace/trace.c	/^static void print_func_help_header_irq_tgid(struct trace_buffer *buf, struct seq_file *m)$/;"	f	file:
print_func_help_header_tgid	trace/trace.c	/^static void print_func_help_header_tgid(struct trace_buffer *buf, struct seq_file *m)$/;"	f	file:
print_graph_abs_time	trace/trace_functions_graph.c	/^static int print_graph_abs_time(u64 t, struct trace_seq *s)$/;"	f	file:
print_graph_comment	trace/trace_functions_graph.c	/^print_graph_comment(struct trace_seq *s, struct trace_entry *ent,$/;"	f	file:
print_graph_cpu	trace/trace_functions_graph.c	/^print_graph_cpu(struct trace_seq *s, int cpu)$/;"	f	file:
print_graph_duration	trace/trace_functions_graph.c	/^print_graph_duration(unsigned long long duration, struct trace_seq *s,$/;"	f	file:
print_graph_entry	trace/trace_functions_graph.c	/^print_graph_entry(struct ftrace_graph_ent_entry *field, struct trace_seq *s,$/;"	f	file:
print_graph_entry_leaf	trace/trace_functions_graph.c	/^print_graph_entry_leaf(struct trace_iterator *iter,$/;"	f	file:
print_graph_entry_nested	trace/trace_functions_graph.c	/^print_graph_entry_nested(struct trace_iterator *iter,$/;"	f	file:
print_graph_function	trace/trace_functions_graph.c	/^print_graph_function(struct trace_iterator *iter)$/;"	f	file:
print_graph_function_flags	trace/trace.h	/^print_graph_function_flags(struct trace_iterator *iter, u32 flags)$/;"	f
print_graph_function_flags	trace/trace_functions_graph.c	/^print_graph_function_flags(struct trace_iterator *iter, u32 flags)$/;"	f
print_graph_headers	trace/trace_functions_graph.c	/^void print_graph_headers(struct seq_file *s)$/;"	f
print_graph_headers_flags	trace/trace_functions_graph.c	/^void print_graph_headers_flags(struct seq_file *s, u32 flags)$/;"	f
print_graph_irq	trace/trace_functions_graph.c	/^print_graph_irq(struct trace_iterator *iter, unsigned long addr,$/;"	f	file:
print_graph_lat_fmt	trace/trace_functions_graph.c	/^print_graph_lat_fmt(struct trace_seq *s, struct trace_entry *entry)$/;"	f	file:
print_graph_proc	trace/trace_functions_graph.c	/^print_graph_proc(struct trace_seq *s, pid_t pid)$/;"	f	file:
print_graph_prologue	trace/trace_functions_graph.c	/^print_graph_prologue(struct trace_iterator *iter, struct trace_seq *s,$/;"	f	file:
print_graph_return	trace/trace_functions_graph.c	/^print_graph_return(struct ftrace_graph_ret *trace, struct trace_seq *s,$/;"	f	file:
print_header	trace/trace.h	/^	void			(*print_header)(struct seq_file *m);$/;"	m	struct:tracer
print_held_locks_bug	lockdep.c	/^static void print_held_locks_bug(void)$/;"	f	file:
print_hex_fmt	trace/trace.c	/^static enum print_line_t print_hex_fmt(struct trace_iterator *iter)$/;"	f	file:
print_ip	swap/us_manager/sspt/sspt_debug.h	/^static inline void print_ip(struct us_ip *ip, int i)$/;"	f
print_ip_ins	trace/ftrace.c	/^static void print_ip_ins(const char *fmt, unsigned char *p)$/;"	f	file:
print_irq_desc	irq/debug.h	/^static inline void print_irq_desc(unsigned int irq, struct irq_desc *desc)$/;"	f
print_irq_inversion_bug	lockdep.c	/^print_irq_inversion_bug(struct task_struct *curr,$/;"	f	file:
print_irq_lock_scenario	lockdep.c	/^print_irq_lock_scenario(struct lock_list *safe_entry,$/;"	f	file:
print_irqtrace_events	lockdep.c	/^void print_irqtrace_events(struct task_struct *curr)$/;"	f
print_irqtrace_events	trace/trace_irqsoff.c	/^inline void print_irqtrace_events(struct task_struct *curr)$/;"	f
print_jprobe	swap/us_manager/sspt/sspt_debug.h	/^static inline void print_jprobe(struct jprobe *jp)$/;"	f
print_kernel_ident	lockdep.c	/^static void print_kernel_ident(void)$/;"	f	file:
print_kprobe_event	trace/trace_kprobe.c	/^print_kprobe_event(struct trace_iterator *iter, int flags,$/;"	f	file:
print_kretprobe_event	trace/trace_kprobe.c	/^print_kretprobe_event(struct trace_iterator *iter, int flags,$/;"	f	file:
print_lat_header	trace/trace_functions_graph.c	/^static void print_lat_header(struct seq_file *s, u32 flags)$/;"	f	file:
print_lat_help_header	trace/trace.c	/^static void print_lat_help_header(struct seq_file *m)$/;"	f	file:
print_line	trace/trace.h	/^	enum print_line_t	(*print_line)(struct trace_iterator *iter);$/;"	m	struct:tracer	typeref:enum:tracer::print_line
print_lock	lockdep.c	/^static void print_lock(struct held_lock *hlock)$/;"	f	file:
print_lock_class_header	lockdep.c	/^static void print_lock_class_header(struct lock_class *class, int depth)$/;"	f	file:
print_lock_contention_bug	lockdep.c	/^print_lock_contention_bug(struct task_struct *curr, struct lockdep_map *lock,$/;"	f	file:
print_lock_name	lockdep.c	/^static void print_lock_name(struct lock_class *class)$/;"	f	file:
print_lock_nested_lock_not_held	lockdep.c	/^print_lock_nested_lock_not_held(struct task_struct *curr,$/;"	f	file:
print_lock_stat	power/wakelock.c	/^static int print_lock_stat(struct seq_file *m, struct wake_lock *lock)$/;"	f	file:
print_lockdep_cache	lockdep.c	/^static void print_lockdep_cache(struct lockdep_map *lock)$/;"	f	file:
print_lockdep_off	lockdep.c	/^static void print_lockdep_off(const char *bug_msg)$/;"	f	file:
print_max	trace/trace.h	/^	bool			print_max;$/;"	m	struct:tracer
print_modules	module.c	/^void print_modules(void)$/;"	f
print_msg	swap/buffer/kernel_operations.h	50;"	d
print_msg	swap/driver/driver_defs.h	38;"	d
print_msg	swap/fbiprobe/fbi_probe_module.h	68;"	d
print_msg	swap/fbiprobe/fbi_probe_module.h	71;"	d
print_msg	swap/parser/parser_defs.h	43;"	d
print_msg	swap/sampler/kernel_operations.h	39;"	d
print_msg	swap/writer/kernel_operations.h	45;"	d
print_name	lockdep_proc.c	/^static void print_name(struct seq_file *m, struct lock_class *class)$/;"	f	file:
print_name_offset	time/timer_list.c	/^static void print_name_offset(struct seq_file *m, void *sym)$/;"	f	file:
print_name_offset	time/timer_stats.c	/^static void print_name_offset(struct seq_file *m, unsigned long addr)$/;"	f	file:
print_one_line	trace/blktrace.c	/^static enum print_line_t print_one_line(struct trace_iterator *iter,$/;"	f	file:
print_one_rcu_data	rcutree_trace.c	/^static void print_one_rcu_data(struct seq_file *m, struct rcu_data *rdp)$/;"	f	file:
print_one_rcu_node_boost	rcutree_trace.c	/^static void print_one_rcu_node_boost(struct seq_file *m, struct rcu_node *rnp)$/;"	f	file:
print_one_rcu_pending	rcutree_trace.c	/^static void print_one_rcu_pending(struct seq_file *m, struct rcu_data *rdp)$/;"	f	file:
print_one_rcu_state	rcutree_trace.c	/^static void print_one_rcu_state(struct seq_file *m, struct rcu_state *rsp)$/;"	f	file:
print_oops_end_marker	panic.c	/^void print_oops_end_marker(void)$/;"	f
print_other_cpu_stall	rcutree.c	/^static void print_other_cpu_stall(struct rcu_state *rsp)$/;"	f	file:
print_page_probes	swap/us_manager/sspt/sspt_debug.h	/^static inline void print_page_probes(const struct sspt_page *page)$/;"	f
print_parse_debug	swap/parser/parser_defs.h	57;"	d
print_parse_debug	swap/parser/parser_defs.h	60;"	d
print_prefix	printk.c	/^static size_t print_prefix(const struct log *msg, bool syslog, char *buf)$/;"	f	file:
print_proc_probes	swap/us_manager/sspt/sspt_debug.h	/^static inline void print_proc_probes(const struct sspt_proc *proc)$/;"	f
print_process	printk.c	/^static size_t print_process(const struct log *msg, char *buf)$/;"	f	file:
print_raw_fmt	trace/trace.c	/^static enum print_line_t print_raw_fmt(struct trace_iterator *iter)$/;"	f	file:
print_regs	swap/preload/preload_module.c	/^static inline void print_regs(const char *prefix, struct pt_regs *regs,$/;"	f	file:
print_retprobe	swap/us_manager/sspt/sspt_debug.h	/^static inline void print_retprobe(struct uretprobe *rp)$/;"	f
print_rq	sched/debug.c	/^static void print_rq(struct seq_file *m, struct rq *rq, int rq_cpu)$/;"	f	file:
print_rt_rq	sched/debug.c	/^void print_rt_rq(struct seq_file *m, int cpu, struct rt_rq *rt_rq)$/;"	f
print_rt_stats	sched/rt.c	/^void print_rt_stats(struct seq_file *m, int cpu)$/;"	f
print_shortest_lock_dependencies	lockdep.c	/^print_shortest_lock_dependencies(struct lock_list *leaf,$/;"	f	file:
print_sleep_history_battery	power/sleep_history.c	/^static int print_sleep_history_battery($/;"	f	file:
print_sleep_history_time	power/sleep_history.c	/^static int print_sleep_history_time($/;"	f	file:
print_sleep_monitor_pretty_value	power/sleep_history.c	/^static int print_sleep_monitor_pretty_value(char* buffer, int count,$/;"	f	file:
print_snapshot_help	trace/trace.c	/^static inline void print_snapshot_help(struct seq_file *m, struct trace_iterator *iter) { }$/;"	f	file:
print_snapshot_help	trace/trace.c	/^static void print_snapshot_help(struct seq_file *m, struct trace_iterator *iter)$/;"	f	file:
print_stack_trace	stacktrace.c	/^EXPORT_SYMBOL_GPL(print_stack_trace);$/;"	v
print_stack_trace	stacktrace.c	/^void print_stack_trace(struct stack_trace *trace, int spaces)$/;"	f
print_subsystem_event_filter	trace/trace_events_filter.c	/^void print_subsystem_event_filter(struct event_subsystem *system,$/;"	f
print_suspendline_display	power/sleep_history.c	/^static int print_suspendline_display(char *buffer, size_t count, int offset)$/;"	f	file:
print_syscall_enter	trace/trace_syscalls.c	/^print_syscall_enter(struct trace_iterator *iter, int flags,$/;"	f	file:
print_syscall_exit	trace/trace_syscalls.c	/^print_syscall_exit(struct trace_iterator *iter, int flags,$/;"	f	file:
print_tainted	panic.c	/^const char *print_tainted(void)$/;"	f
print_task	sched/debug.c	/^print_task(struct seq_file *m, struct rq *rq, struct task_struct *p)$/;"	f	file:
print_tickdevice	time/timer_list.c	/^print_tickdevice(struct seq_file *m, struct tick_device *td, int cpu)$/;"	f	file:
print_time	printk.c	/^static size_t print_time(u64 ts, char *buf)$/;"	f	file:
print_timer	time/timer_list.c	/^print_timer(struct seq_file *m, struct hrtimer *taddr, struct hrtimer *timer,$/;"	f	file:
print_trace_fmt	trace/trace.c	/^static enum print_line_t print_trace_fmt(struct trace_iterator *iter)$/;"	f	file:
print_trace_header	trace/trace.c	/^print_trace_header(struct seq_file *m, struct trace_iterator *iter)$/;"	f
print_trace_line	trace/trace.c	/^enum print_line_t print_trace_line(struct trace_iterator *iter)$/;"	f
print_type_func_t	trace/trace_probe.h	/^typedef int (*print_type_func_t)(struct trace_seq *, const char *, void *, void *);$/;"	t
print_unload_info	module.c	/^static inline void print_unload_info(struct seq_file *m, struct module *mod)$/;"	f	file:
print_unlock_imbalance_bug	lockdep.c	/^print_unlock_imbalance_bug(struct task_struct *curr, struct lockdep_map *lock,$/;"	f	file:
print_uprobe_event	trace/trace_uprobe.c	/^print_uprobe_event(struct trace_iterator *iter, int flags, struct trace_event *event)$/;"	f	file:
print_uprobe_hash_table	swap/uprobe/swap_uprobes.c	/^void print_uprobe_hash_table(void)$/;"	f
print_usage_bug	lockdep.c	/^print_usage_bug(struct task_struct *curr, struct held_lock *this,$/;"	f	file:
print_usage_bug_scenario	lockdep.c	/^print_usage_bug_scenario(struct held_lock *lock)$/;"	f	file:
print_warn	swap/buffer/kernel_operations.h	53;"	d
print_warn	swap/driver/driver_defs.h	41;"	d
print_warn	swap/fbiprobe/fbi_probe_module.h	76;"	d
print_warn	swap/fbiprobe/fbi_probe_module.h	79;"	d
print_warn	swap/parser/parser_defs.h	46;"	d
print_warn	swap/sampler/kernel_operations.h	42;"	d
print_warn	swap/writer/kernel_operations.h	48;"	d
print_worker_info	workqueue.c	/^void print_worker_info(const char *log_lvl, struct task_struct *task)$/;"	f
printable_char	debug/kdb/kdb_main.c	1483;"	d	file:
printable_char	debug/kdb/kdb_main.c	1504;"	d	file:
printk	printk.c	/^EXPORT_SYMBOL(printk);$/;"	v
printk	printk.c	/^asmlinkage int printk(const char *fmt, ...)$/;"	f
printk_buf	rcutorture.c	/^static char printk_buf[4096];$/;"	v	file:
printk_deferred	printk.c	/^int printk_deferred(const char *fmt, ...)$/;"	f
printk_delay	printk.c	/^static inline void printk_delay(void)$/;"	f	file:
printk_emit	printk.c	/^EXPORT_SYMBOL(printk_emit);$/;"	v
printk_emit	printk.c	/^asmlinkage int printk_emit(int facility, int level,$/;"	f
printk_late_init	printk.c	/^late_initcall(printk_late_init);$/;"	v
printk_late_init	printk.c	/^static int __init printk_late_init(void)$/;"	f	file:
printk_lock	rtmutex-debug.c	/^static void printk_lock(struct rt_mutex *lock, int print_owner)$/;"	f	file:
printk_task	rtmutex-debug.c	/^static void printk_task(struct task_struct *p)$/;"	f	file:
printk_time	printk.c	/^static bool printk_time = 1;$/;"	v	file:
printk_time	printk.c	/^static bool printk_time;$/;"	v	file:
printk_timed_ratelimit	printk.c	/^EXPORT_SYMBOL(printk_timed_ratelimit);$/;"	v
printk_timed_ratelimit	printk.c	/^bool printk_timed_ratelimit(unsigned long *caller_jiffies,$/;"	f
prio	audit.h	/^	u64		    prio;$/;"	m	struct:audit_context
prio_changed	sched/sched.h	/^	void (*prio_changed) (struct rq *this_rq, struct task_struct *task,$/;"	m	struct:sched_class
prio_changed_fair	sched/fair.c	/^prio_changed_fair(struct rq *rq, struct task_struct *p, int oldprio)$/;"	f	file:
prio_changed_idle	sched/idle_task.c	/^prio_changed_idle(struct rq *rq, struct task_struct *p, int oldprio)$/;"	f	file:
prio_changed_rt	sched/rt.c	/^prio_changed_rt(struct rq *rq, struct task_struct *p, int oldprio)$/;"	f	file:
prio_changed_stop	sched/stop_task.c	/^prio_changed_stop(struct rq *rq, struct task_struct *p, int oldprio)$/;"	f	file:
prio_high	auditfilter.c	/^static u64 prio_high = ~0ULL\/2 - 1;$/;"	v	file:
prio_low	auditfilter.c	/^static u64 prio_low = ~0ULL\/2;$/;"	v	file:
prio_to_weight	sched/sched.h	/^static const int prio_to_weight[40] = {$/;"	v
prio_to_wmult	sched/sched.h	/^static const u32 prio_to_wmult[40] = {$/;"	v
priv	swap/energy/lcd/lcd_base.h	/^	void *priv;			\/**< Private data *\/$/;"	m	struct:lcd_ops
priv	swap/us_manager/pf/proc_filters.h	/^	void *priv;		\/**< Private data *\/$/;"	m	struct:proc_filter
priv_arg	swap/kprobe/swap_kprobes.h	/^	void *priv_arg;                     \/**< Private args.*\/$/;"	m	struct:jprobe
priv_arg	swap/uprobe/swap_uprobes.h	/^	void *priv_arg;         \/**< Private args for handler *\/$/;"	m	struct:ujprobe
priv_create	swap/us_manager/sspt/sspt_proc.h	/^	void *(*priv_create)(struct sspt_proc *);$/;"	m	struct:sspt_proc_cb
priv_destroy	swap/us_manager/sspt/sspt_proc.h	/^	void (*priv_destroy)(struct sspt_proc *, void *);$/;"	m	struct:sspt_proc_cb
priv_tdata	swap/nsp/nsp_tdata.c	/^struct priv_tdata {$/;"	s	file:
priv_tdata_create	swap/nsp/nsp_tdata.c	/^static struct priv_tdata *priv_tdata_create(struct task_struct *task)$/;"	f	file:
priv_tdata_destroy	swap/nsp/nsp_tdata.c	/^static void priv_tdata_destroy(struct priv_tdata *p_tdata)$/;"	f	file:
priv_tdata_destroy_all	swap/nsp/nsp_tdata.c	/^static void priv_tdata_destroy_all(void)$/;"	f	file:
private_data	swap/us_manager/sspt/sspt_proc.h	/^	void *private_data;		\/**< Process private data *\/$/;"	m	struct:sspt_proc
probe	swap/wsp/wsp.c	/^	struct probe_new probe;$/;"	m	struct:wsp_probe	typeref:struct:wsp_probe::probe_new	file:
probe	trace/ftrace.c	/^	struct ftrace_func_probe	*probe;$/;"	m	struct:ftrace_iterator	typeref:struct:ftrace_iterator::ftrace_func_probe	file:
probe_arg	trace/trace_probe.h	/^struct probe_arg {$/;"	s
probe_array	swap/wsp/wsp.c	/^	struct wsp_probe *probe_array;$/;"	m	struct:wsp_bin	typeref:struct:wsp_bin::wsp_probe	file:
probe_event_disable	trace/trace_uprobe.c	/^static void probe_event_disable(struct trace_uprobe *tu, int flag)$/;"	f	file:
probe_event_enable	trace/trace_uprobe.c	/^probe_event_enable(struct trace_uprobe *tu, int flag, filter_func_t filter)$/;"	f	file:
probe_i	swap/parser/msg_parser.h	/^	struct probe_info probe_i;  \/**< Probe info. *\/$/;"	m	struct:func_inst_data	typeref:struct:func_inst_data::probe_info
probe_iface	swap/us_manager/probes/register_probes.h	/^struct probe_iface {$/;"	s
probe_info	swap/us_manager/probes/probes.h	/^struct probe_info {$/;"	s
probe_info_cleanup	swap/us_manager/probes/probes.c	/^void probe_info_cleanup(struct probe_info *pi)$/;"	f
probe_info_copy	swap/us_manager/probes/probes.c	/^int probe_info_copy(const struct probe_info *pi, struct probe_info *dest)$/;"	f
probe_info_create	swap/us_manager/probes/probes.h	80;"	d
probe_info_dup	swap/us_manager/probes/probes.c	/^EXPORT_SYMBOL_GPL(probe_info_dup);$/;"	v
probe_info_dup	swap/us_manager/probes/probes.c	/^struct probe_info *probe_info_dup(const struct probe_info *info)$/;"	f
probe_info_free	swap/us_manager/probes/probes.c	/^EXPORT_SYMBOL_GPL(probe_info_free);$/;"	v
probe_info_free	swap/us_manager/probes/probes.c	/^void probe_info_free(struct probe_info *info)$/;"	f
probe_info_get_data	swap/us_manager/probes/probes.h	86;"	d
probe_info_get_ptr	swap/us_manager/probes/probes.h	87;"	d
probe_info_get_uprobe	swap/us_manager/probes/probes.c	/^struct uprobe *probe_info_get_uprobe(struct probe_info *pi, struct us_ip *ip)$/;"	f
probe_info_get_val	swap/us_manager/probes/probes.h	88;"	d
probe_info_init	swap/us_manager/probes/probes.c	/^void probe_info_init(struct probe_info *pi, struct us_ip *ip)$/;"	f
probe_info_malloc	swap/us_manager/probes/probes.c	/^EXPORT_SYMBOL_GPL(probe_info_malloc);$/;"	v
probe_info_malloc	swap/us_manager/probes/probes.c	/^struct probe_info *probe_info_malloc(size_t size, enum probe_t type)$/;"	f
probe_info_new	swap/us_manager/probes/probe_info_new.h	/^struct probe_info_new {$/;"	s
probe_info_otg	swap/us_manager/probes/probe_info_new.h	/^struct probe_info_otg {$/;"	s
probe_info_register	swap/us_manager/probes/probes.c	/^int probe_info_register(struct probe_info *pi, struct us_ip *ip)$/;"	f
probe_info_set_val	swap/us_manager/probes/probes.h	89;"	d
probe_info_uninit	swap/us_manager/probes/probes.c	/^void probe_info_uninit(struct probe_info *pi, struct us_ip *ip)$/;"	f
probe_info_unregister	swap/us_manager/probes/probes.c	/^void probe_info_unregister(struct probe_info *pi, struct us_ip *ip, int disarm)$/;"	f
probe_irq_mask	irq/autoprobe.c	/^EXPORT_SYMBOL(probe_irq_mask);$/;"	v
probe_irq_mask	irq/autoprobe.c	/^unsigned int probe_irq_mask(unsigned long val)$/;"	f
probe_irq_off	irq/autoprobe.c	/^EXPORT_SYMBOL(probe_irq_off);$/;"	v
probe_irq_off	irq/autoprobe.c	/^int probe_irq_off(unsigned long val)$/;"	f
probe_irq_on	irq/autoprobe.c	/^EXPORT_SYMBOL(probe_irq_on);$/;"	v
probe_irq_on	irq/autoprobe.c	/^unsigned long probe_irq_on(void)$/;"	f
probe_kthread_data	kthread.c	/^void *probe_kthread_data(struct task_struct *task)$/;"	f
probe_likely_condition	trace/trace_branch.c	/^probe_likely_condition(struct ftrace_branch_data *f, int val, int expect)$/;"	f	file:
probe_new	swap/us_manager/probes/probe_info_new.h	/^struct probe_new {$/;"	s
probe_remove_event_call	trace/trace_events.c	/^static int probe_remove_event_call(struct ftrace_event_call *call)$/;"	f	file:
probe_sched_switch	trace/trace_sched_switch.c	/^probe_sched_switch(void *ignore, struct task_struct *prev, struct task_struct *next)$/;"	f	file:
probe_sched_wakeup	trace/trace_sched_switch.c	/^probe_sched_wakeup(void *ignore, struct task_struct *wakee, int success)$/;"	f	file:
probe_t	swap/ks_features/ksf_msg.h	/^enum probe_t {$/;"	g
probe_t	swap/us_manager/probes/probes.h	/^enum probe_t {$/;"	g
probe_type	swap/ks_features/ksf_msg.c	/^	u32 probe_type;$/;"	m	struct:msg_sys_header	file:
probe_type	swap/us_manager/probes/probes.h	/^	enum probe_t probe_type;$/;"	m	struct:probe_info	typeref:enum:probe_info::probe_t
probe_wakeup	trace/trace_sched_wakeup.c	/^probe_wakeup(void *ignore, struct task_struct *p, int success)$/;"	f	file:
probe_wakeup_migrate_task	trace/trace_sched_wakeup.c	/^probe_wakeup_migrate_task(void *ignore, struct task_struct *task, int cpu)$/;"	f	file:
probe_wakeup_sched_switch	trace/trace_sched_wakeup.c	/^probe_wakeup_sched_switch(void *ignore,$/;"	f	file:
probes	tracepoint.c	/^	struct tracepoint_func probes[0];$/;"	m	struct:tp_probes	typeref:struct:tp_probes::tracepoint_func	file:
probes_count	swap/preload/preload_probe.c	/^static unsigned long long probes_count = 0;$/;"	v	file:
probes_methods	swap/us_manager/probes/probes.c	/^static struct probe_iface *probes_methods[SWAP_PROBE_MAX_VAL] = { NULL };$/;"	v	typeref:struct:probe_iface	file:
probes_open	trace/trace_kprobe.c	/^static int probes_open(struct inode *inode, struct file *file)$/;"	f	file:
probes_open	trace/trace_uprobe.c	/^static int probes_open(struct inode *inode, struct file *file)$/;"	f	file:
probes_profile_seq_show	trace/trace_kprobe.c	/^static int probes_profile_seq_show(struct seq_file *m, void *v)$/;"	f	file:
probes_profile_seq_show	trace/trace_uprobe.c	/^static int probes_profile_seq_show(struct seq_file *m, void *v)$/;"	f	file:
probes_seq_next	trace/trace_kprobe.c	/^static void *probes_seq_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
probes_seq_next	trace/trace_uprobe.c	/^static void *probes_seq_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
probes_seq_op	trace/trace_kprobe.c	/^static const struct seq_operations probes_seq_op = {$/;"	v	typeref:struct:seq_operations	file:
probes_seq_op	trace/trace_uprobe.c	/^static const struct seq_operations probes_seq_op = {$/;"	v	typeref:struct:seq_operations	file:
probes_seq_show	trace/trace_kprobe.c	/^static int probes_seq_show(struct seq_file *m, void *v)$/;"	f	file:
probes_seq_show	trace/trace_uprobe.c	/^static int probes_seq_show(struct seq_file *m, void *v)$/;"	f	file:
probes_seq_start	trace/trace_kprobe.c	/^static void *probes_seq_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
probes_seq_start	trace/trace_uprobe.c	/^static void *probes_seq_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
probes_seq_stop	trace/trace_kprobe.c	/^static void probes_seq_stop(struct seq_file *m, void *v)$/;"	f	file:
probes_seq_stop	trace/trace_uprobe.c	/^static void probes_seq_stop(struct seq_file *m, void *v)$/;"	f	file:
probes_write	trace/trace_kprobe.c	/^static ssize_t probes_write(struct file *file, const char __user *buffer,$/;"	f	file:
probes_write	trace/trace_uprobe.c	/^static ssize_t probes_write(struct file *file, const char __user *buffer,$/;"	f	file:
proc	swap/us_manager/pf/pf_group.c	/^	struct sspt_proc *proc;$/;"	m	struct:pl_struct	typeref:struct:pl_struct::sspt_proc	file:
proc	swap/us_manager/sspt/sspt_file.h	/^	struct sspt_proc *proc;		\/**< Pointer to the proc (parent) *\/$/;"	m	struct:sspt_file	typeref:struct:sspt_file::sspt_proc
proc	swap/us_manager/sspt/sspt_filter.h	/^	struct sspt_proc *proc;$/;"	m	struct:sspt_filter	typeref:struct:sspt_filter::sspt_proc
proc_caches_init	fork.c	/^void __init proc_caches_init(void)$/;"	f
proc_cap_handler	kmod.c	/^static int proc_cap_handler(struct ctl_table *table, int write,$/;"	f	file:
proc_cb	swap/us_manager/sspt/sspt_proc.c	/^static struct sspt_proc_cb *proc_cb;$/;"	v	typeref:struct:sspt_proc_cb	file:
proc_cgroup_show	cgroup.c	/^int proc_cgroup_show(struct seq_file *m, void *v)$/;"	f
proc_cgroupstats_operations	cgroup.c	/^static const struct file_operations proc_cgroupstats_operations = {$/;"	v	typeref:struct:file_operations	file:
proc_cgroupstats_operations	cgroup.c	/^static const struct file_operations proc_cgroupstats_operations;$/;"	v	typeref:struct:file_operations	file:
proc_cgroupstats_show	cgroup.c	/^static int proc_cgroupstats_show(struct seq_file *m, void *v)$/;"	f	file:
proc_cleanup_work	pid_namespace.c	/^static void proc_cleanup_work(struct work_struct *work)$/;"	f	file:
proc_comm	swap/parser/usm_msg.c	/^struct proc_comm {$/;"	s	file:
proc_cpuset_show	cpuset.c	/^int proc_cpuset_show(struct seq_file *m, void *unused_v)$/;"	f
proc_dma_init	dma.c	/^__initcall(proc_dma_init);$/;"	v
proc_dma_init	dma.c	/^static int __init proc_dma_init(void)$/;"	f	file:
proc_dma_open	dma.c	/^static int proc_dma_open(struct inode *inode, struct file *file)$/;"	f	file:
proc_dma_operations	dma.c	/^static const struct file_operations proc_dma_operations = {$/;"	v	typeref:struct:file_operations	file:
proc_dma_show	dma.c	/^static int proc_dma_show(struct seq_file *m, void *v)$/;"	f	file:
proc_do_cad_pid	sysctl.c	/^static int proc_do_cad_pid(struct ctl_table *table, int write,$/;"	f	file:
proc_do_large_bitmap	sysctl.c	/^int proc_do_large_bitmap(struct ctl_table *table, int write,$/;"	f
proc_do_uts_string	utsname_sysctl.c	/^static int proc_do_uts_string(ctl_table *table, int write,$/;"	f	file:
proc_do_uts_string	utsname_sysctl.c	63;"	d	file:
proc_dohung_task_timeout_secs	hung_task.c	/^int proc_dohung_task_timeout_secs(struct ctl_table *table, int write,$/;"	f
proc_dointvec	sysctl.c	/^EXPORT_SYMBOL(proc_dointvec);$/;"	v
proc_dointvec	sysctl.c	/^int proc_dointvec(struct ctl_table *table, int write,$/;"	f
proc_dointvec_jiffies	sysctl.c	/^EXPORT_SYMBOL(proc_dointvec_jiffies);$/;"	v
proc_dointvec_jiffies	sysctl.c	/^int proc_dointvec_jiffies(struct ctl_table *table, int write,$/;"	f
proc_dointvec_minmax	sysctl.c	/^EXPORT_SYMBOL(proc_dointvec_minmax);$/;"	v
proc_dointvec_minmax	sysctl.c	/^int proc_dointvec_minmax(struct ctl_table *table, int write,$/;"	f
proc_dointvec_minmax_coredump	sysctl.c	/^static int proc_dointvec_minmax_coredump(struct ctl_table *table, int write,$/;"	f	file:
proc_dointvec_minmax_sysadmin	sysctl.c	/^static int proc_dointvec_minmax_sysadmin(struct ctl_table *table, int write,$/;"	f	file:
proc_dointvec_ms_jiffies	sysctl.c	/^EXPORT_SYMBOL(proc_dointvec_ms_jiffies);$/;"	v
proc_dointvec_ms_jiffies	sysctl.c	/^int proc_dointvec_ms_jiffies(struct ctl_table *table, int write,$/;"	f
proc_dointvec_userhz_jiffies	sysctl.c	/^EXPORT_SYMBOL(proc_dointvec_userhz_jiffies);$/;"	v
proc_dointvec_userhz_jiffies	sysctl.c	/^int proc_dointvec_userhz_jiffies(struct ctl_table *table, int write,$/;"	f
proc_dostring	sysctl.c	/^EXPORT_SYMBOL(proc_dostring);$/;"	v
proc_dostring	sysctl.c	/^int proc_dostring(struct ctl_table *table, int write,$/;"	f
proc_dostring_coredump	sysctl.c	/^static int proc_dostring_coredump(struct ctl_table *table, int write,$/;"	f	file:
proc_doulongvec_minmax	sysctl.c	/^EXPORT_SYMBOL(proc_doulongvec_minmax);$/;"	v
proc_doulongvec_minmax	sysctl.c	/^int proc_doulongvec_minmax(struct ctl_table *table, int write,$/;"	f
proc_doulongvec_ms_jiffies_minmax	sysctl.c	/^EXPORT_SYMBOL(proc_doulongvec_ms_jiffies_minmax);$/;"	v
proc_doulongvec_ms_jiffies_minmax	sysctl.c	/^int proc_doulongvec_ms_jiffies_minmax(struct ctl_table *table, int write,$/;"	f
proc_dowatchdog	watchdog.c	/^int proc_dowatchdog(struct ctl_table *table, int write,$/;"	f
proc_execdomains_init	exec_domain.c	/^module_init(proc_execdomains_init);$/;"	v
proc_execdomains_init	exec_domain.c	/^static int __init proc_execdomains_init(void)$/;"	f	file:
proc_filter	swap/us_manager/pf/proc_filters.h	/^struct proc_filter {$/;"	s
proc_get_long	sysctl.c	/^static int proc_get_long(char **buf, size_t *size,$/;"	f	file:
proc_gid_map_write	user_namespace.c	/^ssize_t proc_gid_map_write(struct file *file, const char __user *buf, size_t size, loff_t *ppos)$/;"	f
proc_gid_seq_operations	user_namespace.c	/^struct seq_operations proc_gid_seq_operations = {$/;"	v	typeref:struct:seq_operations
proc_info_bottom	swap/parser/usm_msg.c	/^struct proc_info_bottom {$/;"	s	file:
proc_info_top	swap/parser/usm_msg.c	/^struct proc_info_top {$/;"	s	file:
proc_iomem_operations	resource.c	/^static const struct file_operations proc_iomem_operations = {$/;"	v	typeref:struct:file_operations	file:
proc_ioports_operations	resource.c	/^static const struct file_operations proc_ioports_operations = {$/;"	v	typeref:struct:file_operations	file:
proc_kprobes_optimization_handler	kprobes.c	/^int proc_kprobes_optimization_handler(struct ctl_table *table, int write,$/;"	f
proc_list	swap/us_manager/pf/pf_group.c	/^	struct list_head proc_list;$/;"	m	struct:pf_group	typeref:struct:pf_group::list_head	file:
proc_lock_stat_operations	lockdep_proc.c	/^static const struct file_operations proc_lock_stat_operations = {$/;"	v	typeref:struct:file_operations	file:
proc_lockdep_chains_operations	lockdep_proc.c	/^static const struct file_operations proc_lockdep_chains_operations = {$/;"	v	typeref:struct:file_operations	file:
proc_lockdep_operations	lockdep_proc.c	/^static const struct file_operations proc_lockdep_operations = {$/;"	v	typeref:struct:file_operations	file:
proc_lockdep_stats_operations	lockdep_proc.c	/^static const struct file_operations proc_lockdep_stats_operations = {$/;"	v	typeref:struct:file_operations	file:
proc_map	swap/parser/usm_msg.c	/^struct proc_map {$/;"	s	file:
proc_modules_init	module.c	/^module_init(proc_modules_init);$/;"	v
proc_modules_init	module.c	/^static int __init proc_modules_init(void)$/;"	f	file:
proc_modules_operations	module.c	/^static const struct file_operations proc_modules_operations = {$/;"	v	typeref:struct:file_operations	file:
proc_profile_operations	profile.c	/^static const struct file_operations proc_profile_operations = {$/;"	v	typeref:struct:file_operations	file:
proc_projid_map_write	user_namespace.c	/^ssize_t proc_projid_map_write(struct file *file, const char __user *buf, size_t size, loff_t *ppos)$/;"	f
proc_projid_seq_operations	user_namespace.c	/^struct seq_operations proc_projid_seq_operations = {$/;"	v	typeref:struct:seq_operations
proc_put_char	sysctl.c	/^static int proc_put_char(void __user **buf, size_t *size, char c)$/;"	f	file:
proc_put_long	sysctl.c	/^static int proc_put_long(void __user **buf, size_t *size, unsigned long val,$/;"	f	file:
proc_sched_autogroup_set_nice	sched/auto_group.c	/^int proc_sched_autogroup_set_nice(struct task_struct *p, int nice)$/;"	f
proc_sched_autogroup_show_task	sched/auto_group.c	/^void proc_sched_autogroup_show_task(struct task_struct *p, struct seq_file *m)$/;"	f
proc_sched_set_task	sched/debug.c	/^void proc_sched_set_task(struct task_struct *p)$/;"	f
proc_sched_show_task	sched/debug.c	/^void proc_sched_show_task(struct task_struct *p, struct seq_file *m)$/;"	f
proc_schedstat_init	sched/stats.c	/^module_init(proc_schedstat_init);$/;"	v
proc_schedstat_init	sched/stats.c	/^static int __init proc_schedstat_init(void)$/;"	f	file:
proc_schedstat_operations	sched/stats.c	/^static const struct file_operations proc_schedstat_operations = {$/;"	v	typeref:struct:file_operations	file:
proc_setgroups_show	user_namespace.c	/^int proc_setgroups_show(struct seq_file *seq, void *v)$/;"	f
proc_setgroups_write	user_namespace.c	/^ssize_t proc_setgroups_write(struct file *file, const char __user *buf,$/;"	f
proc_skip_char	sysctl.c	/^static void proc_skip_char(char **buf, size_t *size, const char v)$/;"	f	file:
proc_skip_spaces	sysctl.c	/^static size_t proc_skip_spaces(char **buf)$/;"	f	file:
proc_taint	sysctl.c	/^static int proc_taint(struct ctl_table *table, int write,$/;"	f	file:
proc_terminate	swap/parser/usm_msg.c	/^struct proc_terminate {$/;"	s	file:
proc_uid_map_write	user_namespace.c	/^ssize_t proc_uid_map_write(struct file *file, const char __user *buf, size_t size, loff_t *ppos)$/;"	f
proc_uid_seq_operations	user_namespace.c	/^struct seq_operations proc_uid_seq_operations = {$/;"	v	typeref:struct:seq_operations
proc_unmap	swap/parser/usm_msg.c	/^struct proc_unmap {$/;"	s	file:
proc_wspace_sep	sysctl.c	/^static const char proc_wspace_sep[] = { ' ', '\\t', '\\n' };$/;"	v	file:
process	printk.c	/^	char process[16];	\/* process Name CONFIG_PRINTK_PROCESS *\/$/;"	m	struct:log	file:
process_adj_status	time/ntp.c	/^static inline void process_adj_status(struct timex *txc, struct timespec *ts)$/;"	f	file:
process_adjtimex_modes	time/ntp.c	/^static inline void process_adjtimex_modes(struct timex *txc,$/;"	f	file:
process_cpu_clock_get	posix-cpu-timers.c	/^static int process_cpu_clock_get(const clockid_t which_clock,$/;"	f	file:
process_cpu_clock_getres	posix-cpu-timers.c	/^static int process_cpu_clock_getres(const clockid_t which_clock,$/;"	f	file:
process_cpu_nsleep	posix-cpu-timers.c	/^static int process_cpu_nsleep(const clockid_t which_clock, int flags,$/;"	f	file:
process_cpu_nsleep_restart	posix-cpu-timers.c	/^static long process_cpu_nsleep_restart(struct restart_block *restart_block)$/;"	f	file:
process_cpu_timer_create	posix-cpu-timers.c	/^static int process_cpu_timer_create(struct k_itimer *timer)$/;"	f	file:
process_data	swap/preload/preload_pd.c	/^struct process_data {$/;"	s	file:
process_ops	trace/trace_events_filter.c	/^static int process_ops(struct filter_pred *preds,$/;"	f	file:
process_scheduled_works	workqueue.c	/^static void process_scheduled_works(struct worker *worker)$/;"	f	file:
process_srcu	srcu.c	/^EXPORT_SYMBOL_GPL(process_srcu);$/;"	v
process_srcu	srcu.c	/^void process_srcu(struct work_struct *work)$/;"	f
process_timeout	timer.c	/^static void process_timeout(unsigned long __data)$/;"	f	file:
procname	sysctl_binary.c	/^	const char		*procname;$/;"	m	struct:bin_table	file:
procs	sys.c	/^	u16 procs;$/;"	m	struct:compat_sysinfo	file:
producer	trace/ring_buffer_benchmark.c	/^static struct task_struct *producer;$/;"	v	typeref:struct:task_struct	file:
producer_fifo	trace/ring_buffer_benchmark.c	/^static int producer_fifo = -1;$/;"	v	file:
producer_nice	trace/ring_buffer_benchmark.c	/^static int producer_nice = 19;$/;"	v	file:
prof_buffer	profile.c	/^static atomic_t *prof_buffer;$/;"	v	file:
prof_cpu_mask	profile.c	/^static cpumask_var_t prof_cpu_mask;$/;"	v	file:
prof_cpu_mask_proc_fops	profile.c	/^static const struct file_operations prof_cpu_mask_proc_fops = {$/;"	v	typeref:struct:file_operations	file:
prof_cpu_mask_proc_open	profile.c	/^static int prof_cpu_mask_proc_open(struct inode *inode, struct file *file)$/;"	f	file:
prof_cpu_mask_proc_show	profile.c	/^static int prof_cpu_mask_proc_show(struct seq_file *m, void *v)$/;"	f	file:
prof_cpu_mask_proc_write	profile.c	/^static ssize_t prof_cpu_mask_proc_write(struct file *file,$/;"	f	file:
prof_len	profile.c	/^static unsigned long prof_len, prof_shift;$/;"	v	file:
prof_on	profile.c	/^EXPORT_SYMBOL_GPL(prof_on);$/;"	v
prof_shift	profile.c	/^static unsigned long prof_len, prof_shift;$/;"	v	file:
prof_ticks	posix-cpu-timers.c	/^static inline cputime_t prof_ticks(struct task_struct *p)$/;"	f	file:
profile_cpu_callback	profile.c	/^static int __cpuinit profile_cpu_callback(struct notifier_block *info,$/;"	f	file:
profile_cpu_callback	profile.c	395;"	d	file:
profile_discard_flip_buffers	profile.c	/^static void profile_discard_flip_buffers(void)$/;"	f	file:
profile_discard_flip_buffers	profile.c	394;"	d	file:
profile_event_register	profile.c	/^EXPORT_SYMBOL_GPL(profile_event_register);$/;"	v
profile_event_register	profile.c	/^int profile_event_register(enum profile_type type, struct notifier_block *n)$/;"	f
profile_event_unregister	profile.c	/^EXPORT_SYMBOL_GPL(profile_event_unregister);$/;"	v
profile_event_unregister	profile.c	/^int profile_event_unregister(enum profile_type type, struct notifier_block *n)$/;"	f
profile_flip_buffers	profile.c	/^static void profile_flip_buffers(void)$/;"	f	file:
profile_flip_buffers	profile.c	393;"	d	file:
profile_graph_entry	trace/ftrace.c	/^static int profile_graph_entry(struct ftrace_graph_ent *trace)$/;"	f	file:
profile_graph_return	trace/ftrace.c	/^static void profile_graph_return(struct ftrace_graph_ret *trace)$/;"	f	file:
profile_handoff_task	profile.c	/^int profile_handoff_task(struct task_struct *task)$/;"	f
profile_hit	profile.c	/^struct profile_hit {$/;"	s	file:
profile_hits	profile.c	/^EXPORT_SYMBOL_GPL(profile_hits);$/;"	v
profile_hits	profile.c	/^void profile_hits(int type, void *__pc, unsigned int nr_hits)$/;"	f
profile_init	profile.c	/^int __ref profile_init(void)$/;"	f
profile_munmap	profile.c	/^void profile_munmap(unsigned long addr)$/;"	f
profile_nop	profile.c	/^static void profile_nop(void *unused)$/;"	f	file:
profile_open	trace/trace_kprobe.c	/^static int profile_open(struct inode *inode, struct file *file)$/;"	f	file:
profile_open	trace/trace_uprobe.c	/^static int profile_open(struct inode *inode, struct file *file)$/;"	f	file:
profile_seq_op	trace/trace_kprobe.c	/^static const struct seq_operations profile_seq_op = {$/;"	v	typeref:struct:seq_operations	file:
profile_seq_op	trace/trace_uprobe.c	/^static const struct seq_operations profile_seq_op = {$/;"	v	typeref:struct:seq_operations	file:
profile_setup	profile.c	/^int profile_setup(char *str)$/;"	f
profile_task_exit	profile.c	/^void profile_task_exit(struct task_struct *task)$/;"	f
profile_tick	profile.c	/^void profile_tick(int type)$/;"	f
profiling	ksysfs.c	/^KERNEL_ATTR_RW(profiling);$/;"	v
profiling_show	ksysfs.c	/^static ssize_t profiling_show(struct kobject *kobj,$/;"	f	file:
profiling_store	ksysfs.c	/^static ssize_t profiling_store(struct kobject *kobj,$/;"	f	file:
projid_m_show	user_namespace.c	/^static int projid_m_show(struct seq_file *seq, void *v)$/;"	f	file:
projid_m_start	user_namespace.c	/^static void *projid_m_start(struct seq_file *seq, loff_t *ppos)$/;"	f	file:
prove_locking	lockdep.c	/^int prove_locking = 1;$/;"	v
prove_locking	lockdep.c	60;"	d	file:
prune_one	audit_tree.c	/^static void prune_one(struct audit_tree *victim)$/;"	f	file:
prune_tree_thread	audit_tree.c	/^static int prune_tree_thread(void *unused)$/;"	f	file:
pt	cgroup.c	/^	poll_table pt;$/;"	m	struct:cgroup_event	file:
pt	swap/energy/energy.c	/^	enum parameter_type pt;$/;"	m	struct:cmd_pt	typeref:enum:cmd_pt::parameter_type	file:
pt_regs_to_gdb_regs	debug/gdbstub.c	/^void pt_regs_to_gdb_regs(unsigned long *gdb_regs, struct pt_regs *regs)$/;"	f
ptid	events/core.c	/^		u32				ptid;$/;"	m	struct:perf_task_event::__anon6	file:
ptr	swap/parser/msg_buf.h	/^	char *ptr;      \/**< Buffer iterator. *\/$/;"	m	struct:msg_buf
ptr	swap/us_manager/debugfs_us_manager.c	/^	char *ptr;$/;"	m	struct:read_buf	file:
ptr	swap/writer/debugfs_writer.c	/^	char *ptr;$/;"	m	struct:read_buf	file:
ptr	swap/wsp/wsp_res.h	/^	void *ptr;$/;"	m	struct:wsp_res
ptr_order	swap/fbiprobe/fbiprobe.h	/^	uint8_t ptr_order;         \/* Specifies what is located on the address:$/;"	m	struct:fbi_step
ptrace_attach	ptrace.c	/^static int ptrace_attach(struct task_struct *task, long request,$/;"	f	file:
ptrace_check_attach	ptrace.c	/^static int ptrace_check_attach(struct task_struct *child, bool ignore_state)$/;"	f	file:
ptrace_detach	ptrace.c	/^static int ptrace_detach(struct task_struct *child, unsigned int data)$/;"	f	file:
ptrace_do_notify	signal.c	/^static void ptrace_do_notify(int signr, int exit_code, int why)$/;"	f	file:
ptrace_do_wait	exit.c	/^static int ptrace_do_wait(struct wait_opts *wo, struct task_struct *tsk)$/;"	f	file:
ptrace_freeze_traced	ptrace.c	/^static bool ptrace_freeze_traced(struct task_struct *task)$/;"	f	file:
ptrace_get_breakpoints	ptrace.c	/^int ptrace_get_breakpoints(struct task_struct *tsk)$/;"	f
ptrace_get_task_struct	ptrace.c	/^static struct task_struct *ptrace_get_task_struct(pid_t pid)$/;"	f	file:
ptrace_getsiginfo	ptrace.c	/^static int ptrace_getsiginfo(struct task_struct *child, siginfo_t *info)$/;"	f	file:
ptrace_has_cap	ptrace.c	/^static int ptrace_has_cap(struct user_namespace *ns, unsigned int mode)$/;"	f	file:
ptrace_may_access	ptrace.c	/^bool ptrace_may_access(struct task_struct *task, unsigned int mode)$/;"	f
ptrace_notify	signal.c	/^void ptrace_notify(int exit_code)$/;"	f
ptrace_peek_siginfo	ptrace.c	/^static int ptrace_peek_siginfo(struct task_struct *child,$/;"	f	file:
ptrace_put_breakpoints	ptrace.c	/^void ptrace_put_breakpoints(struct task_struct *tsk)$/;"	f
ptrace_readdata	ptrace.c	/^int ptrace_readdata(struct task_struct *tsk, unsigned long src, char __user *dst, int len)$/;"	f
ptrace_regset	ptrace.c	/^static int ptrace_regset(struct task_struct *task, int req, unsigned int type,$/;"	f	file:
ptrace_request	ptrace.c	/^int ptrace_request(struct task_struct *child, long request,$/;"	f
ptrace_resume	ptrace.c	/^static int ptrace_resume(struct task_struct *child, long request,$/;"	f	file:
ptrace_setoptions	ptrace.c	/^static int ptrace_setoptions(struct task_struct *child, unsigned long data)$/;"	f	file:
ptrace_setsiginfo	ptrace.c	/^static int ptrace_setsiginfo(struct task_struct *child, const siginfo_t *info)$/;"	f	file:
ptrace_signal	signal.c	/^static int ptrace_signal(int signr, siginfo_t *info)$/;"	f	file:
ptrace_traceme	ptrace.c	/^static int ptrace_traceme(void)$/;"	f	file:
ptrace_trap_notify	signal.c	/^static void ptrace_trap_notify(struct task_struct *t)$/;"	f	file:
ptrace_trapping_sleep_fn	ptrace.c	/^static int ptrace_trapping_sleep_fn(void *flags)$/;"	f	file:
ptrace_unfreeze_traced	ptrace.c	/^static void ptrace_unfreeze_traced(struct task_struct *task)$/;"	f	file:
ptrace_writedata	ptrace.c	/^int ptrace_writedata(struct task_struct *tsk, char __user *src, unsigned long dst, int len)$/;"	f
pull_rt_task	sched/rt.c	/^static int pull_rt_task(struct rq *this_rq)$/;"	f	file:
push_cpu	sched/sched.h	/^	int push_cpu;$/;"	m	struct:rq
push_rt_task	sched/rt.c	/^static int push_rt_task(struct rq *rq)$/;"	f	file:
push_rt_tasks	sched/rt.c	/^static void push_rt_tasks(struct rq *rq)$/;"	f	file:
pushable_tasks	sched/sched.h	/^	struct plist_head pushable_tasks;$/;"	m	struct:rt_rq	typeref:struct:rt_rq::plist_head
put_all_procs	swap/us_manager/pf/pf_group.c	/^void put_all_procs(void)$/;"	f
put_callchain_buffers	events/callchain.c	/^void put_callchain_buffers(void)$/;"	f
put_callchain_entry	events/callchain.c	/^put_callchain_entry(int rctx)$/;"	f	file:
put_clock_desc	time/posix-clock.c	/^static void put_clock_desc(struct posix_clock_desc *cd)$/;"	f	file:
put_compat_itimerspec	compat.c	/^int put_compat_itimerspec(struct compat_itimerspec __user *dst,$/;"	f
put_compat_itimerval	compat.c	/^static inline long put_compat_itimerval(struct compat_itimerval __user *o,$/;"	f	file:
put_compat_rusage	compat.c	/^int put_compat_rusage(const struct rusage *r, struct compat_rusage __user *ru)$/;"	f
put_compat_timespec	compat.c	/^EXPORT_SYMBOL_GPL(put_compat_timespec);$/;"	v
put_compat_timespec	compat.c	/^int put_compat_timespec(const struct timespec *ts, struct compat_timespec __user *cts)$/;"	f
put_compat_timeval	compat.c	/^EXPORT_SYMBOL_GPL(put_compat_timeval);$/;"	v
put_compat_timeval	compat.c	/^int put_compat_timeval(const struct timeval *tv, struct compat_timeval __user *ctv)$/;"	f
put_count	audit.h	/^	int		    put_count;$/;"	m	struct:audit_context
put_cred_rcu	cred.c	/^static void put_cred_rcu(struct rcu_head *rcu)$/;"	f	file:
put_css_set	cgroup.c	/^static inline void put_css_set(struct css_set *cg)$/;"	f	file:
put_css_set_taskexit	cgroup.c	/^static inline void put_css_set_taskexit(struct css_set *cg)$/;"	f	file:
put_ctx	events/core.c	/^static void put_ctx(struct perf_event_context *ctx)$/;"	f	file:
put_current_buf	swap/writer/debugfs_writer.c	/^static void put_current_buf(void)$/;"	f	file:
put_dentry	swap/preload/preload_module.c	/^void put_dentry(struct dentry *dentry)$/;"	f
put_event	events/core.c	/^static void put_event(struct perf_event *event)$/;"	f	file:
put_fbi_probe	swap/parser/msg_parser.c	/^void put_fbi_probe(struct probe_info *pi)$/;"	f
put_futex_key	futex.c	/^static inline void put_futex_key(union futex_key *key)$/;"	f	file:
put_get_call_type_probe	swap/parser/msg_parser.c	/^void put_get_call_type_probe(struct probe_info *pi)$/;"	f
put_get_caller_probe	swap/parser/msg_parser.c	/^void put_get_caller_probe(struct probe_info *pi)$/;"	f
put_lock_stats	lockdep.c	/^static void put_lock_stats(struct lock_class_stats *stats)$/;"	f	file:
put_map_read	swap/ks_features/file_ops.c	/^static inline void put_map_read(struct map *map)$/;"	f	file:
put_map_write	swap/ks_features/file_ops.c	/^static inline void put_map_write(struct map *map)$/;"	f	file:
put_online_cpus	cpu.c	/^EXPORT_SYMBOL_GPL(put_online_cpus);$/;"	v
put_online_cpus	cpu.c	/^void put_online_cpus(void)$/;"	f
put_packet	debug/gdbstub.c	/^static void put_packet(char *buffer)$/;"	f	file:
put_pf_group	swap/us_manager/pf/pf_group.c	/^EXPORT_SYMBOL_GPL(put_pf_group);$/;"	v
put_pf_group	swap/us_manager/pf/pf_group.c	/^void put_pf_group(struct pf_group *pfg)$/;"	f
put_pid	pid.c	/^EXPORT_SYMBOL_GPL(put_pid);$/;"	v
put_pid	pid.c	/^void put_pid(struct pid *pid)$/;"	f
put_pid_ns	pid_namespace.c	/^EXPORT_SYMBOL_GPL(put_pid_ns);$/;"	v
put_pid_ns	pid_namespace.c	/^void put_pid_ns(struct pid_namespace *ns)$/;"	f
put_posix_clock	time/posix-clock.c	/^static void put_posix_clock(struct posix_clock *clk)$/;"	f	file:
put_preload_probe	swap/parser/msg_parser.c	/^void put_preload_probe(struct probe_info *pi)$/;"	f
put_prev_entity	sched/fair.c	/^static void put_prev_entity(struct cfs_rq *cfs_rq, struct sched_entity *prev)$/;"	f	file:
put_prev_task	sched/core.c	/^static void put_prev_task(struct rq *rq, struct task_struct *prev)$/;"	f	file:
put_prev_task	sched/sched.h	/^	void (*put_prev_task) (struct rq *rq, struct task_struct *p);$/;"	m	struct:sched_class
put_prev_task_fair	sched/fair.c	/^static void put_prev_task_fair(struct rq *rq, struct task_struct *prev)$/;"	f	file:
put_prev_task_idle	sched/idle_task.c	/^static void put_prev_task_idle(struct rq *rq, struct task_struct *prev)$/;"	f	file:
put_prev_task_rt	sched/rt.c	/^static void put_prev_task_rt(struct rq *rq, struct task_struct *p)$/;"	f	file:
put_prev_task_stop	sched/stop_task.c	/^static void put_prev_task_stop(struct rq *rq, struct task_struct *prev)$/;"	f	file:
put_pwq	workqueue.c	/^static void put_pwq(struct pool_workqueue *pwq)$/;"	f	file:
put_pwq_unlocked	workqueue.c	/^static void put_pwq_unlocked(struct pool_workqueue *pwq)$/;"	f	file:
put_recursion_context	events/internal.h	/^static inline void put_recursion_context(int *recursion, int rctx)$/;"	f
put_retprobe	swap/parser/msg_parser.c	/^void put_retprobe(struct probe_info *pi)$/;"	f
put_seccomp_filter	seccomp.c	/^void put_seccomp_filter(struct task_struct *tsk)$/;"	f
put_signal_struct	fork.c	/^static inline void put_signal_struct(struct signal_struct *sig)$/;"	f	file:
put_string	swap/parser/msg_buf.c	/^void put_string(char *str)$/;"	f
put_system	trace/trace_events.c	/^static void put_system(struct ftrace_subsystem_dir *dir)$/;"	f	file:
put_task_handler	swap/kprobe/swap_kprobes.c	/^static int put_task_handler(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
put_task_kp	swap/kprobe/swap_kprobes.c	/^static struct kprobe put_task_kp = {$/;"	v	typeref:struct:kprobe	file:
put_tree	audit_tree.c	/^static inline void put_tree(struct audit_tree *tree)$/;"	f	file:
put_tree_ref	auditsc.c	/^static int put_tree_ref(struct audit_context *ctx, struct audit_chunk *chunk)$/;"	f	file:
put_unbound_pool	workqueue.c	/^static void put_unbound_pool(struct worker_pool *pool)$/;"	f	file:
put_uprobe	events/uprobes.c	/^static void put_uprobe(struct uprobe *uprobe)$/;"	f	file:
put_uts	utsname_sysctl.c	/^static void put_uts(ctl_table *table, int write, void *which)$/;"	f	file:
put_write_msg_probe	swap/parser/msg_parser.c	/^void put_write_msg_probe(struct probe_info *pi)$/;"	f
pvclock_gtod_register_notifier	time/timekeeping.c	/^EXPORT_SYMBOL_GPL(pvclock_gtod_register_notifier);$/;"	v
pvclock_gtod_register_notifier	time/timekeeping.c	/^int pvclock_gtod_register_notifier(struct notifier_block *nb)$/;"	f
pvclock_gtod_unregister_notifier	time/timekeeping.c	/^EXPORT_SYMBOL_GPL(pvclock_gtod_unregister_notifier);$/;"	v
pvclock_gtod_unregister_notifier	time/timekeeping.c	/^int pvclock_gtod_unregister_notifier(struct notifier_block *nb)$/;"	f
pwd	audit.h	/^	struct path	    pwd;$/;"	m	struct:audit_context	typeref:struct:audit_context::path
pwq_activate_delayed_work	workqueue.c	/^static void pwq_activate_delayed_work(struct work_struct *work)$/;"	f	file:
pwq_activate_first_delayed	workqueue.c	/^static void pwq_activate_first_delayed(struct pool_workqueue *pwq)$/;"	f	file:
pwq_adjust_max_active	workqueue.c	/^static void pwq_adjust_max_active(struct pool_workqueue *pwq)$/;"	f	file:
pwq_cache	workqueue.c	/^static struct kmem_cache *pwq_cache;$/;"	v	typeref:struct:kmem_cache	file:
pwq_dec_nr_in_flight	workqueue.c	/^static void pwq_dec_nr_in_flight(struct pool_workqueue *pwq, int color)$/;"	f	file:
pwq_unbound_release_workfn	workqueue.c	/^static void pwq_unbound_release_workfn(struct work_struct *work)$/;"	f	file:
pwqs	workqueue.c	/^	struct list_head	pwqs;		\/* WR: all pwqs of this wq *\/$/;"	m	struct:workqueue_struct	typeref:struct:workqueue_struct::list_head	file:
pwqs_node	workqueue.c	/^	struct list_head	pwqs_node;	\/* WR: node on wq->pwqs *\/$/;"	m	struct:pool_workqueue	typeref:struct:pool_workqueue::list_head	file:
q	audit.h	/^	struct sk_buff_head q;$/;"	m	struct:audit_netlink_list	typeref:struct:audit_netlink_list::sk_buff_head
qbytes	audit.h	/^			unsigned long		qbytes;$/;"	m	struct:audit_context::__anon15::__anon17
qhimark	rcutree.c	/^static long qhimark = 10000;	\/* If this many pending, ignore blimit. *\/$/;"	v	file:
qlen	rcutree.h	/^	long		qlen;		\/* # of queued callbacks, incl lazy *\/$/;"	m	struct:rcu_data
qlen	rcutree.h	/^	long qlen;				\/* Total number of callbacks. *\/$/;"	m	struct:rcu_state
qlen_last_fqs_check	rcutree.h	/^	long		qlen_last_fqs_check;$/;"	m	struct:rcu_data
qlen_lazy	rcutree.h	/^	long		qlen_lazy;	\/* # of lazy queued callbacks *\/$/;"	m	struct:rcu_data
qlen_lazy	rcutree.h	/^	long qlen_lazy;				\/* Number of lazy callbacks. *\/$/;"	m	struct:rcu_state
qlowmark	rcutree.c	/^static long qlowmark = 100;	\/* Once only this many pending, use blimit. *\/$/;"	v	file:
qs_pending	rcutree.h	/^	bool		qs_pending;	\/* Core waits for quiesc state. *\/$/;"	m	struct:rcu_data
qsmask	rcutree.h	/^	unsigned long qsmask;	\/* CPUs or groups that need to switch in *\/$/;"	m	struct:rcu_node
qsmaskinit	rcutree.h	/^	unsigned long qsmaskinit;$/;"	m	struct:rcu_node
queue	sched/sched.h	/^	struct list_head queue[MAX_RT_PRIO];$/;"	m	struct:rt_prio_array	typeref:struct:rt_prio_array::list_head
queue_busy	swap/buffer/buffer_queue.c	/^static struct swap_subbuffer **queue_busy;$/;"	v	typeref:struct:swap_subbuffer	file:
queue_busy_last_element	swap/buffer/buffer_queue.c	/^static unsigned int queue_busy_last_element;$/;"	v	file:
queue_delayed_work_on	workqueue.c	/^EXPORT_SYMBOL(queue_delayed_work_on);$/;"	v
queue_delayed_work_on	workqueue.c	/^bool queue_delayed_work_on(int cpu, struct workqueue_struct *wq,$/;"	f
queue_kthread_work	kthread.c	/^EXPORT_SYMBOL_GPL(queue_kthread_work);$/;"	v
queue_kthread_work	kthread.c	/^bool queue_kthread_work(struct kthread_worker *worker,$/;"	f
queue_stop_cpus_work	stop_machine.c	/^static void queue_stop_cpus_work(const struct cpumask *cpumask,$/;"	f	file:
queue_subbuffer_count	swap/buffer/buffer_queue.c	/^static unsigned int queue_subbuffer_count;$/;"	v	file:
queue_subbuffer_size	swap/buffer/buffer_queue.c	/^static size_t queue_subbuffer_size;$/;"	v	file:
queue_sync	swap/buffer/buffer_queue.c	/^	struct sync_t queue_sync;$/;"	m	struct:queue_t	typeref:struct:queue_t::sync_t	file:
queue_t	swap/buffer/buffer_queue.c	/^struct queue_t {$/;"	s	file:
queue_up_suspend_work	power/autosleep.c	/^void queue_up_suspend_work(void)$/;"	f
queue_work_on	workqueue.c	/^EXPORT_SYMBOL(queue_work_on);$/;"	v
queue_work_on	workqueue.c	/^bool queue_work_on(int cpu, struct workqueue_struct *wq,$/;"	f
quiet	swap/us_manager/us_manager.c	/^static enum quiet_type quiet = QT_ON;$/;"	v	typeref:enum:quiet_type	file:
quiet_cmd_bc	Makefile	/^quiet_cmd_bc  = BC      $@$/;"	m
quiet_cmd_gen-kdb	debug/kdb/Makefile	/^quiet_cmd_gen-kdb = GENKDB  $@$/;"	m
quiet_cmd_hzfile	Makefile	/^quiet_cmd_hzfile = HZFILE  $@$/;"	m
quiet_cmd_touch	Makefile	/^quiet_cmd_touch = TOUCH   $@$/;"	m
quiet_type	swap/us_manager/us_manager.h	/^enum quiet_type {$/;"	g
quota	sched/core.c	/^	u64 period, quota;$/;"	m	struct:cfs_schedulable_data	file:
quota	sched/sched.h	/^	u64 quota, runtime;$/;"	m	struct:cfs_bandwidth
r0	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^	unsigned long r0;$/;"	m	struct:cb_data	file:
r_debug_offset	swap/preload/preload_debugfs.c	/^static unsigned long r_debug_offset = 0;$/;"	v	file:
r_next	rcutree_trace.c	/^static void *r_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
r_next	resource.c	/^static void *r_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
r_open	rcutree_trace.c	/^static int r_open(struct inode *inode, struct file *file,$/;"	f	file:
r_show	resource.c	/^static int r_show(struct seq_file *m, void *v)$/;"	f	file:
r_start	rcutree_trace.c	/^static void *r_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
r_state_addr	swap/us_manager/sspt/sspt_proc.h	/^	unsigned long r_state_addr;	\/**< address of r_state *\/$/;"	m	struct:sspt_proc
r_stop	rcutree_trace.c	/^static void r_stop(struct seq_file *m, void *v)$/;"	f	file:
raddr	swap/preload/preload_module.c	/^	unsigned long raddr;$/;"	m	struct:us_priv	file:
raise_softirq	softirq.c	/^void raise_softirq(unsigned int nr)$/;"	f
raise_softirq_irqoff	softirq.c	/^inline void raise_softirq_irqoff(unsigned int nr)$/;"	f
rand1	test_kprobes.c	/^static u32 rand1, preh_val, posth_val, jph_val;$/;"	v	file:
rational	swap/energy/rational_debugfs.h	/^struct rational {$/;"	s
raw_notifier_call_chain	notifier.c	/^EXPORT_SYMBOL_GPL(raw_notifier_call_chain);$/;"	v
raw_notifier_call_chain	notifier.c	/^int raw_notifier_call_chain(struct raw_notifier_head *nh,$/;"	f
raw_notifier_chain_register	notifier.c	/^EXPORT_SYMBOL_GPL(raw_notifier_chain_register);$/;"	v
raw_notifier_chain_register	notifier.c	/^int raw_notifier_chain_register(struct raw_notifier_head *nh,$/;"	f
raw_notifier_chain_unregister	notifier.c	/^EXPORT_SYMBOL_GPL(raw_notifier_chain_unregister);$/;"	v
raw_notifier_chain_unregister	notifier.c	/^int raw_notifier_chain_unregister(struct raw_notifier_head *nh,$/;"	f
raw_read_can_lock	spinlock.c	35;"	d	file:
raw_rq	sched/sched.h	545;"	d
raw_write_can_lock	spinlock.c	36;"	d	file:
rb_add_time_stamp	trace/ring_buffer.c	/^rb_add_time_stamp(struct ring_buffer_event *event, u64 delta)$/;"	f	file:
rb_advance_iter	trace/ring_buffer.c	/^static void rb_advance_iter(struct ring_buffer_iter *iter)$/;"	f	file:
rb_advance_reader	trace/ring_buffer.c	/^static void rb_advance_reader(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_alloc	events/ring_buffer.c	/^struct ring_buffer *rb_alloc(int nr_pages, long watermark, int cpu, int flags)$/;"	f
rb_allocate_cpu_buffer	trace/ring_buffer.c	/^rb_allocate_cpu_buffer(struct ring_buffer *buffer, int nr_pages, int cpu)$/;"	f	file:
rb_allocate_pages	trace/ring_buffer.c	/^static int rb_allocate_pages(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_buffer_peek	trace/ring_buffer.c	/^rb_buffer_peek(struct ring_buffer_per_cpu *cpu_buffer, u64 *ts,$/;"	f	file:
rb_calculate_event_length	trace/ring_buffer.c	/^static unsigned rb_calculate_event_length(unsigned length)$/;"	f	file:
rb_check_bpage	trace/ring_buffer.c	/^static int rb_check_bpage(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_check_list	trace/ring_buffer.c	/^static int rb_check_list(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_check_pages	trace/ring_buffer.c	/^static int rb_check_pages(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_commit	trace/ring_buffer.c	/^static void rb_commit(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_commit_index	trace/ring_buffer.c	/^rb_commit_index(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_cpu_notify	trace/ring_buffer.c	/^static int rb_cpu_notify(struct notifier_block *self,$/;"	f	file:
rb_decrement_entry	trace/ring_buffer.c	/^rb_decrement_entry(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_end_commit	trace/ring_buffer.c	/^static inline void rb_end_commit(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_event_data	trace/ring_buffer.c	/^rb_event_data(struct ring_buffer_event *event)$/;"	f	file:
rb_event_data_length	trace/ring_buffer.c	/^rb_event_data_length(struct ring_buffer_event *event)$/;"	f	file:
rb_event_discard	trace/ring_buffer.c	/^static inline void rb_event_discard(struct ring_buffer_event *event)$/;"	f	file:
rb_event_index	trace/ring_buffer.c	/^rb_event_index(struct ring_buffer_event *event)$/;"	f	file:
rb_event_is_commit	trace/ring_buffer.c	/^rb_event_is_commit(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_event_length	trace/ring_buffer.c	/^rb_event_length(struct ring_buffer_event *event)$/;"	f	file:
rb_event_set_padding	trace/ring_buffer.c	/^static void rb_event_set_padding(struct ring_buffer_event *event)$/;"	f	file:
rb_event_ts_length	trace/ring_buffer.c	/^rb_event_ts_length(struct ring_buffer_event *event)$/;"	f	file:
rb_free	events/ring_buffer.c	/^void rb_free(struct ring_buffer *rb)$/;"	f
rb_free_cpu_buffer	trace/ring_buffer.c	/^static void rb_free_cpu_buffer(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_free_rcu	events/core.c	/^static void rb_free_rcu(struct rcu_head *rcu_head)$/;"	f	file:
rb_free_work	events/ring_buffer.c	/^static void rb_free_work(struct work_struct *work)$/;"	f	file:
rb_get_reader_page	trace/ring_buffer.c	/^rb_get_reader_page(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_hammer_test	trace/ring_buffer.c	/^static __init int rb_hammer_test(void *arg)$/;"	f	file:
rb_handle_head_page	trace/ring_buffer.c	/^rb_handle_head_page(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_head_page_activate	trace/ring_buffer.c	/^static void rb_head_page_activate(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_head_page_deactivate	trace/ring_buffer.c	/^rb_head_page_deactivate(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_head_page_replace	trace/ring_buffer.c	/^static int rb_head_page_replace(struct buffer_page *old,$/;"	f	file:
rb_head_page_set	trace/ring_buffer.c	/^static int rb_head_page_set(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_head_page_set_head	trace/ring_buffer.c	/^static int rb_head_page_set_head(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_head_page_set_normal	trace/ring_buffer.c	/^static int rb_head_page_set_normal(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_head_page_set_update	trace/ring_buffer.c	/^static int rb_head_page_set_update(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_inc_iter	trace/ring_buffer.c	/^static void rb_inc_iter(struct ring_buffer_iter *iter)$/;"	f	file:
rb_inc_page	trace/ring_buffer.c	/^static inline void rb_inc_page(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_init_page	trace/ring_buffer.c	/^static void rb_init_page(struct buffer_data_page *bpage)$/;"	f	file:
rb_insert_pages	trace/ring_buffer.c	/^rb_insert_pages(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_ipi	trace/ring_buffer.c	/^static __init void rb_ipi(void *ignore)$/;"	f	file:
rb_irq_work	trace/ring_buffer.c	/^struct rb_irq_work {$/;"	s	file:
rb_is_head_page	trace/ring_buffer.c	/^rb_is_head_page(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_is_reader_page	trace/ring_buffer.c	/^static int rb_is_reader_page(struct buffer_page *page)$/;"	f	file:
rb_item	trace/ring_buffer.c	/^struct rb_item {$/;"	s	file:
rb_iter_head_event	trace/ring_buffer.c	/^rb_iter_head_event(struct ring_buffer_iter *iter)$/;"	f	file:
rb_iter_peek	trace/ring_buffer.c	/^rb_iter_peek(struct ring_buffer_iter *iter, u64 *ts)$/;"	f	file:
rb_iter_reset	trace/ring_buffer.c	/^static void rb_iter_reset(struct ring_buffer_iter *iter)$/;"	f	file:
rb_leftmost	sched/sched.h	/^	struct rb_node *rb_leftmost;$/;"	m	struct:cfs_rq	typeref:struct:cfs_rq::rb_node
rb_list_head	trace/ring_buffer.c	/^static struct list_head *rb_list_head(struct list_head *list)$/;"	f	file:
rb_list_head_clear	trace/ring_buffer.c	/^static void rb_list_head_clear(struct list_head *list)$/;"	f	file:
rb_lost_events	trace/ring_buffer.c	/^static int rb_lost_events(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_move_tail	trace/ring_buffer.c	/^rb_move_tail(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_node	events/uprobes.c	/^	struct rb_node		rb_node;	\/* node in the rb tree *\/$/;"	m	struct:uprobe	typeref:struct:uprobe::rb_node	file:
rb_null_event	trace/ring_buffer.c	/^static inline int rb_null_event(struct ring_buffer_event *event)$/;"	f	file:
rb_num_of_entries	trace/ring_buffer.c	/^rb_num_of_entries(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_ok_to_lock	trace/ring_buffer.c	/^static inline int rb_ok_to_lock(void)$/;"	f	file:
rb_page	trace/ring_buffer_benchmark.c	/^struct rb_page {$/;"	s	file:
rb_page_commit	trace/ring_buffer.c	/^static inline unsigned rb_page_commit(struct buffer_page *bpage)$/;"	f	file:
rb_page_entries	trace/ring_buffer.c	/^static inline unsigned long rb_page_entries(struct buffer_page *bpage)$/;"	f	file:
rb_page_size	trace/ring_buffer.c	/^static inline unsigned rb_page_size(struct buffer_page *bpage)$/;"	f	file:
rb_page_write	trace/ring_buffer.c	/^static inline unsigned long rb_page_write(struct buffer_page *bpage)$/;"	f	file:
rb_per_cpu_empty	trace/ring_buffer.c	/^static int rb_per_cpu_empty(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_reader_event	trace/ring_buffer.c	/^rb_reader_event(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_remove_pages	trace/ring_buffer.c	/^rb_remove_pages(struct ring_buffer_per_cpu *cpu_buffer, unsigned int nr_pages)$/;"	f	file:
rb_reserve_next_event	trace/ring_buffer.c	/^rb_reserve_next_event(struct ring_buffer *buffer,$/;"	f	file:
rb_reset_cpu	trace/ring_buffer.c	/^rb_reset_cpu(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_reset_reader_page	trace/ring_buffer.c	/^static void rb_reset_reader_page(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_reset_tail	trace/ring_buffer.c	/^rb_reset_tail(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_set_commit_to_write	trace/ring_buffer.c	/^rb_set_commit_to_write(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_set_head_page	trace/ring_buffer.c	/^rb_set_head_page(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_set_list_to_head	trace/ring_buffer.c	/^static void rb_set_list_to_head(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_simple_fops	trace/trace.c	/^static const struct file_operations rb_simple_fops = {$/;"	v	typeref:struct:file_operations	file:
rb_simple_read	trace/trace.c	/^rb_simple_read(struct file *filp, char __user *ubuf,$/;"	f	file:
rb_simple_write	trace/trace.c	/^rb_simple_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
rb_start_commit	trace/ring_buffer.c	/^static void rb_start_commit(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_tail_page_update	trace/ring_buffer.c	/^static int rb_tail_page_update(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_test	trace/ring_buffer.c	/^static __init int rb_test(void *arg)$/;"	f	file:
rb_test_data	trace/ring_buffer.c	/^struct rb_test_data {$/;"	s	file:
rb_time_stamp	trace/ring_buffer.c	/^static inline u64 rb_time_stamp(struct ring_buffer *buffer)$/;"	f	file:
rb_try_to_discard	trace/ring_buffer.c	/^rb_try_to_discard(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_update_event	trace/ring_buffer.c	/^rb_update_event(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_update_iter_read_stamp	trace/ring_buffer.c	/^rb_update_iter_read_stamp(struct ring_buffer_iter *iter,$/;"	f	file:
rb_update_pages	trace/ring_buffer.c	/^static void rb_update_pages(struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_update_read_stamp	trace/ring_buffer.c	/^rb_update_read_stamp(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_update_write_stamp	trace/ring_buffer.c	/^rb_update_write_stamp(struct ring_buffer_per_cpu *cpu_buffer,$/;"	f	file:
rb_wake_up_waiters	trace/ring_buffer.c	/^static void rb_wake_up_waiters(struct irq_work *work)$/;"	f	file:
rb_wakeups	trace/ring_buffer.c	/^rb_wakeups(struct ring_buffer *buffer, struct ring_buffer_per_cpu *cpu_buffer)$/;"	f	file:
rb_write_something	trace/ring_buffer.c	/^static __init int rb_write_something(struct rb_test_data *data, bool nested)$/;"	f	file:
rcb	rcutiny_plugin.h	/^	struct rcu_ctrlblk rcb;	\/* curtail: ->next ptr of last CB for GP. *\/$/;"	m	struct:rcu_preempt_ctrlblk	typeref:struct:rcu_preempt_ctrlblk::rcu_ctrlblk
rchan_percpu_buf_dispatcher	relay.c	/^struct rchan_percpu_buf_dispatcher {$/;"	s	file:
rcu	audit.h	/^	struct rcu_head		rcu;$/;"	m	struct:audit_entry	typeref:struct:audit_entry::rcu_head
rcu	rcutorture.c	/^	struct rcu_head rcu;$/;"	m	struct:rcu_boost_inflight	typeref:struct:rcu_boost_inflight::rcu_head	file:
rcu	sched/sched.h	/^	struct rcu_head rcu;$/;"	m	struct:root_domain	typeref:struct:root_domain::rcu_head
rcu	sched/sched.h	/^	struct rcu_head rcu;$/;"	m	struct:task_group	typeref:struct:task_group::rcu_head
rcu	trace/ftrace.c	/^	struct rcu_head		rcu;$/;"	m	struct:ftrace_hash	typeref:struct:ftrace_hash::rcu_head	file:
rcu	tracepoint.c	/^		struct rcu_head rcu;$/;"	m	union:tp_probes::__anon13	typeref:struct:tp_probes::__anon13::rcu_head	file:
rcu	workqueue.c	/^	struct rcu_head		rcu;$/;"	m	struct:pool_workqueue	typeref:struct:pool_workqueue::rcu_head	file:
rcu	workqueue.c	/^	struct rcu_head		rcu;$/;"	m	struct:worker_pool	typeref:struct:worker_pool::rcu_head	file:
rcu_accelerate_cbs	rcutree.c	/^static void rcu_accelerate_cbs(struct rcu_state *rsp, struct rcu_node *rnp,$/;"	f	file:
rcu_adopt_orphan_cbs	rcutree.c	/^static void rcu_adopt_orphan_cbs(struct rcu_state *rsp)$/;"	f	file:
rcu_advance_cbs	rcutree.c	/^static void rcu_advance_cbs(struct rcu_state *rsp, struct rcu_node *rnp,$/;"	f	file:
rcu_barrier	rcutree_plugin.h	/^EXPORT_SYMBOL_GPL(rcu_barrier);$/;"	v
rcu_barrier	rcutree_plugin.h	/^void rcu_barrier(void)$/;"	f
rcu_barrier_bh	rcutree.c	/^EXPORT_SYMBOL_GPL(rcu_barrier_bh);$/;"	v
rcu_barrier_bh	rcutree.c	/^void rcu_barrier_bh(void)$/;"	f
rcu_barrier_callback	rcutree.c	/^static void rcu_barrier_callback(struct rcu_head *rhp)$/;"	f	file:
rcu_barrier_func	rcutree.c	/^static void rcu_barrier_func(void *type)$/;"	f	file:
rcu_barrier_sched	rcutree.c	/^EXPORT_SYMBOL_GPL(rcu_barrier_sched);$/;"	v
rcu_barrier_sched	rcutree.c	/^void rcu_barrier_sched(void)$/;"	f
rcu_batch_dequeue	srcu.c	/^static inline struct rcu_head *rcu_batch_dequeue(struct rcu_batch *b)$/;"	f	file:
rcu_batch_empty	srcu.c	/^static inline bool rcu_batch_empty(struct rcu_batch *b)$/;"	f	file:
rcu_batch_init	srcu.c	/^static inline void rcu_batch_init(struct rcu_batch *b)$/;"	f	file:
rcu_batch_move	srcu.c	/^static inline void rcu_batch_move(struct rcu_batch *to, struct rcu_batch *from)$/;"	f	file:
rcu_batch_queue	srcu.c	/^static inline void rcu_batch_queue(struct rcu_batch *b, struct rcu_head *head)$/;"	f	file:
rcu_batches_completed	rcutree_plugin.h	/^EXPORT_SYMBOL_GPL(rcu_batches_completed);$/;"	v
rcu_batches_completed	rcutree_plugin.h	/^long rcu_batches_completed(void)$/;"	f
rcu_batches_completed_bh	rcutree.c	/^EXPORT_SYMBOL_GPL(rcu_batches_completed_bh);$/;"	v
rcu_batches_completed_bh	rcutree.c	/^long rcu_batches_completed_bh(void)$/;"	f
rcu_batches_completed_preempt	rcutree_plugin.h	/^EXPORT_SYMBOL_GPL(rcu_batches_completed_preempt);$/;"	v
rcu_batches_completed_preempt	rcutree_plugin.h	/^long rcu_batches_completed_preempt(void)$/;"	f
rcu_batches_completed_sched	rcutree.c	/^EXPORT_SYMBOL_GPL(rcu_batches_completed_sched);$/;"	v
rcu_batches_completed_sched	rcutree.c	/^long rcu_batches_completed_sched(void)$/;"	f
rcu_bh_ctrlblk	rcutiny_plugin.h	/^static struct rcu_ctrlblk rcu_bh_ctrlblk = {$/;"	v	typeref:struct:rcu_ctrlblk
rcu_bh_expedited_ops	rcutorture.c	/^static struct rcu_torture_ops rcu_bh_expedited_ops = {$/;"	v	typeref:struct:rcu_torture_ops	file:
rcu_bh_force_quiescent_state	rcutree.c	/^EXPORT_SYMBOL_GPL(rcu_bh_force_quiescent_state);$/;"	v
rcu_bh_force_quiescent_state	rcutree.c	/^void rcu_bh_force_quiescent_state(void)$/;"	f
rcu_bh_lock_key	rcupdate.c	/^static struct lock_class_key rcu_bh_lock_key;$/;"	v	typeref:struct:lock_class_key	file:
rcu_bh_lock_map	rcupdate.c	/^EXPORT_SYMBOL_GPL(rcu_bh_lock_map);$/;"	v
rcu_bh_lock_map	rcupdate.c	/^struct lockdep_map rcu_bh_lock_map =$/;"	v	typeref:struct:lockdep_map
rcu_bh_ops	rcutorture.c	/^static struct rcu_torture_ops rcu_bh_ops = {$/;"	v	typeref:struct:rcu_torture_ops	file:
rcu_bh_qs	rcutiny.c	/^void rcu_bh_qs(int cpu)$/;"	f
rcu_bh_qs	rcutree.c	/^void rcu_bh_qs(int cpu)$/;"	f
rcu_bh_state	rcutree.c	/^struct rcu_state rcu_bh_state = RCU_STATE_INITIALIZER(rcu_bh, 'b', call_rcu_bh);$/;"	v	typeref:struct:rcu_state
rcu_bh_sync_ops	rcutorture.c	/^static struct rcu_torture_ops rcu_bh_sync_ops = {$/;"	v	typeref:struct:rcu_torture_ops	file:
rcu_bh_torture_completed	rcutorture.c	/^static int rcu_bh_torture_completed(void)$/;"	f	file:
rcu_bh_torture_deferred_free	rcutorture.c	/^static void rcu_bh_torture_deferred_free(struct rcu_torture *p)$/;"	f	file:
rcu_blocking_is_gp	rcutree.c	/^static inline int rcu_blocking_is_gp(void)$/;"	f	file:
rcu_boost	rcutiny_plugin.h	/^static int rcu_boost(void)$/;"	f
rcu_boost	rcutree_plugin.h	/^static int rcu_boost(struct rcu_node *rnp)$/;"	f
rcu_boost_inflight	rcutorture.c	/^struct rcu_boost_inflight {$/;"	s	file:
rcu_boost_kthread	rcutree_plugin.h	/^static int rcu_boost_kthread(void *arg)$/;"	f
rcu_boost_kthread_setaffinity	rcutree_plugin.h	/^static void rcu_boost_kthread_setaffinity(struct rcu_node *rnp, int outgoingcpu)$/;"	f
rcu_boot_init_nocb_percpu_data	rcutree_plugin.h	/^static void __init rcu_boot_init_nocb_percpu_data(struct rcu_data *rdp)$/;"	f
rcu_boot_init_percpu_data	rcutree.c	/^rcu_boot_init_percpu_data(int cpu, struct rcu_state *rsp)$/;"	f	file:
rcu_bootup_announce	rcutree_plugin.h	/^static void __init rcu_bootup_announce(void)$/;"	f
rcu_bootup_announce_oddness	rcutree_plugin.h	/^static void __init rcu_bootup_announce_oddness(void)$/;"	f
rcu_can_boost	rcutorture.c	206;"	d	file:
rcu_can_boost	rcutorture.c	208;"	d	file:
rcu_cbs_completed	rcutree.c	/^static unsigned long rcu_cbs_completed(struct rcu_state *rsp,$/;"	f	file:
rcu_check_callbacks	rcutiny.c	/^void rcu_check_callbacks(int cpu, int user)$/;"	f
rcu_check_callbacks	rcutree.c	/^void rcu_check_callbacks(int cpu, int user)$/;"	f
rcu_check_quiescent_state	rcutree.c	/^rcu_check_quiescent_state(struct rcu_state *rsp, struct rcu_data *rdp)$/;"	f	file:
rcu_cleanup_after_idle	rcutree_plugin.h	/^static void rcu_cleanup_after_idle(int cpu)$/;"	f
rcu_cleanup_dead_cpu	rcutree.c	/^static void rcu_cleanup_dead_cpu(int cpu, struct rcu_state *rsp)$/;"	f	file:
rcu_cleanup_dying_cpu	rcutree.c	/^static void rcu_cleanup_dying_cpu(struct rcu_state *rsp)$/;"	f	file:
rcu_cpu_blocking_cur_gp	rcutiny_plugin.h	/^static int rcu_cpu_blocking_cur_gp(void)$/;"	f
rcu_cpu_has_callbacks	rcutree.c	/^static int rcu_cpu_has_callbacks(int cpu, bool *all_lazy)$/;"	f	file:
rcu_cpu_kthread	rcutree_plugin.h	/^static void rcu_cpu_kthread(unsigned int cpu)$/;"	f
rcu_cpu_kthread_park	rcutree_plugin.h	/^static void rcu_cpu_kthread_park(unsigned int cpu)$/;"	f
rcu_cpu_kthread_setup	rcutree_plugin.h	/^static void rcu_cpu_kthread_setup(unsigned int cpu)$/;"	f
rcu_cpu_kthread_should_run	rcutree_plugin.h	/^static int rcu_cpu_kthread_should_run(unsigned int cpu)$/;"	f
rcu_cpu_notify	rcutree.c	/^static int __cpuinit rcu_cpu_notify(struct notifier_block *self,$/;"	f	file:
rcu_cpu_stall_reset	rcutree.c	/^void rcu_cpu_stall_reset(void)$/;"	f
rcu_cpu_thread_spec	rcutree_plugin.h	/^static struct smp_hotplug_thread rcu_cpu_thread_spec = {$/;"	v	typeref:struct:smp_hotplug_thread
rcu_ctrlblk	rcutiny_plugin.h	/^struct rcu_ctrlblk {$/;"	s
rcu_data	rcutree.h	/^struct rcu_data {$/;"	s
rcu_dereference_check_sched_domain	sched/sched.h	549;"	d
rcu_do_batch	rcutree.c	/^static void rcu_do_batch(struct rcu_state *rsp, struct rcu_data *rdp)$/;"	f	file:
rcu_dump_cpu_stacks	rcutree.c	/^static void rcu_dump_cpu_stacks(struct rcu_state *rsp)$/;"	f	file:
rcu_dynticks	rcutree.h	/^struct rcu_dynticks {$/;"	s
rcu_dynticks_nesting	rcutiny.c	/^static long long rcu_dynticks_nesting = DYNTICK_TASK_EXIT_IDLE;$/;"	v	file:
rcu_eqs_enter	rcutree.c	/^static void rcu_eqs_enter(bool user)$/;"	f	file:
rcu_eqs_enter_common	rcutree.c	/^static void rcu_eqs_enter_common(struct rcu_dynticks *rdtp, long long oldval,$/;"	f	file:
rcu_eqs_exit	rcutree.c	/^static void rcu_eqs_exit(bool user)$/;"	f	file:
rcu_eqs_exit_common	rcutree.c	/^static void rcu_eqs_exit_common(struct rcu_dynticks *rdtp, long long oldval,$/;"	f	file:
rcu_expedited	ksysfs.c	/^KERNEL_ATTR_RW(rcu_expedited);$/;"	v
rcu_expedited	ksysfs.c	/^int rcu_expedited;$/;"	v
rcu_expedited_ops	rcutorture.c	/^static struct rcu_torture_ops rcu_expedited_ops = {$/;"	v	typeref:struct:rcu_torture_ops	file:
rcu_expedited_show	ksysfs.c	/^static ssize_t rcu_expedited_show(struct kobject *kobj,$/;"	f	file:
rcu_expedited_store	ksysfs.c	/^static ssize_t rcu_expedited_store(struct kobject *kobj,$/;"	f	file:
rcu_fanout_leaf	rcutree.c	/^static int rcu_fanout_leaf = CONFIG_RCU_FANOUT_LEAF;$/;"	v	file:
rcu_for_each_leaf_node	rcutree.h	224;"	d
rcu_for_each_node_breadth_first	rcutree.h	205;"	d
rcu_for_each_nonleaf_node_breadth_first	rcutree.h	214;"	d
rcu_force_quiescent_state	rcutree_plugin.h	/^EXPORT_SYMBOL_GPL(rcu_force_quiescent_state);$/;"	v
rcu_force_quiescent_state	rcutree_plugin.h	/^void rcu_force_quiescent_state(void)$/;"	f
rcu_fqs_class	rcutree.c	/^static struct lock_class_key rcu_fqs_class[RCU_NUM_LVLS];$/;"	v	typeref:struct:lock_class_key	file:
rcu_free_old_probes	tracepoint.c	/^static void rcu_free_old_probes(struct rcu_head *head)$/;"	f	file:
rcu_free_pool	workqueue.c	/^static void rcu_free_pool(struct rcu_head *rcu)$/;"	f	file:
rcu_free_pwq	workqueue.c	/^static void rcu_free_pwq(struct rcu_head *rcu)$/;"	f	file:
rcu_future_gp_cleanup	rcutree.c	/^static int rcu_future_gp_cleanup(struct rcu_state *rsp, struct rcu_node *rnp)$/;"	f	file:
rcu_get_root	rcutree.c	/^	__releases(rcu_get_root(rsp)->lock)$/;"	f
rcu_get_root	rcutree.c	/^static struct rcu_node *rcu_get_root(struct rcu_state *rsp)$/;"	f	file:
rcu_gp_cleanup	rcutree.c	/^static void rcu_gp_cleanup(struct rcu_state *rsp)$/;"	f	file:
rcu_gp_fqs	rcutree.c	/^int rcu_gp_fqs(struct rcu_state *rsp, int fqs_state_in)$/;"	f
rcu_gp_in_progress	rcutree.c	/^static int rcu_gp_in_progress(struct rcu_state *rsp)$/;"	f	file:
rcu_gp_init	rcutree.c	/^static int rcu_gp_init(struct rcu_state *rsp)$/;"	f	file:
rcu_gp_kthread	rcutree.c	/^static int __noreturn rcu_gp_kthread(void *arg)$/;"	f	file:
rcu_head	cgroup.c	/^	struct rcu_head rcu_head;$/;"	m	struct:css_id	typeref:struct:css_id::rcu_head	file:
rcu_head	events/callchain.c	/^	struct rcu_head			rcu_head;$/;"	m	struct:callchain_cpus_entries	typeref:struct:callchain_cpus_entries::rcu_head	file:
rcu_head	events/internal.h	/^	struct rcu_head			rcu_head;$/;"	m	struct:ring_buffer	typeref:struct:ring_buffer::rcu_head
rcu_idle_count_callbacks_posted	rcutree_plugin.h	/^static void rcu_idle_count_callbacks_posted(void)$/;"	f
rcu_idle_cpu	rcutorture.c	/^static int rcu_idle_cpu;	\/* Force all torture tasks off this CPU *\/$/;"	v	file:
rcu_idle_enter	rcutiny.c	/^EXPORT_SYMBOL_GPL(rcu_idle_enter);$/;"	v
rcu_idle_enter	rcutiny.c	/^void rcu_idle_enter(void)$/;"	f
rcu_idle_enter	rcutree.c	/^EXPORT_SYMBOL_GPL(rcu_idle_enter);$/;"	v
rcu_idle_enter	rcutree.c	/^void rcu_idle_enter(void)$/;"	f
rcu_idle_enter_common	rcutiny.c	/^static void rcu_idle_enter_common(long long newval)$/;"	f	file:
rcu_idle_exit	rcutiny.c	/^EXPORT_SYMBOL_GPL(rcu_idle_exit);$/;"	v
rcu_idle_exit	rcutiny.c	/^void rcu_idle_exit(void)$/;"	f
rcu_idle_exit	rcutree.c	/^EXPORT_SYMBOL_GPL(rcu_idle_exit);$/;"	v
rcu_idle_exit	rcutree.c	/^void rcu_idle_exit(void)$/;"	f
rcu_idle_exit_common	rcutiny.c	/^static void rcu_idle_exit_common(long long oldval)$/;"	f	file:
rcu_idle_gp_delay	rcutree_plugin.h	/^static int rcu_idle_gp_delay = RCU_IDLE_GP_DELAY;$/;"	v
rcu_idle_lazy_gp_delay	rcutree_plugin.h	/^static int rcu_idle_lazy_gp_delay = RCU_IDLE_LAZY_GP_DELAY;$/;"	v
rcu_implicit_dynticks_qs	rcutree.c	/^static int rcu_implicit_dynticks_qs(struct rcu_data *rdp)$/;"	f	file:
rcu_init	rcutree.c	/^void __init rcu_init(void)$/;"	f
rcu_init_geometry	rcutree.c	/^static void __init rcu_init_geometry(void)$/;"	f	file:
rcu_init_levelspread	rcutree.c	/^static void __init rcu_init_levelspread(struct rcu_state *rsp)$/;"	f	file:
rcu_init_one	rcutree.c	/^static void __init rcu_init_one(struct rcu_state *rsp,$/;"	f	file:
rcu_init_one_nocb	rcutree_plugin.h	/^static void rcu_init_one_nocb(struct rcu_node *rnp)$/;"	f
rcu_init_percpu_data	rcutree.c	/^rcu_init_percpu_data(int cpu, struct rcu_state *rsp, int preemptible)$/;"	f	file:
rcu_initiate_boost	rcutiny_plugin.h	/^static int rcu_initiate_boost(void)$/;"	f
rcu_initiate_boost	rcutree_plugin.h	/^static void rcu_initiate_boost(struct rcu_node *rnp, unsigned long flags)$/;"	f
rcu_initiate_boost_trace	rcutiny_plugin.h	/^static void rcu_initiate_boost_trace(void)$/;"	f
rcu_initiate_boost_trace	rcutree_plugin.h	/^static void rcu_initiate_boost_trace(struct rcu_node *rnp)$/;"	f
rcu_irq_enter	rcutiny.c	/^EXPORT_SYMBOL_GPL(rcu_irq_enter);$/;"	v
rcu_irq_enter	rcutiny.c	/^void rcu_irq_enter(void)$/;"	f
rcu_irq_enter	rcutree.c	/^void rcu_irq_enter(void)$/;"	f
rcu_irq_exit	rcutiny.c	/^EXPORT_SYMBOL_GPL(rcu_irq_exit);$/;"	v
rcu_irq_exit	rcutiny.c	/^void rcu_irq_exit(void)$/;"	f
rcu_irq_exit	rcutree.c	/^void rcu_irq_exit(void)$/;"	f
rcu_is_callbacks_kthread	rcutiny_plugin.h	/^static bool rcu_is_callbacks_kthread(void)$/;"	f
rcu_is_callbacks_kthread	rcutree_plugin.h	/^static bool rcu_is_callbacks_kthread(void)$/;"	f
rcu_is_cpu_idle	rcutiny.c	/^EXPORT_SYMBOL(rcu_is_cpu_idle);$/;"	v
rcu_is_cpu_idle	rcutiny.c	/^int rcu_is_cpu_idle(void)$/;"	f
rcu_is_cpu_idle	rcutree.c	/^EXPORT_SYMBOL(rcu_is_cpu_idle);$/;"	v
rcu_is_cpu_idle	rcutree.c	/^int rcu_is_cpu_idle(void)$/;"	f
rcu_is_cpu_rrupt_from_idle	rcutiny.c	/^static int rcu_is_cpu_rrupt_from_idle(void)$/;"	f	file:
rcu_is_cpu_rrupt_from_idle	rcutree.c	/^static int rcu_is_cpu_rrupt_from_idle(void)$/;"	f	file:
rcu_is_nocb_cpu	rcutree_plugin.h	/^bool rcu_is_nocb_cpu(int cpu)$/;"	f
rcu_jiffies_till_stall_check	rcupdate.c	/^int rcu_jiffies_till_stall_check(void)$/;"	f
rcu_kick_nohz_cpu	rcutree_plugin.h	/^static void rcu_kick_nohz_cpu(int cpu)$/;"	f
rcu_kthread	rcutiny_plugin.h	/^static int rcu_kthread(void *arg)$/;"	f
rcu_kthread_do_work	rcutree_plugin.h	/^static void rcu_kthread_do_work(void)$/;"	f
rcu_kthread_task	rcutiny_plugin.h	/^static struct task_struct *rcu_kthread_task;$/;"	v	typeref:struct:task_struct
rcu_lock_break	hung_task.c	/^static bool rcu_lock_break(struct task_struct *g, struct task_struct *t)$/;"	f	file:
rcu_lock_key	rcupdate.c	/^static struct lock_class_key rcu_lock_key;$/;"	v	typeref:struct:lock_class_key	file:
rcu_lock_map	rcupdate.c	/^EXPORT_SYMBOL_GPL(rcu_lock_map);$/;"	v
rcu_lock_map	rcupdate.c	/^struct lockdep_map rcu_lock_map =$/;"	v	typeref:struct:lockdep_map
rcu_lockdep_current_cpu_online	rcutree.c	/^EXPORT_SYMBOL_GPL(rcu_lockdep_current_cpu_online);$/;"	v
rcu_lockdep_current_cpu_online	rcutree.c	/^bool rcu_lockdep_current_cpu_online(void)$/;"	f
rcu_my_thread_group_empty	rcupdate.c	/^EXPORT_SYMBOL_GPL(rcu_my_thread_group_empty);$/;"	v
rcu_my_thread_group_empty	rcupdate.c	/^int rcu_my_thread_group_empty(void)$/;"	f
rcu_needs_cpu	rcutree_plugin.h	/^int rcu_needs_cpu(int cpu, unsigned long *delta_jiffies)$/;"	f
rcu_needs_cpu	rcutree_plugin.h	/^int rcu_needs_cpu(int cpu, unsigned long *dj)$/;"	f
rcu_next_node_entry	rcutiny_plugin.h	/^static struct list_head *rcu_next_node_entry(struct task_struct *t)$/;"	f
rcu_next_node_entry	rcutree_plugin.h	/^static struct list_head *rcu_next_node_entry(struct task_struct *t,$/;"	f
rcu_nmi_enter	rcutree.c	/^void rcu_nmi_enter(void)$/;"	f
rcu_nmi_exit	rcutree.c	/^void rcu_nmi_exit(void)$/;"	f
rcu_no_completed	rcutorture.c	/^static int rcu_no_completed(void)$/;"	f	file:
rcu_nocb_adopt_orphan_cbs	rcutree_plugin.h	/^static bool __maybe_unused rcu_nocb_adopt_orphan_cbs(struct rcu_state *rsp,$/;"	f
rcu_nocb_gp_cleanup	rcutree_plugin.h	/^static void rcu_nocb_gp_cleanup(struct rcu_state *rsp, struct rcu_node *rnp)$/;"	f
rcu_nocb_gp_set	rcutree_plugin.h	/^static void rcu_nocb_gp_set(struct rcu_node *rnp, int nrq)$/;"	f
rcu_nocb_kthread	rcutree_plugin.h	/^static int rcu_nocb_kthread(void *arg)$/;"	f
rcu_nocb_mask	rcutree_plugin.h	/^static cpumask_var_t rcu_nocb_mask; \/* CPUs to have callbacks offloaded. *\/$/;"	v
rcu_nocb_needs_gp	rcutree_plugin.h	/^static int rcu_nocb_needs_gp(struct rcu_state *rsp)$/;"	f
rcu_nocb_poll	rcutree_plugin.h	/^static bool __read_mostly rcu_nocb_poll;    \/* Offload kthread are to poll. *\/$/;"	v
rcu_nocb_q_lengths	rcutree.h	/^static inline void rcu_nocb_q_lengths(struct rcu_data *rdp, long *ql, long *qll)$/;"	f
rcu_nocb_setup	rcutree_plugin.h	/^static int __init rcu_nocb_setup(char *str)$/;"	f
rcu_nocb_wait_gp	rcutree_plugin.h	/^static void rcu_nocb_wait_gp(struct rcu_data *rdp)$/;"	f
rcu_node	rcutree.h	/^struct rcu_node {$/;"	s
rcu_node_boost_fops	rcutree_trace.c	/^static const struct file_operations rcu_node_boost_fops = {$/;"	v	typeref:struct:file_operations	file:
rcu_node_boost_open	rcutree_trace.c	/^static int rcu_node_boost_open(struct inode *inode, struct file *file)$/;"	f	file:
rcu_node_class	rcutree.c	/^static struct lock_class_key rcu_node_class[RCU_NUM_LVLS];$/;"	v	typeref:struct:lock_class_key	file:
rcu_note_context_switch	rcutree.c	/^EXPORT_SYMBOL_GPL(rcu_note_context_switch);$/;"	v
rcu_note_context_switch	rcutree.c	/^void rcu_note_context_switch(int cpu)$/;"	f
rcu_oom_callback	rcutree_plugin.h	/^static void rcu_oom_callback(struct rcu_head *rhp)$/;"	f
rcu_oom_nb	rcutree_plugin.h	/^static struct notifier_block rcu_oom_nb = {$/;"	v	typeref:struct:notifier_block
rcu_oom_notify	rcutree_plugin.h	/^static int rcu_oom_notify(struct notifier_block *self,$/;"	f
rcu_oom_notify_cpu	rcutree_plugin.h	/^static void rcu_oom_notify_cpu(void *unused)$/;"	f
rcu_ops	rcutorture.c	/^static struct rcu_torture_ops rcu_ops = {$/;"	v	typeref:struct:rcu_torture_ops	file:
rcu_panic	rcupdate.c	/^static int rcu_panic(struct notifier_block *this, unsigned long ev, void *ptr)$/;"	f	file:
rcu_panic_block	rcupdate.c	/^static struct notifier_block rcu_panic_block = {$/;"	v	typeref:struct:notifier_block	file:
rcu_pending	rcutree.c	/^static int rcu_pending(int cpu)$/;"	f	file:
rcu_pending_fops	rcutree_trace.c	/^static const struct file_operations rcu_pending_fops = {$/;"	v	typeref:struct:file_operations	file:
rcu_pending_op	rcutree_trace.c	/^static const struct seq_operations rcu_pending_op = {$/;"	v	typeref:struct:seq_operations	file:
rcu_pending_open	rcutree_trace.c	/^static int rcu_pending_open(struct inode *inode, struct file *file)$/;"	f	file:
rcu_preempt_blocked_readers_any	rcutiny_plugin.h	/^static int rcu_preempt_blocked_readers_any(void)$/;"	f
rcu_preempt_blocked_readers_cgp	rcutiny_plugin.h	/^static int rcu_preempt_blocked_readers_cgp(void)$/;"	f
rcu_preempt_blocked_readers_cgp	rcutree_plugin.h	/^static int rcu_preempt_blocked_readers_cgp(struct rcu_node *rnp)$/;"	f
rcu_preempt_boost_start_gp	rcutiny_plugin.h	/^static void rcu_preempt_boost_start_gp(void)$/;"	f
rcu_preempt_boost_start_gp	rcutree_plugin.h	/^static void rcu_preempt_boost_start_gp(struct rcu_node *rnp)$/;"	f
rcu_preempt_check_blocked_tasks	rcutree_plugin.h	/^static void rcu_preempt_check_blocked_tasks(struct rcu_node *rnp)$/;"	f
rcu_preempt_check_callbacks	rcutiny_plugin.h	/^static void rcu_preempt_check_callbacks(void)$/;"	f
rcu_preempt_check_callbacks	rcutree_plugin.h	/^static void rcu_preempt_check_callbacks(int cpu)$/;"	f
rcu_preempt_cpu_qs	rcutiny_plugin.h	/^static void rcu_preempt_cpu_qs(void)$/;"	f
rcu_preempt_ctrlblk	rcutiny_plugin.h	/^static struct rcu_preempt_ctrlblk rcu_preempt_ctrlblk = {$/;"	v	typeref:struct:rcu_preempt_ctrlblk
rcu_preempt_ctrlblk	rcutiny_plugin.h	/^struct rcu_preempt_ctrlblk {$/;"	s
rcu_preempt_do_callbacks	rcutree_plugin.h	/^static void rcu_preempt_do_callbacks(void)$/;"	f
rcu_preempt_gp_in_progress	rcutiny_plugin.h	/^static int rcu_preempt_gp_in_progress(void)$/;"	f
rcu_preempt_needs_another_gp	rcutiny_plugin.h	/^static int rcu_preempt_needs_another_gp(void)$/;"	f
rcu_preempt_needs_cpu	rcutiny_plugin.h	/^int rcu_preempt_needs_cpu(void)$/;"	f
rcu_preempt_note_context_switch	rcutiny_plugin.h	/^void rcu_preempt_note_context_switch(void)$/;"	f
rcu_preempt_note_context_switch	rcutree_plugin.h	/^static void rcu_preempt_note_context_switch(int cpu)$/;"	f
rcu_preempt_offline_tasks	rcutree_plugin.h	/^static int rcu_preempt_offline_tasks(struct rcu_state *rsp,$/;"	f
rcu_preempt_process_callbacks	rcutiny_plugin.h	/^static void rcu_preempt_process_callbacks(void)$/;"	f
rcu_preempt_qs	rcutree_plugin.h	/^static void rcu_preempt_qs(int cpu)$/;"	f
rcu_preempt_remove_callbacks	rcutiny_plugin.h	/^static void rcu_preempt_remove_callbacks(struct rcu_ctrlblk *rcp)$/;"	f
rcu_preempt_running_reader	rcutiny_plugin.h	/^static int rcu_preempt_running_reader(void)$/;"	f
rcu_preempt_start_gp	rcutiny_plugin.h	/^static void rcu_preempt_start_gp(void)$/;"	f
rcu_preempt_state	rcutree_plugin.h	/^struct rcu_state rcu_preempt_state =$/;"	v	typeref:struct:rcu_state
rcu_preempted_readers_exp	rcutiny_plugin.h	/^static int rcu_preempted_readers_exp(void)$/;"	f
rcu_preempted_readers_exp	rcutree_plugin.h	/^static int rcu_preempted_readers_exp(struct rcu_node *rnp)$/;"	f
rcu_prepare_cpu	rcutree.c	/^static void __cpuinit rcu_prepare_cpu(int cpu)$/;"	f	file:
rcu_prepare_for_idle	rcutree_plugin.h	/^static void rcu_prepare_for_idle(int cpu)$/;"	f
rcu_prepare_kthreads	rcutree_plugin.h	/^static void __cpuinit rcu_prepare_kthreads(int cpu)$/;"	f
rcu_print_detail_task_stall	rcutree_plugin.h	/^static void rcu_print_detail_task_stall(struct rcu_state *rsp)$/;"	f
rcu_print_detail_task_stall_rnp	rcutree_plugin.h	/^static void rcu_print_detail_task_stall_rnp(struct rcu_node *rnp)$/;"	f
rcu_print_task_stall	rcutree_plugin.h	/^static int rcu_print_task_stall(struct rcu_node *rnp)$/;"	f
rcu_print_task_stall_begin	rcutree_plugin.h	/^static void rcu_print_task_stall_begin(struct rcu_node *rnp)$/;"	f
rcu_print_task_stall_end	rcutree_plugin.h	/^static void rcu_print_task_stall_end(void)$/;"	f
rcu_process_callbacks	rcutiny.c	/^static void rcu_process_callbacks(struct softirq_action *unused)$/;"	f	file:
rcu_process_callbacks	rcutree.c	/^static void rcu_process_callbacks(struct softirq_action *unused)$/;"	f	file:
rcu_process_gp_end	rcutree.c	/^rcu_process_gp_end(struct rcu_state *rsp, struct rcu_data *rdp)$/;"	f	file:
rcu_qsctr_help	rcutiny.c	/^static int rcu_qsctr_help(struct rcu_ctrlblk *rcp)$/;"	f	file:
rcu_random	rcutorture.c	/^rcu_random(struct rcu_random_state *rrsp)$/;"	f	file:
rcu_random_state	rcutorture.c	/^struct rcu_random_state {$/;"	s	file:
rcu_read_delay	rcutorture.c	/^static void rcu_read_delay(struct rcu_random_state *rrsp)$/;"	f	file:
rcu_read_lock_bh_held	rcupdate.c	/^EXPORT_SYMBOL_GPL(rcu_read_lock_bh_held);$/;"	v
rcu_read_lock_bh_held	rcupdate.c	/^int rcu_read_lock_bh_held(void)$/;"	f
rcu_read_unlock_special	rcutiny_plugin.h	/^void rcu_read_unlock_special(struct task_struct *t)$/;"	f
rcu_read_unlock_special	rcutree_plugin.h	/^void rcu_read_unlock_special(struct task_struct *t)$/;"	f
rcu_register_oom_notifier	rcutree_plugin.h	/^early_initcall(rcu_register_oom_notifier);$/;"	v
rcu_register_oom_notifier	rcutree_plugin.h	/^static int __init rcu_register_oom_notifier(void)$/;"	f
rcu_report_exp_done	rcutiny_plugin.h	/^static void rcu_report_exp_done(void)$/;"	f
rcu_report_exp_rnp	rcutree_plugin.h	/^static void rcu_report_exp_rnp(struct rcu_state *rsp, struct rcu_node *rnp,$/;"	f
rcu_report_qs_rdp	rcutree.c	/^rcu_report_qs_rdp(int cpu, struct rcu_state *rsp, struct rcu_data *rdp)$/;"	f	file:
rcu_report_unblock_qs_rnp	rcutree_plugin.h	/^static void rcu_report_unblock_qs_rnp(struct rcu_node *rnp, unsigned long flags)$/;"	f
rcu_sched_ctrlblk	rcutiny_plugin.h	/^static struct rcu_ctrlblk rcu_sched_ctrlblk = {$/;"	v	typeref:struct:rcu_ctrlblk
rcu_sched_force_quiescent_state	rcutree.c	/^EXPORT_SYMBOL_GPL(rcu_sched_force_quiescent_state);$/;"	v
rcu_sched_force_quiescent_state	rcutree.c	/^void rcu_sched_force_quiescent_state(void)$/;"	f
rcu_sched_lock_key	rcupdate.c	/^static struct lock_class_key rcu_sched_lock_key;$/;"	v	typeref:struct:lock_class_key	file:
rcu_sched_lock_map	rcupdate.c	/^EXPORT_SYMBOL_GPL(rcu_sched_lock_map);$/;"	v
rcu_sched_lock_map	rcupdate.c	/^struct lockdep_map rcu_sched_lock_map =$/;"	v	typeref:struct:lockdep_map
rcu_sched_qs	rcutiny.c	/^void rcu_sched_qs(int cpu)$/;"	f
rcu_sched_qs	rcutree.c	/^void rcu_sched_qs(int cpu)$/;"	f
rcu_sched_state	rcutree.c	/^struct rcu_state rcu_sched_state =$/;"	v	typeref:struct:rcu_state
rcu_sched_torture_deferred_free	rcutorture.c	/^static void rcu_sched_torture_deferred_free(struct rcu_torture *p)$/;"	f	file:
rcu_scheduler_active	rcutiny_plugin.h	/^EXPORT_SYMBOL_GPL(rcu_scheduler_active);$/;"	v
rcu_scheduler_active	rcutree.c	/^EXPORT_SYMBOL_GPL(rcu_scheduler_active);$/;"	v
rcu_scheduler_really_started	rcutiny_plugin.h	/^early_initcall(rcu_scheduler_really_started);$/;"	v
rcu_scheduler_really_started	rcutiny_plugin.h	/^static int __init rcu_scheduler_really_started(void)$/;"	f
rcu_scheduler_really_started	rcutree_plugin.h	/^early_initcall(rcu_scheduler_really_started);$/;"	v
rcu_scheduler_really_started	rcutree_plugin.h	/^static int __init rcu_scheduler_really_started(void)$/;"	f
rcu_scheduler_starting	rcutiny_plugin.h	/^void __init rcu_scheduler_starting(void)$/;"	f
rcu_scheduler_starting	rcutree.c	/^void rcu_scheduler_starting(void)$/;"	f
rcu_send_cbs_to_orphanage	rcutree.c	/^rcu_send_cbs_to_orphanage(int cpu, struct rcu_state *rsp,$/;"	f	file:
rcu_spawn_gp_kthread	rcutree.c	/^early_initcall(rcu_spawn_gp_kthread);$/;"	v
rcu_spawn_gp_kthread	rcutree.c	/^static int __init rcu_spawn_gp_kthread(void)$/;"	f	file:
rcu_spawn_kthreads	rcutiny_plugin.h	/^early_initcall(rcu_spawn_kthreads);$/;"	v
rcu_spawn_kthreads	rcutiny_plugin.h	/^static int __init rcu_spawn_kthreads(void)$/;"	f
rcu_spawn_kthreads	rcutree_plugin.h	/^early_initcall(rcu_spawn_kthreads);$/;"	v
rcu_spawn_kthreads	rcutree_plugin.h	/^static int __init rcu_spawn_kthreads(void)$/;"	f
rcu_spawn_nocb_kthreads	rcutree_plugin.h	/^static void __init rcu_spawn_nocb_kthreads(struct rcu_state *rsp)$/;"	f
rcu_spawn_one_boost_kthread	rcutree_plugin.h	/^static int __cpuinit rcu_spawn_one_boost_kthread(struct rcu_state *rsp,$/;"	f
rcu_start_future_gp	rcutree.c	/^rcu_start_future_gp(struct rcu_node *rnp, struct rcu_data *rdp)$/;"	f	file:
rcu_start_gp	rcutree.c	/^rcu_start_gp(struct rcu_state *rsp)$/;"	f	file:
rcu_start_gp_advanced	rcutree.c	/^rcu_start_gp_advanced(struct rcu_state *rsp, struct rcu_node *rnp,$/;"	f	file:
rcu_start_gp_per_cpu	rcutree.c	/^rcu_start_gp_per_cpu(struct rcu_state *rsp, struct rcu_node *rnp, struct rcu_data *rdp)$/;"	f	file:
rcu_state	rcutree.c	/^static struct rcu_state *rcu_state;$/;"	v	typeref:struct:rcu_state	file:
rcu_state	rcutree.h	/^struct rcu_state {$/;"	s
rcu_state	rcutree_plugin.h	/^static struct rcu_state *rcu_state = &rcu_preempt_state;$/;"	v	typeref:struct:rcu_state
rcu_state	rcutree_plugin.h	/^static struct rcu_state *rcu_state = &rcu_sched_state;$/;"	v	typeref:struct:rcu_state
rcu_struct_flavors	rcutree.c	/^LIST_HEAD(rcu_struct_flavors);$/;"	v
rcu_stutter_wait	rcutorture.c	/^rcu_stutter_wait(char *title)$/;"	f	file:
rcu_sync_ops	rcutorture.c	/^static struct rcu_torture_ops rcu_sync_ops = {$/;"	v	typeref:struct:rcu_torture_ops	file:
rcu_sync_torture_deferred_free	rcutorture.c	/^static void rcu_sync_torture_deferred_free(struct rcu_torture *p)$/;"	f	file:
rcu_sync_torture_init	rcutorture.c	/^static void rcu_sync_torture_init(void)$/;"	f	file:
rcu_synchronize	rcupdate.c	/^struct rcu_synchronize {$/;"	s	file:
rcu_synchronize	srcu.c	/^struct rcu_synchronize {$/;"	s	file:
rcu_torture	rcutorture.c	/^struct rcu_torture {$/;"	s	file:
rcu_torture_alloc	rcutorture.c	/^rcu_torture_alloc(void)$/;"	f	file:
rcu_torture_barrier	rcutorture.c	/^static int rcu_torture_barrier(void *arg)$/;"	f	file:
rcu_torture_barrier_cbf	rcutorture.c	/^void rcu_torture_barrier_cbf(struct rcu_head *rcu)$/;"	f
rcu_torture_barrier_cbs	rcutorture.c	/^static int rcu_torture_barrier_cbs(void *arg)$/;"	f	file:
rcu_torture_barrier_cleanup	rcutorture.c	/^static void rcu_torture_barrier_cleanup(void)$/;"	f	file:
rcu_torture_barrier_init	rcutorture.c	/^static int rcu_torture_barrier_init(void)$/;"	f	file:
rcu_torture_boost	rcutorture.c	/^static int rcu_torture_boost(void *arg)$/;"	f	file:
rcu_torture_boost_cb	rcutorture.c	/^static void rcu_torture_boost_cb(struct rcu_head *head)$/;"	f	file:
rcu_torture_cb	rcutorture.c	/^rcu_torture_cb(struct rcu_head *p)$/;"	f	file:
rcu_torture_cleanup	rcutorture.c	/^module_exit(rcu_torture_cleanup);$/;"	v
rcu_torture_cleanup	rcutorture.c	/^rcu_torture_cleanup(void)$/;"	f	file:
rcu_torture_completed	rcutorture.c	/^static int rcu_torture_completed(void)$/;"	f	file:
rcu_torture_current	rcutorture.c	/^static struct rcu_torture __rcu *rcu_torture_current;$/;"	v	typeref:struct:__rcu	file:
rcu_torture_current_version	rcutorture.c	/^static unsigned long rcu_torture_current_version;$/;"	v	file:
rcu_torture_deferred_free	rcutorture.c	/^static void rcu_torture_deferred_free(struct rcu_torture *p)$/;"	f	file:
rcu_torture_fakewriter	rcutorture.c	/^rcu_torture_fakewriter(void *arg)$/;"	f	file:
rcu_torture_fqs	rcutorture.c	/^rcu_torture_fqs(void *arg)$/;"	f	file:
rcu_torture_free	rcutorture.c	/^rcu_torture_free(struct rcu_torture *p)$/;"	f	file:
rcu_torture_init	rcutorture.c	/^module_init(rcu_torture_init);$/;"	v
rcu_torture_init	rcutorture.c	/^rcu_torture_init(void)$/;"	f	file:
rcu_torture_onoff	rcutorture.c	/^rcu_torture_onoff(void *arg)$/;"	f	file:
rcu_torture_onoff_cleanup	rcutorture.c	/^static void rcu_torture_onoff_cleanup(void)$/;"	f	file:
rcu_torture_onoff_init	rcutorture.c	/^rcu_torture_onoff_init(void)$/;"	f	file:
rcu_torture_ops	rcutorture.c	/^struct rcu_torture_ops {$/;"	s	file:
rcu_torture_print_module_parms	rcutorture.c	/^rcu_torture_print_module_parms(struct rcu_torture_ops *cur_ops, char *tag)$/;"	f	file:
rcu_torture_printk	rcutorture.c	/^rcu_torture_printk(char *page)$/;"	f	file:
rcu_torture_reader	rcutorture.c	/^rcu_torture_reader(void *arg)$/;"	f	file:
rcu_torture_removed	rcutorture.c	/^static struct list_head rcu_torture_removed;$/;"	v	typeref:struct:list_head	file:
rcu_torture_shuffle	rcutorture.c	/^rcu_torture_shuffle(void *arg)$/;"	f	file:
rcu_torture_shuffle_tasks	rcutorture.c	/^static void rcu_torture_shuffle_tasks(void)$/;"	f	file:
rcu_torture_shutdown	rcutorture.c	/^rcu_torture_shutdown(void *arg)$/;"	f	file:
rcu_torture_stall	rcutorture.c	/^static int __cpuinit rcu_torture_stall(void *args)$/;"	f	file:
rcu_torture_stall_cleanup	rcutorture.c	/^static void rcu_torture_stall_cleanup(void)$/;"	f	file:
rcu_torture_stall_init	rcutorture.c	/^static int __init rcu_torture_stall_init(void)$/;"	f	file:
rcu_torture_stats	rcutorture.c	/^rcu_torture_stats(void *arg)$/;"	f	file:
rcu_torture_stats_print	rcutorture.c	/^rcu_torture_stats_print(void)$/;"	f	file:
rcu_torture_stutter	rcutorture.c	/^rcu_torture_stutter(void *arg)$/;"	f	file:
rcu_torture_timer	rcutorture.c	/^static void rcu_torture_timer(unsigned long unused)$/;"	f	file:
rcu_torture_wcount	rcutorture.c	/^static atomic_t rcu_torture_wcount[RCU_TORTURE_PIPE_LEN + 1];$/;"	v	file:
rcu_torture_writer	rcutorture.c	/^rcu_torture_writer(void *arg)$/;"	f	file:
rcu_tortures	rcutorture.c	/^static struct rcu_torture rcu_tortures[10 * RCU_TORTURE_PIPE_LEN];$/;"	v	typeref:struct:rcu_torture	file:
rcu_trace_clock_local	rcutorture.c	/^static u64 notrace rcu_trace_clock_local(void)$/;"	f	file:
rcu_trace_sub_qlen	rcutiny_plugin.h	/^static void rcu_trace_sub_qlen(struct rcu_ctrlblk *rcp, int n)$/;"	f
rcu_try_advance_all_cbs	rcutree_plugin.h	/^static bool rcu_try_advance_all_cbs(void)$/;"	f
rcu_user_enter	rcutree.c	/^void rcu_user_enter(void)$/;"	f
rcu_user_enter_after_irq	rcutree.c	/^void rcu_user_enter_after_irq(void)$/;"	f
rcu_user_exit	rcutree.c	/^void rcu_user_exit(void)$/;"	f
rcu_user_exit_after_irq	rcutree.c	/^void rcu_user_exit_after_irq(void)$/;"	f
rcu_wait	rcutree.h	353;"	d
rcu_wake_cond	rcutree_plugin.h	/^static void rcu_wake_cond(struct task_struct *t, int status)$/;"	f
rcubarrier_fops	rcutree_trace.c	/^static const struct file_operations rcubarrier_fops = {$/;"	v	typeref:struct:file_operations	file:
rcubarrier_open	rcutree_trace.c	/^static int rcubarrier_open(struct inode *inode, struct file *file)$/;"	f	file:
rcucblist	rcutiny_plugin.h	/^	struct rcu_head *rcucblist;	\/* List of pending callbacks (CBs). *\/$/;"	m	struct:rcu_ctrlblk	typeref:struct:rcu_ctrlblk::rcu_head
rcudata_fops	rcutree_trace.c	/^static const struct file_operations rcudata_fops = {$/;"	v	typeref:struct:file_operations	file:
rcudata_open	rcutree_trace.c	/^static int rcudata_open(struct inode *inode, struct file *file)$/;"	f	file:
rcudate_op	rcutree_trace.c	/^static const struct seq_operations rcudate_op = {$/;"	v	typeref:struct:seq_operations	file:
rcudir	rcutiny_plugin.h	/^static struct dentry *rcudir;$/;"	v	typeref:struct:dentry
rcudir	rcutree_trace.c	/^static struct dentry *rcudir;$/;"	v	typeref:struct:dentry	file:
rcuexp_fops	rcutree_trace.c	/^static const struct file_operations rcuexp_fops = {$/;"	v	typeref:struct:file_operations	file:
rcuexp_open	rcutree_trace.c	/^static int rcuexp_open(struct inode *inode, struct file *file)$/;"	f	file:
rcugp_fops	rcutree_trace.c	/^static const struct file_operations rcugp_fops = {$/;"	v	typeref:struct:file_operations	file:
rcugp_open	rcutree_trace.c	/^static int rcugp_open(struct inode *inode, struct file *file)$/;"	f	file:
rcuhead_debug_descr	rcupdate.c	/^EXPORT_SYMBOL_GPL(rcuhead_debug_descr);$/;"	v
rcuhead_debug_descr	rcupdate.c	/^struct debug_obj_descr rcuhead_debug_descr = {$/;"	v	typeref:struct:debug_obj_descr
rcuhead_fixup_activate	rcupdate.c	/^static int rcuhead_fixup_activate(void *addr, enum debug_obj_state state)$/;"	f	file:
rcuhead_fixup_free	rcupdate.c	/^static int rcuhead_fixup_free(void *addr, enum debug_obj_state state)$/;"	f	file:
rcuhead_fixup_init	rcupdate.c	/^static int rcuhead_fixup_init(void *addr, enum debug_obj_state state)$/;"	f	file:
rcuhier_fops	rcutree_trace.c	/^static const struct file_operations rcuhier_fops = {$/;"	v	typeref:struct:file_operations	file:
rcuhier_open	rcutree_trace.c	/^static int rcuhier_open(struct inode *inode, struct file *file)$/;"	f	file:
rcutiny_trace_cleanup	rcutiny_plugin.h	/^module_exit(rcutiny_trace_cleanup);$/;"	v
rcutiny_trace_cleanup	rcutiny_plugin.h	/^static void __exit rcutiny_trace_cleanup(void)$/;"	f
rcutiny_trace_init	rcutiny_plugin.h	/^module_init(rcutiny_trace_init);$/;"	v
rcutiny_trace_init	rcutiny_plugin.h	/^static int __init rcutiny_trace_init(void)$/;"	f
rcutorture_booster_cleanup	rcutorture.c	/^static void rcutorture_booster_cleanup(int cpu)$/;"	f	file:
rcutorture_booster_init	rcutorture.c	/^static int rcutorture_booster_init(int cpu)$/;"	f	file:
rcutorture_cpu_nb	rcutorture.c	/^static struct notifier_block rcutorture_cpu_nb = {$/;"	v	typeref:struct:notifier_block	file:
rcutorture_cpu_notify	rcutorture.c	/^static int rcutorture_cpu_notify(struct notifier_block *self,$/;"	f	file:
rcutorture_fops	rcutree_trace.c	/^static const struct file_operations rcutorture_fops = {$/;"	v	typeref:struct:file_operations	file:
rcutorture_open	rcutree_trace.c	/^static int rcutorture_open(struct inode *inode, struct file *file)$/;"	f	file:
rcutorture_record_progress	rcutree.c	/^EXPORT_SYMBOL_GPL(rcutorture_record_progress);$/;"	v
rcutorture_record_progress	rcutree.c	/^void rcutorture_record_progress(unsigned long vernum)$/;"	f
rcutorture_record_test_transition	rcutree.c	/^EXPORT_SYMBOL_GPL(rcutorture_record_test_transition);$/;"	v
rcutorture_record_test_transition	rcutree.c	/^void rcutorture_record_test_transition(void)$/;"	f
rcutorture_runnable	rcutorture.c	/^int rcutorture_runnable = RCUTORTURE_RUNNABLE_INIT;$/;"	v
rcutorture_shutdown_absorb	rcutorture.c	/^static void rcutorture_shutdown_absorb(char *title)$/;"	f	file:
rcutorture_shutdown_nb	rcutorture.c	/^static struct notifier_block rcutorture_shutdown_nb = {$/;"	v	typeref:struct:notifier_block	file:
rcutorture_shutdown_notify	rcutorture.c	/^rcutorture_shutdown_notify(struct notifier_block *unused1,$/;"	f	file:
rcutorture_testseq	rcutree.c	/^unsigned long rcutorture_testseq;$/;"	v
rcutorture_trace_dump	rcutorture.c	/^void rcutorture_trace_dump(void)$/;"	f
rcutorture_vernum	rcutree.c	/^unsigned long rcutorture_vernum;$/;"	v
rcutree_trace_cleanup	rcutree_trace.c	/^module_exit(rcutree_trace_cleanup);$/;"	v
rcutree_trace_cleanup	rcutree_trace.c	/^static void __exit rcutree_trace_cleanup(void)$/;"	f	file:
rcutree_trace_init	rcutree_trace.c	/^module_init(rcutree_trace_init);$/;"	v
rcutree_trace_init	rcutree_trace.c	/^static int __init rcutree_trace_init(void)$/;"	f	file:
rd	sched/core.c	/^	struct root_domain	*rd;$/;"	m	struct:s_data	typeref:struct:s_data::root_domain	file:
rd	sched/sched.h	/^	struct root_domain *rd;$/;"	m	struct:rq	typeref:struct:rq::root_domain
rda	rcutree.h	/^	struct rcu_data __percpu *rda;		\/* pointer of percu rcu_data. *\/$/;"	m	struct:rcu_state	typeref:struct:rcu_state::__percpu
rdev	audit.h	/^	dev_t			rdev;$/;"	m	struct:audit_names
read	trace/ring_buffer.c	/^	unsigned	 read;		\/* index for next read *\/$/;"	m	struct:buffer_page	file:
read	trace/ring_buffer.c	/^	unsigned long			read;$/;"	m	struct:ring_buffer_per_cpu	file:
read	trace/ring_buffer_benchmark.c	/^static unsigned long read;$/;"	v	file:
read	trace/trace.c	/^	unsigned int		read;$/;"	m	struct:ftrace_buffer_info	file:
read	trace/trace.h	/^	ssize_t			(*read)(struct trace_iterator *iter,$/;"	m	struct:tracer
read_af	swap/writer/debugfs_writer.c	/^static ssize_t read_af(struct file *file, char __user *user_buf,$/;"	f	file:
read_app_info	swap/webprobe/webprobe_debugfs.c	/^static ssize_t read_app_info(struct file *file, char __user *userbuf,$/;"	f	file:
read_boot_clock	time/timekeeping.c	/^void __attribute__((weak)) read_boot_clock(struct timespec *ts)$/;"	f
read_buf	swap/us_manager/debugfs_us_manager.c	/^struct read_buf {$/;"	s	file:
read_buf	swap/writer/debugfs_writer.c	/^struct read_buf {$/;"	s	file:
read_bytes	trace/ring_buffer.c	/^	unsigned long			read_bytes;$/;"	m	struct:ring_buffer_per_cpu	file:
read_cmd	swap/nsp/nsp_debugfs.c	/^static ssize_t read_cmd(struct file *file, char __user *user_buf,$/;"	f	file:
read_cred_subscribers	cred.c	/^static inline int read_cred_subscribers(const struct cred *cred)$/;"	f	file:
read_data_current	swap/kprobe/swap_kprobes_deps.c	/^static void read_data_current(unsigned long addr, void *buf, int len)$/;"	f	file:
read_delay	rcutorture.c	/^	void (*read_delay)(struct rcu_random_state *rrsp);$/;"	m	struct:rcu_torture_ops	file:
read_done	trace/ring_buffer_benchmark.c	/^static struct completion read_done;$/;"	v	typeref:struct:completion	file:
read_enable	swap/master/swap_debugfs.c	/^static ssize_t read_enable(struct file *file, char __user *user_buf,$/;"	f	file:
read_enabled	swap/nsp/nsp_debugfs.c	/^static ssize_t read_enabled(struct file *file, char \/*__user*\/ *user_buf,$/;"	f	file:
read_enabled	swap/webprobe/webprobe_debugfs.c	/^static ssize_t read_enabled(struct file *file, char __user *user_buf,$/;"	f	file:
read_enabled	swap/wsp/wsp_debugfs.c	/^static ssize_t read_enabled(struct file *file, char __user *user_buf,$/;"	f	file:
read_enabled_file_bool	kprobes.c	/^static ssize_t read_enabled_file_bool(struct file *file,$/;"	f	file:
read_event	trace/ring_buffer_benchmark.c	/^static enum event_status read_event(int cpu)$/;"	f	file:
read_events	trace/ring_buffer_benchmark.c	/^static int read_events;$/;"	v	file:
read_filter	swap/writer/debugfs_writer.c	/^static ssize_t read_filter(struct file *file, char __user *user_buf,$/;"	f	file:
read_page	trace/ring_buffer_benchmark.c	/^static enum event_status read_page(int cpu)$/;"	f	file:
read_persistent_clock	time/timekeeping.c	/^void __attribute__((weak)) read_persistent_clock(struct timespec *ts)$/;"	f
read_proc_vm_atomic	swap/kprobe/swap_kprobes_deps.h	105;"	d
read_profile	profile.c	/^read_profile(struct file *file, char __user *buf, size_t count, loff_t *ppos)$/;"	f	file:
read_queue	swap/buffer/buffer_queue.c	/^struct queue_t read_queue = {$/;"	v	typeref:struct:queue_t
read_stamp	trace/ring_buffer.c	/^	u64				read_stamp;$/;"	m	struct:ring_buffer_iter	file:
read_stamp	trace/ring_buffer.c	/^	u64				read_stamp;$/;"	m	struct:ring_buffer_per_cpu	file:
read_start	trace/ring_buffer_benchmark.c	/^static struct completion read_start;$/;"	v	typeref:struct:completion	file:
read_tasks	swap/us_manager/debugfs_us_manager.c	/^static ssize_t read_tasks(struct file *file, char __user *user_buf,$/;"	f	file:
read_val	swap/energy/lcd/lcd_base.c	/^int read_val(const char *path)$/;"	f
reader_finish	trace/ring_buffer_benchmark.c	/^static int reader_finish;$/;"	v	file:
reader_lock	trace/ring_buffer.c	/^	raw_spinlock_t			reader_lock;	\/* serialize readers *\/$/;"	m	struct:ring_buffer_per_cpu	file:
reader_lock_key	trace/ring_buffer.c	/^	struct lock_class_key		*reader_lock_key;$/;"	m	struct:ring_buffer	typeref:struct:ring_buffer::lock_class_key	file:
reader_page	trace/ring_buffer.c	/^	struct buffer_page		*reader_page;$/;"	m	struct:ring_buffer_per_cpu	typeref:struct:ring_buffer_per_cpu::buffer_page	file:
reader_tasks	rcutorture.c	/^static struct task_struct **reader_tasks;$/;"	v	typeref:struct:task_struct	file:
readlock	rcutorture.c	/^	int (*readlock)(void);$/;"	m	struct:rcu_torture_ops	file:
readme_msg	trace/trace.c	/^static const char readme_msg[] =$/;"	v	file:
readunlock	rcutorture.c	/^	void (*readunlock)(int idx);$/;"	m	struct:rcu_torture_ops	file:
ready	power/swap.c	/^	atomic_t ready;                           \/* ready to start flag *\/$/;"	m	struct:cmp_data	file:
ready	power/swap.c	/^	atomic_t ready;                           \/* ready to start flag *\/$/;"	m	struct:crc_data	file:
ready	power/swap.c	/^	atomic_t ready;                           \/* ready to start flag *\/$/;"	m	struct:dec_data	file:
ready	power/user.c	/^	char ready;$/;"	m	struct:snapshot_data	file:
real_end	trace/ring_buffer.c	/^	unsigned long	 real_end;	\/* real end of data *\/$/;"	m	struct:buffer_page	file:
reallocate_resource	resource.c	/^int reallocate_resource(struct resource *root, struct resource *old,$/;"	f
realtime	time/time_history.c	/^	struct timespec realtime;$/;"	m	struct:time_log_entry	typeref:struct:time_log_entry::timespec	file:
rear	lockdep.c	/^	unsigned int  front, rear;$/;"	m	struct:circular_queue	file:
rebalance_domains	sched/fair.c	/^static void rebalance_domains(int cpu, enum cpu_idle_type idle)$/;"	f	file:
rebind_subsystems	cgroup.c	/^static int rebind_subsystems(struct cgroupfs_root *root,$/;"	f	file:
rebind_workers	workqueue.c	/^static void rebind_workers(struct worker_pool *pool)$/;"	f	file:
reboot_notifier_list	notifier.c	/^BLOCKING_NOTIFIER_HEAD(reboot_notifier_list);$/;"	v
reboot_pid_ns	pid_namespace.c	/^int reboot_pid_ns(struct pid_namespace *pid_ns, int cmd)$/;"	f
rebuild_sched_domains	cpuset.c	/^void rebuild_sched_domains(void)$/;"	f
rebuild_sched_domains_locked	cpuset.c	/^static void rebuild_sched_domains_locked(void)$/;"	f	file:
rec	trace/trace_events_filter.c	/^	struct ftrace_raw_ftrace_test_filter rec;$/;"	m	struct:test_filter_data_t	typeref:struct:test_filter_data_t::ftrace_raw_ftrace_test_filter	file:
rec	trace/trace_events_filter.c	/^	void *rec;$/;"	m	struct:filter_match_preds_data	file:
recalc_sigpending	signal.c	/^EXPORT_SYMBOL(recalc_sigpending);$/;"	v
recalc_sigpending	signal.c	/^void recalc_sigpending(void)$/;"	f
recalc_sigpending_and_wake	signal.c	/^void recalc_sigpending_and_wake(struct task_struct *t)$/;"	f
recalc_sigpending_tsk	signal.c	/^static int recalc_sigpending_tsk(struct task_struct *t)$/;"	f	file:
record	gcov/gcc_3_4.c	/^	int record;$/;"	m	struct:gcov_iterator	file:
record_disabled	trace/ring_buffer.c	/^	atomic_t			record_disabled;$/;"	m	struct:ring_buffer	file:
record_disabled	trace/ring_buffer.c	/^	atomic_t			record_disabled;$/;"	m	struct:ring_buffer_per_cpu	file:
record_gp_stall_check_time	rcutree.c	/^static void record_gp_stall_check_time(struct rcu_state *rsp)$/;"	f	file:
records	trace/ftrace.c	/^	struct dyn_ftrace	*records;$/;"	m	struct:ftrace_page	typeref:struct:ftrace_page::dyn_ftrace	file:
records	trace/ftrace.c	/^	struct ftrace_profile		records[];$/;"	m	struct:ftrace_profile_page	typeref:struct:ftrace_profile_page::ftrace_profile	file:
recursion	events/core.c	/^	int				recursion[PERF_NR_CONTEXTS];$/;"	m	struct:swevent_htable	file:
recycle_rp_inst	kprobes.c	/^void __kprobes recycle_rp_inst(struct kretprobe_instance *ri,$/;"	f
recycle_rp_inst	swap/kprobe/swap_kprobes.c	/^static void recycle_rp_inst(struct kretprobe_instance *ri)$/;"	f	file:
recycle_urp_inst	swap/uprobe/swap_uprobes.c	/^static void recycle_urp_inst(struct uretprobe_instance *ri)$/;"	f	file:
redraw	swap/wsp/wsp.c	/^static struct probe_info_new redraw = MAKE_URPROBE(redraw_eh, redraw_rh, 0);$/;"	v	typeref:struct:probe_info_new	file:
redraw_eh	swap/wsp/wsp.c	/^static int redraw_eh(struct uretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
redraw_rh	swap/wsp/wsp.c	/^static int redraw_rh(struct uretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
redundant_hardirqs_off	lockdep_internals.h	/^	int	redundant_hardirqs_off;$/;"	m	struct:lockdep_stats
redundant_hardirqs_on	lockdep_internals.h	/^	int	redundant_hardirqs_on;$/;"	m	struct:lockdep_stats
redundant_softirqs_off	lockdep_internals.h	/^	int	redundant_softirqs_off;$/;"	m	struct:lockdep_stats
redundant_softirqs_on	lockdep_internals.h	/^	int	redundant_softirqs_on;$/;"	m	struct:lockdep_stats
ref	events/uprobes.c	/^	atomic_t		ref;$/;"	m	struct:uprobe	file:
ref	sched/sched.h	/^	atomic_t ref;$/;"	m	struct:sched_group
ref	sched/sched.h	/^	atomic_t ref;$/;"	m	struct:sched_group_power
ref	trace/trace.c	/^	int			ref;$/;"	m	struct:buffer_ref	file:
ref	trace/trace.h	/^	int			ref;$/;"	m	struct:trace_array
ref	trace/trace_events.c	/^	int				ref;$/;"	m	struct:event_probe_data	file:
ref_count	trace/trace.h	/^	int				ref_count;$/;"	m	struct:ftrace_subsystem_dir
ref_count	trace/trace.h	/^	int			ref_count;$/;"	m	struct:event_subsystem
ref_module	module.c	/^EXPORT_SYMBOL_GPL(ref_module);$/;"	v
ref_module	module.c	/^int ref_module(struct module *a, struct module *b)$/;"	f
refcnt	workqueue.c	/^	int			refcnt;		\/* L: reference count *\/$/;"	m	struct:pool_workqueue	file:
refcnt	workqueue.c	/^	int			refcnt;		\/* PL: refcnt for unbound pools *\/$/;"	m	struct:worker_pool	file:
refcount	cpu.c	/^	int refcount;$/;"	m	struct:__anon70	file:
refcount	events/internal.h	/^	atomic_t			refcount;$/;"	m	struct:ring_buffer
refcount	futex.c	/^	atomic_t refcount;$/;"	m	struct:futex_pi_state	file:
refcount	sched/sched.h	/^	atomic_t refcount;$/;"	m	struct:root_domain
refcount	swap/preload/preload_pd.c	/^	long refcount;$/;"	m	struct:process_data	file:
refcount	tracepoint.c	/^	int refcount;	\/* Number of times armed. 0 if disarmed. *\/$/;"	m	struct:tracepoint_entry	file:
referenced_filters	trace/ftrace.c	/^static int referenced_filters(struct dyn_ftrace *rec)$/;"	f	file:
refill_pi_state_cache	futex.c	/^static int refill_pi_state_cache(void)$/;"	f	file:
refined_jiffies	time/jiffies.c	/^struct clocksource refined_jiffies;$/;"	v	typeref:struct:clocksource
refs	audit_tree.c	/^	atomic_long_t refs;$/;"	m	struct:audit_chunk	file:
reg	swap/us_manager/probes/register_probes.h	/^	int (*reg)(struct us_ip *);$/;"	m	struct:probe_iface
reg_event_syscall_enter	trace/trace_syscalls.c	/^static int reg_event_syscall_enter(struct ftrace_event_file *file,$/;"	f	file:
reg_event_syscall_exit	trace/trace_syscalls.c	/^static int reg_event_syscall_exit(struct ftrace_event_file *file,$/;"	f	file:
reg_msg_handler	swap/parser/swap_msg_parser.c	/^static int reg_msg_handler(void)$/;"	f	file:
reg_n	swap/fbiprobe/fbiprobe.h	/^	uint8_t reg_n;             \/* Register number. Hope times of cpu$/;"	m	struct:fbi_var_data
reg_offset	swap/fbiprobe/fbiprobe.h	/^	uint64_t reg_offset;       \/* Offset relative to the registers value$/;"	m	struct:fbi_var_data
regex	trace/trace.h	/^	struct regex		regex;$/;"	m	struct:filter_pred	typeref:struct:filter_pred::regex
regex	trace/trace.h	/^struct regex {$/;"	s
regex_match_end	trace/trace_events_filter.c	/^static int regex_match_end(char *str, struct regex *r, int len)$/;"	f	file:
regex_match_front	trace/trace_events_filter.c	/^static int regex_match_front(char *str, struct regex *r, int len)$/;"	f	file:
regex_match_full	trace/trace_events_filter.c	/^static int regex_match_full(char *str, struct regex *r, int len)$/;"	f	file:
regex_match_func	trace/trace.h	/^typedef int (*regex_match_func)(char *str, struct regex *r, int len);$/;"	t
regex_match_middle	trace/trace_events_filter.c	/^static int regex_match_middle(char *str, struct regex *r, int len)$/;"	f	file:
regex_type	trace/trace.h	/^enum regex_type {$/;"	g
region_devres	resource.c	/^struct region_devres {$/;"	s	file:
register_aggr_kprobe	kprobes.c	/^static int __kprobes register_aggr_kprobe(struct kprobe *orig_p,$/;"	f	file:
register_aggr_kprobe	swap/kprobe/swap_kprobes.c	/^static int register_aggr_kprobe(struct kprobe *old_p, struct kprobe *p)$/;"	f	file:
register_aggr_uprobe	swap/uprobe/swap_uprobes.c	/^static int register_aggr_uprobe(struct kprobe *old_p, struct kprobe *p)$/;"	f	file:
register_comm	swap/us_manager/helper.c	/^static int register_comm(void)$/;"	f	file:
register_console	printk.c	/^EXPORT_SYMBOL(register_console);$/;"	v
register_console	printk.c	/^void register_console(struct console *newcon)$/;"	f
register_cp	swap/us_manager/helper.c	/^static int register_cp(void)$/;"	f	file:
register_cpu_notifier	cpu.c	/^EXPORT_SYMBOL(register_cpu_notifier);$/;"	v
register_cpu_notifier	cpu.c	/^int __ref register_cpu_notifier(struct notifier_block *nb)$/;"	f
register_ctx_task	swap/us_manager/helper.c	/^static int register_ctx_task(void)$/;"	f	file:
register_default_affinity_proc	irq/proc.c	/^static void register_default_affinity_proc(void)$/;"	f	file:
register_die_notifier	notifier.c	/^EXPORT_SYMBOL_GPL(register_die_notifier);$/;"	v
register_die_notifier	notifier.c	/^int register_die_notifier(struct notifier_block *nb)$/;"	f
register_early_suspend	power/earlysuspend.c	/^EXPORT_SYMBOL(register_early_suspend);$/;"	v
register_early_suspend	power/earlysuspend.c	/^void register_early_suspend(struct early_suspend *handler)$/;"	f
register_event_cmds	trace/trace_events.c	/^static __init int register_event_cmds(void)$/;"	f	file:
register_event_cmds	trace/trace_events.c	/^static inline int register_event_cmds(void) { return 0; }$/;"	f	file:
register_exec_domain	exec_domain.c	/^EXPORT_SYMBOL(register_exec_domain);$/;"	v
register_exec_domain	exec_domain.c	/^register_exec_domain(struct exec_domain *ep)$/;"	f
register_for_each_vma	events/uprobes.c	/^register_for_each_vma(struct uprobe *uprobe, struct uprobe_consumer *new)$/;"	f	file:
register_ftrace_command	trace/ftrace.c	/^int register_ftrace_command(struct ftrace_func_command *cmd)$/;"	f
register_ftrace_event	trace/trace_output.c	/^EXPORT_SYMBOL_GPL(register_ftrace_event);$/;"	v
register_ftrace_event	trace/trace_output.c	/^int register_ftrace_event(struct trace_event *event)$/;"	f
register_ftrace_function	trace/ftrace.c	/^EXPORT_SYMBOL_GPL(register_ftrace_function);$/;"	v
register_ftrace_function	trace/ftrace.c	/^int register_ftrace_function(struct ftrace_ops *ops)$/;"	f
register_ftrace_function_probe	trace/ftrace.c	/^register_ftrace_function_probe(char *glob, struct ftrace_probe_ops *ops,$/;"	f
register_ftrace_graph	trace/ftrace.c	/^int register_ftrace_graph(trace_func_graph_ret_t retfunc,$/;"	f
register_ftrace_profiler	trace/ftrace.c	/^static int register_ftrace_profiler(void)$/;"	f	file:
register_handler_proc	irq/internals.h	/^static inline void register_handler_proc(unsigned int irq,$/;"	f
register_handler_proc	irq/proc.c	/^void register_handler_proc(unsigned int irq, struct irqaction *action)$/;"	f
register_helper	swap/us_manager/helper.c	/^int register_helper(void)$/;"	f
register_irq_proc	irq/internals.h	/^static inline void register_irq_proc(unsigned int irq, struct irq_desc *desc) { }$/;"	f
register_irq_proc	irq/proc.c	/^void register_irq_proc(unsigned int irq, struct irq_desc *desc)$/;"	f
register_irqsoff	trace/trace_irqsoff.c	669;"	d	file:
register_irqsoff	trace/trace_irqsoff.c	671;"	d	file:
register_irqsoff_function	trace/trace_irqsoff.c	/^static int register_irqsoff_function(int graph, int set)$/;"	f	file:
register_jprobe	kprobes.c	/^EXPORT_SYMBOL_GPL(register_jprobe);$/;"	v
register_jprobe	kprobes.c	/^int __kprobes register_jprobe(struct jprobe *jp)$/;"	f
register_jprobes	kprobes.c	/^EXPORT_SYMBOL_GPL(register_jprobes);$/;"	v
register_jprobes	kprobes.c	/^int __kprobes register_jprobes(struct jprobe **jps, int num)$/;"	f
register_kprobe	kprobes.c	/^EXPORT_SYMBOL_GPL(register_kprobe);$/;"	v
register_kprobe	kprobes.c	/^int __kprobes register_kprobe(struct kprobe *p)$/;"	f
register_kprobes	kprobes.c	/^EXPORT_SYMBOL_GPL(register_kprobes);$/;"	v
register_kprobes	kprobes.c	/^int __kprobes register_kprobes(struct kprobe **kps, int num)$/;"	f
register_kretprobe	kprobes.c	/^EXPORT_SYMBOL_GPL(register_kretprobe);$/;"	v
register_kretprobe	kprobes.c	/^int __kprobes register_kretprobe(struct kretprobe *rp)$/;"	f
register_kretprobes	kprobes.c	/^EXPORT_SYMBOL_GPL(register_kretprobes);$/;"	v
register_kretprobes	kprobes.c	/^int __kprobes register_kretprobes(struct kretprobe **rps, int num)$/;"	f
register_lcd	swap/energy/lcd/lcd_base.c	/^static int register_lcd(struct lcd_ops *ops)$/;"	f	file:
register_lcd_debugfs	swap/energy/lcd/lcd_debugfs.c	/^int register_lcd_debugfs(struct lcd_ops *ops)$/;"	f
register_lock_class	lockdep.c	/^register_lock_class(struct lockdep_map *lock, unsigned int subclass, int force)$/;"	f	file:
register_log_text_hook	printk.c	/^EXPORT_SYMBOL(register_log_text_hook);$/;"	v
register_log_text_hook	printk.c	/^void register_log_text_hook(void (*f)(char *text, size_t size), char * buf,$/;"	f
register_mf	swap/us_manager/helper.c	/^static int register_mf(void)$/;"	f	file:
register_mmap	swap/us_manager/helper.c	/^static int register_mmap(void)$/;"	f	file:
register_module_notifier	module.c	/^EXPORT_SYMBOL(register_module_notifier);$/;"	v
register_module_notifier	module.c	/^int register_module_notifier(struct notifier_block * nb)$/;"	f
register_mr	swap/us_manager/helper.c	/^static int register_mr(void)$/;"	f	file:
register_perf_hw_breakpoint	events/hw_breakpoint.c	/^int register_perf_hw_breakpoint(struct perf_event *bp)$/;"	f
register_pm_notifier	power/main.c	/^EXPORT_SYMBOL_GPL(register_pm_notifier);$/;"	v
register_pm_notifier	power/main.c	/^int register_pm_notifier(struct notifier_block *nb)$/;"	f
register_pm_qos_misc	power/qos.c	/^static int register_pm_qos_misc(struct pm_qos_object *qos)$/;"	f	file:
register_preemptirqsoff	trace/trace_irqsoff.c	740;"	d	file:
register_preemptirqsoff	trace/trace_irqsoff.c	742;"	d	file:
register_preemptoff	trace/trace_irqsoff.c	703;"	d	file:
register_preemptoff	trace/trace_irqsoff.c	705;"	d	file:
register_preload_probes	swap/preload/preload_probe.c	/^int register_preload_probes(void)$/;"	f
register_probe_event	trace/trace_kprobe.c	/^static int register_probe_event(struct trace_probe *tp)$/;"	f	file:
register_reboot_notifier	sys.c	/^EXPORT_SYMBOL(register_reboot_notifier);$/;"	v
register_reboot_notifier	sys.c	/^int register_reboot_notifier(struct notifier_block *nb)$/;"	f
register_refined_jiffies	time/jiffies.c	/^int register_refined_jiffies(long cycles_per_second)$/;"	f
register_rwsem	events/uprobes.c	/^	struct rw_semaphore	register_rwsem;$/;"	m	struct:uprobe	typeref:struct:uprobe::rw_semaphore	file:
register_sched_cpufreq_notifier	sched/fair.c	/^core_initcall(register_sched_cpufreq_notifier);$/;"	v
register_sched_cpufreq_notifier	sched/fair.c	/^static int __init register_sched_cpufreq_notifier(void)$/;"	f	file:
register_sched_domain_sysctl	sched/core.c	/^static void register_sched_domain_sysctl(void)$/;"	f	file:
register_snapshot_cmd	trace/trace.c	/^static inline int register_snapshot_cmd(void) { return 0; }$/;"	f	file:
register_snapshot_cmd	trace/trace.c	/^static int register_snapshot_cmd(void)$/;"	f	file:
register_stat_tracer	trace/trace_stat.c	/^int register_stat_tracer(struct tracer_stat *trace)$/;"	f
register_switch_context	swap/ks_features/ks_features.c	/^static int register_switch_context(void)$/;"	f	file:
register_syscall	swap/ks_features/ks_features.c	/^static int register_syscall(size_t id)$/;"	f	file:
register_task_migration_notifier	sched/core.c	/^void register_task_migration_notifier(struct notifier_block *n)$/;"	f
register_trace_probe	trace/trace_kprobe.c	/^static int register_trace_probe(struct trace_probe *tp)$/;"	f	file:
register_trace_uprobe	trace/trace_uprobe.c	/^static int register_trace_uprobe(struct trace_uprobe *tu)$/;"	f	file:
register_tracer	trace/trace.c	/^int register_tracer(struct tracer *type)$/;"	f
register_unmap	swap/us_manager/helper.c	/^static int register_unmap(void)$/;"	f	file:
register_uprobe_event	trace/trace_uprobe.c	/^static int register_uprobe_event(struct trace_uprobe *tu)$/;"	f	file:
register_user_hw_breakpoint	events/hw_breakpoint.c	/^EXPORT_SYMBOL_GPL(register_user_hw_breakpoint);$/;"	v
register_user_hw_breakpoint	events/hw_breakpoint.c	/^register_user_hw_breakpoint(struct perf_event_attr *attr,$/;"	f
register_wakeup_function	trace/trace_sched_wakeup.c	/^static int register_wakeup_function(int graph, int set)$/;"	f	file:
register_wide_hw_breakpoint	events/hw_breakpoint.c	/^EXPORT_SYMBOL_GPL(register_wide_hw_breakpoint);$/;"	v
register_wide_hw_breakpoint	events/hw_breakpoint.c	/^register_wide_hw_breakpoint(struct perf_event_attr *attr,$/;"	f
regs	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^	struct pt_regs regs;$/;"	m	struct:kj_cb_data	typeref:struct:kj_cb_data::pt_regs	file:
regs	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^	struct pt_regs regs;$/;"	m	struct:kj_cb_data	typeref:struct:kj_cb_data::pt_regs	file:
regs	swap/preload/preload_module.c	/^	struct pt_regs regs;$/;"	m	struct:us_priv	typeref:struct:us_priv::pt_regs	file:
regs_return_value	swap/kprobe/swap_kprobes.h	51;"	d
relax_domain_level	cpuset.c	/^	int relax_domain_level;$/;"	m	struct:cpuset	file:
relay_alloc_buf	relay.c	/^static void *relay_alloc_buf(struct rchan_buf *buf, size_t *size)$/;"	f	file:
relay_alloc_page_array	relay.c	/^static struct page **relay_alloc_page_array(unsigned int n_pages)$/;"	f	file:
relay_buf_empty	relay.c	/^static int relay_buf_empty(struct rchan_buf *buf)$/;"	f	file:
relay_buf_fault	relay.c	/^static int relay_buf_fault(struct vm_area_struct *vma, struct vm_fault *vmf)$/;"	f	file:
relay_buf_full	relay.c	/^EXPORT_SYMBOL_GPL(relay_buf_full);$/;"	v
relay_buf_full	relay.c	/^int relay_buf_full(struct rchan_buf *buf)$/;"	f
relay_close	relay.c	/^EXPORT_SYMBOL_GPL(relay_close);$/;"	v
relay_close	relay.c	/^void relay_close(struct rchan *chan)$/;"	f
relay_close_buf	relay.c	/^static void relay_close_buf(struct rchan_buf *buf)$/;"	f	file:
relay_consume_bytes	relay.c	/^static void relay_consume_bytes(struct rchan_buf *rbuf, int bytes_consumed)$/;"	f	file:
relay_create_buf	relay.c	/^static struct rchan_buf *relay_create_buf(struct rchan *chan)$/;"	f	file:
relay_create_buf_file	relay.c	/^static struct dentry *relay_create_buf_file(struct rchan *chan,$/;"	f	file:
relay_destroy_buf	relay.c	/^static void relay_destroy_buf(struct rchan_buf *buf)$/;"	f	file:
relay_destroy_channel	relay.c	/^static void relay_destroy_channel(struct kref *kref)$/;"	f	file:
relay_file_mmap	relay.c	/^static int relay_file_mmap(struct file *filp, struct vm_area_struct *vma)$/;"	f	file:
relay_file_mmap_close	relay.c	/^static void relay_file_mmap_close(struct vm_area_struct *vma)$/;"	f	file:
relay_file_mmap_ops	relay.c	/^static const struct vm_operations_struct relay_file_mmap_ops = {$/;"	v	typeref:struct:vm_operations_struct	file:
relay_file_open	relay.c	/^static int relay_file_open(struct inode *inode, struct file *filp)$/;"	f	file:
relay_file_operations	relay.c	/^EXPORT_SYMBOL_GPL(relay_file_operations);$/;"	v
relay_file_operations	relay.c	/^const struct file_operations relay_file_operations = {$/;"	v	typeref:struct:file_operations
relay_file_poll	relay.c	/^static unsigned int relay_file_poll(struct file *filp, poll_table *wait)$/;"	f	file:
relay_file_read	relay.c	/^static ssize_t relay_file_read(struct file *filp,$/;"	f	file:
relay_file_read_avail	relay.c	/^static int relay_file_read_avail(struct rchan_buf *buf, size_t read_pos)$/;"	f	file:
relay_file_read_consume	relay.c	/^static void relay_file_read_consume(struct rchan_buf *buf,$/;"	f	file:
relay_file_read_end_pos	relay.c	/^static size_t relay_file_read_end_pos(struct rchan_buf *buf,$/;"	f	file:
relay_file_read_start_pos	relay.c	/^static size_t relay_file_read_start_pos(size_t read_pos,$/;"	f	file:
relay_file_read_subbuf_avail	relay.c	/^static size_t relay_file_read_subbuf_avail(size_t read_pos,$/;"	f	file:
relay_file_read_subbufs	relay.c	/^static ssize_t relay_file_read_subbufs(struct file *filp, loff_t *ppos,$/;"	f	file:
relay_file_release	relay.c	/^static int relay_file_release(struct inode *inode, struct file *filp)$/;"	f	file:
relay_file_splice_read	relay.c	/^static ssize_t relay_file_splice_read(struct file *in,$/;"	f	file:
relay_flush	relay.c	/^EXPORT_SYMBOL_GPL(relay_flush);$/;"	v
relay_flush	relay.c	/^void relay_flush(struct rchan *chan)$/;"	f
relay_free_page_array	relay.c	/^static void relay_free_page_array(struct page **array)$/;"	f	file:
relay_hotcpu_callback	relay.c	/^static int __cpuinit relay_hotcpu_callback(struct notifier_block *nb,$/;"	f	file:
relay_init	relay.c	/^early_initcall(relay_init);$/;"	v
relay_init	relay.c	/^static __init int relay_init(void)$/;"	f	file:
relay_late_setup_files	relay.c	/^int relay_late_setup_files(struct rchan *chan,$/;"	f
relay_mmap_buf	relay.c	/^static int relay_mmap_buf(struct rchan_buf *buf, struct vm_area_struct *vma)$/;"	f	file:
relay_open	relay.c	/^EXPORT_SYMBOL_GPL(relay_open);$/;"	v
relay_open	relay.c	/^struct rchan *relay_open(const char *base_filename,$/;"	f
relay_open_buf	relay.c	/^static struct rchan_buf *relay_open_buf(struct rchan *chan, unsigned int cpu)$/;"	f	file:
relay_page_release	relay.c	/^static void relay_page_release(struct splice_pipe_desc *spd, unsigned int i)$/;"	f	file:
relay_pipe_buf_ops	relay.c	/^static const struct pipe_buf_operations relay_pipe_buf_ops = {$/;"	v	typeref:struct:pipe_buf_operations	file:
relay_pipe_buf_release	relay.c	/^static void relay_pipe_buf_release(struct pipe_inode_info *pipe,$/;"	f	file:
relay_remove_buf	relay.c	/^static void relay_remove_buf(struct kref *kref)$/;"	f	file:
relay_reset	relay.c	/^EXPORT_SYMBOL_GPL(relay_reset);$/;"	v
relay_reset	relay.c	/^void relay_reset(struct rchan *chan)$/;"	f
relay_set_buf_dentry	relay.c	/^static inline void relay_set_buf_dentry(struct rchan_buf *buf,$/;"	f	file:
relay_subbufs_consumed	relay.c	/^EXPORT_SYMBOL_GPL(relay_subbufs_consumed);$/;"	v
relay_subbufs_consumed	relay.c	/^void relay_subbufs_consumed(struct rchan *chan,$/;"	f
relay_switch_subbuf	relay.c	/^EXPORT_SYMBOL_GPL(relay_switch_subbuf);$/;"	v
relay_switch_subbuf	relay.c	/^size_t relay_switch_subbuf(struct rchan_buf *buf, size_t length)$/;"	f
releasable_read	cgroup.c	/^static u64 releasable_read(struct cgroup *cgrp, struct cftype *cft)$/;"	f	file:
release_agent	cgroup.c	/^	char *release_agent;$/;"	m	struct:cgroup_sb_opts	file:
release_all_trace_probes	trace/trace_kprobe.c	/^static int release_all_trace_probes(void)$/;"	f	file:
release_bp_slot	events/hw_breakpoint.c	/^void release_bp_slot(struct perf_event *bp)$/;"	f
release_callchain_buffers	events/callchain.c	/^static void release_callchain_buffers(void)$/;"	f	file:
release_callchain_buffers_rcu	events/callchain.c	/^static void release_callchain_buffers_rcu(struct rcu_head *head)$/;"	f	file:
release_child_resources	resource.c	/^void release_child_resources(struct resource *r)$/;"	f
release_mem_region_adjustable	resource.c	/^int release_mem_region_adjustable(struct resource *parent,$/;"	f
release_next	trace/trace_stat.c	/^static struct rb_node *release_next(struct tracer_stat *ts,$/;"	f	file:
release_node	gcov/fs.c	/^static void release_node(struct gcov_node *node)$/;"	f	file:
release_posix_timer	posix-timers.c	/^static void release_posix_timer(struct k_itimer *tmr, int it_id_set)$/;"	f	file:
release_probes	tracepoint.c	/^static inline void release_probes(struct tracepoint_func *old)$/;"	f	file:
release_resource	resource.c	/^EXPORT_SYMBOL(release_resource);$/;"	v
release_resource	resource.c	/^int release_resource(struct resource *old)$/;"	f
release_swap_reader	power/swap.c	/^static void release_swap_reader(struct swap_map_handle *handle)$/;"	f	file:
release_swap_writer	power/swap.c	/^static void release_swap_writer(struct swap_map_handle *handle)$/;"	f	file:
release_task	exit.c	/^void release_task(struct task_struct * p)$/;"	f
remained_mb	swap/parser/msg_buf.c	/^size_t remained_mb(struct msg_buf *mb)$/;"	f
remcom_in_buffer	debug/gdbstub.c	/^static char			remcom_in_buffer[BUFMAX];$/;"	v	file:
remcom_out_buffer	debug/gdbstub.c	/^static char			remcom_out_buffer[BUFMAX];$/;"	v	file:
remote_function	events/core.c	/^static void remote_function(void *data)$/;"	f	file:
remote_function_call	events/core.c	/^struct remote_function_call {$/;"	s	file:
remote_softirq_cpu_notifier	softirq.c	/^static struct notifier_block __cpuinitdata remote_softirq_cpu_notifier = {$/;"	v	typeref:struct:__cpuinitdata	file:
remote_softirq_cpu_notify	softirq.c	/^static int __cpuinit remote_softirq_cpu_notify(struct notifier_block *self,$/;"	f	file:
remote_softirq_receive	softirq.c	/^static void remote_softirq_receive(void *data)$/;"	f	file:
remove	cgroup.c	/^	struct work_struct remove;$/;"	m	struct:cgroup_event	typeref:struct:cgroup_event::work_struct	file:
remove	swap/ks_features/ks_map.c	/^void *remove(struct map *map, void *key)$/;"	f
remove_all_cbs	swap/us_manager/callbacks.c	/^void remove_all_cbs(void)$/;"	f
remove_breakpoint	events/uprobes.c	/^remove_breakpoint(struct uprobe *uprobe, struct mm_struct *mm, unsigned long vaddr)$/;"	f	file:
remove_buf_file_default_callback	relay.c	/^static int remove_buf_file_default_callback(struct dentry *dentry)$/;"	f	file:
remove_dir	cgroup.c	/^static void remove_dir(struct dentry *d)$/;"	f	file:
remove_event	events/core.c	/^struct remove_event {$/;"	s	file:
remove_event_file_dir	trace/trace_events.c	/^static void remove_event_file_dir(struct ftrace_event_file *file)$/;"	f	file:
remove_event_from_tracers	trace/trace_events.c	/^static void remove_event_from_tracers(struct ftrace_event_call *call)$/;"	f	file:
remove_filter_string	trace/trace_events_filter.c	/^static void remove_filter_string(struct event_filter *filter)$/;"	f	file:
remove_from_busy_list	swap/buffer/buffer_queue.c	/^int remove_from_busy_list(struct swap_subbuffer *subbuffer)$/;"	f
remove_ftrace_list_ops	trace/ftrace.c	/^static int remove_ftrace_list_ops(struct ftrace_ops **list,$/;"	f	file:
remove_ftrace_ops	trace/ftrace.c	/^static int remove_ftrace_ops(struct ftrace_ops **list, struct ftrace_ops *ops)$/;"	f	file:
remove_hash_entry	trace/ftrace.c	/^remove_hash_entry(struct ftrace_hash *hash,$/;"	f	file:
remove_hrtimer	hrtimer.c	/^remove_hrtimer(struct hrtimer *timer, struct hrtimer_clock_base *base)$/;"	f	file:
remove_info	gcov/fs.c	/^static void remove_info(struct gcov_node *node, struct gcov_info *info)$/;"	f	file:
remove_irq	irq/manage.c	/^EXPORT_SYMBOL_GPL(remove_irq);$/;"	v
remove_irq	irq/manage.c	/^void remove_irq(unsigned int irq, struct irqaction *act)$/;"	f
remove_kprobe	swap/kprobe/swap_kprobes.c	/^static void remove_kprobe(struct kprobe *p)$/;"	f	file:
remove_links	gcov/fs.c	/^static void remove_links(struct gcov_node *node)$/;"	f	file:
remove_node	gcov/fs.c	/^static void remove_node(struct gcov_node *node)$/;"	f	file:
remove_notes_attrs	module.c	/^static inline void remove_notes_attrs(struct module *mod)$/;"	f	file:
remove_notes_attrs	module.c	/^static void remove_notes_attrs(struct module *mod)$/;"	f	file:
remove_percpu_irq	irq/manage.c	/^void remove_percpu_irq(unsigned int irq, struct irqaction *act)$/;"	f
remove_sect_attrs	module.c	/^static inline void remove_sect_attrs(struct module *mod)$/;"	f	file:
remove_sect_attrs	module.c	/^static void remove_sect_attrs(struct module *mod)$/;"	f	file:
remove_subsystem	trace/trace_events.c	/^static void remove_subsystem(struct ftrace_subsystem_dir *dir)$/;"	f	file:
remove_tasks_in_empty_cpuset	cpuset.c	/^static void remove_tasks_in_empty_cpuset(struct cpuset *cs)$/;"	f	file:
remove_tracepoint	tracepoint.c	/^static inline void remove_tracepoint(struct tracepoint_entry *e)$/;"	f	file:
remove_unmap_probes	swap/us_manager/helper.c	/^static void remove_unmap_probes(struct task_struct *task,$/;"	f	file:
remove_uprobe	swap/uprobe/swap_uprobes.c	/^static void remove_uprobe(struct uprobe *up)$/;"	f	file:
remove_wait_queue	wait.c	/^EXPORT_SYMBOL(remove_wait_queue);$/;"	v
remove_wait_queue	wait.c	/^void remove_wait_queue(wait_queue_head_t *q, wait_queue_t *wait)$/;"	f
remove_waiter	rtmutex.c	/^static void remove_waiter(struct rt_mutex *lock,$/;"	f	file:
removed_load	sched/sched.h	/^	atomic64_t decay_counter, removed_load;$/;"	m	struct:cfs_rq
reparent_leader	exit.c	/^static void reparent_leader(struct task_struct *father, struct task_struct *p,$/;"	f	file:
replace	swap/ks_features/ks_map.c	/^void *replace(struct map *map, void *data)$/;"	f
replace_filter_string	trace/trace_events_filter.c	/^static int replace_filter_string(struct event_filter *filter,$/;"	f	file:
replace_preds	trace/trace_events_filter.c	/^static int replace_preds(struct ftrace_event_call *call,$/;"	f	file:
replace_system_preds	trace/trace_events_filter.c	/^static int replace_system_preds(struct event_subsystem *system,$/;"	f	file:
report_bad_irq	irq/spurious.c	/^report_bad_irq(unsigned int irq, struct irq_desc *desc, irqreturn_t action_ret)$/;"	f	file:
report_latency	trace/trace_irqsoff.c	/^static int report_latency(cycle_t delta)$/;"	f	file:
report_latency	trace/trace_sched_wakeup.c	/^static int report_latency(cycle_t delta)$/;"	f	file:
report_probe	kprobes.c	/^static void __kprobes report_probe(struct seq_file *pi, struct kprobe *p,$/;"	f	file:
reqd_free_pages	power/swap.c	/^	unsigned long reqd_free_pages;$/;"	m	struct:swap_map_handle	file:
reqd_free_pages	power/swap.c	/^static inline unsigned long reqd_free_pages(void)$/;"	f	file:
request_any_context_irq	irq/manage.c	/^EXPORT_SYMBOL_GPL(request_any_context_irq);$/;"	v
request_any_context_irq	irq/manage.c	/^int request_any_context_irq(unsigned int irq, irq_handler_t handler,$/;"	f
request_asymmetric_key	module_signing.c	/^static struct key *request_asymmetric_key(const char *signer, size_t signer_len,$/;"	f	file:
request_dma	dma.c	/^EXPORT_SYMBOL(request_dma);$/;"	v
request_dma	dma.c	/^int request_dma(unsigned int dmanr, const char * device_id)$/;"	f
request_dma	dma.c	/^int request_dma(unsigned int dmanr, const char *device_id)$/;"	f
request_percpu_irq	irq/manage.c	/^int request_percpu_irq(unsigned int irq, irq_handler_t handler,$/;"	f
request_resource	resource.c	/^EXPORT_SYMBOL(request_resource);$/;"	v
request_resource	resource.c	/^int request_resource(struct resource *root, struct resource *new)$/;"	f
request_resource_conflict	resource.c	/^struct resource *request_resource_conflict(struct resource *root, struct resource *new)$/;"	f
request_suspend_state	power/earlysuspend.c	/^void request_suspend_state(suspend_state_t new_state)$/;"	f
request_threaded_irq	irq/manage.c	/^EXPORT_SYMBOL(request_threaded_irq);$/;"	v
request_threaded_irq	irq/manage.c	/^int request_threaded_irq(unsigned int irq, irq_handler_t handler,$/;"	f
requested_suspend_state	power/wakelock.c	/^suspend_state_t requested_suspend_state = PM_SUSPEND_MEM;$/;"	v
requeue_futex	futex.c	/^void requeue_futex(struct futex_q *q, struct futex_hash_bucket *hb1,$/;"	f	file:
requeue_pi_key	futex.c	/^	union futex_key *requeue_pi_key;$/;"	m	struct:futex_q	typeref:union:futex_q::futex_key	file:
requeue_pi_wake_futex	futex.c	/^void requeue_pi_wake_futex(struct futex_q *q, union futex_key *key,$/;"	f	file:
requeue_rt_entity	sched/rt.c	/^requeue_rt_entity(struct rt_rq *rt_rq, struct sched_rt_entity *rt_se, int head)$/;"	f	file:
requeue_task_rt	sched/rt.c	/^static void requeue_task_rt(struct rq *rq, struct task_struct *p, int head)$/;"	f	file:
required	power/console.c	/^	bool required;$/;"	m	struct:pm_vt_switch	file:
res_counter_charge	res_counter.c	/^int res_counter_charge(struct res_counter *counter, unsigned long val,$/;"	f
res_counter_charge_locked	res_counter.c	/^int res_counter_charge_locked(struct res_counter *counter, unsigned long val,$/;"	f
res_counter_charge_nofail	res_counter.c	/^int res_counter_charge_nofail(struct res_counter *counter, unsigned long val,$/;"	f
res_counter_init	res_counter.c	/^void res_counter_init(struct res_counter *counter, struct res_counter *parent)$/;"	f
res_counter_member	res_counter.c	/^res_counter_member(struct res_counter *counter, int member)$/;"	f	file:
res_counter_memparse_write_strategy	res_counter.c	/^int res_counter_memparse_write_strategy(const char *buf,$/;"	f
res_counter_read	res_counter.c	/^ssize_t res_counter_read(struct res_counter *counter, int member,$/;"	f
res_counter_read_u64	res_counter.c	/^u64 res_counter_read_u64(struct res_counter *counter, int member)$/;"	f
res_counter_uncharge	res_counter.c	/^u64 res_counter_uncharge(struct res_counter *counter, unsigned long val)$/;"	f
res_counter_uncharge_locked	res_counter.c	/^u64 res_counter_uncharge_locked(struct res_counter *counter, unsigned long val)$/;"	f
res_counter_uncharge_until	res_counter.c	/^u64 res_counter_uncharge_until(struct res_counter *counter,$/;"	f
res_finish	swap/wsp/wsp.c	/^static struct probe_info_new res_finish =$/;"	v	typeref:struct:probe_info_new	file:
res_finish_ehandle	swap/wsp/wsp.c	/^static int res_finish_ehandle(struct uretprobe_instance *ri,$/;"	f	file:
res_finish_rhandle	swap/wsp/wsp.c	/^static int res_finish_rhandle(struct uretprobe_instance *ri,$/;"	f	file:
res_list	swap/wsp/wsp_res.c	/^	struct list_head res_list;$/;"	m	struct:wsp_tdata	typeref:struct:wsp_tdata::list_head	file:
res_request	swap/wsp/wsp.c	/^static struct probe_info_new res_request = MAKE_UPROBE(res_request_handle);$/;"	v	typeref:struct:probe_info_new	file:
res_request_handle	swap/wsp/wsp.c	/^static int res_request_handle(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
resched_cpu	sched/core.c	/^void resched_cpu(int cpu)$/;"	f
resched_task	sched/core.c	/^void resched_task(struct task_struct *p)$/;"	f
rescue_wq	workqueue_internal.h	/^	struct workqueue_struct	*rescue_wq;	\/* I: the workqueue to rescue *\/$/;"	m	struct:worker	typeref:struct:worker::workqueue_struct
rescuer	workqueue.c	/^	struct worker		*rescuer;	\/* I: rescue worker *\/$/;"	m	struct:workqueue_struct	typeref:struct:workqueue_struct::worker	file:
rescuer_thread	workqueue.c	/^static int rescuer_thread(void *__rescuer)$/;"	f	file:
resend_irqs	irq/resend.c	/^static void resend_irqs(unsigned long arg)$/;"	f	file:
reserve_bp_slot	events/hw_breakpoint.c	/^int reserve_bp_slot(struct perf_event *bp)$/;"	f
reserve_region_with_split	resource.c	/^void __init reserve_region_with_split(struct resource *root,$/;"	f
reserve_setup	resource.c	/^static int __init reserve_setup(char *str)$/;"	f	file:
reserved	power/swap.c	/^	char reserved[PAGE_SIZE - 20 - sizeof(sector_t) - sizeof(int) -$/;"	m	struct:swsusp_header	file:
reserved_field_names	trace/trace_probe.c	/^const char *reserved_field_names[] = {$/;"	v
reserved_size	power/hibernate.c	/^power_attr(reserved_size);$/;"	v
reserved_size	power/snapshot.c	/^unsigned long reserved_size;$/;"	v
reserved_size_show	power/hibernate.c	/^static ssize_t reserved_size_show(struct kobject *kobj,$/;"	f	file:
reserved_size_store	power/hibernate.c	/^static ssize_t reserved_size_store(struct kobject *kobj,$/;"	f	file:
reset	trace/trace.h	/^	void			(*reset)(struct trace_array *tr);$/;"	m	struct:tracer
reset_counts	trace/trace_selftest.c	/^static void reset_counts(void)$/;"	f	file:
reset_cpu_stall_ticks	rcutiny_plugin.h	/^static void reset_cpu_stall_ticks(struct rcu_ctrlblk *rcp)$/;"	f
reset_dentry	gcov/fs.c	/^static struct dentry *reset_dentry;$/;"	v	typeref:struct:dentry	file:
reset_entries	time/timer_stats.c	/^static void reset_entries(void)$/;"	f	file:
reset_iter	kallsyms.c	/^static void reset_iter(struct kallsym_iter *iter, loff_t new_pos)$/;"	f	file:
reset_iter_read	trace/ftrace.c	/^static void reset_iter_read(struct ftrace_iterator *iter)$/;"	f	file:
reset_kprobe_instance	kprobes.c	/^static inline void reset_kprobe_instance(void)$/;"	f	file:
reset_kprobe_instance	swap/kprobe/swap_kprobes.c	/^static inline void reset_kprobe_instance(void)$/;"	f	file:
reset_node	gcov/fs.c	/^static void reset_node(struct gcov_node *node)$/;"	f	file:
reset_ptenuma_scan	sched/fair.c	/^static void reset_ptenuma_scan(struct task_struct *p)$/;"	f	file:
reset_read	gcov/fs.c	/^static ssize_t reset_read(struct file *file, char __user *addr, size_t len,$/;"	f	file:
reset_stat_session	trace/trace_stat.c	/^static void reset_stat_session(struct stat_session *session)$/;"	f	file:
reset_write	gcov/fs.c	/^static ssize_t reset_write(struct file *file, const char __user *addr,$/;"	f	file:
resize_buffer_duplicate_size	trace/trace.c	/^static int resize_buffer_duplicate_size(struct trace_buffer *trace_buf,$/;"	f	file:
resize_disabled	trace/ring_buffer.c	/^	atomic_t			resize_disabled;$/;"	m	struct:ring_buffer	file:
resolve_symbol	module.c	/^static const struct kernel_symbol *resolve_symbol(struct module *mod,$/;"	f	file:
resolve_symbol_wait	module.c	/^resolve_symbol_wait(struct module *mod,$/;"	f	file:
resource_alignment	resource.c	/^resource_size_t resource_alignment(struct resource *res)$/;"	f
resource_clip	resource.c	/^static void resource_clip(struct resource *res, resource_size_t min,$/;"	f	file:
resource_constraint	resource.c	/^struct resource_constraint {$/;"	s	file:
resource_contains	resource.c	/^static bool resource_contains(struct resource *res1, struct resource *res2)$/;"	f	file:
resource_op	resource.c	/^static const struct seq_operations resource_op = {$/;"	v	typeref:struct:seq_operations	file:
restart_cpc	power/main.c	/^power_attr(restart_cpc);$/;"	v
restart_cpc_show	power/main.c	/^static ssize_t restart_cpc_show(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
restart_cpc_store	power/main.c	/^static ssize_t restart_cpc_store(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
restart_ret	swap/sampler/sampler_timers.h	/^typedef enum hrtimer_restart   restart_ret;$/;"	t	typeref:enum:hrtimer_restart
restart_ret	swap/sampler/sampler_timers.h	/^typedef int   restart_ret;$/;"	t
restore_altstack	signal.c	/^int restore_altstack(const stack_t __user *uss)$/;"	f
restore_config	swap/parser/msg_parser.c	/^void restore_config(struct conf_data *conf)$/;"	f
restore_current_flags	swap/uprobe/arch/x86/swap-asm/swap_uprobes.c	/^static void restore_current_flags(struct pt_regs *regs, unsigned long flags)$/;"	f	file:
restore_highmem	power/power.h	/^static inline int restore_highmem(void) { return 0; }$/;"	f
restore_highmem	power/snapshot.c	/^int restore_highmem(void)$/;"	f
restore_pblist	power/snapshot.c	/^struct pbe *restore_pblist;$/;"	v	typeref:struct:pbe
restore_previous_kprobe	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^void restore_previous_kprobe(struct kprobe_ctlblk *kcb)$/;"	f
restore_previous_kprobe	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^void restore_previous_kprobe(struct kprobe_ctlblk *kcb)$/;"	f
restore_regs_kp	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^static struct kprobe restore_regs_kp = {$/;"	v	typeref:struct:kprobe	file:
restore_regs_pre_handler	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^static int restore_regs_pre_handler(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
restore_unbound_workers_cpumask	workqueue.c	/^static void restore_unbound_workers_cpumask(struct worker_pool *pool, int cpu)$/;"	f	file:
result	kthread.c	/^	struct task_struct *result;$/;"	m	struct:kthread_create_info	typeref:struct:kthread_create_info::task_struct	file:
resume	power/hibernate.c	/^power_attr(resume);$/;"	v
resume_console	printk.c	/^void resume_console(void)$/;"	f
resume_delay	power/hibernate.c	/^static int resume_delay;$/;"	v	file:
resume_device_irqs	irq/pm.c	/^EXPORT_SYMBOL_GPL(resume_device_irqs);$/;"	v
resume_device_irqs	irq/pm.c	/^void resume_device_irqs(void)$/;"	f
resume_execution	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^static void resume_execution(struct kprobe *p,$/;"	f	file:
resume_execution	swap/uprobe/arch/x86/swap-asm/swap_uprobes.c	/^static void resume_execution(struct kprobe *p,$/;"	f	file:
resume_file	power/hibernate.c	/^static char resume_file[256] = CONFIG_PM_STD_PARTITION;$/;"	v	file:
resume_irqs	irq/pm.c	/^static void resume_irqs(bool want_early)$/;"	f	file:
resume_offset_setup	power/hibernate.c	/^static int __init resume_offset_setup(char *str)$/;"	f	file:
resume_reason	power/wakeup_reason.c	/^static struct kobj_attribute resume_reason = __ATTR_RO(last_resume_reason);$/;"	v	typeref:struct:kobj_attribute	file:
resume_setup	power/hibernate.c	/^static int __init resume_setup(char *str)$/;"	f	file:
resume_show	power/hibernate.c	/^static ssize_t resume_show(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
resume_store	power/hibernate.c	/^static ssize_t resume_store(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
resume_target_kernel	power/hibernate.c	/^static int resume_target_kernel(bool platform_mode)$/;"	f	file:
resume_wait	power/hibernate.c	/^static int resume_wait;$/;"	v	file:
resumedelay_setup	power/hibernate.c	/^static int __init resumedelay_setup(char *str)$/;"	f	file:
resumewait_setup	power/hibernate.c	/^static int __init resumewait_setup(char *str)$/;"	f	file:
ret	events/core.c	/^	int			ret;$/;"	m	struct:remote_function_call	file:
ret	power/swap.c	/^	int ret;                                  \/* return code *\/$/;"	m	struct:cmp_data	file:
ret	power/swap.c	/^	int ret;                                  \/* return code *\/$/;"	m	struct:dec_data	file:
ret	stop_machine.c	/^	int			ret;		\/* collected return value *\/$/;"	m	struct:cpu_stop_done	file:
ret	swap/ks_features/file_ops.c	/^	int ret;$/;"	m	struct:open_private	file:
ret	trace/trace.h	/^	long			ret;$/;"	m	struct:syscall_trace_exit
ret	trace/trace_functions_graph.c	/^	struct ftrace_graph_ret_entry	ret;$/;"	m	struct:fgraph_data	typeref:struct:fgraph_data::ftrace_graph_ret_entry	file:
ret	workqueue.c	/^	long ret;$/;"	m	struct:work_for_cpu	file:
ret_addr	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^	unsigned long ret_addr;$/;"	m	struct:cb_data	file:
ret_addr	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^	unsigned long ret_addr;$/;"	m	struct:kj_cb_data	file:
ret_addr	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^	unsigned long ret_addr;$/;"	m	struct:cb_data	file:
ret_addr	swap/kprobe/swap_kprobes.h	/^	unsigned long *ret_addr;        \/**< Return address.*\/$/;"	m	struct:kretprobe_instance
ret_addr	swap/uprobe/swap_uprobes.h	/^	kprobe_opcode_t *ret_addr;          \/**< Return address *\/$/;"	m	struct:uretprobe_instance
ret_addr	swap/uprobe/swap_uprobes.h	/^	unsigned long ret_addr;$/;"	m	struct:urinst_info
ret_handler	swap/ks_features/ks_features.c	/^static int ret_handler(struct kretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
ret_handler	swap/us_manager/probes/probe_info_new.h	/^			uretprobe_handler_t ret_handler;$/;"	m	struct:probe_info_new::__anon57::__anon59
ret_handler_comm	swap/us_manager/helper.c	/^static int ret_handler_comm(struct kretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
ret_handler_cp	swap/us_manager/helper.c	/^static int ret_handler_cp(struct kretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
ret_handler_mmap	swap/us_manager/helper.c	/^static int ret_handler_mmap(struct kretprobe_instance *ri,$/;"	f	file:
ret_handler_pf	swap/us_manager/helper.c	/^static int ret_handler_pf(struct kretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
ret_handler_set_backlight	swap/energy/lcd/maru.c	/^static int ret_handler_set_backlight(struct kretprobe_instance *ri,$/;"	f	file:
ret_handler_set_backlight	swap/energy/lcd/s6e8aa0.c	/^static int ret_handler_set_backlight(struct kretprobe_instance *ri,$/;"	f	file:
ret_handler_set_backlight	swap/energy/lcd/s6e8aa0_panel.c	/^static int ret_handler_set_backlight(struct kretprobe_instance *ri,$/;"	f	file:
ret_handler_set_power	swap/energy/lcd/s6e8aa0.c	/^static int ret_handler_set_power(struct kretprobe_instance *ri,$/;"	f	file:
ret_handler_set_power	swap/energy/lcd/s6e8aa0_panel.c	/^static int ret_handler_set_power(struct kretprobe_instance *ri,$/;"	f	file:
ret_handler_switch	swap/energy/energy.c	/^static int ret_handler_switch(struct kretprobe_instance *ri,$/;"	f	file:
ret_handler_sys_read	swap/energy/energy.c	/^static int ret_handler_sys_read(struct kretprobe_instance *ri,$/;"	f	file:
ret_handler_sys_write	swap/energy/energy.c	/^static int ret_handler_sys_write(struct kretprobe_instance *ri,$/;"	f	file:
ret_handler_unmap	swap/us_manager/helper.c	/^static int ret_handler_unmap(struct kretprobe_instance *ri,$/;"	f	file:
ret_ip	trace/trace.h	/^	unsigned long		ret_ip;$/;"	m	struct:kretprobe_trace_entry_head
ret_state	debug/debug_core.h	/^	int			ret_state;$/;"	m	struct:debuggerinfo_struct
ret_type	swap/retprobe/retprobe.h	/^	char ret_type;$/;"	m	struct:retprobe_info
ret_val	swap/ks_features/ksf_msg.c	/^	char ret_val[0];$/;"	m	struct:msg_file_exit	file:
ret_val	swap/ks_features/ksf_msg.c	/^	char ret_val[0];$/;"	m	struct:msg_sys_exit	file:
ret_val	swap/retprobe/rp_msg.c	/^	char ret_val[0];$/;"	m	struct:msg_exit	file:
retarget_shared_pending	signal.c	/^static void retarget_shared_pending(struct task_struct *tsk, sigset_t *which)$/;"	f	file:
retprobe	swap/us_manager/sspt/ip.h	/^		struct uretprobe retprobe;$/;"	m	union:us_ip::__anon60	typeref:struct:us_ip::__anon60::uretprobe
retprobe_cleanup	swap/retprobe/retprobe.c	/^static void retprobe_cleanup(struct probe_info *probe_i)$/;"	f	file:
retprobe_copy	swap/retprobe/retprobe.c	/^static int retprobe_copy(struct probe_info *dest,$/;"	f	file:
retprobe_entry_handler	swap/retprobe/retprobe.c	/^static int retprobe_entry_handler(struct uretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
retprobe_get_uprobe	swap/retprobe/retprobe.c	/^static struct uprobe *retprobe_get_uprobe(struct us_ip *ip)$/;"	f	file:
retprobe_iface	swap/retprobe/retprobe.c	/^static struct probe_iface retprobe_iface = {$/;"	v	typeref:struct:probe_iface	file:
retprobe_info	swap/retprobe/retprobe.h	/^struct retprobe_info {$/;"	s
retprobe_init	swap/retprobe/retprobe.c	/^static void retprobe_init(struct us_ip *ip)$/;"	f	file:
retprobe_module_exit	swap/retprobe/retprobe.c	/^module_exit(retprobe_module_exit);$/;"	v
retprobe_module_exit	swap/retprobe/retprobe.c	/^static void __exit retprobe_module_exit(void)$/;"	f	file:
retprobe_module_init	swap/retprobe/retprobe.c	/^module_init(retprobe_module_init);$/;"	v
retprobe_module_init	swap/retprobe/retprobe.c	/^static int __init retprobe_module_init(void)$/;"	f	file:
retprobe_register_probe	swap/retprobe/retprobe.c	/^static int retprobe_register_probe(struct us_ip *ip)$/;"	f	file:
retprobe_ret_handler	swap/retprobe/retprobe.c	/^static int retprobe_ret_handler(struct uretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
retprobe_uninit	swap/retprobe/retprobe.c	/^static void retprobe_uninit(struct us_ip *ip)$/;"	f	file:
retprobe_unregister_probe	swap/retprobe/retprobe.c	/^static void retprobe_unregister_probe(struct us_ip *ip, int disarm)$/;"	f	file:
retrigger_next_event	hrtimer.c	/^static inline void retrigger_next_event(void *arg) { }$/;"	f	file:
retrigger_next_event	hrtimer.c	/^static void retrigger_next_event(void *arg)$/;"	f	file:
return_cfs_rq_runtime	sched/fair.c	/^static __always_inline void return_cfs_rq_runtime(struct cfs_rq *cfs_rq) {}$/;"	f	file:
return_cfs_rq_runtime	sched/fair.c	/^static __always_inline void return_cfs_rq_runtime(struct cfs_rq *cfs_rq)$/;"	f	file:
return_code	audit.h	/^	long		    return_code;\/* syscall return code *\/$/;"	m	struct:audit_context
return_handler	test_kprobes.c	/^static int return_handler(struct kretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
return_handler2	test_kprobes.c	/^static int return_handler2(struct kretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
return_instance	events/uprobes.c	/^struct return_instance {$/;"	s	file:
return_valid	audit.h	/^	int		    return_valid; \/* return code is valid *\/$/;"	m	struct:audit_context
reuse_unused_kprobe	kprobes.c	/^static void reuse_unused_kprobe(struct kprobe *ap)$/;"	f	file:
revert_creds	cred.c	/^EXPORT_SYMBOL(revert_creds);$/;"	v
revert_creds	cred.c	/^void revert_creds(const struct cred *old)$/;"	f
reweight_entity	sched/fair.c	/^static void reweight_entity(struct cfs_rq *cfs_rq, struct sched_entity *se,$/;"	f	file:
rewrite_section_headers	module.c	/^static int rewrite_section_headers(struct load_info *info, int flags)$/;"	f	file:
rhead	swap/us_manager/helper.c	/^	struct hlist_head rhead;$/;"	m	struct:clean_data	typeref:struct:clean_data::hlist_head	file:
right	trace/trace.h	/^	unsigned short		right;$/;"	m	struct:filter_pred
ring_buffer	events/internal.h	/^struct ring_buffer {$/;"	s
ring_buffer	trace/ring_buffer.c	/^struct ring_buffer {$/;"	s	file:
ring_buffer_alloc_read_page	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_alloc_read_page);$/;"	v
ring_buffer_alloc_read_page	trace/ring_buffer.c	/^void *ring_buffer_alloc_read_page(struct ring_buffer *buffer, int cpu)$/;"	f
ring_buffer_attach	events/core.c	/^static void ring_buffer_attach(struct perf_event *event,$/;"	f	file:
ring_buffer_benchmark_exit	trace/ring_buffer_benchmark.c	/^module_exit(ring_buffer_benchmark_exit);$/;"	v
ring_buffer_benchmark_exit	trace/ring_buffer_benchmark.c	/^static void __exit ring_buffer_benchmark_exit(void)$/;"	f	file:
ring_buffer_benchmark_init	trace/ring_buffer_benchmark.c	/^module_init(ring_buffer_benchmark_init);$/;"	v
ring_buffer_benchmark_init	trace/ring_buffer_benchmark.c	/^static int __init ring_buffer_benchmark_init(void)$/;"	f	file:
ring_buffer_bytes_cpu	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_bytes_cpu);$/;"	v
ring_buffer_bytes_cpu	trace/ring_buffer.c	/^unsigned long ring_buffer_bytes_cpu(struct ring_buffer *buffer, int cpu)$/;"	f
ring_buffer_change_overwrite	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_change_overwrite);$/;"	v
ring_buffer_change_overwrite	trace/ring_buffer.c	/^void ring_buffer_change_overwrite(struct ring_buffer *buffer, int val)$/;"	f
ring_buffer_commit_overrun_cpu	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_commit_overrun_cpu);$/;"	v
ring_buffer_commit_overrun_cpu	trace/ring_buffer.c	/^ring_buffer_commit_overrun_cpu(struct ring_buffer *buffer, int cpu)$/;"	f
ring_buffer_consume	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_consume);$/;"	v
ring_buffer_consume	trace/ring_buffer.c	/^ring_buffer_consume(struct ring_buffer *buffer, int cpu, u64 *ts,$/;"	f
ring_buffer_consumer	trace/ring_buffer_benchmark.c	/^static void ring_buffer_consumer(void)$/;"	f	file:
ring_buffer_consumer_thread	trace/ring_buffer_benchmark.c	/^static int ring_buffer_consumer_thread(void *arg)$/;"	f	file:
ring_buffer_detach	events/core.c	/^static void ring_buffer_detach(struct perf_event *event, struct ring_buffer *rb)$/;"	f	file:
ring_buffer_discard_commit	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_discard_commit);$/;"	v
ring_buffer_discard_commit	trace/ring_buffer.c	/^void ring_buffer_discard_commit(struct ring_buffer *buffer,$/;"	f
ring_buffer_dropped_events_cpu	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_dropped_events_cpu);$/;"	v
ring_buffer_dropped_events_cpu	trace/ring_buffer.c	/^ring_buffer_dropped_events_cpu(struct ring_buffer *buffer, int cpu)$/;"	f
ring_buffer_empty	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_empty);$/;"	v
ring_buffer_empty	trace/ring_buffer.c	/^int ring_buffer_empty(struct ring_buffer *buffer)$/;"	f
ring_buffer_empty_cpu	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_empty_cpu);$/;"	v
ring_buffer_empty_cpu	trace/ring_buffer.c	/^int ring_buffer_empty_cpu(struct ring_buffer *buffer, int cpu)$/;"	f
ring_buffer_entries	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_entries);$/;"	v
ring_buffer_entries	trace/ring_buffer.c	/^unsigned long ring_buffer_entries(struct ring_buffer *buffer)$/;"	f
ring_buffer_entries_cpu	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_entries_cpu);$/;"	v
ring_buffer_entries_cpu	trace/ring_buffer.c	/^unsigned long ring_buffer_entries_cpu(struct ring_buffer *buffer, int cpu)$/;"	f
ring_buffer_event_data	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_event_data);$/;"	v
ring_buffer_event_data	trace/ring_buffer.c	/^void *ring_buffer_event_data(struct ring_buffer_event *event)$/;"	f
ring_buffer_event_length	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_event_length);$/;"	v
ring_buffer_event_length	trace/ring_buffer.c	/^unsigned ring_buffer_event_length(struct ring_buffer_event *event)$/;"	f
ring_buffer_expanded	trace/trace.c	/^bool ring_buffer_expanded;$/;"	v
ring_buffer_free	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_free);$/;"	v
ring_buffer_free	trace/ring_buffer.c	/^ring_buffer_free(struct ring_buffer *buffer)$/;"	f
ring_buffer_free_read_page	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_free_read_page);$/;"	v
ring_buffer_free_read_page	trace/ring_buffer.c	/^void ring_buffer_free_read_page(struct ring_buffer *buffer, void *data)$/;"	f
ring_buffer_get	events/core.c	/^static struct ring_buffer *ring_buffer_get(struct perf_event *event)$/;"	f	file:
ring_buffer_init	events/ring_buffer.c	/^ring_buffer_init(struct ring_buffer *rb, long watermark, int flags)$/;"	f	file:
ring_buffer_iter	trace/ring_buffer.c	/^struct ring_buffer_iter {$/;"	s	file:
ring_buffer_iter_empty	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_iter_empty);$/;"	v
ring_buffer_iter_empty	trace/ring_buffer.c	/^int ring_buffer_iter_empty(struct ring_buffer_iter *iter)$/;"	f
ring_buffer_iter_peek	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_iter_peek);$/;"	v
ring_buffer_iter_peek	trace/ring_buffer.c	/^ring_buffer_iter_peek(struct ring_buffer_iter *iter, u64 *ts)$/;"	f
ring_buffer_iter_reset	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_iter_reset);$/;"	v
ring_buffer_iter_reset	trace/ring_buffer.c	/^void ring_buffer_iter_reset(struct ring_buffer_iter *iter)$/;"	f
ring_buffer_lock_reserve	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_lock_reserve);$/;"	v
ring_buffer_lock_reserve	trace/ring_buffer.c	/^ring_buffer_lock_reserve(struct ring_buffer *buffer, unsigned long length)$/;"	f
ring_buffer_normalize_time_stamp	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_normalize_time_stamp);$/;"	v
ring_buffer_normalize_time_stamp	trace/ring_buffer.c	/^void ring_buffer_normalize_time_stamp(struct ring_buffer *buffer,$/;"	f
ring_buffer_oldest_event_ts	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_oldest_event_ts);$/;"	v
ring_buffer_oldest_event_ts	trace/ring_buffer.c	/^u64 ring_buffer_oldest_event_ts(struct ring_buffer *buffer, int cpu)$/;"	f
ring_buffer_overrun_cpu	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_overrun_cpu);$/;"	v
ring_buffer_overrun_cpu	trace/ring_buffer.c	/^unsigned long ring_buffer_overrun_cpu(struct ring_buffer *buffer, int cpu)$/;"	f
ring_buffer_overruns	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_overruns);$/;"	v
ring_buffer_overruns	trace/ring_buffer.c	/^unsigned long ring_buffer_overruns(struct ring_buffer *buffer)$/;"	f
ring_buffer_page_len	trace/ring_buffer.c	/^size_t ring_buffer_page_len(void *page)$/;"	f
ring_buffer_peek	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_peek);$/;"	v
ring_buffer_peek	trace/ring_buffer.c	/^ring_buffer_peek(struct ring_buffer *buffer, int cpu, u64 *ts,$/;"	f
ring_buffer_per_cpu	trace/ring_buffer.c	/^struct ring_buffer_per_cpu {$/;"	s	file:
ring_buffer_poll_wait	trace/ring_buffer.c	/^int ring_buffer_poll_wait(struct ring_buffer *buffer, int cpu,$/;"	f
ring_buffer_print_entry_header	trace/ring_buffer.c	/^int ring_buffer_print_entry_header(struct trace_seq *s)$/;"	f
ring_buffer_print_page_header	trace/ring_buffer.c	/^int ring_buffer_print_page_header(struct trace_seq *s)$/;"	f
ring_buffer_producer	trace/ring_buffer_benchmark.c	/^static void ring_buffer_producer(void)$/;"	f	file:
ring_buffer_producer_thread	trace/ring_buffer_benchmark.c	/^static int ring_buffer_producer_thread(void *arg)$/;"	f	file:
ring_buffer_put	events/core.c	/^static void ring_buffer_put(struct ring_buffer *rb)$/;"	f	file:
ring_buffer_read	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_read);$/;"	v
ring_buffer_read	trace/ring_buffer.c	/^ring_buffer_read(struct ring_buffer_iter *iter, u64 *ts)$/;"	f
ring_buffer_read_events_cpu	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_read_events_cpu);$/;"	v
ring_buffer_read_events_cpu	trace/ring_buffer.c	/^ring_buffer_read_events_cpu(struct ring_buffer *buffer, int cpu)$/;"	f
ring_buffer_read_finish	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_read_finish);$/;"	v
ring_buffer_read_finish	trace/ring_buffer.c	/^ring_buffer_read_finish(struct ring_buffer_iter *iter)$/;"	f
ring_buffer_read_page	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_read_page);$/;"	v
ring_buffer_read_page	trace/ring_buffer.c	/^int ring_buffer_read_page(struct ring_buffer *buffer,$/;"	f
ring_buffer_read_prepare	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_read_prepare);$/;"	v
ring_buffer_read_prepare	trace/ring_buffer.c	/^ring_buffer_read_prepare(struct ring_buffer *buffer, int cpu)$/;"	f
ring_buffer_read_prepare_sync	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_read_prepare_sync);$/;"	v
ring_buffer_read_prepare_sync	trace/ring_buffer.c	/^ring_buffer_read_prepare_sync(void)$/;"	f
ring_buffer_read_start	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_read_start);$/;"	v
ring_buffer_read_start	trace/ring_buffer.c	/^ring_buffer_read_start(struct ring_buffer_iter *iter)$/;"	f
ring_buffer_record_disable	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_record_disable);$/;"	v
ring_buffer_record_disable	trace/ring_buffer.c	/^void ring_buffer_record_disable(struct ring_buffer *buffer)$/;"	f
ring_buffer_record_disable_cpu	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_record_disable_cpu);$/;"	v
ring_buffer_record_disable_cpu	trace/ring_buffer.c	/^void ring_buffer_record_disable_cpu(struct ring_buffer *buffer, int cpu)$/;"	f
ring_buffer_record_enable	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_record_enable);$/;"	v
ring_buffer_record_enable	trace/ring_buffer.c	/^void ring_buffer_record_enable(struct ring_buffer *buffer)$/;"	f
ring_buffer_record_enable_cpu	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_record_enable_cpu);$/;"	v
ring_buffer_record_enable_cpu	trace/ring_buffer.c	/^void ring_buffer_record_enable_cpu(struct ring_buffer *buffer, int cpu)$/;"	f
ring_buffer_record_is_on	trace/ring_buffer.c	/^int ring_buffer_record_is_on(struct ring_buffer *buffer)$/;"	f
ring_buffer_record_off	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_record_off);$/;"	v
ring_buffer_record_off	trace/ring_buffer.c	/^void ring_buffer_record_off(struct ring_buffer *buffer)$/;"	f
ring_buffer_record_on	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_record_on);$/;"	v
ring_buffer_record_on	trace/ring_buffer.c	/^void ring_buffer_record_on(struct ring_buffer *buffer)$/;"	f
ring_buffer_reset	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_reset);$/;"	v
ring_buffer_reset	trace/ring_buffer.c	/^void ring_buffer_reset(struct ring_buffer *buffer)$/;"	f
ring_buffer_reset_cpu	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_reset_cpu);$/;"	v
ring_buffer_reset_cpu	trace/ring_buffer.c	/^void ring_buffer_reset_cpu(struct ring_buffer *buffer, int cpu)$/;"	f
ring_buffer_resize	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_resize);$/;"	v
ring_buffer_resize	trace/ring_buffer.c	/^int ring_buffer_resize(struct ring_buffer *buffer, unsigned long size,$/;"	f
ring_buffer_set_clock	trace/ring_buffer.c	/^void ring_buffer_set_clock(struct ring_buffer *buffer,$/;"	f
ring_buffer_size	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_size);$/;"	v
ring_buffer_size	trace/ring_buffer.c	/^unsigned long ring_buffer_size(struct ring_buffer *buffer, int cpu)$/;"	f
ring_buffer_swap_cpu	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_swap_cpu);$/;"	v
ring_buffer_swap_cpu	trace/ring_buffer.c	/^int ring_buffer_swap_cpu(struct ring_buffer *buffer_a,$/;"	f
ring_buffer_time_stamp	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_time_stamp);$/;"	v
ring_buffer_time_stamp	trace/ring_buffer.c	/^u64 ring_buffer_time_stamp(struct ring_buffer *buffer, int cpu)$/;"	f
ring_buffer_unlock_commit	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_unlock_commit);$/;"	v
ring_buffer_unlock_commit	trace/ring_buffer.c	/^int ring_buffer_unlock_commit(struct ring_buffer *buffer,$/;"	f
ring_buffer_wait	trace/ring_buffer.c	/^int ring_buffer_wait(struct ring_buffer *buffer, int cpu)$/;"	f
ring_buffer_wakeup	events/core.c	/^static void ring_buffer_wakeup(struct perf_event *event)$/;"	f	file:
ring_buffer_write	trace/ring_buffer.c	/^EXPORT_SYMBOL_GPL(ring_buffer_write);$/;"	v
ring_buffer_write	trace/ring_buffer.c	/^int ring_buffer_write(struct ring_buffer *buffer,$/;"	f
rlim64_is_infinity	sys.c	/^static inline bool rlim64_is_infinity(__u64 rlim64)$/;"	f	file:
rlim64_to_rlim	sys.c	/^static void rlim64_to_rlim(const struct rlimit64 *rlim64, struct rlimit *rlim)$/;"	f	file:
rlim_to_rlim64	sys.c	/^static void rlim_to_rlim64(const struct rlimit *rlim, struct rlimit64 *rlim64)$/;"	f	file:
rm_endline_symbols	swap/nsp/nsp_debugfs.c	/^static void rm_endline_symbols(char *buf, size_t len)$/;"	f	file:
rm_from_queue	signal.c	/^static int rm_from_queue(unsigned long mask, struct sigpending *s)$/;"	f	file:
rm_from_queue_full	signal.c	/^static int rm_from_queue_full(sigset_t *mask, struct sigpending *s)$/;"	f	file:
rm_task_trampoline	swap/kprobe/swap_kprobes.c	/^static inline void rm_task_trampoline(struct task_struct *p,$/;"	f	file:
rm_uprobes_child	swap/us_manager/helper.c	/^static void rm_uprobes_child(struct kretprobe_instance *ri,$/;"	f	file:
rm_uprobes_child_cnt	swap/us_manager/helper.c	/^static atomic_t rm_uprobes_child_cnt = ATOMIC_INIT(0);$/;"	v	file:
root	audit_tree.c	/^	struct audit_chunk *root;$/;"	m	struct:audit_tree	typeref:struct:audit_tree::audit_chunk	file:
root	swap/ks_features/ks_map.h	/^	struct rb_root root;$/;"	m	struct:map	typeref:struct:map::rb_root
root	trace/trace.h	/^	struct filter_pred	*root;$/;"	m	struct:event_filter	typeref:struct:event_filter::filter_pred
root	trace/trace_events_filter.c	/^	struct filter_pred *root;$/;"	m	struct:fold_pred_data	typeref:struct:fold_pred_data::filter_pred	file:
root_cgroup_name	cgroup.c	/^static struct cgroup_name root_cgroup_name = { .name = "\/" };$/;"	v	typeref:struct:cgroup_name	file:
root_count	cgroup.c	/^static int root_count;$/;"	v	file:
root_cpuacct	sched/cpuacct.c	/^static struct cpuacct root_cpuacct = {$/;"	v	typeref:struct:cpuacct	file:
root_domain	sched/sched.h	/^struct root_domain {$/;"	s
root_irq_dir	irq/proc.c	/^static struct proc_dir_entry *root_irq_dir;$/;"	v	typeref:struct:proc_dir_entry	file:
root_node	gcov/fs.c	/^static struct gcov_node root_node;$/;"	v	typeref:struct:gcov_node	file:
root_swap	power/swap.c	/^static unsigned short root_swap = 0xffff;$/;"	v	file:
root_task_group	sched/core.c	/^struct task_group root_task_group;$/;"	v	typeref:struct:task_group
root_user	user.c	/^struct user_struct root_user = {$/;"	v	typeref:struct:user_struct
rootnode	cgroup.c	/^static struct cgroupfs_root rootnode;$/;"	v	typeref:struct:cgroupfs_root	file:
rotate_ctx	events/core.c	/^static void rotate_ctx(struct perf_event_context *ctx)$/;"	f	file:
round_jiffies	timer.c	/^EXPORT_SYMBOL_GPL(round_jiffies);$/;"	v
round_jiffies	timer.c	/^unsigned long round_jiffies(unsigned long j)$/;"	f
round_jiffies_common	timer.c	/^static unsigned long round_jiffies_common(unsigned long j, int cpu,$/;"	f	file:
round_jiffies_relative	timer.c	/^EXPORT_SYMBOL_GPL(round_jiffies_relative);$/;"	v
round_jiffies_relative	timer.c	/^unsigned long round_jiffies_relative(unsigned long j)$/;"	f
round_jiffies_up	timer.c	/^EXPORT_SYMBOL_GPL(round_jiffies_up);$/;"	v
round_jiffies_up	timer.c	/^unsigned long round_jiffies_up(unsigned long j)$/;"	f
round_jiffies_up_relative	timer.c	/^EXPORT_SYMBOL_GPL(round_jiffies_up_relative);$/;"	v
round_jiffies_up_relative	timer.c	/^unsigned long round_jiffies_up_relative(unsigned long j)$/;"	f
rp	swap/kprobe/swap_kprobes.h	/^	struct kretprobe *rp;           \/**< Pointer to this instance's kretprobe.*\/$/;"	m	struct:kretprobe_instance	typeref:struct:kretprobe_instance::kretprobe
rp	swap/ks_features/file_ops.c	/^	struct kretprobe rp;$/;"	m	struct:file_probe	typeref:struct:file_probe::kretprobe	file:
rp	swap/ks_features/ks_features.c	/^	struct kretprobe rp;$/;"	m	struct:ks_probe	typeref:struct:ks_probe::kretprobe	file:
rp	swap/uprobe/swap_uprobes.h	/^	struct uretprobe *rp;               \/**< Pointer to the parent uretprobe *\/$/;"	m	struct:uretprobe_instance	typeref:struct:uretprobe_instance::uretprobe
rp	swap/us_manager/probes/probe_info_new.h	/^		} rp;$/;"	m	union:probe_info_new::__anon57	typeref:struct:probe_info_new::__anon57::__anon59
rp	test_kprobes.c	/^static struct kretprobe rp = {$/;"	v	typeref:struct:kretprobe	file:
rp	trace/trace_kprobe.c	/^	struct kretprobe	rp;	\/* Use rp.kp for kprobe use *\/$/;"	m	struct:trace_probe	typeref:struct:trace_probe::kretprobe	file:
rp2	test_kprobes.c	/^static struct kretprobe rp2 = {$/;"	v	typeref:struct:kretprobe	file:
rp_disarm	swap/kprobe/swap_kprobes.c	/^	int rp_disarm;$/;"	m	struct:unreg_krp_args	file:
rp_i	swap/us_manager/probes/probes.h	/^		struct retprobe_info rp_i;$/;"	m	union:probe_info::__anon56	typeref:struct:probe_info::__anon56::retprobe_info
rp_msg_entry	swap/retprobe/rp_msg.c	/^EXPORT_SYMBOL_GPL(rp_msg_entry);$/;"	v
rp_msg_entry	swap/retprobe/rp_msg.c	/^void rp_msg_entry(struct pt_regs *regs, unsigned long func_addr,$/;"	f
rp_msg_exit	swap/retprobe/rp_msg.c	/^EXPORT_SYMBOL_GPL(rp_msg_exit);$/;"	v
rp_msg_exit	swap/retprobe/rp_msg.c	/^void rp_msg_exit(struct pt_regs *regs, unsigned long func_addr,$/;"	f
rpm_idle	trace/rpm-traces.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(rpm_idle);$/;"	v
rpm_resume	trace/rpm-traces.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(rpm_resume);$/;"	v
rpm_return_int	trace/rpm-traces.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(rpm_return_int);$/;"	v
rpm_suspend	trace/rpm-traces.c	/^EXPORT_TRACEPOINT_SYMBOL_GPL(rpm_suspend);$/;"	v
rps	swap/kprobe/swap_kprobes.c	/^	struct kretprobe **rps;$/;"	m	struct:unreg_krp_args	typeref:struct:unreg_krp_args::kretprobe	file:
rq	sched/sched.h	/^	struct rq *rq;	\/* cpu runqueue to which this cfs_rq is attached *\/$/;"	m	struct:cfs_rq	typeref:struct:cfs_rq::rq
rq	sched/sched.h	/^	struct rq *rq;$/;"	m	struct:rt_rq	typeref:struct:rt_rq::rq
rq	sched/sched.h	/^struct rq {$/;"	s
rq_attach_root	sched/core.c	/^static void rq_attach_root(struct rq *rq, struct root_domain *rd)$/;"	f	file:
rq_cpu_time	sched/sched.h	/^	unsigned long long rq_cpu_time;$/;"	m	struct:rq
rq_last_tick_reset	sched/sched.h	/^static inline void rq_last_tick_reset(struct rq *rq)$/;"	f
rq_nohz_flag_bits	sched/sched.h	/^enum rq_nohz_flag_bits {$/;"	g
rq_of	sched/fair.c	/^static inline struct rq *rq_of(struct cfs_rq *cfs_rq)$/;"	f	file:
rq_of_rt_rq	sched/rt.c	/^static inline struct rq *rq_of_rt_rq(struct rt_rq *rt_rq)$/;"	f	file:
rq_offline	sched/sched.h	/^	void (*rq_offline)(struct rq *rq);$/;"	m	struct:sched_class
rq_offline_fair	sched/fair.c	/^static void rq_offline_fair(struct rq *rq)$/;"	f	file:
rq_offline_rt	sched/rt.c	/^static void rq_offline_rt(struct rq *rq)$/;"	f	file:
rq_online	sched/sched.h	/^	void (*rq_online)(struct rq *rq);$/;"	m	struct:sched_class
rq_online_fair	sched/fair.c	/^static void rq_online_fair(struct rq *rq)$/;"	f	file:
rq_online_rt	sched/rt.c	/^static void rq_online_rt(struct rq *rq)$/;"	f	file:
rq_sched_info	sched/sched.h	/^	struct sched_info rq_sched_info;$/;"	m	struct:rq	typeref:struct:rq::sched_info
rq_sched_info_arrive	sched/stats.h	/^rq_sched_info_arrive(struct rq *rq, unsigned long long delta)$/;"	f
rq_sched_info_depart	sched/stats.h	/^rq_sched_info_depart(struct rq *rq, unsigned long long delta)$/;"	f
rq_sched_info_dequeued	sched/stats.h	/^rq_sched_info_dequeued(struct rq *rq, unsigned long long delta)$/;"	f
rrs_count	rcutorture.c	/^	long rrs_count;$/;"	m	struct:rcu_random_state	file:
rrs_state	rcutorture.c	/^	unsigned long rrs_state;$/;"	m	struct:rcu_random_state	file:
rsp	rcutree.h	/^	struct rcu_state *rsp;$/;"	m	struct:rcu_data	typeref:struct:rcu_data::rcu_state
rsp_wakeup	rcutree.c	/^static void rsp_wakeup(struct irq_work *work)$/;"	f	file:
rt	sched/sched.h	/^	struct rt_rq rt;$/;"	m	struct:rq	typeref:struct:rq::rt_rq
rt_avg	sched/sched.h	/^	u64 rt_avg;$/;"	m	struct:rq
rt_bandwidth	sched/sched.h	/^	struct rt_bandwidth rt_bandwidth;$/;"	m	struct:task_group	typeref:struct:task_group::rt_bandwidth
rt_bandwidth	sched/sched.h	/^struct rt_bandwidth {$/;"	s
rt_bandwidth_enabled	sched/sched.h	/^static inline int rt_bandwidth_enabled(void)$/;"	f
rt_clear_overload	sched/rt.c	/^static inline void rt_clear_overload(struct rq *rq)$/;"	f	file:
rt_entity_is_task	sched/rt.c	202;"	d	file:
rt_entity_is_task	sched/rt.c	95;"	d	file:
rt_mutex_adjust_pi	rtmutex.c	/^void rt_mutex_adjust_pi(struct task_struct *task)$/;"	f
rt_mutex_adjust_prio	rtmutex.c	/^static void rt_mutex_adjust_prio(struct task_struct *task)$/;"	f	file:
rt_mutex_adjust_prio_chain	rtmutex.c	/^static int rt_mutex_adjust_prio_chain(struct task_struct *task,$/;"	f	file:
rt_mutex_cmpxchg	rtmutex.c	127;"	d	file:
rt_mutex_cmpxchg	rtmutex.c	76;"	d	file:
rt_mutex_deadlock_account_lock	rtmutex-debug.c	/^rt_mutex_deadlock_account_lock(struct rt_mutex *lock, struct task_struct *task)$/;"	f
rt_mutex_deadlock_account_lock	rtmutex.h	14;"	d
rt_mutex_deadlock_account_unlock	rtmutex-debug.c	/^void rt_mutex_deadlock_account_unlock(struct task_struct *task)$/;"	f
rt_mutex_deadlock_account_unlock	rtmutex.h	15;"	d
rt_mutex_deadlock_check	rtmutex.h	13;"	d
rt_mutex_debug_task_free	rtmutex-debug.c	/^void rt_mutex_debug_task_free(struct task_struct *task)$/;"	f
rt_mutex_destroy	rtmutex.c	/^EXPORT_SYMBOL_GPL(rt_mutex_destroy);$/;"	v
rt_mutex_destroy	rtmutex.c	/^void rt_mutex_destroy(struct rt_mutex *lock)$/;"	f
rt_mutex_fastlock	rtmutex.c	/^rt_mutex_fastlock(struct rt_mutex *lock, int state,$/;"	f	file:
rt_mutex_fasttrylock	rtmutex.c	/^rt_mutex_fasttrylock(struct rt_mutex *lock,$/;"	f	file:
rt_mutex_fastunlock	rtmutex.c	/^rt_mutex_fastunlock(struct rt_mutex *lock,$/;"	f	file:
rt_mutex_finish_proxy_lock	rtmutex.c	/^int rt_mutex_finish_proxy_lock(struct rt_mutex *lock,$/;"	f
rt_mutex_getprio	rtmutex.c	/^int rt_mutex_getprio(struct task_struct *task)$/;"	f
rt_mutex_handle_deadlock	rtmutex.c	/^static void rt_mutex_handle_deadlock(int res, int detect_deadlock,$/;"	f	file:
rt_mutex_has_waiters	rtmutex_common.h	/^static inline int rt_mutex_has_waiters(struct rt_mutex *lock)$/;"	f
rt_mutex_init_proxy_locked	rtmutex.c	/^void rt_mutex_init_proxy_locked(struct rt_mutex *lock,$/;"	f
rt_mutex_init_task	fork.c	/^static void rt_mutex_init_task(struct task_struct *p)$/;"	f	file:
rt_mutex_lock	rtmutex.c	/^EXPORT_SYMBOL_GPL(rt_mutex_lock);$/;"	v
rt_mutex_lock	rtmutex.c	/^void __sched rt_mutex_lock(struct rt_mutex *lock)$/;"	f
rt_mutex_lock_interruptible	rtmutex.c	/^EXPORT_SYMBOL_GPL(rt_mutex_lock_interruptible);$/;"	v
rt_mutex_lock_interruptible	rtmutex.c	/^int __sched rt_mutex_lock_interruptible(struct rt_mutex *lock,$/;"	f
rt_mutex_next_owner	rtmutex.c	/^struct task_struct *rt_mutex_next_owner(struct rt_mutex *lock)$/;"	f
rt_mutex_owner	rtmutex_common.h	/^static inline struct task_struct *rt_mutex_owner(struct rt_mutex *lock)$/;"	f
rt_mutex_print_deadlock	rtmutex-debug.h	/^static inline void rt_mutex_print_deadlock(struct rt_mutex_waiter *w)$/;"	f
rt_mutex_print_deadlock	rtmutex.h	/^static inline void rt_mutex_print_deadlock(struct rt_mutex_waiter *w)$/;"	f
rt_mutex_proxy_unlock	rtmutex.c	/^void rt_mutex_proxy_unlock(struct rt_mutex *lock,$/;"	f
rt_mutex_set_owner	rtmutex.c	/^rt_mutex_set_owner(struct rt_mutex *lock, struct task_struct *owner)$/;"	f	file:
rt_mutex_setprio	sched/core.c	/^void rt_mutex_setprio(struct task_struct *p, int prio)$/;"	f
rt_mutex_slowlock	rtmutex.c	/^rt_mutex_slowlock(struct rt_mutex *lock, int state,$/;"	f	file:
rt_mutex_slowtrylock	rtmutex.c	/^rt_mutex_slowtrylock(struct rt_mutex *lock)$/;"	f	file:
rt_mutex_slowunlock	rtmutex.c	/^rt_mutex_slowunlock(struct rt_mutex *lock)$/;"	f	file:
rt_mutex_start_proxy_lock	rtmutex.c	/^int rt_mutex_start_proxy_lock(struct rt_mutex *lock,$/;"	f
rt_mutex_timed_fastlock	rtmutex.c	/^rt_mutex_timed_fastlock(struct rt_mutex *lock, int state,$/;"	f	file:
rt_mutex_timed_lock	rtmutex.c	/^EXPORT_SYMBOL_GPL(rt_mutex_timed_lock);$/;"	v
rt_mutex_timed_lock	rtmutex.c	/^rt_mutex_timed_lock(struct rt_mutex *lock, struct hrtimer_sleeper *timeout,$/;"	f
rt_mutex_top_waiter	rtmutex_common.h	/^rt_mutex_top_waiter(struct rt_mutex *lock)$/;"	f
rt_mutex_trylock	rtmutex.c	/^EXPORT_SYMBOL_GPL(rt_mutex_trylock);$/;"	v
rt_mutex_trylock	rtmutex.c	/^int __sched rt_mutex_trylock(struct rt_mutex *lock)$/;"	f
rt_mutex_unlock	rtmutex.c	/^EXPORT_SYMBOL_GPL(rt_mutex_unlock);$/;"	v
rt_mutex_unlock	rtmutex.c	/^void __sched rt_mutex_unlock(struct rt_mutex *lock)$/;"	f
rt_mutex_waiter	rtmutex_common.h	/^struct rt_mutex_waiter {$/;"	s
rt_nr_boosted	sched/sched.h	/^	unsigned long rt_nr_boosted;$/;"	m	struct:rt_rq
rt_nr_migratory	sched/sched.h	/^	unsigned long rt_nr_migratory;$/;"	m	struct:rt_rq
rt_nr_running	sched/sched.h	/^	unsigned int rt_nr_running;$/;"	m	struct:rt_rq
rt_nr_total	sched/sched.h	/^	unsigned long rt_nr_total;$/;"	m	struct:rt_rq
rt_overloaded	sched/rt.c	/^static inline int rt_overloaded(struct rq *rq)$/;"	f	file:
rt_period	sched/core.c	/^	u64 rt_period;$/;"	m	struct:rt_schedulable_data	file:
rt_period	sched/sched.h	/^	ktime_t			rt_period;$/;"	m	struct:rt_bandwidth
rt_period_timer	sched/sched.h	/^	struct hrtimer		rt_period_timer;$/;"	m	struct:rt_bandwidth	typeref:struct:rt_bandwidth::hrtimer
rt_policy	sched/sched.h	/^static inline int rt_policy(int policy)$/;"	f
rt_prio_array	sched/sched.h	/^struct rt_prio_array {$/;"	s
rt_priority	trace/trace.h	/^	unsigned long		rt_priority;$/;"	m	struct:trace_array_cpu
rt_rq	sched/sched.h	/^	struct rt_rq **rt_rq;$/;"	m	struct:task_group	typeref:struct:task_group::rt_rq
rt_rq	sched/sched.h	/^struct rt_rq {$/;"	s
rt_rq_iter_t	sched/rt.c	/^typedef struct rt_rq *rt_rq_iter_t;$/;"	t	typeref:struct:rt_rq	file:
rt_rq_iter_t	sched/rt.c	/^typedef struct task_group *rt_rq_iter_t;$/;"	t	typeref:struct:task_group	file:
rt_rq_of_se	sched/rt.c	/^static inline struct rt_rq *rt_rq_of_se(struct sched_rt_entity *rt_se)$/;"	f	file:
rt_rq_throttled	sched/rt.c	/^static inline int rt_rq_throttled(struct rt_rq *rt_rq)$/;"	f	file:
rt_runtime	sched/core.c	/^	u64 rt_runtime;$/;"	m	struct:rt_schedulable_data	file:
rt_runtime	sched/sched.h	/^	u64			rt_runtime;$/;"	m	struct:rt_bandwidth
rt_runtime	sched/sched.h	/^	u64 rt_runtime;$/;"	m	struct:rt_rq
rt_runtime_lock	sched/sched.h	/^	raw_spinlock_t		rt_runtime_lock;$/;"	m	struct:rt_bandwidth
rt_runtime_lock	sched/sched.h	/^	raw_spinlock_t rt_runtime_lock;$/;"	m	struct:rt_rq
rt_sched_class	sched/rt.c	/^const struct sched_class rt_sched_class = {$/;"	v	typeref:struct:sched_class
rt_schedulable_data	sched/core.c	/^struct rt_schedulable_data {$/;"	s	file:
rt_se	sched/sched.h	/^	struct sched_rt_entity **rt_se;$/;"	m	struct:task_group	typeref:struct:task_group::sched_rt_entity
rt_se_boosted	sched/rt.c	/^static int rt_se_boosted(struct sched_rt_entity *rt_se)$/;"	f	file:
rt_se_prio	sched/rt.c	/^static inline int rt_se_prio(struct sched_rt_entity *rt_se)$/;"	f	file:
rt_set_overload	sched/rt.c	/^static inline void rt_set_overload(struct rq *rq)$/;"	f	file:
rt_task_of	sched/rt.c	/^static inline struct task_struct *rt_task_of(struct sched_rt_entity *rt_se)$/;"	f	file:
rt_throttled	sched/sched.h	/^	int rt_throttled;$/;"	m	struct:rt_rq
rt_time	sched/sched.h	/^	u64 rt_time;$/;"	m	struct:rt_rq
rt_waiter	futex.c	/^	struct rt_mutex_waiter *rt_waiter;$/;"	m	struct:futex_q	typeref:struct:futex_q::rt_mutex_waiter	file:
rtcdev	time/alarmtimer.c	/^static struct rtc_device	*rtcdev;$/;"	v	typeref:struct:rtc_device	file:
rtcdev	time/alarmtimer.c	136;"	d	file:
rtctimer	time/alarmtimer.c	/^static struct rtc_timer		rtctimer;$/;"	v	typeref:struct:rtc_timer	file:
rto_count	sched/sched.h	/^	atomic_t rto_count;$/;"	m	struct:root_domain
rto_mask	sched/sched.h	/^	cpumask_var_t rto_mask;$/;"	m	struct:root_domain
rtort_free	rcutorture.c	/^	struct list_head rtort_free;$/;"	m	struct:rcu_torture	typeref:struct:rcu_torture::list_head	file:
rtort_mbtest	rcutorture.c	/^	int rtort_mbtest;$/;"	m	struct:rcu_torture	file:
rtort_pipe_count	rcutorture.c	/^	int rtort_pipe_count;$/;"	m	struct:rcu_torture	file:
rtort_rcu	rcutorture.c	/^	struct rcu_head rtort_rcu;$/;"	m	struct:rcu_torture	typeref:struct:rcu_torture::rcu_head	file:
rttest_event	rtmutex-tester.c	/^static atomic_t rttest_event;$/;"	v	file:
rttest_lock	rtmutex-tester.c	/^static spinlock_t rttest_lock;$/;"	v	file:
rttest_subsys	rtmutex-tester.c	/^static struct bus_type rttest_subsys = {$/;"	v	typeref:struct:bus_type	file:
rule	audit.h	/^	struct audit_krule	rule;$/;"	m	struct:audit_entry	typeref:struct:audit_entry::audit_krule
rules	audit_tree.c	/^	struct list_head rules;$/;"	m	struct:audit_tree	typeref:struct:audit_tree::list_head	file:
rules	audit_watch.c	/^	struct list_head	rules;	\/* anchor for krule->rlist *\/$/;"	m	struct:audit_watch	typeref:struct:audit_watch::list_head	file:
run_hrtimer_softirq	hrtimer.c	/^static void run_hrtimer_softirq(struct softirq_action *h)$/;"	f	file:
run_ksoftirqd	softirq.c	/^static void run_ksoftirqd(unsigned int cpu)$/;"	f	file:
run_local_timers	timer.c	/^void run_local_timers(void)$/;"	f
run_posix_cpu_timers	posix-cpu-timers.c	/^void run_posix_cpu_timers(struct task_struct *tsk)$/;"	f
run_rebalance_domains	sched/fair.c	/^static void run_rebalance_domains(struct softirq_action *h)$/;"	f	file:
run_threads	power/swap.c	/^	unsigned run_threads;                     \/* nr current threads *\/$/;"	m	struct:crc_data	file:
run_timer_softirq	timer.c	/^static void run_timer_softirq(struct softirq_action *h)$/;"	f	file:
run_tracer_selftest	trace/trace.c	/^static inline int run_tracer_selftest(struct tracer *type)$/;"	f	file:
run_tracer_selftest	trace/trace.c	/^static int run_tracer_selftest(struct tracer *type)$/;"	f	file:
runnable_avg	sched/sched.h	/^	atomic_t runnable_avg, usage_avg;$/;"	m	struct:task_group
runnable_avg_yN_inv	sched/fair.c	/^static const u32 runnable_avg_yN_inv[] = {$/;"	v	file:
runnable_avg_yN_sum	sched/fair.c	/^static const u32 runnable_avg_yN_sum[] = {$/;"	v	file:
runnable_load_avg	sched/sched.h	/^	u64 runnable_load_avg, blocked_load_avg;$/;"	m	struct:cfs_rq
running	swap/energy/tm_stat.h	/^	u64 running;		\/**< Running time *\/$/;"	m	struct:tm_stat
running_helpers	kmod.c	/^static atomic_t running_helpers = ATOMIC_INIT(0);$/;"	v	file:
running_timer	timer.c	/^	struct timer_list *running_timer;$/;"	m	struct:tvec_base	typeref:struct:tvec_base::timer_list	file:
runtime	sched/sched.h	/^	u64 quota, runtime;$/;"	m	struct:cfs_bandwidth
runtime_enabled	sched/sched.h	/^	int runtime_enabled;$/;"	m	struct:cfs_rq
runtime_expires	sched/sched.h	/^	u64 runtime_expires;$/;"	m	struct:cfs_bandwidth
runtime_expires	sched/sched.h	/^	u64 runtime_expires;$/;"	m	struct:cfs_rq
runtime_refresh_within	sched/fair.c	/^static int runtime_refresh_within(struct cfs_bandwidth *cfs_b, u64 min_expire)$/;"	f	file:
runtime_remaining	sched/sched.h	/^	s64 runtime_remaining;$/;"	m	struct:cfs_rq
rwlock	swap/us_manager/img/img_proc.c	/^	rwlock_t rwlock;$/;"	m	struct:img_proc	file:
rwlock	trace/trace_uprobe.c	/^	rwlock_t		rwlock;$/;"	m	struct:trace_uprobe_filter	file:
s16	trace/trace_events_filter.c	/^DEFINE_COMPARISON_PRED(s16);$/;"	v
s32	trace/trace_events_filter.c	/^DEFINE_COMPARISON_PRED(s32);$/;"	v
s64	trace/trace_events_filter.c	/^DEFINE_COMPARISON_PRED(s64);$/;"	v
s6e8aa0	swap/energy/lcd/s6e8aa0.c	/^struct lcd_ops *LCD_MAKE_FNAME(s6e8aa0)(void)$/;"	f
s6e8aa0_check	swap/energy/lcd/s6e8aa0.c	/^static int s6e8aa0_check(struct lcd_ops *ops)$/;"	f	file:
s6e8aa0_check	swap/energy/lcd/s6e8aa0_panel.c	/^static int s6e8aa0_check(struct lcd_ops *ops)$/;"	f	file:
s6e8aa0_get_parameter	swap/energy/lcd/s6e8aa0.c	/^static unsigned long s6e8aa0_get_parameter(struct lcd_ops *ops,$/;"	f	file:
s6e8aa0_get_parameter	swap/energy/lcd/s6e8aa0_panel.c	/^static unsigned long s6e8aa0_get_parameter(struct lcd_ops *ops,$/;"	f	file:
s6e8aa0_ops	swap/energy/lcd/s6e8aa0.c	/^static struct lcd_ops s6e8aa0_ops = {$/;"	v	typeref:struct:lcd_ops	file:
s6e8aa0_ops	swap/energy/lcd/s6e8aa0_panel.c	/^static struct lcd_ops s6e8aa0_ops = {$/;"	v	typeref:struct:lcd_ops	file:
s6e8aa0_panel	swap/energy/lcd/s6e8aa0_panel.c	/^struct lcd_ops *LCD_MAKE_FNAME(s6e8aa0_panel)(void)$/;"	f
s6e8aa0_set	swap/energy/lcd/s6e8aa0.c	/^int s6e8aa0_set(struct lcd_ops *ops)$/;"	f
s6e8aa0_set	swap/energy/lcd/s6e8aa0_panel.c	/^int s6e8aa0_set(struct lcd_ops *ops)$/;"	f
s6e8aa0_unset	swap/energy/lcd/s6e8aa0.c	/^int s6e8aa0_unset(struct lcd_ops *ops)$/;"	f
s6e8aa0_unset	swap/energy/lcd/s6e8aa0_panel.c	/^int s6e8aa0_unset(struct lcd_ops *ops)$/;"	f
s8	trace/trace_events_filter.c	/^DEFINE_COMPARISON_PRED(s8);$/;"	v
s_alloc	sched/core.c	/^enum s_alloc {$/;"	g	file:
s_data	sched/core.c	/^struct s_data {$/;"	s	file:
s_next	kallsyms.c	/^static void *s_next(struct seq_file *m, void *p, loff_t *pos)$/;"	f	file:
s_next	trace/trace.c	/^static void *s_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
s_next	trace/trace_events.c	/^s_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
s_show	kallsyms.c	/^static int s_show(struct seq_file *m, void *p)$/;"	f	file:
s_show	trace/trace.c	/^static int s_show(struct seq_file *m, void *v)$/;"	f	file:
s_start	kallsyms.c	/^static void *s_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
s_start	trace/trace.c	/^static void *s_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
s_start	trace/trace_events.c	/^static void *s_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
s_stop	kallsyms.c	/^static void s_stop(struct seq_file *m, void *p)$/;"	f	file:
s_stop	trace/trace.c	/^static void s_stop(struct seq_file *m, void *p)$/;"	f	file:
sa_none	sched/core.c	/^	sa_none,$/;"	e	enum:s_alloc	file:
sa_rootdomain	sched/core.c	/^	sa_rootdomain,$/;"	e	enum:s_alloc	file:
sa_sd	sched/core.c	/^	sa_sd,$/;"	e	enum:s_alloc	file:
sa_sd_storage	sched/core.c	/^	sa_sd_storage,$/;"	e	enum:s_alloc	file:
safe_copy_page	power/snapshot.c	/^static void safe_copy_page(void *dst, struct page *s_page)$/;"	f	file:
safe_highmem_bm	power/snapshot.c	/^static struct memory_bitmap *safe_highmem_bm;$/;"	v	typeref:struct:memory_bitmap	file:
safe_highmem_pages	power/snapshot.c	/^static unsigned int safe_highmem_pages;$/;"	v	file:
safe_needed	power/snapshot.c	/^	int safe_needed;	\/* if set, only "safe" pages are allocated *\/$/;"	m	struct:chain_allocator	file:
safe_pages_list	power/snapshot.c	/^static struct linked_page *safe_pages_list;$/;"	v	typeref:struct:linked_page	file:
same_magic	module.c	/^static inline int same_magic(const char *amagic, const char *bmagic,$/;"	f	file:
same_root	audit_tree.c	/^	struct list_head same_root;$/;"	m	struct:audit_tree	typeref:struct:audit_tree::list_head	file:
sample	swap/parser/features.c	/^struct sample {$/;"	s	file:
sample_msg	swap/parser/features.c	/^static void sample_msg(struct pt_regs *regs)$/;"	f	file:
sample_period	watchdog.c	/^static u64 __read_mostly sample_period;$/;"	v	file:
sample_to_timespec	posix-cpu-timers.c	/^static void sample_to_timespec(const clockid_t which_clock,$/;"	f	file:
sampler_cb	swap/parser/features.c	/^static void sampler_cb(struct pt_regs *regs)$/;"	f	file:
sampler_cb	swap/sampler/swap_sampler_module.c	/^static swap_sample_cb_t sampler_cb;$/;"	v	file:
sampler_exit	swap/sampler/swap_sampler_module.c	/^module_exit(sampler_exit);$/;"	v
sampler_exit	swap/sampler/swap_sampler_module.c	/^static void __exit sampler_exit(void)$/;"	f	file:
sampler_init	swap/sampler/swap_sampler_module.c	/^module_init(sampler_init);$/;"	v
sampler_init	swap/sampler/swap_sampler_module.c	/^static int __init sampler_init(void)$/;"	f	file:
sampler_run	swap/sampler/swap_sampler_module.c	/^static int sampler_run;$/;"	v	file:
sampler_timer_quantum	swap/sampler/sampler_hrtimer.c	/^static u64 sampler_timer_quantum;$/;"	v	file:
sampler_timer_quantum	swap/sampler/sampler_timer.c	/^static unsigned long sampler_timer_quantum;$/;"	v	file:
sampler_timers_restart	swap/sampler/sampler_hrtimer.c	/^restart_ret sampler_timers_restart(swap_timer *timer)$/;"	f
sampler_timers_restart	swap/sampler/sampler_timer.c	/^restart_ret sampler_timers_restart(swap_timer *timer)$/;"	f
sampler_timers_set_quantum	swap/sampler/sampler_hrtimer.c	/^void sampler_timers_set_quantum(unsigned int timer_quantum)$/;"	f
sampler_timers_set_quantum	swap/sampler/sampler_timer.c	/^void sampler_timers_set_quantum(unsigned int timer_quantum)$/;"	f
sampler_timers_set_run	swap/sampler/sampler_hrtimer.c	/^void sampler_timers_set_run(void)$/;"	f
sampler_timers_set_run	swap/sampler/sampler_timer.c	/^void sampler_timers_set_run(void)$/;"	f
sampler_timers_set_stop	swap/sampler/sampler_hrtimer.c	/^void sampler_timers_set_stop(void)$/;"	f
sampler_timers_set_stop	swap/sampler/sampler_timer.c	/^void sampler_timers_set_stop(void)$/;"	f
sampler_timers_start	swap/sampler/sampler_hrtimer.c	/^void sampler_timers_start(void *restart_func)$/;"	f
sampler_timers_start	swap/sampler/sampler_timer.c	/^void sampler_timers_start(void *restart_func)$/;"	f
sampler_timers_stop	swap/sampler/sampler_hrtimer.c	/^void sampler_timers_stop(int cpu)$/;"	f
sampler_timers_stop	swap/sampler/sampler_timer.c	/^void sampler_timers_stop(int cpu)$/;"	f
save_config	swap/parser/msg_parser.c	/^void save_config(const struct conf_data *conf)$/;"	f
save_current_flags	swap/uprobe/arch/x86/swap-asm/swap_uprobes.c	/^static void save_current_flags(struct pt_regs *regs)$/;"	f	file:
save_flags	trace/trace_irqsoff.c	/^static int save_flags;$/;"	v	file:
save_flags	trace/trace_sched_wakeup.c	/^static int save_flags;$/;"	v	file:
save_image	power/swap.c	/^static int save_image(struct swap_map_handle *handle,$/;"	f	file:
save_image_lzo	power/swap.c	/^static int save_image_lzo(struct swap_map_handle *handle,$/;"	f	file:
save_info	gcov/fs.c	/^static void save_info(struct gcov_node *node, struct gcov_info *info)$/;"	f	file:
save_pc	swap/us_manager/helper.c	/^	unsigned long save_pc;$/;"	m	struct:pf_data	file:
save_previous_kprobe	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^void save_previous_kprobe(struct kprobe_ctlblk *kcb, struct kprobe *p_run)$/;"	f
save_previous_kprobe	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^void save_previous_kprobe(struct kprobe_ctlblk *kcb, struct kprobe *cur_p)$/;"	f
save_stack_trace_regs	stacktrace.c	/^save_stack_trace_regs(struct pt_regs *regs, struct stack_trace *trace)$/;"	f
save_stack_trace_tsk	stacktrace.c	/^save_stack_trace_tsk(struct task_struct *tsk, struct stack_trace *trace)$/;"	f
save_trace	lockdep.c	/^static int save_trace(struct stack_trace *trace)$/;"	f	file:
saveable_highmem_page	power/snapshot.c	/^static inline void *saveable_highmem_page(struct zone *z, unsigned long p)$/;"	f	file:
saveable_highmem_page	power/snapshot.c	/^static struct page *saveable_highmem_page(struct zone *zone, unsigned long pfn)$/;"	f	file:
saveable_page	power/snapshot.c	/^static struct page *saveable_page(struct zone *zone, unsigned long pfn)$/;"	f	file:
saved_cmdlines	trace/trace.c	/^static char saved_cmdlines[SAVED_CMDLINES][TASK_COMM_LEN];$/;"	v	file:
saved_ftrace_func	trace/ftrace.c	/^static ftrace_func_t saved_ftrace_func;$/;"	v	file:
saved_latency	trace/trace.h	/^	unsigned long		saved_latency;$/;"	m	struct:trace_array_cpu
saved_max_active	workqueue.c	/^	int			saved_max_active; \/* WQ: saved pwq max_active *\/$/;"	m	struct:workqueue_struct	file:
saved_max_pfn	crash_dump.c	/^unsigned long saved_max_pfn;$/;"	v
saved_tgids	trace/trace.c	/^static unsigned saved_tgids[SAVED_CMDLINES];$/;"	v	file:
sc_enable	swap/ks_features/ks_features.c	/^static int sc_enable;$/;"	v	file:
scale_load	sched/sched.h	56;"	d
scale_load_down	sched/sched.h	57;"	d
scale_rt_power	sched/fair.c	/^static unsigned long scale_rt_power(int cpu)$/;"	f	file:
scale_stime	sched/cputime.c	/^static cputime_t scale_stime(u64 stime, u64 rtime, u64 total)$/;"	f	file:
sched_addr	swap/kprobe/swap_kprobes.c	/^unsigned long sched_addr;$/;"	v
sched_autogroup_create_attach	sched/auto_group.c	/^EXPORT_SYMBOL(sched_autogroup_create_attach);$/;"	v
sched_autogroup_create_attach	sched/auto_group.c	/^void sched_autogroup_create_attach(struct task_struct *p)$/;"	f
sched_autogroup_detach	sched/auto_group.c	/^EXPORT_SYMBOL(sched_autogroup_detach);$/;"	v
sched_autogroup_detach	sched/auto_group.c	/^void sched_autogroup_detach(struct task_struct *p)$/;"	f
sched_autogroup_exit	sched/auto_group.c	/^void sched_autogroup_exit(struct signal_struct *sig)$/;"	f
sched_autogroup_fork	sched/auto_group.c	/^void sched_autogroup_fork(struct signal_struct *sig)$/;"	f
sched_avg_period	sched/sched.h	/^static inline u64 sched_avg_period(void)$/;"	f
sched_avg_update	sched/core.c	/^void sched_avg_update(struct rq *rq)$/;"	f
sched_avg_update	sched/sched.h	/^static inline void sched_avg_update(struct rq *rq) { }$/;"	f
sched_can_stop_tick	sched/core.c	/^bool sched_can_stop_tick(void)$/;"	f
sched_cfs_bandwidth_slice	sched/fair.c	/^static inline u64 sched_cfs_bandwidth_slice(void)$/;"	f	file:
sched_cfs_period_timer	sched/fair.c	/^static enum hrtimer_restart sched_cfs_period_timer(struct hrtimer *timer)$/;"	f	file:
sched_cfs_slack_timer	sched/fair.c	/^static enum hrtimer_restart sched_cfs_slack_timer(struct hrtimer *timer)$/;"	f	file:
sched_class	sched/sched.h	/^struct sched_class {$/;"	s
sched_class_highest	sched/sched.h	1024;"	d
sched_clock	sched/clock.c	/^EXPORT_SYMBOL_GPL(sched_clock);$/;"	v
sched_clock	sched/clock.c	/^unsigned long long __attribute__((weak)) sched_clock(void)$/;"	f
sched_clock_cpu	sched/clock.c	/^u64 sched_clock_cpu(int cpu)$/;"	f
sched_clock_data	sched/clock.c	/^struct sched_clock_data {$/;"	s	file:
sched_clock_idle_sleep_event	sched/clock.c	/^EXPORT_SYMBOL_GPL(sched_clock_idle_sleep_event);$/;"	v
sched_clock_idle_sleep_event	sched/clock.c	/^void sched_clock_idle_sleep_event(void)$/;"	f
sched_clock_idle_wakeup_event	sched/clock.c	/^EXPORT_SYMBOL_GPL(sched_clock_idle_wakeup_event);$/;"	v
sched_clock_idle_wakeup_event	sched/clock.c	/^void sched_clock_idle_wakeup_event(u64 delta_ns)$/;"	f
sched_clock_init	sched/clock.c	/^void sched_clock_init(void)$/;"	f
sched_clock_irqtime	sched/cputime.c	/^static int sched_clock_irqtime;$/;"	v	file:
sched_clock_irqtime	sched/cputime.c	111;"	d	file:
sched_clock_local	sched/clock.c	/^static u64 sched_clock_local(struct sched_clock_data *scd)$/;"	f	file:
sched_clock_remote	sched/clock.c	/^static u64 sched_clock_remote(struct sched_clock_data *scd)$/;"	f	file:
sched_clock_running	sched/clock.c	/^__read_mostly int sched_clock_running;$/;"	v
sched_clock_stable	sched/clock.c	/^__read_mostly int sched_clock_stable;$/;"	v
sched_clock_tick	sched/clock.c	/^void sched_clock_tick(void)$/;"	f
sched_count	sched/sched.h	/^	unsigned int sched_count;$/;"	m	struct:rq
sched_cpu_active	sched/core.c	/^static int __cpuinit sched_cpu_active(struct notifier_block *nfb,$/;"	f	file:
sched_cpu_inactive	sched/core.c	/^static int __cpuinit sched_cpu_inactive(struct notifier_block *nfb,$/;"	f	file:
sched_create_group	sched/core.c	/^struct task_group *sched_create_group(struct task_group *parent)$/;"	f
sched_debug	sched/core.c	/^static inline bool sched_debug(void)$/;"	f	file:
sched_debug_enabled	sched/core.c	/^static __read_mostly int sched_debug_enabled;$/;"	v	file:
sched_debug_fops	sched/debug.c	/^static const struct file_operations sched_debug_fops = {$/;"	v	typeref:struct:file_operations	file:
sched_debug_header	sched/debug.c	/^static void sched_debug_header(struct seq_file *m)$/;"	f	file:
sched_debug_next	sched/debug.c	/^static void *sched_debug_next(struct seq_file *file, void *data, loff_t *offset)$/;"	f	file:
sched_debug_open	sched/debug.c	/^static int sched_debug_open(struct inode *inode, struct file *filp)$/;"	f	file:
sched_debug_release	sched/debug.c	/^static int sched_debug_release(struct inode *inode, struct file *file)$/;"	f	file:
sched_debug_setup	sched/core.c	/^static int __init sched_debug_setup(char *str)$/;"	f	file:
sched_debug_show	sched/debug.c	/^static int sched_debug_show(struct seq_file *m, void *v)$/;"	f	file:
sched_debug_sops	sched/debug.c	/^static const struct seq_operations sched_debug_sops = {$/;"	v	typeref:struct:seq_operations	file:
sched_debug_start	sched/debug.c	/^static void *sched_debug_start(struct seq_file *file, loff_t *offset)$/;"	f	file:
sched_debug_stop	sched/debug.c	/^static void sched_debug_stop(struct seq_file *file, void *data)$/;"	f	file:
sched_destroy_group	sched/core.c	/^void sched_destroy_group(struct task_group *tg)$/;"	f
sched_domain_debug	sched/core.c	/^static void sched_domain_debug(struct sched_domain *sd, int cpu)$/;"	f	file:
sched_domain_debug	sched/core.c	5505;"	d	file:
sched_domain_debug_one	sched/core.c	/^static int sched_domain_debug_one(struct sched_domain *sd, int cpu, int level,$/;"	f	file:
sched_domain_init_f	sched/core.c	/^typedef struct sched_domain *(*sched_domain_init_f)(struct sched_domain_topology_level *tl, int cpu);$/;"	t	typeref:struct:sched_domain_init_f	file:
sched_domain_level_max	sched/core.c	/^int sched_domain_level_max;$/;"	v
sched_domain_mask_f	sched/core.c	/^typedef const struct cpumask *(*sched_domain_mask_f)(int cpu);$/;"	t	typeref:struct:sched_domain_mask_f	file:
sched_domain_topology	sched/core.c	/^static struct sched_domain_topology_level *sched_domain_topology = default_topology;$/;"	v	typeref:struct:sched_domain_topology_level	file:
sched_domain_topology_level	sched/core.c	/^struct sched_domain_topology_level {$/;"	s	file:
sched_domains_curr_level	sched/core.c	/^static int sched_domains_curr_level;$/;"	v	file:
sched_domains_mutex	sched/core.c	/^DEFINE_MUTEX(sched_domains_mutex);$/;"	v
sched_domains_numa_distance	sched/core.c	/^static int *sched_domains_numa_distance;$/;"	v	file:
sched_domains_numa_levels	sched/core.c	/^static int sched_domains_numa_levels;$/;"	v	file:
sched_domains_numa_masks	sched/core.c	/^static struct cpumask ***sched_domains_numa_masks;$/;"	v	typeref:struct:cpumask	file:
sched_domains_numa_masks_clear	sched/core.c	/^static void sched_domains_numa_masks_clear(int cpu)$/;"	f	file:
sched_domains_numa_masks_set	sched/core.c	/^static void sched_domains_numa_masks_set(int cpu)$/;"	f	file:
sched_domains_numa_masks_update	sched/core.c	/^static int sched_domains_numa_masks_update(struct notifier_block *nfb,$/;"	f	file:
sched_domains_tmpmask	sched/core.c	/^static cpumask_var_t sched_domains_tmpmask; \/* sched_domains_mutex *\/$/;"	v	file:
sched_exec	sched/core.c	/^void sched_exec(void)$/;"	f
sched_expedited_ops	rcutorture.c	/^static struct rcu_torture_ops sched_expedited_ops = {$/;"	v	typeref:struct:rcu_torture_ops	file:
sched_feat	sched/sched.h	766;"	d
sched_feat	sched/sched.h	768;"	d
sched_feat_disable	sched/core.c	/^static void sched_feat_disable(int i) { };$/;"	f	file:
sched_feat_disable	sched/core.c	/^static void sched_feat_disable(int i)$/;"	f	file:
sched_feat_enable	sched/core.c	/^static void sched_feat_enable(int i) { };$/;"	f	file:
sched_feat_enable	sched/core.c	/^static void sched_feat_enable(int i)$/;"	f	file:
sched_feat_fops	sched/core.c	/^static const struct file_operations sched_feat_fops = {$/;"	v	typeref:struct:file_operations	file:
sched_feat_keys	sched/core.c	/^struct static_key sched_feat_keys[__SCHED_FEAT_NR] = {$/;"	v	typeref:struct:static_key
sched_feat_names	sched/core.c	/^static const char * const sched_feat_names[] = {$/;"	v	file:
sched_feat_numa	sched/sched.h	772;"	d
sched_feat_numa	sched/sched.h	779;"	d
sched_feat_open	sched/core.c	/^static int sched_feat_open(struct inode *inode, struct file *filp)$/;"	f	file:
sched_feat_set	sched/core.c	/^static int sched_feat_set(char *cmp)$/;"	f	file:
sched_feat_show	sched/core.c	/^static int sched_feat_show(struct seq_file *m, void *v)$/;"	f	file:
sched_feat_write	sched/core.c	/^sched_feat_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
sched_fork	sched/core.c	/^void sched_fork(struct task_struct *p)$/;"	f
sched_getaffinity	sched/core.c	/^long sched_getaffinity(pid_t pid, struct cpumask *mask)$/;"	f
sched_goidle	sched/sched.h	/^	unsigned int sched_goidle;$/;"	m	struct:rq
sched_group	sched/sched.h	/^struct sched_group {$/;"	s
sched_group_cpus	sched/sched.h	/^static inline struct cpumask *sched_group_cpus(struct sched_group *sg)$/;"	f
sched_group_mask	sched/sched.h	/^static inline struct cpumask *sched_group_mask(struct sched_group *sg)$/;"	f
sched_group_power	sched/sched.h	/^struct sched_group_power {$/;"	s
sched_group_rt_period	sched/core.c	/^static long sched_group_rt_period(struct task_group *tg)$/;"	f	file:
sched_group_rt_runtime	sched/core.c	/^static long sched_group_rt_runtime(struct task_group *tg)$/;"	f	file:
sched_group_set_rt_period	sched/core.c	/^static int sched_group_set_rt_period(struct task_group *tg, long rt_period_us)$/;"	f	file:
sched_group_set_rt_runtime	sched/core.c	/^static int sched_group_set_rt_runtime(struct task_group *tg, long rt_runtime_us)$/;"	f	file:
sched_group_set_shares	sched/fair.c	/^int sched_group_set_shares(struct task_group *tg, unsigned long shares)$/;"	f
sched_ilb_notifier	sched/fair.c	/^static int __cpuinit sched_ilb_notifier(struct notifier_block *nfb,$/;"	f	file:
sched_info_arrive	sched/stats.h	/^static void sched_info_arrive(struct task_struct *t)$/;"	f
sched_info_depart	sched/stats.h	/^static inline void sched_info_depart(struct task_struct *t)$/;"	f
sched_info_dequeued	sched/stats.h	/^static inline void sched_info_dequeued(struct task_struct *t)$/;"	f
sched_info_dequeued	sched/stats.h	154;"	d
sched_info_queued	sched/stats.h	/^static inline void sched_info_queued(struct task_struct *t)$/;"	f
sched_info_queued	sched/stats.h	152;"	d
sched_info_reset_dequeued	sched/stats.h	/^static inline void sched_info_reset_dequeued(struct task_struct *t)$/;"	f
sched_info_reset_dequeued	sched/stats.h	153;"	d
sched_info_switch	sched/stats.h	/^sched_info_switch(struct task_struct *prev, struct task_struct *next)$/;"	f
sched_info_switch	sched/stats.h	155;"	d
sched_init	sched/core.c	/^void __init sched_init(void)$/;"	f
sched_init_debug	sched/core.c	/^late_initcall(sched_init_debug);$/;"	v
sched_init_debug	sched/core.c	/^static __init int sched_init_debug(void)$/;"	f	file:
sched_init_granularity	sched/fair.c	/^void sched_init_granularity(void)$/;"	f
sched_init_numa	sched/core.c	/^static inline void sched_init_numa(void)$/;"	f	file:
sched_init_numa	sched/core.c	/^static void sched_init_numa(void)$/;"	f	file:
sched_init_smp	sched/core.c	/^void __init sched_init_smp(void)$/;"	f
sched_move_task	sched/core.c	/^void sched_move_task(struct task_struct *tsk)$/;"	f
sched_nr_latency	sched/fair.c	/^static unsigned int sched_nr_latency = 8;$/;"	v	file:
sched_nr_migrate_break	sched/fair.c	/^static const unsigned int sched_nr_migrate_break = 32;$/;"	v	file:
sched_numa_warn	sched/core.c	/^static void sched_numa_warn(const char *str)$/;"	f	file:
sched_offline_group	sched/core.c	/^void sched_offline_group(struct task_group *tg)$/;"	f
sched_online_group	sched/core.c	/^void sched_online_group(struct task_group *tg, struct task_group *parent)$/;"	f
sched_ops	rcutorture.c	/^static struct rcu_torture_ops sched_ops = {$/;"	v	typeref:struct:rcu_torture_ops	file:
sched_proc_update_handler	sched/fair.c	/^int sched_proc_update_handler(struct ctl_table *table, int write,$/;"	f
sched_ref	trace/trace_sched_switch.c	/^static int			sched_ref;$/;"	v	file:
sched_rr_handler	sched/core.c	/^int sched_rr_handler(struct ctl_table *table, int write,$/;"	f
sched_rr_timeslice	sched/rt.c	/^int sched_rr_timeslice = RR_TIMESLICE;$/;"	v
sched_rt_avg_update	sched/sched.h	/^static inline void sched_rt_avg_update(struct rq *rq, u64 rt_delta) { }$/;"	f
sched_rt_avg_update	sched/sched.h	/^static inline void sched_rt_avg_update(struct rq *rq, u64 rt_delta)$/;"	f
sched_rt_bandwidth	sched/rt.c	/^static inline struct rt_bandwidth *sched_rt_bandwidth(struct rt_rq *rt_rq)$/;"	f	file:
sched_rt_can_attach	sched/core.c	/^static int sched_rt_can_attach(struct task_group *tg, struct task_struct *tsk)$/;"	f	file:
sched_rt_global_constraints	sched/core.c	/^static int sched_rt_global_constraints(void)$/;"	f	file:
sched_rt_handler	sched/core.c	/^int sched_rt_handler(struct ctl_table *table, int write,$/;"	f
sched_rt_period	sched/rt.c	/^static inline u64 sched_rt_period(struct rt_rq *rt_rq)$/;"	f	file:
sched_rt_period_mask	sched/rt.c	/^static inline const struct cpumask *sched_rt_period_mask(void)$/;"	f	file:
sched_rt_period_rt_rq	sched/rt.c	/^struct rt_rq *sched_rt_period_rt_rq(struct rt_bandwidth *rt_b, int cpu)$/;"	f	file:
sched_rt_period_timer	sched/rt.c	/^static enum hrtimer_restart sched_rt_period_timer(struct hrtimer *timer)$/;"	f	file:
sched_rt_rq_dequeue	sched/rt.c	/^static inline void sched_rt_rq_dequeue(struct rt_rq *rt_rq)$/;"	f	file:
sched_rt_rq_dequeue	sched/rt.c	/^static void sched_rt_rq_dequeue(struct rt_rq *rt_rq)$/;"	f	file:
sched_rt_rq_enqueue	sched/rt.c	/^static inline void sched_rt_rq_enqueue(struct rt_rq *rt_rq)$/;"	f	file:
sched_rt_rq_enqueue	sched/rt.c	/^static void sched_rt_rq_enqueue(struct rt_rq *rt_rq)$/;"	f	file:
sched_rt_runtime	sched/rt.c	/^static inline u64 sched_rt_runtime(struct rt_rq *rt_rq)$/;"	f	file:
sched_rt_runtime_exceeded	sched/rt.c	/^static int sched_rt_runtime_exceeded(struct rt_rq *rt_rq)$/;"	f	file:
sched_set_stop_task	sched/core.c	/^void sched_set_stop_task(int cpu, struct task_struct *stop)$/;"	f
sched_setaffinity	sched/core.c	/^long sched_setaffinity(pid_t pid, const struct cpumask *in_mask)$/;"	f
sched_setscheduler	sched/core.c	/^EXPORT_SYMBOL_GPL(sched_setscheduler);$/;"	v
sched_setscheduler	sched/core.c	/^int sched_setscheduler(struct task_struct *p, int policy,$/;"	f
sched_setscheduler_nocheck	sched/core.c	/^int sched_setscheduler_nocheck(struct task_struct *p, int policy,$/;"	f
sched_show_task	sched/core.c	/^void sched_show_task(struct task_struct *p)$/;"	f
sched_skew_tick	time/tick-sched.c	/^static int sched_skew_tick;$/;"	v	file:
sched_slice	sched/fair.c	/^static u64 sched_slice(struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f	file:
sched_stopped	trace/trace_sched_switch.c	/^static int			sched_stopped;$/;"	v	file:
sched_submit_work	sched/core.c	/^static inline void sched_submit_work(struct task_struct *tsk)$/;"	f	file:
sched_sync_ops	rcutorture.c	/^static struct rcu_torture_ops sched_sync_ops = {$/;"	v	typeref:struct:rcu_torture_ops	file:
sched_torture_read_lock	rcutorture.c	/^static int sched_torture_read_lock(void)$/;"	f	file:
sched_torture_read_unlock	rcutorture.c	/^static void sched_torture_read_unlock(int idx)$/;"	f	file:
sched_ttwu_pending	sched/core.c	/^static void sched_ttwu_pending(void)$/;"	f	file:
sched_tunable_scaling_names	sched/debug.c	/^static const char *sched_tunable_scaling_names[] = {$/;"	v	file:
sched_vslice	sched/fair.c	/^static u64 sched_vslice(struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f	file:
schedstat_add	sched/stats.h	33;"	d
schedstat_add	sched/stats.h	46;"	d
schedstat_inc	sched/stats.h	32;"	d
schedstat_inc	sched/stats.h	45;"	d
schedstat_next	sched/stats.c	/^static void *schedstat_next(struct seq_file *file, void *data, loff_t *offset)$/;"	f	file:
schedstat_open	sched/stats.c	/^static int schedstat_open(struct inode *inode, struct file *file)$/;"	f	file:
schedstat_set	sched/stats.h	34;"	d
schedstat_set	sched/stats.h	47;"	d
schedstat_sops	sched/stats.c	/^static const struct seq_operations schedstat_sops = {$/;"	v	typeref:struct:seq_operations	file:
schedstat_start	sched/stats.c	/^static void *schedstat_start(struct seq_file *file, loff_t *offset)$/;"	f	file:
schedstat_stop	sched/stats.c	/^static void schedstat_stop(struct seq_file *file, void *data)$/;"	f	file:
schedule	sched/core.c	/^EXPORT_SYMBOL(schedule);$/;"	v
schedule	sched/core.c	/^asmlinkage void __sched schedule(void)$/;"	f
schedule_cpuset_propagate_hotplug	cpuset.c	/^static void schedule_cpuset_propagate_hotplug(struct cpuset *cs)$/;"	f	file:
schedule_debug	sched/core.c	/^static inline void schedule_debug(struct task_struct *prev)$/;"	f	file:
schedule_hrtimeout	hrtimer.c	/^EXPORT_SYMBOL_GPL(schedule_hrtimeout);$/;"	v
schedule_hrtimeout	hrtimer.c	/^int __sched schedule_hrtimeout(ktime_t *expires,$/;"	f
schedule_hrtimeout_range	hrtimer.c	/^EXPORT_SYMBOL_GPL(schedule_hrtimeout_range);$/;"	v
schedule_hrtimeout_range	hrtimer.c	/^int __sched schedule_hrtimeout_range(ktime_t *expires, unsigned long delta,$/;"	f
schedule_hrtimeout_range_clock	hrtimer.c	/^schedule_hrtimeout_range_clock(ktime_t *expires, unsigned long delta,$/;"	f
schedule_next_timer	posix-timers.c	/^static void schedule_next_timer(struct k_itimer *timr)$/;"	f	file:
schedule_on_each_cpu	workqueue.c	/^int schedule_on_each_cpu(work_func_t func)$/;"	f
schedule_preempt_disabled	sched/core.c	/^void __sched schedule_preempt_disabled(void)$/;"	f
schedule_rt_mutex	rtmutex_common.h	27;"	d
schedule_rt_mutex	rtmutex_common.h	36;"	d
schedule_rt_mutex_test	rtmutex-tester.c	/^void schedule_rt_mutex_test(struct rt_mutex *mutex)$/;"	f
schedule_timeout	timer.c	/^EXPORT_SYMBOL(schedule_timeout);$/;"	v
schedule_timeout	timer.c	/^signed long __sched schedule_timeout(signed long timeout)$/;"	f
schedule_timeout_interruptible	timer.c	/^EXPORT_SYMBOL(schedule_timeout_interruptible);$/;"	v
schedule_timeout_interruptible	timer.c	/^signed long __sched schedule_timeout_interruptible(signed long timeout)$/;"	f
schedule_timeout_killable	timer.c	/^EXPORT_SYMBOL(schedule_timeout_killable);$/;"	v
schedule_timeout_killable	timer.c	/^signed long __sched schedule_timeout_killable(signed long timeout)$/;"	f
schedule_timeout_uninterruptible	timer.c	/^EXPORT_SYMBOL(schedule_timeout_uninterruptible);$/;"	v
schedule_timeout_uninterruptible	timer.c	/^signed long __sched schedule_timeout_uninterruptible(signed long timeout)$/;"	f
schedule_user	sched/core.c	/^asmlinkage void __sched schedule_user(void)$/;"	f
scheduled	workqueue_internal.h	/^	struct list_head	scheduled;	\/* L: scheduled works *\/$/;"	m	struct:worker	typeref:struct:worker::list_head
scheduler_ipi	sched/core.c	/^void scheduler_ipi(void)$/;"	f
scheduler_running	sched/core.c	/^__read_mostly int scheduler_running;$/;"	v
scheduler_tick	sched/core.c	/^void scheduler_tick(void)$/;"	f
scheduler_tick_max_deferment	sched/core.c	/^u64 scheduler_tick_max_deferment(void)$/;"	f
sd	sched/core.c	/^	struct sched_domain ** __percpu sd;$/;"	m	struct:s_data	typeref:struct:s_data::__percpu	file:
sd	sched/core.c	/^	struct sched_domain **__percpu sd;$/;"	m	struct:sd_data	typeref:struct:sd_data::__percpu	file:
sd	sched/fair.c	/^	struct sched_domain	*sd;$/;"	m	struct:lb_env	typeref:struct:lb_env::sched_domain	file:
sd	sched/sched.h	/^	struct sched_domain *sd;$/;"	m	struct:rq	typeref:struct:rq::sched_domain
sd_alloc_ctl_cpu_table	sched/core.c	/^static ctl_table *sd_alloc_ctl_cpu_table(int cpu)$/;"	f	file:
sd_alloc_ctl_domain_table	sched/core.c	/^sd_alloc_ctl_domain_table(struct sched_domain *sd)$/;"	f	file:
sd_alloc_ctl_entry	sched/core.c	/^static struct ctl_table *sd_alloc_ctl_entry(int n)$/;"	f	file:
sd_ctl_dir	sched/core.c	/^static struct ctl_table sd_ctl_dir[] = {$/;"	v	typeref:struct:ctl_table	file:
sd_ctl_root	sched/core.c	/^static struct ctl_table sd_ctl_root[] = {$/;"	v	typeref:struct:ctl_table	file:
sd_data	sched/core.c	/^struct sd_data {$/;"	s	file:
sd_degenerate	sched/core.c	/^static int sd_degenerate(struct sched_domain *sd)$/;"	f	file:
sd_free_ctl_entry	sched/core.c	/^static void sd_free_ctl_entry(struct ctl_table **tablep)$/;"	f	file:
sd_lb_stats	sched/fair.c	/^struct sd_lb_stats {$/;"	s	file:
sd_local_flags	sched/core.c	/^static inline int sd_local_flags(int level)$/;"	f	file:
sd_numa_init	sched/core.c	/^sd_numa_init(struct sched_domain_topology_level *tl, int cpu)$/;"	f	file:
sd_numa_mask	sched/core.c	/^static const struct cpumask *sd_numa_mask(int cpu)$/;"	f	file:
sd_parent_degenerate	sched/core.c	/^sd_parent_degenerate(struct sched_domain *sd, struct sched_domain *parent)$/;"	f	file:
sd_sysctl_header	sched/core.c	/^static struct ctl_table_header *sd_sysctl_header;$/;"	v	typeref:struct:ctl_table_header	file:
se	sched/sched.h	/^	struct sched_entity **se;$/;"	m	struct:task_group	typeref:struct:task_group::sched_entity
search	swap/ks_features/ks_map.c	/^void *search(struct map *map, void *key)$/;"	f
search_exception_tables	extable.c	/^const struct exception_table_entry *search_exception_tables(unsigned long addr)$/;"	f
search_module_extables	module.c	/^const struct exception_table_entry *search_module_extables(unsigned long addr)$/;"	f
sec	time/ntp.c	/^	__kernel_time_t	sec;	\/* seconds *\/$/;"	m	struct:pps_normtime	file:
sec_end	debug/kdb/kdb_private.h	/^		unsigned long sec_end;$/;"	m	struct:__ksymtab
sec_name	debug/kdb/kdb_private.h	/^		const char *sec_name;	\/* Section containing symbol *\/$/;"	m	struct:__ksymtab
sec_start	debug/kdb/kdb_private.h	/^		unsigned long sec_start;$/;"	m	struct:__ksymtab
sec_text	printk.c	/^static char sec_text[1024]; \/* buffer size: LOG_LINE_MAX + PREFIX_MAX *\/$/;"	v	file:
seccomp_assign_mode	seccomp.c	/^static inline void seccomp_assign_mode(struct task_struct *task,$/;"	f	file:
seccomp_attach_filter	seccomp.c	/^static long seccomp_attach_filter(unsigned int flags,$/;"	f	file:
seccomp_bpf_load	seccomp.c	/^u32 seccomp_bpf_load(int off)$/;"	f
seccomp_can_sync_threads	seccomp.c	/^static inline pid_t seccomp_can_sync_threads(void)$/;"	f	file:
seccomp_check_filter	seccomp.c	/^static int seccomp_check_filter(struct sock_filter *filter, unsigned int flen)$/;"	f	file:
seccomp_filter	seccomp.c	/^struct seccomp_filter {$/;"	s	file:
seccomp_filter_free	seccomp.c	/^static inline void seccomp_filter_free(struct seccomp_filter *filter)$/;"	f	file:
seccomp_may_assign_mode	seccomp.c	/^static inline bool seccomp_may_assign_mode(unsigned long seccomp_mode)$/;"	f	file:
seccomp_prepare_filter	seccomp.c	/^static struct seccomp_filter *seccomp_prepare_filter(struct sock_fprog *fprog)$/;"	f	file:
seccomp_prepare_user_filter	seccomp.c	/^seccomp_prepare_user_filter(const char __user *user_filter)$/;"	f	file:
seccomp_run_filters	seccomp.c	/^static u32 seccomp_run_filters(int syscall)$/;"	f	file:
seccomp_send_sigsys	seccomp.c	/^static void seccomp_send_sigsys(int syscall, int reason)$/;"	f	file:
seccomp_set_mode_filter	seccomp.c	/^static inline long seccomp_set_mode_filter(unsigned int flags,$/;"	f	file:
seccomp_set_mode_filter	seccomp.c	/^static long seccomp_set_mode_filter(unsigned int flags,$/;"	f	file:
seccomp_set_mode_strict	seccomp.c	/^static long seccomp_set_mode_strict(void)$/;"	f	file:
seccomp_sync_threads	seccomp.c	/^static inline void seccomp_sync_threads(void)$/;"	f	file:
sechdrs	module.c	/^	Elf_Shdr *sechdrs;$/;"	m	struct:load_info	file:
seclog_buf	printk.c	/^static char *seclog_buf;$/;"	v	file:
seclog_ptr	printk.c	/^static unsigned *seclog_ptr;$/;"	v	file:
seclog_size	printk.c	/^static size_t seclog_size;$/;"	v	file:
second_overflow	time/ntp.c	/^int second_overflow(unsigned long secs)$/;"	f
second_pass	time/timer_list.c	/^	bool second_pass;$/;"	m	struct:timer_list_iter	file:
secstrings	module.c	/^	char *secstrings, *strtab;$/;"	m	struct:load_info	file:
sect_empty	module.c	/^static inline bool sect_empty(const Elf_Shdr *sect)$/;"	f	file:
section_addr	module.c	/^static void *section_addr(const struct load_info *info, const char *name)$/;"	f	file:
section_objs	module.c	/^static void *section_objs(const struct load_info *info,$/;"	f	file:
select_comparison_fn	trace/trace_events_filter.c	/^static filter_pred_fn_t select_comparison_fn(int op, int field_size,$/;"	f	file:
select_fallback_rq	sched/core.c	/^static int select_fallback_rq(int cpu, struct task_struct *p)$/;"	f	file:
select_idle_sibling	sched/fair.c	/^static int select_idle_sibling(struct task_struct *p, int target)$/;"	f	file:
select_task_rq	sched/core.c	/^int select_task_rq(struct task_struct *p, int sd_flags, int wake_flags)$/;"	f	file:
select_task_rq	sched/sched.h	/^	int  (*select_task_rq)(struct task_struct *p, int sd_flag, int flags);$/;"	m	struct:sched_class
select_task_rq_fair	sched/fair.c	/^select_task_rq_fair(struct task_struct *p, int sd_flag, int wake_flags)$/;"	f	file:
select_task_rq_idle	sched/idle_task.c	/^select_task_rq_idle(struct task_struct *p, int sd_flag, int flags)$/;"	f	file:
select_task_rq_rt	sched/rt.c	/^select_task_rq_rt(struct task_struct *p, int sd_flag, int flags)$/;"	f	file:
select_task_rq_stop	sched/stop_task.c	/^select_task_rq_stop(struct task_struct *p, int sd_flag, int flags)$/;"	f	file:
selected_console	printk.c	/^static int selected_console = -1;$/;"	v	file:
selftest	trace/trace.h	/^	int			(*selftest)(struct tracer *trace,$/;"	m	struct:tracer
sem	taskstats.c	/^	struct rw_semaphore sem;$/;"	m	struct:listener_list	typeref:struct:listener_list::rw_semaphore	file:
semaphore_waiter	semaphore.c	/^struct semaphore_waiter {$/;"	s	file:
send_cpu_listeners	taskstats.c	/^static void send_cpu_listeners(struct sk_buff *skb,$/;"	f	file:
send_mayday	workqueue.c	/^static void send_mayday(struct work_struct *work)$/;"	f	file:
send_remote_softirq	softirq.c	/^EXPORT_SYMBOL(send_remote_softirq);$/;"	v
send_remote_softirq	softirq.c	/^void send_remote_softirq(struct call_single_data *cp, int cpu, int softirq)$/;"	f
send_reply	taskstats.c	/^static int send_reply(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
send_sig	signal.c	/^EXPORT_SYMBOL(send_sig);$/;"	v
send_sig	signal.c	/^send_sig(int sig, struct task_struct *p, int priv)$/;"	f
send_sig_info	signal.c	/^EXPORT_SYMBOL(send_sig_info);$/;"	v
send_sig_info	signal.c	/^int send_sig_info(int sig, struct siginfo *info, struct task_struct *p)$/;"	f
send_signal	signal.c	/^static int send_signal(int sig, struct siginfo *info, struct task_struct *t,$/;"	f	file:
send_sigqueue	signal.c	/^int send_sigqueue(struct sigqueue *q, struct task_struct *t, int group)$/;"	f
separate_irq_context	lockdep.c	/^static inline int separate_irq_context(struct task_struct *curr,$/;"	f	file:
separate_irq_context	lockdep.c	/^static int separate_irq_context(struct task_struct *curr,$/;"	f	file:
seq	printk.c	/^	u64 seq;$/;"	m	struct:devkmsg_user	file:
seq_header	lockdep_proc.c	/^static void seq_header(struct seq_file *m)$/;"	f	file:
seq_line	lockdep_proc.c	/^static void seq_line(struct seq_file *m, char c, int offset, int length)$/;"	f	file:
seq_lock_time	lockdep_proc.c	/^static void seq_lock_time(struct seq_file *m, struct lock_time *lt)$/;"	f	file:
seq_num	swap/writer/swap_msg.c	/^	u32 seq_num;$/;"	m	struct:swap_msg	file:
seq_num	swap/writer/swap_msg.c	/^static atomic_t seq_num = ATOMIC_INIT(-1);$/;"	v	file:
seq_print_difftime	time/time_history.c	/^static inline void seq_print_difftime(struct seq_file *seq,$/;"	f	file:
seq_print_ip_sym	trace/trace_output.c	/^seq_print_ip_sym(struct trace_seq *s, unsigned long ip, unsigned long sym_flags)$/;"	f
seq_print_realtime	time/time_history.c	/^static inline void seq_print_realtime(struct seq_file *seq, struct timespec *ts,$/;"	f	file:
seq_print_sym_offset	trace/trace_output.c	/^seq_print_sym_offset(struct trace_seq *s, const char *fmt,$/;"	f	file:
seq_print_sym_short	trace/trace_output.c	/^seq_print_sym_short(struct trace_seq *s, const char *fmt, unsigned long address)$/;"	f	file:
seq_print_timestamp	time/time_history.c	/^static inline void seq_print_timestamp(struct seq_file *seq,$/;"	f	file:
seq_print_user_ip	trace/trace_output.c	/^int seq_print_user_ip(struct trace_seq *s, struct mm_struct *mm,$/;"	f
seq_print_userip_objs	trace/trace_output.c	/^seq_print_userip_objs(const struct userstack_entry *entry, struct trace_seq *s,$/;"	f
seq_stats	lockdep_proc.c	/^static void seq_stats(struct seq_file *m, struct lock_stat_data *data)$/;"	f	file:
seq_time	lockdep_proc.c	/^static void seq_time(struct seq_file *m, s64 time)$/;"	f	file:
seq_write_gcov_u32	gcov/gcc_3_4.c	/^static int seq_write_gcov_u32(struct seq_file *seq, u32 v)$/;"	f	file:
seq_write_gcov_u64	gcov/gcc_3_4.c	/^static int seq_write_gcov_u64(struct seq_file *seq, u64 v)$/;"	f	file:
serial	audit.h	/^	unsigned int	    serial;     \/* serial number for record *\/$/;"	m	struct:audit_context
session_id	auditsc.c	/^static atomic_t session_id = ATOMIC_INIT(0);$/;"	v	file:
session_list	trace/trace_stat.c	/^	struct list_head	session_list;$/;"	m	struct:stat_session	typeref:struct:stat_session::list_head	file:
session_of_pgrp	exit.c	/^struct pid *session_of_pgrp(struct pid *pgrp)$/;"	f
set	swap/energy/lcd/lcd_base.h	/^	call_lcd set;			\/**< LCD initialization *\/$/;"	m	struct:lcd_ops
set	swap/parser/features.c	/^	int (*set)(struct conf_data *conf);$/;"	m	struct:feature_item	file:
set_alarm_owner	time/time_history.c	/^static void set_alarm_owner(struct alarm_info *alarm_info, void *caller)$/;"	f	file:
set_all_modules_text_ro	module.c	/^void set_all_modules_text_ro(void)$/;"	f
set_all_modules_text_rw	module.c	/^void set_all_modules_text_rw(void)$/;"	f
set_already_mapp	swap/preload/preload_pd.c	/^static void set_already_mapp(struct process_data *pd, struct mm_struct *mm)$/;"	f	file:
set_backlight_krp	swap/energy/lcd/maru.c	/^static struct kretprobe set_backlight_krp = {$/;"	v	typeref:struct:kretprobe	file:
set_backlight_krp	swap/energy/lcd/s6e8aa0.c	/^static struct kretprobe set_backlight_krp = {$/;"	v	typeref:struct:kretprobe	file:
set_backlight_krp	swap/energy/lcd/s6e8aa0_panel.c	/^static struct kretprobe set_backlight_krp = {$/;"	v	typeref:struct:kretprobe	file:
set_brightness	swap/energy/lcd/lcd_base.c	/^static void set_brightness(struct lcd_ops *ops, int brt)$/;"	f	file:
set_buf_size	trace/trace.c	/^static int __init set_buf_size(char *str)$/;"	f	file:
set_buffer_entries	trace/trace.c	/^static void set_buffer_entries(struct trace_buffer *buf, unsigned long val)$/;"	f	file:
set_buffers_to_read	swap/driver/driver_to_buffer.c	/^static inline void set_buffers_to_read(int count)$/;"	f	file:
set_cmdline_ftrace	trace/trace.c	/^static int __init set_cmdline_ftrace(char *str)$/;"	f	file:
set_config	swap/parser/msg_cmd.c	/^static int set_config(struct conf_data *conf)$/;"	f	file:
set_context_switch	swap/parser/features.c	/^int set_context_switch(struct conf_data *conf)$/;"	f
set_cpu_active	cpu.c	/^void set_cpu_active(unsigned int cpu, bool active)$/;"	f
set_cpu_itimer	itimer.c	/^static void set_cpu_itimer(struct task_struct *tsk, unsigned int clock_id,$/;"	f	file:
set_cpu_online	cpu.c	/^void set_cpu_online(unsigned int cpu, bool online)$/;"	f
set_cpu_possible	cpu.c	/^void set_cpu_possible(unsigned int cpu, bool possible)$/;"	f
set_cpu_present	cpu.c	/^void set_cpu_present(unsigned int cpu, bool present)$/;"	f
set_cpu_sd_state_busy	sched/fair.c	/^static inline void set_cpu_sd_state_busy(void)$/;"	f	file:
set_cpu_sd_state_idle	sched/fair.c	/^void set_cpu_sd_state_idle(void)$/;"	f
set_cpus_allowed	sched/sched.h	/^	void (*set_cpus_allowed)(struct task_struct *p,$/;"	m	struct:sched_class
set_cpus_allowed_ptr	sched/core.c	/^EXPORT_SYMBOL_GPL(set_cpus_allowed_ptr);$/;"	v
set_cpus_allowed_ptr	sched/core.c	/^int set_cpus_allowed_ptr(struct task_struct *p, const struct cpumask *new_mask)$/;"	f
set_cpus_allowed_rt	sched/rt.c	/^static void set_cpus_allowed_rt(struct task_struct *p,$/;"	f	file:
set_create_files_as	cred.c	/^EXPORT_SYMBOL(set_create_files_as);$/;"	v
set_create_files_as	cred.c	/^int set_create_files_as(struct cred *new, struct inode *inode)$/;"	f
set_cred_subscribers	cred.c	/^static inline void set_cred_subscribers(struct cred *cred, int n)$/;"	f	file:
set_cred_user_ns	user_namespace.c	/^static void set_cred_user_ns(struct cred *cred, struct user_namespace *user_ns)$/;"	f	file:
set_curr_task	sched/core.c	/^void set_curr_task(int cpu, struct task_struct *p)$/;"	f
set_curr_task	sched/sched.h	/^	void (*set_curr_task) (struct rq *rq);$/;"	m	struct:sched_class
set_curr_task_fair	sched/fair.c	/^static void set_curr_task_fair(struct rq *rq)$/;"	f	file:
set_curr_task_idle	sched/idle_task.c	/^static void set_curr_task_idle(struct rq *rq)$/;"	f	file:
set_curr_task_rt	sched/rt.c	/^static void set_curr_task_rt(struct rq *rq)$/;"	f	file:
set_curr_task_stop	sched/stop_task.c	/^static void set_curr_task_stop(struct rq *rq)$/;"	f	file:
set_current_blocked	signal.c	/^void set_current_blocked(sigset_t *newset)$/;"	f
set_current_groups	groups.c	/^EXPORT_SYMBOL(set_current_groups);$/;"	v
set_current_groups	groups.c	/^int set_current_groups(struct group_info *group_info)$/;"	f
set_current_kprobe	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^void set_current_kprobe(struct kprobe *p,$/;"	f
set_current_kprobe	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^void set_current_kprobe(struct kprobe *p,$/;"	f
set_current_probe	swap/uprobe/arch/x86/swap-asm/swap_uprobes.c	/^static void set_current_probe(struct kprobe *p)$/;"	f	file:
set_domain_attribute	sched/core.c	/^static void set_domain_attribute(struct sched_domain *sd,$/;"	f	file:
set_enable	swap/master/swap_debugfs.c	/^static int set_enable(int enable)$/;"	f	file:
set_energy	swap/energy/energy.c	/^EXPORT_SYMBOL_GPL(set_energy);$/;"	v
set_energy	swap/energy/energy.c	/^int set_energy(void)$/;"	f
set_feature	swap/ks_features/ks_features.c	/^EXPORT_SYMBOL_GPL(set_feature);$/;"	v
set_feature	swap/ks_features/ks_features.c	/^int set_feature(enum feature_id id)$/;"	f
set_features	swap/parser/features.c	/^int set_features(struct conf_data *conf)$/;"	f
set_flag	trace/trace.h	/^	int			(*set_flag)(u32 old_flags, u32 bit, int set);$/;"	m	struct:tracer
set_freezable	freezer.c	/^EXPORT_SYMBOL(set_freezable);$/;"	v
set_freezable	freezer.c	/^bool set_freezable(void)$/;"	f
set_ftrace_dump_on_oops	trace/trace.c	/^static int __init set_ftrace_dump_on_oops(char *str)$/;"	f	file:
set_ftrace_early_filters	trace/ftrace.c	/^static void __init set_ftrace_early_filters(void)$/;"	f	file:
set_ftrace_early_graph	trace/ftrace.c	/^static void __init set_ftrace_early_graph(char *buf)$/;"	f	file:
set_ftrace_filter	trace/ftrace.c	/^static int __init set_ftrace_filter(char *str)$/;"	f	file:
set_ftrace_notrace	trace/ftrace.c	/^static int __init set_ftrace_notrace(char *str)$/;"	f	file:
set_ftrace_pid	trace/ftrace.c	/^static void set_ftrace_pid(struct pid *pid)$/;"	f	file:
set_ftrace_pid_function	trace/ftrace.c	/^static void set_ftrace_pid_function(ftrace_func_t func)$/;"	f	file:
set_ftrace_pid_task	trace/ftrace.c	/^static void set_ftrace_pid_task(struct pid *pid)$/;"	f	file:
set_ftrace_swapper	trace/ftrace.c	/^static void set_ftrace_swapper(void)$/;"	f	file:
set_func_energy	swap/parser/features.c	/^static int set_func_energy(struct conf_data *conf)$/;"	f	file:
set_func_sampling	swap/parser/features.c	/^int set_func_sampling(struct conf_data *conf)$/;"	f
set_function_trace_op	trace/ftrace.c	/^static struct ftrace_ops *set_function_trace_op;$/;"	v	typeref:struct:ftrace_ops	file:
set_graph_array	trace/trace_functions_graph.c	/^void set_graph_array(struct trace_array *tr)$/;"	f
set_graph_function	trace/ftrace.c	/^static int __init set_graph_function(char *str)$/;"	f	file:
set_groups	groups.c	/^EXPORT_SYMBOL(set_groups);$/;"	v
set_groups	groups.c	/^int set_groups(struct cred *new, struct group_info *group_info)$/;"	f
set_irq_wake_real	irq/manage.c	/^static int set_irq_wake_real(unsigned int irq, unsigned int on)$/;"	f	file:
set_jmp_op	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^static __always_inline void set_jmp_op(void *from, void *to)$/;"	f	file:
set_jump_cb	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^EXPORT_SYMBOL_GPL(set_jump_cb);$/;"	v
set_jump_cb	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^int set_jump_cb(unsigned long ret_addr, struct pt_regs *regs,$/;"	f
set_jump_cb	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^EXPORT_SYMBOL_GPL(set_jump_cb);$/;"	v
set_jump_cb	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^int set_jump_cb(unsigned long ret_addr, struct pt_regs *regs,$/;"	f
set_kjump_cb	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^EXPORT_SYMBOL_GPL(set_kjump_cb);$/;"	v
set_kjump_cb	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^int set_kjump_cb(struct pt_regs *regs, jumper_cb_t cb, void *data, size_t size)$/;"	f
set_kjump_cb	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^EXPORT_SYMBOL_GPL(set_kjump_cb);$/;"	v
set_kjump_cb	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^int set_kjump_cb(struct pt_regs *regs, jumper_cb_t cb, void *data, size_t size)$/;"	f
set_kprobe_instance	kprobes.c	/^static inline void set_kprobe_instance(struct kprobe *kp)$/;"	f	file:
set_kprobe_instance	swap/kprobe/swap_kprobes.c	/^static inline void set_kprobe_instance(struct kprobe *kp)$/;"	f	file:
set_last_buddy	sched/fair.c	/^static void set_last_buddy(struct sched_entity *se)$/;"	f	file:
set_last_pid	pid.c	/^static void set_last_pid(struct pid_namespace *pid_ns, int base, int pid)$/;"	f	file:
set_license	module.c	/^static void set_license(struct module *mod, const char *license)$/;"	f	file:
set_load_weight	sched/core.c	/^static void set_load_weight(struct task_struct *p)$/;"	f	file:
set_loader_file	swap/preload/preload_debugfs.c	/^static void set_loader_file(char *path)$/;"	f	file:
set_mm_exe_file	fork.c	/^void set_mm_exe_file(struct mm_struct *mm, struct file *new_exe_file)$/;"	f
set_msg_handler	swap/driver/device_driver.c	/^EXPORT_SYMBOL_GPL(set_msg_handler);$/;"	v
set_msg_handler	swap/driver/device_driver.c	/^void set_msg_handler(msg_handler_t mh)$/;"	f
set_next_buddy	sched/fair.c	/^static void set_next_buddy(struct sched_entity *se)$/;"	f	file:
set_next_entity	sched/fair.c	/^set_next_entity(struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f	file:
set_normalized_timespec	time.c	/^EXPORT_SYMBOL(set_normalized_timespec);$/;"	v
set_normalized_timespec	time.c	/^void set_normalized_timespec(struct timespec *ts, time_t sec, s64 nsec)$/;"	f
set_numabalancing_state	sched/core.c	/^void set_numabalancing_state(bool enabled)$/;"	f
set_one_prio	sys.c	/^static int set_one_prio(struct task_struct *p, int niceval, int error)$/;"	f	file:
set_one_prio_perm	sys.c	/^static bool set_one_prio_perm(struct task_struct *p)$/;"	f	file:
set_orig_insn	events/uprobes.c	/^set_orig_insn(struct arch_uprobe *auprobe, struct mm_struct *mm, unsigned long vaddr)$/;"	f
set_page_attributes	module.c	/^void set_page_attributes(void *start, void *end, int (*set)(unsigned long start, int num_pages))$/;"	f
set_pages_order_in_subbuffer	swap/buffer/kernel_operations.h	167;"	d
set_pf_by_comm	swap/us_manager/pf/proc_filters.c	/^int set_pf_by_comm(struct proc_filter *pf, char *comm, void *priv)$/;"	f
set_pf_by_dentry	swap/us_manager/pf/proc_filters.c	/^void set_pf_by_dentry(struct proc_filter *pf, struct dentry *dentry, void *priv)$/;"	f
set_pf_by_tgid	swap/us_manager/pf/proc_filters.c	/^void set_pf_by_tgid(struct proc_filter *pf, pid_t tgid, void *priv)$/;"	f
set_pf_dumb	swap/us_manager/pf/proc_filters.c	/^void set_pf_dumb(struct proc_filter *pf, void *priv)$/;"	f
set_power	swap/energy/lcd/lcd_base.c	/^static void set_power(struct lcd_ops *ops, int val)$/;"	f	file:
set_power_krp	swap/energy/lcd/s6e8aa0.c	/^static struct kretprobe set_power_krp = {$/;"	v	typeref:struct:kretprobe	file:
set_power_krp	swap/energy/lcd/s6e8aa0_panel.c	/^static struct kretprobe set_power_krp = {$/;"	v	typeref:struct:kretprobe	file:
set_power_off	swap/energy/lcd/lcd_base.c	/^static void set_power_off(struct lcd_priv_data *lcd)$/;"	f	file:
set_power_off_update_brt	swap/energy/lcd/lcd_base.c	/^static void set_power_off_update_brt(struct lcd_priv_data *lcd)$/;"	f	file:
set_power_on	swap/energy/lcd/lcd_base.c	/^static void set_power_on(struct lcd_priv_data *lcd)$/;"	f	file:
set_power_on_set_brt	swap/energy/lcd/lcd_base.c	/^static void set_power_on_set_brt(struct lcd_priv_data *lcd)$/;"	f	file:
set_preload_flags	swap/preload/preload_threads.c	/^void set_preload_flags(struct task_struct *task,$/;"	f
set_print_fmt	trace/trace_kprobe.c	/^static int set_print_fmt(struct trace_probe *tp)$/;"	f	file:
set_print_fmt	trace/trace_uprobe.c	/^static int set_print_fmt(struct trace_uprobe *tu)$/;"	f	file:
set_process_cpu_timer	posix-cpu-timers.c	/^void set_process_cpu_timer(struct task_struct *tsk, unsigned int clock_idx,$/;"	f
set_pst	swap/ks_features/ks_features.c	/^static void set_pst(struct feature *f, size_t id)$/;"	f	file:
set_quiet	swap/us_manager/us_manager.c	/^EXPORT_SYMBOL_GPL(set_quiet);$/;"	v
set_quiet	swap/us_manager/us_manager.c	/^void set_quiet(enum quiet_type q)$/;"	f
set_real_alarm	time/alarmtimer.c	/^static void set_real_alarm(struct work_struct *work)$/;"	f	file:
set_rq_offline	sched/core.c	/^static void set_rq_offline(struct rq *rq)$/;"	f	file:
set_rq_online	sched/core.c	/^static void set_rq_online(struct rq *rq)$/;"	f	file:
set_sample_period	watchdog.c	/^static void set_sample_period(void)$/;"	f	file:
set_section_ro_nx	module.c	/^static inline void set_section_ro_nx(void *base, unsigned long text_size, unsigned long ro_size, unsigned long total_size) { }$/;"	f	file:
set_section_ro_nx	module.c	/^static void set_section_ro_nx(void *base,$/;"	f	file:
set_security_override	cred.c	/^EXPORT_SYMBOL(set_security_override);$/;"	v
set_security_override	cred.c	/^int set_security_override(struct cred *new, u32 secid)$/;"	f
set_security_override_from_ctx	cred.c	/^EXPORT_SYMBOL(set_security_override_from_ctx);$/;"	v
set_security_override_from_ctx	cred.c	/^int set_security_override_from_ctx(struct cred *new, const char *secctx)$/;"	f
set_skip_buddy	sched/fair.c	/^static void set_skip_buddy(struct sched_entity *se)$/;"	f	file:
set_stat_off	swap/nsp/nsp.c	/^static int set_stat_off(void)$/;"	f	file:
set_stat_on	swap/nsp/nsp.c	/^static int set_stat_on(void)$/;"	f	file:
set_state	stop_machine.c	/^static void set_state(struct stop_machine_data *smdata,$/;"	f	file:
set_swbp	events/uprobes.c	/^int __weak set_swbp(struct arch_uprobe *auprobe, struct mm_struct *mm, unsigned long vaddr)$/;"	f
set_syscall_desc	swap/parser/features.c	/^int set_syscall_desc(struct conf_data *conf)$/;"	f
set_syscall_file	swap/parser/features.c	/^int set_syscall_file(struct conf_data *conf)$/;"	f
set_syscall_ipc	swap/parser/features.c	/^int set_syscall_ipc(struct conf_data *conf)$/;"	f
set_syscall_network	swap/parser/features.c	/^int set_syscall_network(struct conf_data *conf)$/;"	f
set_syscall_print_fmt	trace/trace_syscalls.c	/^static int set_syscall_print_fmt(struct ftrace_event_call *call)$/;"	f	file:
set_syscall_process	swap/parser/features.c	/^int set_syscall_process(struct conf_data *conf)$/;"	f
set_syscall_signal	swap/parser/features.c	/^int set_syscall_signal(struct conf_data *conf)$/;"	f
set_sysfile_activity	swap/parser/features.c	/^static int set_sysfile_activity(struct conf_data *conf)$/;"	f	file:
set_table_entry	sched/core.c	/^set_table_entry(struct ctl_table *entry,$/;"	f	file:
set_task_cpu	sched/core.c	/^void set_task_cpu(struct task_struct *p, unsigned int new_cpu)$/;"	f
set_task_rq	sched/sched.h	/^static inline void set_task_rq(struct task_struct *p, unsigned int cpu) { }$/;"	f
set_task_rq	sched/sched.h	/^static inline void set_task_rq(struct task_struct *p, unsigned int cpu)$/;"	f
set_timer_slack	timer.c	/^EXPORT_SYMBOL_GPL(set_timer_slack);$/;"	v
set_timer_slack	timer.c	/^void set_timer_slack(struct timer_list *timer, int slack_hz)$/;"	f
set_trace_boot_options	trace/trace.c	/^static int __init set_trace_boot_options(char *str)$/;"	f	file:
set_tracepoint	tracepoint.c	/^static void set_tracepoint(struct tracepoint_entry **entry,$/;"	f	file:
set_tracer_flag	trace/trace.c	/^int set_tracer_flag(struct trace_array *tr, unsigned int mask, int enabled)$/;"	f
set_tracer_fops	trace/trace.c	/^static const struct file_operations set_tracer_fops = {$/;"	v	typeref:struct:file_operations	file:
set_tracer_option	trace/trace.c	/^static int set_tracer_option(struct tracer *trace, char *cmp, int neg)$/;"	f	file:
set_tracing_thresh	trace/trace.c	/^static int __init set_tracing_thresh(char *str)$/;"	f	file:
set_us_inst	swap/parser/features.c	/^int set_us_inst(struct conf_data *conf)$/;"	f
set_user	sys.c	/^static int set_user(struct cred *new)$/;"	f	file:
set_user_jmp_op	swap/uprobe/arch/x86/swap-asm/swap_uprobes.c	/^static void set_user_jmp_op(void *from, void *to)$/;"	f	file:
set_user_nice	sched/core.c	/^EXPORT_SYMBOL(set_user_nice);$/;"	v
set_user_nice	sched/core.c	/^void set_user_nice(struct task_struct *p, long nice)$/;"	f
set_work_data	workqueue.c	/^static inline void set_work_data(struct work_struct *work, unsigned long data,$/;"	f	file:
set_work_pool_and_clear_pending	workqueue.c	/^static void set_work_pool_and_clear_pending(struct work_struct *work,$/;"	f	file:
set_work_pool_and_keep_pending	workqueue.c	/^static void set_work_pool_and_keep_pending(struct work_struct *work,$/;"	f	file:
set_work_pwq	workqueue.c	/^static void set_work_pwq(struct work_struct *work, struct pool_workqueue *pwq,$/;"	f	file:
set_worker_desc	workqueue.c	/^void set_worker_desc(const char *fmt, ...)$/;"	f
set_wrt_launcher_port	swap/parser/msg_cmd.c	/^EXPORT_SYMBOL_GPL(set_wrt_launcher_port);$/;"	v
set_wrt_launcher_port	swap/parser/msg_cmd.c	/^void set_wrt_launcher_port(int port)$/;"	f
setjmp_upre_handler	swap/uprobe/arch/arm/swap-asm/swap_uprobes.c	/^int setjmp_upre_handler(struct kprobe *p, struct pt_regs *regs)$/;"	f
setjmp_upre_handler	swap/uprobe/arch/x86/swap-asm/swap_uprobes.c	/^int setjmp_upre_handler(struct kprobe *p, struct pt_regs *regs)$/;"	f
setup_affinity	irq/manage.c	/^setup_affinity(unsigned int irq, struct irq_desc *d, struct cpumask *mask)$/;"	f	file:
setup_affinity	irq/manage.c	/^setup_affinity(unsigned int irq, struct irq_desc *desc, struct cpumask *mask)$/;"	f	file:
setup_autogroup	sched/auto_group.c	/^static int __init setup_autogroup(char *str)$/;"	f	file:
setup_callbacks	relay.c	/^static void setup_callbacks(struct rchan *chan,$/;"	f	file:
setup_elfcorehdr	crash_dump.c	/^static int __init setup_elfcorehdr(char *arg)$/;"	f	file:
setup_forced_irqthreads	irq/manage.c	/^static int __init setup_forced_irqthreads(char *arg)$/;"	f	file:
setup_hrtimer_hres	hrtimer.c	/^static int __init setup_hrtimer_hres(char *str)$/;"	f	file:
setup_irq	irq/manage.c	/^EXPORT_SYMBOL_GPL(setup_irq);$/;"	v
setup_irq	irq/manage.c	/^int setup_irq(unsigned int irq, struct irqaction *act)$/;"	f
setup_load_info	module.c	/^static struct module *setup_load_info(struct load_info *info, int flags)$/;"	f	file:
setup_log_buf	printk.c	/^void __init setup_log_buf(int early)$/;"	f
setup_max_cpus	smp.c	/^EXPORT_SYMBOL(setup_max_cpus);$/;"	v
setup_max_cpus	smp.c	/^unsigned int setup_max_cpus = NR_CPUS;$/;"	v
setup_modinfo	module.c	/^static void setup_modinfo(struct module *mod, struct load_info *info)$/;"	f	file:
setup_nr_cpu_ids	smp.c	/^void __init setup_nr_cpu_ids(void)$/;"	f
setup_percpu_irq	irq/manage.c	/^int setup_percpu_irq(unsigned int irq, struct irqaction *act)$/;"	f
setup_print_fatal_signals	signal.c	/^static int __init setup_print_fatal_signals(char *str)$/;"	f	file:
setup_relax_domain_level	sched/core.c	/^static int __init setup_relax_domain_level(char *str)$/;"	f	file:
setup_singlestep	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^static int setup_singlestep(struct kprobe *p, struct pt_regs *regs,$/;"	f	file:
setup_test_suspend	power/suspend_test.c	/^static int __init setup_test_suspend(char *value)$/;"	f	file:
setup_tick_nohz	time/tick-sched.c	/^static int __init setup_tick_nohz(char *str)$/;"	f	file:
setup_trace_event	trace/trace_events.c	/^static __init int setup_trace_event(char *str)$/;"	f	file:
sg	sched/core.c	/^	struct sched_group **__percpu sg;$/;"	m	struct:sd_data	typeref:struct:sd_data::__percpu	file:
sg_lb_stats	sched/fair.c	/^struct sg_lb_stats {$/;"	s	file:
sgid	audit.h	/^	kgid_t		    gid, egid, sgid, fsgid;$/;"	m	struct:audit_context
sgp	sched/core.c	/^	struct sched_group_power **__percpu sgp;$/;"	m	struct:sd_data	typeref:struct:sd_data::__percpu	file:
sgp	sched/sched.h	/^	struct sched_group_power *sgp;$/;"	m	struct:sched_group	typeref:struct:sched_group::sched_group_power
shadow_pid	debug/gdbstub.c	/^static inline int shadow_pid(int realpid)$/;"	f	file:
shadow_timekeeper	time/timekeeping.c	/^static struct timekeeper shadow_timekeeper;$/;"	v	typeref:struct:timekeeper	file:
sharedram	sys.c	/^	u32 sharedram;$/;"	m	struct:compat_sysinfo	file:
shares	sched/sched.h	/^	unsigned long shares;$/;"	m	struct:task_group
should_free	audit.h	/^	bool			should_free;$/;"	m	struct:audit_names
should_resched	sched/core.c	/^static inline int should_resched(void)$/;"	f	file:
show	padata.c	/^	ssize_t (*show)(struct padata_instance *, struct attribute *, char *);$/;"	m	struct:padata_sysfs_entry	file:
show	sched/fair.c	/^	ssize_t (*show)(struct kobject *kobj,$/;"	m	struct:hmp_global_attr	file:
show_coresize	module.c	/^static ssize_t show_coresize(struct module_attribute *mattr,$/;"	f	file:
show_cpumask	padata.c	/^static ssize_t show_cpumask(struct padata_instance *pinst,$/;"	f	file:
show_event_seq_ops	trace/trace_events.c	/^static const struct seq_operations show_event_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
show_format_seq_ops	trace/trace_printk.c	/^static const struct seq_operations show_format_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
show_ftrace_seq_ops	trace/ftrace.c	/^static const struct seq_operations show_ftrace_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
show_header	trace/trace_events.c	/^show_header(struct file *filp, char __user *ubuf, size_t cnt, loff_t *ppos)$/;"	f	file:
show_initsize	module.c	/^static ssize_t show_initsize(struct module_attribute *mattr,$/;"	f	file:
show_initstate	module.c	/^static ssize_t show_initstate(struct module_attribute *mattr,$/;"	f	file:
show_interrupts	irq/proc.c	/^int show_interrupts(struct seq_file *p, void *v)$/;"	f
show_irq_affinity	irq/proc.c	/^static int show_irq_affinity(int type, struct seq_file *m, void *v)$/;"	f	file:
show_kprobe_addr	kprobes.c	/^static int __kprobes show_kprobe_addr(struct seq_file *pi, void *v)$/;"	f	file:
show_one_rcugp	rcutree_trace.c	/^static void show_one_rcugp(struct seq_file *m, struct rcu_state *rsp)$/;"	f	file:
show_rcu_node_boost	rcutree_trace.c	/^static int show_rcu_node_boost(struct seq_file *m, void *unused)$/;"	f	file:
show_rcu_pending	rcutree_trace.c	/^static int show_rcu_pending(struct seq_file *m, void *v)$/;"	f	file:
show_rcubarrier	rcutree_trace.c	/^static int show_rcubarrier(struct seq_file *m, void *v)$/;"	f	file:
show_rcudata	rcutree_trace.c	/^static int show_rcudata(struct seq_file *m, void *v)$/;"	f	file:
show_rcuexp	rcutree_trace.c	/^static int show_rcuexp(struct seq_file *m, void *v)$/;"	f	file:
show_rcugp	rcutree_trace.c	/^static int show_rcugp(struct seq_file *m, void *v)$/;"	f	file:
show_rcuhier	rcutree_trace.c	/^static int show_rcuhier(struct seq_file *m, void *v)$/;"	f	file:
show_rcutorture	rcutree_trace.c	/^static int show_rcutorture(struct seq_file *m, void *unused)$/;"	f	file:
show_refcnt	module.c	/^static ssize_t show_refcnt(struct module_attribute *mattr,$/;"	f	file:
show_regs_print_info	printk.c	/^void show_regs_print_info(const char *log_lvl)$/;"	f
show_schedstat	sched/stats.c	/^static int show_schedstat(struct seq_file *seq, void *v)$/;"	f	file:
show_set_event_seq_ops	trace/trace_events.c	/^static const struct seq_operations show_set_event_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
show_snapshot_main_help	trace/trace.c	/^static void show_snapshot_main_help(struct seq_file *m)$/;"	f	file:
show_snapshot_percpu_help	trace/trace.c	/^static void show_snapshot_percpu_help(struct seq_file *m)$/;"	f	file:
show_special	auditsc.c	/^static void show_special(struct audit_context *context, int *call_panic)$/;"	f	file:
show_state_filter	sched/core.c	/^void show_state_filter(unsigned long state_filter)$/;"	f
show_taint	module.c	/^static ssize_t show_taint(struct module_attribute *mattr,$/;"	f	file:
show_tiny_preempt_stats	rcutiny_plugin.h	/^static void show_tiny_preempt_stats(struct seq_file *m)$/;"	f
show_tiny_stats	rcutiny_plugin.h	/^static int show_tiny_stats(struct seq_file *m, void *unused)$/;"	f
show_tiny_stats_fops	rcutiny_plugin.h	/^static const struct file_operations show_tiny_stats_fops = {$/;"	v	typeref:struct:file_operations
show_tiny_stats_open	rcutiny_plugin.h	/^static int show_tiny_stats_open(struct inode *inode, struct file *file)$/;"	f
show_traces_fops	trace/trace.c	/^static const struct file_operations show_traces_fops = {$/;"	v	typeref:struct:file_operations	file:
show_traces_open	trace/trace.c	/^static int show_traces_open(struct inode *inode, struct file *file)$/;"	f	file:
show_traces_seq_ops	trace/trace.c	/^static const struct seq_operations show_traces_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
shuffle_interval	rcutorture.c	/^static int shuffle_interval = 3; \/* Interval between shuffles (in sec)*\/$/;"	v	file:
shuffle_tmp_mask	rcutorture.c	/^static cpumask_var_t shuffle_tmp_mask;$/;"	v	file:
shuffler_task	rcutorture.c	/^static struct task_struct *shuffler_task;$/;"	v	typeref:struct:task_struct	file:
shutdown_secs	rcutorture.c	/^static int shutdown_secs;	\/* Shutdown time (s).  <=0 for no shutdown. *\/$/;"	v	file:
shutdown_task	rcutorture.c	/^static struct task_struct *shutdown_task;$/;"	v	typeref:struct:task_struct	file:
shutdown_time	rcutorture.c	/^static unsigned long shutdown_time;	\/* jiffies to system shutdown. *\/$/;"	v	file:
si_fromuser	signal.c	/^static inline bool si_fromuser(const struct siginfo *info)$/;"	f	file:
siblings	sched/sched.h	/^	struct list_head siblings;$/;"	m	struct:task_group	typeref:struct:task_group::list_head
sig	power/swap.c	/^	char	sig[10];$/;"	m	struct:swsusp_header	file:
sig_enforce	module.c	/^static bool sig_enforce = false;$/;"	v	file:
sig_enforce	module.c	/^static bool sig_enforce = true;$/;"	v	file:
sig_handler	signal.c	/^static void __user *sig_handler(struct task_struct *t, int sig)$/;"	f	file:
sig_handler_ignored	signal.c	/^static int sig_handler_ignored(void __user *handler, int sig)$/;"	f	file:
sig_ignored	signal.c	/^static int sig_ignored(struct task_struct *t, int sig, bool force)$/;"	f	file:
sig_len	module_signing.c	/^	__be32	sig_len;	\/* Length of signature data *\/$/;"	m	struct:module_signature	file:
sig_ok	module.c	/^	bool sig_ok;$/;"	m	struct:load_info	file:
sig_task_ignored	signal.c	/^static int sig_task_ignored(struct task_struct *t, int sig, bool force)$/;"	f	file:
sigev_signo	audit.h	/^			int			sigev_signo;$/;"	m	struct:audit_context::__anon15::__anon19
sighand_cachep	fork.c	/^struct kmem_cache *sighand_cachep;$/;"	v	typeref:struct:kmem_cache
sighand_ctor	fork.c	/^static void sighand_ctor(void *data)$/;"	f	file:
sigkill_pending	signal.c	/^static int sigkill_pending(struct task_struct *tsk)$/;"	f	file:
sign_extend	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	56;"	d	file:
signal_cachep	fork.c	/^static struct kmem_cache *signal_cachep;$/;"	v	typeref:struct:kmem_cache	file:
signal_delivered	signal.c	/^void signal_delivered(int sig, siginfo_t *info, struct k_sigaction *ka,$/;"	f
signal_setup_done	signal.c	/^void signal_setup_done(int failed, struct ksignal *ksig, int stepping)$/;"	f
signal_wake_up_state	signal.c	/^void signal_wake_up_state(struct task_struct *t, unsigned int state)$/;"	f
signals_init	signal.c	/^void __init signals_init(void)$/;"	f
signer_len	module_signing.c	/^	u8	signer_len;	\/* Length of signer's name *\/$/;"	m	struct:module_signature	file:
signo	debug/debug_core.h	/^	int			signo;$/;"	m	struct:kgdb_state
sigprocmask	signal.c	/^EXPORT_SYMBOL(sigprocmask);$/;"	v
sigprocmask	signal.c	/^int sigprocmask(int how, sigset_t *set, sigset_t *oldset)$/;"	f
sigqueue_alloc	signal.c	/^struct sigqueue *sigqueue_alloc(void)$/;"	f
sigqueue_cachep	signal.c	/^static struct kmem_cache *sigqueue_cachep;$/;"	v	typeref:struct:kmem_cache	file:
sigqueue_free	signal.c	/^void sigqueue_free(struct sigqueue *q)$/;"	f
sigset_from_compat	compat.c	/^EXPORT_SYMBOL_GPL(sigset_from_compat);$/;"	v
sigset_from_compat	compat.c	/^sigset_from_compat(sigset_t *set, const compat_sigset_t *compat)$/;"	f
sigset_to_compat	compat.c	/^sigset_to_compat(compat_sigset_t *compat, const sigset_t *set)$/;"	f
sigsuspend	signal.c	/^int sigsuspend(sigset_t *set)$/;"	f
simple_align_resource	resource.c	/^static resource_size_t simple_align_resource(void *data,$/;"	f	file:
simplify_symbols	module.c	/^static int simplify_symbols(struct module *mod, const struct load_info *info)$/;"	f	file:
single	cgroup.c	/^	struct task_and_cgroup	single;$/;"	m	struct:cgroup_taskset	typeref:struct:cgroup_taskset::task_and_cgroup	file:
sis_get_flag	swap/master/swap_initializer.c	/^static bool sis_get_flag(struct swap_init_struct *init, enum init_level level)$/;"	f	file:
sis_get_fn_init	swap/master/swap_initializer.c	/^static swap_init_t sis_get_fn_init(struct swap_init_struct *init,$/;"	f	file:
sis_get_fn_uninit	swap/master/swap_initializer.c	/^static swap_uninit_t sis_get_fn_uninit(struct swap_init_struct *init,$/;"	f	file:
sis_init	swap/master/swap_initializer.c	/^static int sis_init(struct swap_init_struct *init)$/;"	f	file:
sis_init_level	swap/master/swap_initializer.c	/^static int sis_init_level(struct swap_init_struct *init, enum init_level level)$/;"	f	file:
sis_once	swap/master/swap_initializer.c	/^static int sis_once(struct swap_init_struct *init)$/;"	f	file:
sis_set_flag	swap/master/swap_initializer.c	/^static void sis_set_flag(struct swap_init_struct *init,$/;"	f	file:
sis_uninit	swap/master/swap_initializer.c	/^static void sis_uninit(struct swap_init_struct *init)$/;"	f	file:
sis_uninit_level	swap/master/swap_initializer.c	/^static void sis_uninit_level(struct swap_init_struct *init,$/;"	f	file:
sixty	sysctl.c	/^static int sixty = 60;$/;"	v	file:
size	debug/kdb/kdb_support.c	/^	u32 size;$/;"	m	struct:debug_alloc_header	file:
size	power/power.h	/^	unsigned long		size;$/;"	m	struct:swsusp_info
size	swap/driver/swap_ioctl.h	/^	size_t size;$/;"	m	struct:buffer_initialize
size	swap/fbiprobe/fbi_msg.c	/^	u32 size;$/;"	m	struct:msg_fbi	file:
size	swap/kprobe/swap_kprobes.c	/^	size_t size;$/;"	m	struct:unreg_krp_args	file:
size	swap/kprobe/swap_slots.c	/^	unsigned long size;$/;"	m	struct:chunk	file:
size	swap/ks_features/ks_map.h	/^	int size;$/;"	m	struct:map
size	swap/parser/usm_msg.c	/^	u64 size;$/;"	m	struct:ofile	file:
size	swap/us_manager/probes/probes.h	/^	size_t size;$/;"	m	struct:probe_info
size	trace/ftrace.c	/^	int			size;$/;"	m	struct:ftrace_page	file:
size	trace/ring_buffer.c	/^	int size;$/;"	m	struct:rb_item	file:
size	trace/trace.h	/^	int			size;$/;"	m	struct:ftrace_event_field
size	trace/trace.h	/^	unsigned	size;$/;"	m	struct:trace_parser
size	trace/trace_kprobe.c	/^	ssize_t			size;		\/* trace entry size *\/$/;"	m	struct:trace_probe	file:
size	trace/trace_probe.h	/^	size_t			size;		\/* Byte size of type *\/$/;"	m	struct:fetch_type
size	trace/trace_uprobe.c	/^	ssize_t				size;	\/* trace entry size *\/$/;"	m	struct:trace_uprobe	file:
size_avail	debug/kdb/kdb_io.c	/^static int  size_avail;$/;"	v	file:
size_bits	trace/ftrace.c	/^	unsigned long		size_bits;$/;"	m	struct:ftrace_hash	file:
skb	audit.c	/^	struct sk_buff       *skb;	\/* formatted skb ready to send *\/$/;"	m	struct:audit_buffer	typeref:struct:audit_buffer::sk_buff	file:
skb	audit.c	/^	struct sk_buff *skb;$/;"	m	struct:audit_reply	typeref:struct:audit_reply::sk_buff	file:
skew_tick	time/tick-sched.c	/^static int __init skew_tick(char *str)$/;"	f	file:
skip	sched/sched.h	/^	struct sched_entity *curr, *next, *last, *skip;$/;"	m	struct:cfs_rq	typeref:struct:cfs_rq::
skip_clock_update	sched/sched.h	/^	int skip_clock_update;$/;"	m	struct:rq
skip_time_extend	trace/ring_buffer.c	202;"	d	file:
skipped_entries	trace/trace.h	/^	unsigned long		skipped_entries;$/;"	m	struct:trace_array_cpu
slack_timer	sched/sched.h	/^	struct hrtimer period_timer, slack_timer;$/;"	m	struct:cfs_bandwidth	typeref:struct:cfs_bandwidth::
slaves_in_kgdb	debug/debug_core.c	/^static atomic_t			slaves_in_kgdb;$/;"	v	file:
sleep_history	power/sleep_history.c	/^	struct circ_buf sleep_history;$/;"	m	struct:sleep_history_data	typeref:struct:sleep_history_data::circ_buf	file:
sleep_history	power/sleep_history.c	/^struct sleep_history {$/;"	s	file:
sleep_history_data	power/sleep_history.c	/^static struct sleep_history_data sleep_history_data;$/;"	v	typeref:struct:sleep_history_data	file:
sleep_history_data	power/sleep_history.c	/^struct sleep_history_data {$/;"	s	file:
sleep_history_debug_fops	power/sleep_history.c	/^static const struct file_operations sleep_history_debug_fops = {$/;"	v	typeref:struct:file_operations	file:
sleep_history_debug_init	power/sleep_history.c	/^late_initcall(sleep_history_debug_init);$/;"	v
sleep_history_debug_init	power/sleep_history.c	/^static int __init sleep_history_debug_init(void)$/;"	f	file:
sleep_history_debug_open	power/sleep_history.c	/^int sleep_history_debug_open(struct inode *inode, struct file *file)$/;"	f
sleep_history_debug_read	power/sleep_history.c	/^static ssize_t sleep_history_debug_read(struct file *file,$/;"	f	file:
sleep_history_debug_release	power/sleep_history.c	/^int sleep_history_debug_release(struct inode *inode, struct file *file)$/;"	f
sleep_history_headline_show	power/sleep_history.c	/^static int sleep_history_headline_show(char* buffer, size_t count, int offset)$/;"	f	file:
sleep_history_index	power/sleep_history.c	/^static int sleep_history_index = 1;$/;"	v	file:
sleep_history_marker	power/sleep_history.c	/^int sleep_history_marker(int type, struct timespec *ts, void *wakeup)$/;"	f
sleep_history_print_control	power/sleep_history.c	/^static int sleep_history_print_control(char __user *buffer,$/;"	f	file:
sleep_history_ring_incr	power/sleep_history.c	41;"	d	file:
sleep_history_set_ts	power/sleep_history.c	42;"	d	file:
sleep_history_set_type	power/sleep_history.c	49;"	d	file:
sleep_history_syscore_exit	power/sleep_history.c	/^module_exit(sleep_history_syscore_exit);$/;"	v
sleep_history_syscore_exit	power/sleep_history.c	/^static void sleep_history_syscore_exit(void)$/;"	f	file:
sleep_history_syscore_init	power/sleep_history.c	/^module_init(sleep_history_syscore_init);$/;"	v
sleep_history_syscore_init	power/sleep_history.c	/^static int sleep_history_syscore_init(void)$/;"	f	file:
sleep_on	sched/core.c	/^EXPORT_SYMBOL(sleep_on);$/;"	v
sleep_on	sched/core.c	/^void __sched sleep_on(wait_queue_head_t *q)$/;"	f
sleep_on_common	sched/core.c	/^sleep_on_common(wait_queue_head_t *q, int state, long timeout)$/;"	f	file:
sleep_on_timeout	sched/core.c	/^EXPORT_SYMBOL(sleep_on_timeout);$/;"	v
sleep_on_timeout	sched/core.c	/^long __sched sleep_on_timeout(wait_queue_head_t *q, long timeout)$/;"	f
slot_manager	swap/kprobe/swap_slots.h	/^struct slot_manager {$/;"	s
slot_size	swap/kprobe/swap_slots.h	/^	unsigned long slot_size;	\/* FIXME: allocated in long (4 byte) *\/$/;"	m	struct:slot_manager
slot_table	swap/uprobe/swap_uprobes.c	/^static struct hlist_head slot_table[UPROBE_TABLE_SIZE];$/;"	v	typeref:struct:hlist_head	file:
slot_used	kprobes.c	/^	char slot_used[];$/;"	m	struct:kprobe_insn_page	file:
slots	swap/preload/preload_threads.c	/^	struct list_head slots;$/;"	m	struct:preload_td	typeref:struct:preload_td::list_head	file:
slots_per_page	kprobes.c	/^static int slots_per_page(struct kprobe_insn_cache *c)$/;"	f	file:
slowpath_args	panic.c	/^struct slowpath_args {$/;"	s	file:
slp_ws	power/sleep_history.c	/^struct slp_ws {$/;"	s	file:
sm	swap/kprobe/swap_kprobes.c	/^struct slot_manager sm;$/;"	v	typeref:struct:slot_manager
sm	swap/uprobe/swap_uprobes.h	/^	struct slot_manager *sm;            \/**< Pointer to slot manager *\/$/;"	m	struct:uprobe	typeref:struct:uprobe::slot_manager
sm	swap/us_manager/sspt/sspt_proc.h	/^	struct slot_manager *sm;	\/**< Ptr to the manager slot *\/$/;"	m	struct:sspt_proc	typeref:struct:sspt_proc::slot_manager
sm_alloc	swap/kprobe/swap_kprobes.c	/^static void *sm_alloc(struct slot_manager *sm)$/;"	f	file:
sm_alloc_us	swap/us_manager/us_slot_manager.c	/^static void *sm_alloc_us(struct slot_manager *sm)$/;"	f	file:
sm_free	swap/kprobe/swap_kprobes.c	/^static void sm_free(struct slot_manager *sm, void *ptr)$/;"	f	file:
sm_free_us	swap/us_manager/us_slot_manager.c	/^static void sm_free_us(struct slot_manager *sm, void *ptr)$/;"	f	file:
sm_path	swap/ksyms/no_ksyms.c	/^static char *sm_path;$/;"	v	file:
smi_list	swap/ksyms/no_ksyms.c	/^LIST_HEAD(smi_list);$/;"	v
smp_call_function	smp.c	/^EXPORT_SYMBOL(smp_call_function);$/;"	v
smp_call_function	smp.c	/^int smp_call_function(smp_call_func_t func, void *info, int wait)$/;"	f
smp_call_function_any	smp.c	/^EXPORT_SYMBOL_GPL(smp_call_function_any);$/;"	v
smp_call_function_any	smp.c	/^int smp_call_function_any(const struct cpumask *mask,$/;"	f
smp_call_function_many	smp.c	/^EXPORT_SYMBOL(smp_call_function_many);$/;"	v
smp_call_function_many	smp.c	/^void smp_call_function_many(const struct cpumask *mask,$/;"	f
smp_call_function_single	smp.c	/^EXPORT_SYMBOL(smp_call_function_single);$/;"	v
smp_call_function_single	smp.c	/^int smp_call_function_single(int cpu, smp_call_func_t func, void *info,$/;"	f
smp_call_function_single	up.c	/^EXPORT_SYMBOL(smp_call_function_single);$/;"	v
smp_call_function_single	up.c	/^int smp_call_function_single(int cpu, void (*func) (void *info), void *info,$/;"	f
smp_init	smp.c	/^void __init smp_init(void)$/;"	f
smpboot_create_threads	smpboot.c	/^int smpboot_create_threads(unsigned int cpu)$/;"	f
smpboot_destroy_threads	smpboot.c	/^static void smpboot_destroy_threads(struct smp_hotplug_thread *ht)$/;"	f	file:
smpboot_park_thread	smpboot.c	/^static void smpboot_park_thread(struct smp_hotplug_thread *ht, unsigned int cpu)$/;"	f	file:
smpboot_park_threads	smpboot.c	/^void smpboot_park_threads(unsigned int cpu)$/;"	f
smpboot_register_percpu_thread	smpboot.c	/^EXPORT_SYMBOL_GPL(smpboot_register_percpu_thread);$/;"	v
smpboot_register_percpu_thread	smpboot.c	/^int smpboot_register_percpu_thread(struct smp_hotplug_thread *plug_thread)$/;"	f
smpboot_thread_data	smpboot.c	/^struct smpboot_thread_data {$/;"	s	file:
smpboot_thread_fn	smpboot.c	/^static int smpboot_thread_fn(void *data)$/;"	f	file:
smpboot_unpark_thread	smpboot.c	/^static void smpboot_unpark_thread(struct smp_hotplug_thread *ht, unsigned int cpu)$/;"	f	file:
smpboot_unpark_threads	smpboot.c	/^void smpboot_unpark_threads(unsigned int cpu)$/;"	f
smpboot_unregister_percpu_thread	smpboot.c	/^EXPORT_SYMBOL_GPL(smpboot_unregister_percpu_thread);$/;"	v
smpboot_unregister_percpu_thread	smpboot.c	/^void smpboot_unregister_percpu_thread(struct smp_hotplug_thread *plug_thread)$/;"	f
snapshot_additional_pages	power/snapshot.c	/^unsigned int snapshot_additional_pages(struct zone *zone)$/;"	f
snapshot_compat_ioctl	power/user.c	/^snapshot_compat_ioctl(struct file *file, unsigned int cmd, unsigned long arg)$/;"	f	file:
snapshot_count_probe_ops	trace/trace.c	/^static struct ftrace_probe_ops snapshot_count_probe_ops = {$/;"	v	typeref:struct:ftrace_probe_ops	file:
snapshot_data	power/user.c	/^static struct snapshot_data {$/;"	s	file:
snapshot_device	power/user.c	/^static struct miscdevice snapshot_device = {$/;"	v	typeref:struct:miscdevice	file:
snapshot_device_available	power/user.c	/^atomic_t snapshot_device_available = ATOMIC_INIT(1);$/;"	v
snapshot_device_init	power/user.c	/^device_initcall(snapshot_device_init);$/;"	v
snapshot_device_init	power/user.c	/^static int __init snapshot_device_init(void)$/;"	f	file:
snapshot_fops	power/user.c	/^static const struct file_operations snapshot_fops = {$/;"	v	typeref:struct:file_operations	file:
snapshot_fops	trace/trace.c	/^static const struct file_operations snapshot_fops = {$/;"	v	typeref:struct:file_operations	file:
snapshot_get_image_size	power/snapshot.c	/^unsigned long snapshot_get_image_size(void)$/;"	f
snapshot_handle	power/power.h	/^struct snapshot_handle {$/;"	s
snapshot_image_loaded	power/snapshot.c	/^int snapshot_image_loaded(struct snapshot_handle *handle)$/;"	f
snapshot_ioctl	power/user.c	/^static long snapshot_ioctl(struct file *filp, unsigned int cmd,$/;"	f	file:
snapshot_open	power/user.c	/^static int snapshot_open(struct inode *inode, struct file *filp)$/;"	f	file:
snapshot_probe_ops	trace/trace.c	/^static struct ftrace_probe_ops snapshot_probe_ops = {$/;"	v	typeref:struct:ftrace_probe_ops	file:
snapshot_raw_fops	trace/trace.c	/^static const struct file_operations snapshot_raw_fops = {$/;"	v	typeref:struct:file_operations	file:
snapshot_raw_open	trace/trace.c	/^static int snapshot_raw_open(struct inode *inode, struct file *filp)$/;"	f	file:
snapshot_read	power/user.c	/^static ssize_t snapshot_read(struct file *filp, char __user *buf,$/;"	f	file:
snapshot_read_next	power/snapshot.c	/^int snapshot_read_next(struct snapshot_handle *handle)$/;"	f
snapshot_release	power/user.c	/^static int snapshot_release(struct inode *inode, struct file *filp)$/;"	f	file:
snapshot_state	power/user.c	/^} snapshot_state;$/;"	v	typeref:struct:snapshot_data	file:
snapshot_write	power/user.c	/^static ssize_t snapshot_write(struct file *filp, const char __user *buf,$/;"	f	file:
snapshot_write_finalize	power/snapshot.c	/^void snapshot_write_finalize(struct snapshot_handle *handle)$/;"	f
snapshot_write_next	power/snapshot.c	/^int snapshot_write_next(struct snapshot_handle *handle)$/;"	f
snprint_time	lockdep_proc.c	/^static void snprint_time(char *buf, size_t bufsiz, s64 nr)$/;"	f	file:
sockaddr	audit.h	/^	struct sockaddr_storage *sockaddr;$/;"	m	struct:audit_context	typeref:struct:audit_context::sockaddr_storage
sockaddr_len	audit.h	/^	size_t sockaddr_len;$/;"	m	struct:audit_context
socketcall	audit.h	/^		} socketcall;$/;"	m	union:audit_context::__anon15	typeref:struct:audit_context::__anon15::__anon16
softirq_init	softirq.c	/^void __init softirq_init(void)$/;"	f
softirq_snap	rcutree.h	/^	unsigned int softirq_snap;	\/* Snapshot of softirq activity. *\/$/;"	m	struct:rcu_data
softirq_threads	softirq.c	/^static struct smp_hotplug_thread softirq_threads = {$/;"	v	typeref:struct:smp_hotplug_thread	file:
softirq_to_name	softirq.c	/^char *softirq_to_name[NR_SOFTIRQS] = {$/;"	v
softirq_work_list	softirq.c	/^EXPORT_PER_CPU_SYMBOL(softirq_work_list);$/;"	v
softirqs_off_events	lockdep_internals.h	/^	int	softirqs_off_events;$/;"	m	struct:lockdep_stats
softirqs_on_events	lockdep_internals.h	/^	int	softirqs_on_events;$/;"	m	struct:lockdep_stats
softlockup_panic	watchdog.c	/^unsigned int __read_mostly softlockup_panic =$/;"	v
softlockup_panic_setup	watchdog.c	/^static int __init softlockup_panic_setup(char *str)$/;"	f	file:
software_resume	power/hibernate.c	/^late_initcall(software_resume);$/;"	v
software_resume	power/hibernate.c	/^static int software_resume(void)$/;"	f	file:
something_to_read	swap/driver/driver_to_buffer.c	/^static inline int something_to_read(void)$/;"	f	file:
sort_main_extable	extable.c	/^void __init sort_main_extable(void)$/;"	f
sort_range	range.c	/^void sort_range(struct range *range, int nr_range)$/;"	f
soup_req	swap/wsp/wsp.c	/^static struct probe_info_new soup_req = MAKE_UPROBE(soup_req_handle);$/;"	v	typeref:struct:probe_info_new	file:
soup_req_handle	swap/wsp/wsp.c	/^static int soup_req_handle(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
source_load	sched/fair.c	/^static unsigned long source_load(int cpu, int type)$/;"	f	file:
sp	swap/kprobe/swap_kprobes.h	/^	unsigned long *sp;              \/**< Stack pointer.*\/$/;"	m	struct:kretprobe_instance
sp	swap/uprobe/swap_uprobes.h	/^	kprobe_opcode_t *sp;                \/**< Pointer to stack *\/$/;"	m	struct:uretprobe_instance
sp	swap/uprobe/swap_uprobes.h	/^	unsigned long sp;$/;"	m	struct:urinst_info
span	sched/sched.h	/^	cpumask_var_t span;$/;"	m	struct:root_domain
spare	trace/trace.c	/^	void			*spare;$/;"	m	struct:ftrace_buffer_info	file:
spawn_ksoftirqd	softirq.c	/^early_initcall(spawn_ksoftirqd);$/;"	v
spawn_ksoftirqd	softirq.c	/^static __init int spawn_ksoftirqd(void)$/;"	f	file:
specific_send_sig_info	signal.c	/^specific_send_sig_info(int sig, struct siginfo *info, struct task_struct *t)$/;"	f	file:
spin_lock_mutex	mutex-debug.h	40;"	d
spin_lock_mutex	mutex.h	12;"	d
spin_msec	panic.c	/^static void spin_msec(int msecs)$/;"	f	file:
spin_unlock_mutex	mutex-debug.h	50;"	d
spin_unlock_mutex	mutex.h	14;"	d
spinlock	swap/buffer/data_types.h	/^	spinlock_t spinlock;$/;"	m	struct:sync_t
splice_grow_spd_p	swap/driver/device_driver.c	/^static splice_grow_spd_p_t splice_grow_spd_p;$/;"	v	file:
splice_grow_spd_p_t	swap/driver/device_driver.c	/^typedef int(*splice_grow_spd_p_t)(const struct pipe_inode_info *pipe,$/;"	t	file:
splice_read	trace/trace.h	/^	ssize_t			(*splice_read)(struct trace_iterator *iter,$/;"	m	struct:tracer
splice_to_pipe_p	swap/driver/device_driver.c	/^static splice_to_pipe_p_t splice_to_pipe_p;$/;"	v	file:
splice_to_pipe_p_t	swap/driver/device_driver.c	/^typedef ssize_t(*splice_to_pipe_p_t)(struct pipe_inode_info *pipe,$/;"	t	file:
sprint_backtrace	kallsyms.c	/^int sprint_backtrace(char *buffer, unsigned long address)$/;"	f
sprint_symbol	kallsyms.c	/^EXPORT_SYMBOL_GPL(sprint_symbol);$/;"	v
sprint_symbol	kallsyms.c	/^int sprint_symbol(char *buffer, unsigned long address)$/;"	f
sprint_symbol_no_offset	kallsyms.c	/^EXPORT_SYMBOL_GPL(sprint_symbol_no_offset);$/;"	v
sprint_symbol_no_offset	kallsyms.c	/^int sprint_symbol_no_offset(char *buffer, unsigned long address)$/;"	f
src_cpu	sched/fair.c	/^	int			src_cpu;$/;"	m	struct:lb_env	file:
src_rq	sched/fair.c	/^	struct rq		*src_rq;$/;"	m	struct:lb_env	typeref:struct:lb_env::rq	file:
srctree	gcov/fs.c	/^static const char srctree[] = SRCTREE;$/;"	v	file:
srcu_advance_batches	srcu.c	/^static void srcu_advance_batches(struct srcu_struct *sp, int trycount)$/;"	f	file:
srcu_barrier	srcu.c	/^EXPORT_SYMBOL_GPL(srcu_barrier);$/;"	v
srcu_barrier	srcu.c	/^void srcu_barrier(struct srcu_struct *sp)$/;"	f
srcu_batches_completed	srcu.c	/^EXPORT_SYMBOL_GPL(srcu_batches_completed);$/;"	v
srcu_batches_completed	srcu.c	/^long srcu_batches_completed(struct srcu_struct *sp)$/;"	f
srcu_collect_new	srcu.c	/^static void srcu_collect_new(struct srcu_struct *sp)$/;"	f	file:
srcu_ctl	rcutorture.c	/^DEFINE_STATIC_SRCU(srcu_ctl);$/;"	v
srcu_expedited_ops	rcutorture.c	/^static struct rcu_torture_ops srcu_expedited_ops = {$/;"	v	typeref:struct:rcu_torture_ops	file:
srcu_flip	srcu.c	/^static void srcu_flip(struct srcu_struct *sp)$/;"	f	file:
srcu_init_notifier_head	notifier.c	/^EXPORT_SYMBOL_GPL(srcu_init_notifier_head);$/;"	v
srcu_init_notifier_head	notifier.c	/^void srcu_init_notifier_head(struct srcu_notifier_head *nh)$/;"	f
srcu_invoke_callbacks	srcu.c	/^static void srcu_invoke_callbacks(struct srcu_struct *sp)$/;"	f	file:
srcu_notifier_call_chain	notifier.c	/^EXPORT_SYMBOL_GPL(srcu_notifier_call_chain);$/;"	v
srcu_notifier_call_chain	notifier.c	/^int srcu_notifier_call_chain(struct srcu_notifier_head *nh,$/;"	f
srcu_notifier_chain_register	notifier.c	/^EXPORT_SYMBOL_GPL(srcu_notifier_chain_register);$/;"	v
srcu_notifier_chain_register	notifier.c	/^int srcu_notifier_chain_register(struct srcu_notifier_head *nh,$/;"	f
srcu_notifier_chain_unregister	notifier.c	/^EXPORT_SYMBOL_GPL(srcu_notifier_chain_unregister);$/;"	v
srcu_notifier_chain_unregister	notifier.c	/^int srcu_notifier_chain_unregister(struct srcu_notifier_head *nh,$/;"	f
srcu_ops	rcutorture.c	/^static struct rcu_torture_ops srcu_ops = {$/;"	v	typeref:struct:rcu_torture_ops	file:
srcu_raw_ops	rcutorture.c	/^static struct rcu_torture_ops srcu_raw_ops = {$/;"	v	typeref:struct:rcu_torture_ops	file:
srcu_raw_sync_ops	rcutorture.c	/^static struct rcu_torture_ops srcu_raw_sync_ops = {$/;"	v	typeref:struct:rcu_torture_ops	file:
srcu_read_delay	rcutorture.c	/^static void srcu_read_delay(struct rcu_random_state *rrsp)$/;"	f	file:
srcu_readers_active	srcu.c	/^static int srcu_readers_active(struct srcu_struct *sp)$/;"	f	file:
srcu_readers_active_idx	srcu.c	/^static unsigned long srcu_readers_active_idx(struct srcu_struct *sp, int idx)$/;"	f	file:
srcu_readers_active_idx_check	srcu.c	/^static bool srcu_readers_active_idx_check(struct srcu_struct *sp, int idx)$/;"	f	file:
srcu_readers_seq_idx	srcu.c	/^static unsigned long srcu_readers_seq_idx(struct srcu_struct *sp, int idx)$/;"	f	file:
srcu_reschedule	srcu.c	/^static void srcu_reschedule(struct srcu_struct *sp)$/;"	f	file:
srcu_sync_ops	rcutorture.c	/^static struct rcu_torture_ops srcu_sync_ops = {$/;"	v	typeref:struct:rcu_torture_ops	file:
srcu_torture_barrier	rcutorture.c	/^static void srcu_torture_barrier(void)$/;"	f	file:
srcu_torture_call	rcutorture.c	/^static void srcu_torture_call(struct rcu_head *head,$/;"	f	file:
srcu_torture_completed	rcutorture.c	/^static int srcu_torture_completed(void)$/;"	f	file:
srcu_torture_deferred_free	rcutorture.c	/^static void srcu_torture_deferred_free(struct rcu_torture *rp)$/;"	f	file:
srcu_torture_stats	rcutorture.c	/^static int srcu_torture_stats(char *page)$/;"	f	file:
srcu_torture_synchronize	rcutorture.c	/^static void srcu_torture_synchronize(void)$/;"	f	file:
srcu_torture_synchronize_expedited	rcutorture.c	/^static void srcu_torture_synchronize_expedited(void)$/;"	f	file:
srcversion	module.c	/^MODINFO_ATTR(srcversion);$/;"	v
ss_addr	swap/kprobe/swap_kprobes.h	/^	kprobe_opcode_t					*ss_addr[NR_CPUS];$/;"	m	struct:kprobe
sspt_add_ip	swap/us_manager/sspt/sspt_page.c	/^void sspt_add_ip(struct sspt_page *page, struct us_ip *ip)$/;"	f
sspt_add_page	swap/us_manager/sspt/sspt_file.c	/^static void sspt_add_page(struct sspt_file *file, struct sspt_page *page)$/;"	f	file:
sspt_create_feature	swap/us_manager/sspt/sspt_feature.c	/^struct sspt_feature *sspt_create_feature(void)$/;"	f
sspt_del_ip	swap/us_manager/sspt/sspt_page.c	/^void sspt_del_ip(struct us_ip *ip)$/;"	f
sspt_destroy_feature	swap/us_manager/sspt/sspt_feature.c	/^void sspt_destroy_feature(struct sspt_feature *f)$/;"	f
sspt_feature	swap/us_manager/sspt/sspt_feature.c	/^struct sspt_feature {$/;"	s	file:
sspt_feature_data	swap/us_manager/sspt/sspt_feature.c	/^struct sspt_feature_data {$/;"	s	file:
sspt_feature_id_t	swap/us_manager/sspt/sspt_feature.h	/^typedef void *sspt_feature_id_t;	\/**< @brief sspt feature ID type *\/$/;"	t
sspt_feature_img	swap/us_manager/sspt/sspt_feature.c	/^struct sspt_feature_img {$/;"	s	file:
sspt_file	swap/us_manager/sspt/sspt_file.h	/^struct sspt_file {$/;"	s
sspt_file_add_ip	swap/us_manager/sspt/sspt_file.c	/^void sspt_file_add_ip(struct sspt_file *file, unsigned long offset,$/;"	f
sspt_file_check_install_pages	swap/us_manager/sspt/sspt_file.c	/^int sspt_file_check_install_pages(struct sspt_file *file)$/;"	f
sspt_file_create	swap/us_manager/sspt/sspt_file.c	/^struct sspt_file *sspt_file_create(struct dentry *dentry, int page_cnt)$/;"	f
sspt_file_free	swap/us_manager/sspt/sspt_file.c	/^void sspt_file_free(struct sspt_file *file)$/;"	f
sspt_file_install	swap/us_manager/sspt/sspt_file.c	/^void sspt_file_install(struct sspt_file *file)$/;"	f
sspt_file_on_each_ip	swap/us_manager/sspt/sspt_file.c	/^void sspt_file_on_each_ip(struct sspt_file *file,$/;"	f
sspt_file_set_mapping	swap/us_manager/sspt/sspt_file.c	/^void sspt_file_set_mapping(struct sspt_file *file, struct vm_area_struct *vma)$/;"	f
sspt_file_uninstall	swap/us_manager/sspt/sspt_file.c	/^int sspt_file_uninstall(struct sspt_file *file,$/;"	f
sspt_filter	swap/us_manager/sspt/sspt_filter.h	/^struct sspt_filter {$/;"	s
sspt_filter_create	swap/us_manager/sspt/sspt_filter.c	/^struct sspt_filter *sspt_filter_create(struct sspt_proc *proc,$/;"	f
sspt_filter_free	swap/us_manager/sspt/sspt_filter.c	/^void sspt_filter_free(struct sspt_filter *fl)$/;"	f
sspt_find_page	swap/us_manager/sspt/sspt_file.c	/^static struct sspt_page *sspt_find_page(struct sspt_file *file,$/;"	f	file:
sspt_find_page_mapped	swap/us_manager/sspt/sspt_file.c	/^struct sspt_page *sspt_find_page_mapped(struct sspt_file *file,$/;"	f
sspt_find_page_or_new	swap/us_manager/sspt/sspt_file.c	/^static struct sspt_page *sspt_find_page_or_new(struct sspt_file *file,$/;"	f	file:
sspt_get_feature_data	swap/us_manager/sspt/sspt_feature.c	/^EXPORT_SYMBOL_GPL(sspt_get_feature_data);$/;"	v
sspt_get_feature_data	swap/us_manager/sspt/sspt_feature.c	/^void *sspt_get_feature_data(struct sspt_feature *f, sspt_feature_id_t id)$/;"	f
sspt_get_page	swap/us_manager/sspt/sspt_file.c	/^struct sspt_page *sspt_get_page(struct sspt_file *file,$/;"	f
sspt_list_add_ip	swap/us_manager/sspt/sspt_page.c	/^static void sspt_list_add_ip(struct sspt_page *page, struct us_ip *ip)$/;"	f	file:
sspt_list_del_ip	swap/us_manager/sspt/sspt_page.c	/^static void sspt_list_del_ip(struct us_ip *ip)$/;"	f	file:
sspt_page	swap/us_manager/sspt/sspt_page.h	/^struct sspt_page {$/;"	s
sspt_page_create	swap/us_manager/sspt/sspt_page.c	/^struct sspt_page *sspt_page_create(unsigned long offset)$/;"	f
sspt_page_free	swap/us_manager/sspt/sspt_page.c	/^void sspt_page_free(struct sspt_page *page)$/;"	f
sspt_page_is_installed	swap/us_manager/sspt/sspt_page.c	/^int sspt_page_is_installed(struct sspt_page *page)$/;"	f
sspt_page_on_each_ip	swap/us_manager/sspt/sspt_page.c	/^void sspt_page_on_each_ip(struct sspt_page *page,$/;"	f
sspt_proc	swap/us_manager/sspt/sspt_proc.h	/^struct sspt_proc {$/;"	s
sspt_proc_add_file	swap/us_manager/sspt/sspt_proc.c	/^static void sspt_proc_add_file(struct sspt_proc *proc, struct sspt_file *file)$/;"	f	file:
sspt_proc_add_filter	swap/us_manager/sspt/sspt_proc.c	/^void sspt_proc_add_filter(struct sspt_proc *proc, struct pf_group *pfg)$/;"	f
sspt_proc_cb	swap/us_manager/sspt/sspt_proc.h	/^struct sspt_proc_cb {$/;"	s
sspt_proc_cb_set	swap/us_manager/sspt/sspt_proc.c	/^EXPORT_SYMBOL_GPL(sspt_proc_cb_set);$/;"	v
sspt_proc_cb_set	swap/us_manager/sspt/sspt_proc.c	/^int sspt_proc_cb_set(struct sspt_proc_cb *cb)$/;"	f
sspt_proc_cleanup	swap/us_manager/sspt/sspt_proc.c	/^void sspt_proc_cleanup(struct sspt_proc *proc)$/;"	f
sspt_proc_create	swap/us_manager/sspt/sspt_proc.c	/^struct sspt_proc *sspt_proc_create(struct task_struct *task)$/;"	f
sspt_proc_del_all_filters	swap/us_manager/sspt/sspt_proc.c	/^void sspt_proc_del_all_filters(struct sspt_proc *proc)$/;"	f
sspt_proc_del_filter	swap/us_manager/sspt/sspt_proc.c	/^void sspt_proc_del_filter(struct sspt_proc *proc, struct pf_group *pfg)$/;"	f
sspt_proc_find_file	swap/us_manager/sspt/sspt_proc.c	/^struct sspt_file *sspt_proc_find_file(struct sspt_proc *proc,$/;"	f
sspt_proc_find_file_or_new	swap/us_manager/sspt/sspt_proc.c	/^struct sspt_file *sspt_proc_find_file_or_new(struct sspt_proc *proc,$/;"	f
sspt_proc_free_all	swap/us_manager/sspt/sspt_proc.c	/^void sspt_proc_free_all(void)$/;"	f
sspt_proc_get	swap/us_manager/sspt/sspt_proc.c	/^struct sspt_proc *sspt_proc_get(struct sspt_proc *proc)$/;"	f
sspt_proc_get_by_task	swap/us_manager/sspt/sspt_proc.c	/^EXPORT_SYMBOL_GPL(sspt_proc_get_by_task);$/;"	v
sspt_proc_get_by_task	swap/us_manager/sspt/sspt_proc.c	/^struct sspt_proc *sspt_proc_get_by_task(struct task_struct *task)$/;"	f
sspt_proc_get_by_task_or_new	swap/us_manager/sspt/sspt_proc.c	/^struct sspt_proc *sspt_proc_get_by_task_or_new(struct task_struct *task)$/;"	f
sspt_proc_get_files_by_region	swap/us_manager/sspt/sspt_proc.c	/^int sspt_proc_get_files_by_region(struct sspt_proc *proc,$/;"	f
sspt_proc_insert_files	swap/us_manager/sspt/sspt_proc.c	/^void sspt_proc_insert_files(struct sspt_proc *proc, struct list_head *head)$/;"	f
sspt_proc_install	swap/us_manager/sspt/sspt_proc.c	/^void sspt_proc_install(struct sspt_proc *proc)$/;"	f
sspt_proc_install_page	swap/us_manager/sspt/sspt_proc.c	/^void sspt_proc_install_page(struct sspt_proc *proc, unsigned long page_addr)$/;"	f
sspt_proc_install_probe	swap/us_manager/sspt/sspt_proc.c	/^EXPORT_SYMBOL_GPL(sspt_proc_install_probe);$/;"	v
sspt_proc_install_probe	swap/us_manager/sspt/sspt_proc.c	/^void sspt_proc_install_probe(struct sspt_proc *proc, unsigned long vaddr,$/;"	f
sspt_proc_is_filter_new	swap/us_manager/sspt/sspt_proc.c	/^bool sspt_proc_is_filter_new(struct sspt_proc *proc, struct pf_group *pfg)$/;"	f
sspt_proc_is_send_event	swap/us_manager/sspt/sspt_proc.c	/^bool sspt_proc_is_send_event(struct sspt_proc *proc)$/;"	f
sspt_proc_list	swap/us_manager/sspt/sspt_proc.c	/^struct list_head *sspt_proc_list()$/;"	f
sspt_proc_on_each_filter	swap/us_manager/sspt/sspt_proc.c	/^void sspt_proc_on_each_filter(struct sspt_proc *proc,$/;"	f
sspt_proc_on_each_ip	swap/us_manager/sspt/sspt_proc.c	/^void sspt_proc_on_each_ip(struct sspt_proc *proc,$/;"	f
sspt_proc_priv_create	swap/us_manager/sspt/sspt_proc.c	/^void sspt_proc_priv_create(struct sspt_proc *proc)$/;"	f
sspt_proc_priv_destroy	swap/us_manager/sspt/sspt_proc.c	/^void sspt_proc_priv_destroy(struct sspt_proc *proc)$/;"	f
sspt_proc_put	swap/us_manager/sspt/sspt_proc.c	/^void sspt_proc_put(struct sspt_proc *proc)$/;"	f
sspt_proc_read_lock	swap/us_manager/sspt/sspt_proc.c	/^void sspt_proc_read_lock(void)$/;"	f
sspt_proc_read_unlock	swap/us_manager/sspt/sspt_proc.c	/^void sspt_proc_read_unlock(void)$/;"	f
sspt_proc_uninstall	swap/us_manager/sspt/sspt_proc.c	/^int sspt_proc_uninstall(struct sspt_proc *proc,$/;"	f
sspt_proc_write_lock	swap/us_manager/sspt/sspt_proc.c	/^void sspt_proc_write_lock(void)$/;"	f
sspt_proc_write_unlock	swap/us_manager/sspt/sspt_proc.c	/^void sspt_proc_write_unlock(void)$/;"	f
sspt_put_page	swap/us_manager/sspt/sspt_file.c	/^void sspt_put_page(struct sspt_page *page)$/;"	f
sspt_register_feature	swap/us_manager/sspt/sspt_feature.c	/^EXPORT_SYMBOL_GPL(sspt_register_feature);$/;"	v
sspt_register_feature	swap/us_manager/sspt/sspt_feature.c	/^sspt_feature_id_t sspt_register_feature(void *(*alloc)(void),$/;"	f
sspt_register_page	swap/us_manager/sspt/sspt_page.c	/^int sspt_register_page(struct sspt_page *page, struct sspt_file *file)$/;"	f
sspt_register_usprobe	swap/us_manager/sspt/sspt.h	/^static inline int sspt_register_usprobe(struct us_ip *ip)$/;"	f
sspt_unregister_feature	swap/us_manager/sspt/sspt_feature.c	/^EXPORT_SYMBOL_GPL(sspt_unregister_feature);$/;"	v
sspt_unregister_feature	swap/us_manager/sspt/sspt_feature.c	/^void sspt_unregister_feature(sspt_feature_id_t id)$/;"	f
sspt_unregister_page	swap/us_manager/sspt/sspt_page.c	/^int sspt_unregister_page(struct sspt_page *page,$/;"	f
sspt_unregister_usprobe	swap/us_manager/sspt/sspt.h	/^static inline int sspt_unregister_usprobe(struct task_struct *task,$/;"	f
stack	cgroup.c	/^	unsigned short stack[0]; \/* Array of Length (depth+1) *\/$/;"	m	struct:css_id	file:
stack_addr	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	51;"	d	file:
stack_dump_index	trace/trace_stack.c	/^static unsigned stack_dump_index[STACK_TRACE_ENTRIES];$/;"	v	file:
stack_dump_trace	trace/trace_stack.c	/^static unsigned long stack_dump_trace[STACK_TRACE_ENTRIES+1] =$/;"	v	file:
stack_guard_page	swap/kprobe/swap_kprobes_deps.c	/^static inline int stack_guard_page(struct vm_area_struct *vma,$/;"	f	file:
stack_max_size_fops	trace/trace_stack.c	/^static const struct file_operations stack_max_size_fops = {$/;"	v	typeref:struct:file_operations	file:
stack_max_size_read	trace/trace_stack.c	/^stack_max_size_read(struct file *filp, char __user *ubuf,$/;"	f	file:
stack_max_size_write	trace/trace_stack.c	/^stack_max_size_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
stack_trace	lockdep.c	/^static unsigned long stack_trace[MAX_STACK_TRACE_ENTRIES];$/;"	v	file:
stack_trace_call	trace/trace_stack.c	/^stack_trace_call(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
stack_trace_filter_fops	trace/trace_stack.c	/^static const struct file_operations stack_trace_filter_fops = {$/;"	v	typeref:struct:file_operations	file:
stack_trace_filter_open	trace/trace_stack.c	/^stack_trace_filter_open(struct inode *inode, struct file *file)$/;"	f	file:
stack_trace_fops	trace/trace_stack.c	/^static const struct file_operations stack_trace_fops = {$/;"	v	typeref:struct:file_operations	file:
stack_trace_init	trace/trace_stack.c	/^device_initcall(stack_trace_init);$/;"	v
stack_trace_init	trace/trace_stack.c	/^static __init int stack_trace_init(void)$/;"	f	file:
stack_trace_open	trace/trace_stack.c	/^static int stack_trace_open(struct inode *inode, struct file *file)$/;"	f	file:
stack_trace_seq_ops	trace/trace_stack.c	/^static const struct seq_operations stack_trace_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
stack_trace_sysctl	trace/trace_stack.c	/^stack_trace_sysctl(struct ctl_table *table, int write,$/;"	f
stack_tracer_enabled	trace/trace_stack.c	/^int stack_tracer_enabled;$/;"	v
stacktrace_count_probe_ops	trace/trace_functions.c	/^static struct ftrace_probe_ops stacktrace_count_probe_ops = {$/;"	v	typeref:struct:ftrace_probe_ops	file:
stacktrace_probe_ops	trace/trace_functions.c	/^static struct ftrace_probe_ops stacktrace_probe_ops = {$/;"	v	typeref:struct:ftrace_probe_ops	file:
stage	swap/nsp/nsp_msg.c	/^	u32 stage;$/;"	m	struct:nsp_msg_struct	file:
stage_begin	swap/nsp/nsp.c	/^static void stage_begin(enum nsp_proc_stat priv, enum nsp_proc_stat cur)$/;"	f	file:
stage_end	swap/nsp/nsp.c	/^static void stage_end(enum nsp_proc_stat priv, enum nsp_proc_stat cur,$/;"	f	file:
stall_cpu	rcutorture.c	/^static int stall_cpu;		\/* CPU-stall duration (s).  0 for no stall. *\/$/;"	v	file:
stall_cpu_holdoff	rcutorture.c	/^static int stall_cpu_holdoff = 10; \/* Time to wait until stall (s).  *\/$/;"	v	file:
stall_task	rcutorture.c	/^static struct task_struct *stall_task;$/;"	v	typeref:struct:task_struct	file:
stamp	gcov/gcov.h	/^	unsigned int			stamp;$/;"	m	struct:gcov_info
start	events/core.c	/^		u64				start;$/;"	m	struct:perf_mmap_event::__anon8	file:
start	power/snapshot.c	/^	unsigned long start;$/;"	m	struct:mem_extent	file:
start	power/swap.c	/^	unsigned long start;$/;"	m	struct:swsusp_extent	file:
start	resource.c	/^	resource_size_t start;$/;"	m	struct:region_devres	file:
start	swap/ks_features/file_ops.c	/^	s64 start;$/;"	m	struct:lock_arg	file:
start	swap/ks_features/ksf_msg.c	/^	u64 start;$/;"	m	struct:lock_arg	file:
start	swap/parser/usm_msg.c	/^	unsigned long start;$/;"	m	struct:kmem_info	file:
start	swap/us_manager/helper.c	/^	unsigned long start;$/;"	m	struct:msg_unmap_data	file:
start	swap/us_manager/helper.c	/^	unsigned long start;$/;"	m	struct:unmap_data	file:
start	trace/ftrace.c	/^	struct ftrace_profile_page	*start;$/;"	m	struct:ftrace_profile_stat	typeref:struct:ftrace_profile_stat::ftrace_profile_page	file:
start	trace/trace.h	/^	void			(*start)(struct trace_array *tr);$/;"	m	struct:tracer
start_bandwidth_timer	sched/core.c	/^void start_bandwidth_timer(struct hrtimer *period_timer, ktime_t period)$/;"	f
start_branch_trace	trace/trace_branch.c	/^static void start_branch_trace(struct trace_array *tr)$/;"	f	file:
start_cfs_slack_bandwidth	sched/fair.c	/^static void start_cfs_slack_bandwidth(struct cfs_bandwidth *cfs_b)$/;"	f	file:
start_critical_timing	trace/trace_irqsoff.c	/^start_critical_timing(unsigned long ip, unsigned long parent_ip)$/;"	f	file:
start_critical_timings	trace/trace_irqsoff.c	/^EXPORT_SYMBOL_GPL(start_critical_timings);$/;"	v
start_critical_timings	trace/trace_irqsoff.c	/^void start_critical_timings(void)$/;"	f
start_drawing_late_resume	power/fbearlysuspend.c	/^static void start_drawing_late_resume(struct early_suspend *h)$/;"	f	file:
start_flag	swap/task_data/task_data.c	/^static atomic_t start_flag = ATOMIC_INIT(0);$/;"	v	file:
start_flush_work	workqueue.c	/^static bool start_flush_work(struct work_struct *work, struct wq_barrier *barr)$/;"	f	file:
start_func	time/timer_stats.c	/^	void			*start_func;$/;"	m	struct:entry	file:
start_func_tracer	trace/trace_sched_wakeup.c	/^static int start_func_tracer(int graph)$/;"	f	file:
start_graph_tracing	trace/ftrace.c	/^static int start_graph_tracing(void)$/;"	f	file:
start_irqsoff_tracer	trace/trace_irqsoff.c	/^static int start_irqsoff_tracer(struct trace_array *tr, int graph)$/;"	f	file:
start_lock	trace/trace.h	/^	raw_spinlock_t		start_lock;$/;"	m	struct:trace_array
start_nop_trace	trace/trace_nop.c	/^static void start_nop_trace(struct trace_array *tr)$/;"	f	file:
start_pfn	power/snapshot.c	/^	unsigned long start_pfn;	\/* pfn represented by the first bit *\/$/;"	m	struct:bm_block	file:
start_pfn	power/snapshot.c	/^	unsigned long start_pfn;$/;"	m	struct:nosave_region	file:
start_ptr	swap/buffer/buffer_queue.c	/^	struct swap_subbuffer *start_ptr;$/;"	m	struct:queue_t	typeref:struct:queue_t::swap_subbuffer	file:
start_rt_bandwidth	sched/rt.c	/^static void start_rt_bandwidth(struct rt_bandwidth *rt_b)$/;"	f	file:
start_time	swap/energy/energy.c	/^static u64 start_time;$/;"	v	file:
start_time	swap/parser/usm_msg.c	/^	u64 start_time;$/;"	m	struct:proc_info_bottom	file:
start_wakeup_tracer	trace/trace_sched_wakeup.c	/^static void start_wakeup_tracer(struct trace_array *tr)$/;"	f	file:
start_worker	workqueue.c	/^static void start_worker(struct worker *worker)$/;"	f	file:
started_after	cgroup.c	/^static inline int started_after(void *p1, void *p2)$/;"	f	file:
started_after_time	cgroup.c	/^static inline int started_after_time(struct task_struct *t1,$/;"	f	file:
stat	swap/nsp/nsp.c	/^static enum nsp_stat stat = NS_OFF;$/;"	v	typeref:enum:nsp_stat	file:
stat	swap/nsp/nsp_tdata.h	/^	enum nsp_proc_stat stat;$/;"	m	struct:tdata	typeref:enum:tdata::nsp_proc_stat
stat	swap/wsp/wsp_res.c	/^	enum tdata_stat stat;$/;"	m	struct:wsp_tdata	typeref:enum:wsp_tdata::tdata_stat	file:
stat	swap/wsp/wsp_res.h	/^	enum wsp_res_stat stat;$/;"	m	struct:wsp_res	typeref:enum:wsp_res::wsp_res_stat
stat	trace/ftrace.c	/^	struct tracer_stat		stat;$/;"	m	struct:ftrace_profile_stat	typeref:struct:ftrace_profile_stat::tracer_stat	file:
stat	trace/trace_stat.c	/^	void			*stat;$/;"	m	struct:stat_node	file:
stat_cmp	trace/trace_stat.h	/^	int			(*stat_cmp)(void *p1, void *p2);$/;"	m	struct:tracer_stat
stat_dir	trace/trace_stat.c	/^static struct dentry		*stat_dir;$/;"	v	typeref:struct:dentry	file:
stat_headers	trace/trace_stat.h	/^	int			(*stat_headers)(struct seq_file *s);$/;"	m	struct:tracer_stat
stat_interval	rcutorture.c	/^static int stat_interval = 60;	\/* Interval between stats, in seconds. *\/$/;"	v	file:
stat_lcd_ops	swap/energy/lcd/lcd_base.c	/^static enum ST_LCD_OPS stat_lcd_ops[lcd_ops_cnt];$/;"	v	typeref:enum:ST_LCD_OPS	file:
stat_mutex	trace/trace_stat.c	/^	struct mutex		stat_mutex;$/;"	m	struct:stat_session	typeref:struct:stat_session::mutex	file:
stat_nam	sched/core.c	/^static const char stat_nam[] = TASK_STATE_TO_CHAR_STR;$/;"	v	file:
stat_next	trace/trace_stat.h	/^	void			*(*stat_next)(void *prev, int idx);$/;"	m	struct:tracer_stat
stat_node	trace/trace_stat.c	/^struct stat_node {$/;"	s	file:
stat_release	trace/trace_stat.h	/^	void			(*stat_release)(void *stat);$/;"	m	struct:tracer_stat
stat_root	trace/trace_stat.c	/^	struct rb_root		stat_root;$/;"	m	struct:stat_session	typeref:struct:stat_session::rb_root	file:
stat_seq_init	trace/trace_stat.c	/^static int stat_seq_init(struct stat_session *session)$/;"	f	file:
stat_seq_next	trace/trace_stat.c	/^static void *stat_seq_next(struct seq_file *s, void *p, loff_t *pos)$/;"	f	file:
stat_seq_show	trace/trace_stat.c	/^static int stat_seq_show(struct seq_file *s, void *v)$/;"	f	file:
stat_seq_start	trace/trace_stat.c	/^static void *stat_seq_start(struct seq_file *s, loff_t *pos)$/;"	f	file:
stat_seq_stop	trace/trace_stat.c	/^static void stat_seq_stop(struct seq_file *s, void *p)$/;"	f	file:
stat_session	trace/trace_stat.c	/^struct stat_session {$/;"	s	file:
stat_show	trace/trace_stat.h	/^	int			(*stat_show)(struct seq_file *s, void *p);$/;"	m	struct:tracer_stat
stat_start	trace/trace_stat.h	/^	void			*(*stat_start)(struct tracer_stat *trace);$/;"	m	struct:tracer_stat
state	audit.h	/^	enum audit_state    state, current_state;$/;"	m	struct:audit_context	typeref:enum:audit_context::audit_state
state	cgroup_freezer.c	/^	unsigned int			state;$/;"	m	struct:freezer	file:
state	power/earlysuspend.c	/^static int state;$/;"	v	file:
state	power/main.c	/^power_attr(state);$/;"	v
state	power/power.h	/^	suspend_state_t state;$/;"	m	struct:pm_sleep_state
state	stop_machine.c	/^	enum stopmachine_state	state;$/;"	m	struct:stop_machine_data	typeref:enum:stop_machine_data::stopmachine_state	file:
state	swap/preload/preload_pd.c	/^	enum preload_state_t state;$/;"	m	struct:process_data	typeref:enum:process_data::preload_state_t	file:
state_name	lockdep.c	/^static inline const char *state_name(enum lock_usage_bit bit)$/;"	f	file:
state_names	lockdep.c	/^static const char *state_names[] = {$/;"	v	file:
state_rnames	lockdep.c	/^static const char *state_rnames[] = {$/;"	v	file:
state_show	power/main.c	/^static ssize_t state_show(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
state_store	power/main.c	/^static ssize_t state_store(struct kobject *kobj, struct kobj_attribute *attr,$/;"	f	file:
state_to_char	trace/trace_output.c	/^static const char state_to_char[] = TASK_STATE_TO_CHAR_STR;$/;"	v	file:
state_verbose	lockdep.c	/^static inline int state_verbose(enum lock_usage_bit bit,$/;"	f	file:
state_verbose_f	lockdep.c	/^static int (*state_verbose_f[])(struct lock_class *class) = {$/;"	v	file:
static_branch__false	sched/sched.h	/^static __always_inline bool static_branch__false(struct static_key *key)$/;"	f
static_branch__true	sched/sched.h	/^static __always_inline bool static_branch__true(struct static_key *key)$/;"	f
static_key_mod	jump_label.c	/^struct static_key_mod {$/;"	s	file:
static_key_slow_dec	jump_label.c	/^EXPORT_SYMBOL_GPL(static_key_slow_dec);$/;"	v
static_key_slow_dec	jump_label.c	/^void static_key_slow_dec(struct static_key *key)$/;"	f
static_key_slow_dec_deferred	jump_label.c	/^EXPORT_SYMBOL_GPL(static_key_slow_dec_deferred);$/;"	v
static_key_slow_dec_deferred	jump_label.c	/^void static_key_slow_dec_deferred(struct static_key_deferred *key)$/;"	f
static_key_slow_inc	jump_label.c	/^EXPORT_SYMBOL_GPL(static_key_slow_inc);$/;"	v
static_key_slow_inc	jump_label.c	/^void static_key_slow_inc(struct static_key *key)$/;"	f
static_obj	lockdep.c	/^static int static_obj(void *obj)$/;"	f	file:
stats	lockdep_proc.c	/^	struct lock_class_stats stats;$/;"	m	struct:lock_stat_data	typeref:struct:lock_stat_data::lock_class_stats	file:
stats	lockdep_proc.c	/^	struct lock_stat_data stats[MAX_LOCKDEP_KEYS];$/;"	m	struct:lock_stat_seq	typeref:struct:lock_stat_seq::lock_stat_data	file:
stats	rcutorture.c	/^	int (*stats)(char *page);$/;"	m	struct:rcu_torture_ops	file:
stats_task	rcutorture.c	/^static struct task_struct *stats_task;$/;"	v	typeref:struct:task_struct	file:
status	power/sleep_history.c	/^	int status;$/;"	m	struct:battery_history	file:
status	smpboot.c	/^	unsigned int			status;$/;"	m	struct:smpboot_thread_data	file:
status	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	/^	unsigned long status;$/;"	m	struct:prev_kprobe
status	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	/^	unsigned long status;$/;"	m	struct:prev_kprobe
status	swap/us_manager/us_manager.c	/^static enum status_type status = ST_OFF;$/;"	v	typeref:enum:status_type	file:
status_type	swap/us_manager/us_manager.h	/^enum status_type {$/;"	g
steal_account_process_tick	sched/cputime.c	/^static __always_inline bool steal_account_process_tick(void)$/;"	f	file:
steal_ticks	sched/sched.h	/^static inline u64 steal_ticks(u64 steal)$/;"	f
steps	swap/fbiprobe/fbiprobe.h	/^	struct fbi_step *steps;    \/* extract steps *\/$/;"	m	struct:fbi_var_data	typeref:struct:fbi_var_data::fbi_step
steps_count	swap/fbiprobe/fbiprobe.h	/^	uint8_t steps_count;	   \/* Count of steps to extract variable$/;"	m	struct:fbi_var_data
stop	power/swap.c	/^	atomic_t stop;                            \/* ready to stop flag *\/$/;"	m	struct:cmp_data	file:
stop	power/swap.c	/^	atomic_t stop;                            \/* ready to stop flag *\/$/;"	m	struct:crc_data	file:
stop	power/swap.c	/^	atomic_t stop;                            \/* ready to stop flag *\/$/;"	m	struct:dec_data	file:
stop	sched/sched.h	/^	struct task_struct *curr, *idle, *stop;$/;"	m	struct:rq	typeref:struct:rq::
stop	trace/trace.h	/^	void			(*stop)(struct trace_array *tr);$/;"	m	struct:tracer
stop_branch_trace	trace/trace_branch.c	/^static void stop_branch_trace(struct trace_array *tr)$/;"	f	file:
stop_count	trace/trace.h	/^	int			stop_count;$/;"	m	struct:trace_array
stop_cpus	stop_machine.c	/^int stop_cpus(const struct cpumask *cpumask, cpu_stop_fn_t fn, void *arg)$/;"	f
stop_critical_timing	trace/trace_irqsoff.c	/^stop_critical_timing(unsigned long ip, unsigned long parent_ip)$/;"	f	file:
stop_critical_timings	trace/trace_irqsoff.c	/^EXPORT_SYMBOL_GPL(stop_critical_timings);$/;"	v
stop_critical_timings	trace/trace_irqsoff.c	/^void stop_critical_timings(void)$/;"	f
stop_drawing_early_suspend	power/fbearlysuspend.c	/^static void stop_drawing_early_suspend(struct early_suspend *h)$/;"	f	file:
stop_drawing_early_suspend_desc	power/fbearlysuspend.c	/^static struct early_suspend stop_drawing_early_suspend_desc = {$/;"	v	typeref:struct:early_suspend	file:
stop_flag	swap/us_manager/helper.c	/^static atomic_t stop_flag = ATOMIC_INIT(0);$/;"	v	file:
stop_func_tracer	trace/trace_sched_wakeup.c	/^static void stop_func_tracer(int graph)$/;"	f	file:
stop_irqsoff_tracer	trace/trace_irqsoff.c	/^static void stop_irqsoff_tracer(struct trace_array *tr, int graph)$/;"	f	file:
stop_machine	stop_machine.c	/^EXPORT_SYMBOL_GPL(stop_machine);$/;"	v
stop_machine	stop_machine.c	/^int stop_machine(int (*fn)(void *), void *data, const struct cpumask *cpus)$/;"	f
stop_machine_cpu_stop	stop_machine.c	/^static int stop_machine_cpu_stop(void *data)$/;"	f	file:
stop_machine_data	stop_machine.c	/^struct stop_machine_data {$/;"	s	file:
stop_machine_from_inactive_cpu	stop_machine.c	/^int stop_machine_from_inactive_cpu(int (*fn)(void *), void *data,$/;"	f
stop_machine_initialized	stop_machine.c	/^static bool stop_machine_initialized = false;$/;"	v	file:
stop_nop_trace	trace/trace_nop.c	/^static void stop_nop_trace(struct trace_array *tr)$/;"	f	file:
stop_one_cpu	stop_machine.c	/^int stop_one_cpu(unsigned int cpu, cpu_stop_fn_t fn, void *arg)$/;"	f
stop_one_cpu_nowait	stop_machine.c	/^void stop_one_cpu_nowait(unsigned int cpu, cpu_stop_fn_t fn, void *arg,$/;"	f
stop_process_timers	posix-cpu-timers.c	/^static void stop_process_timers(struct signal_struct *sig)$/;"	f	file:
stop_sched_class	sched/stop_task.c	/^const struct sched_class stop_sched_class = {$/;"	v	typeref:struct:sched_class
stop_wakeup_tracer	trace/trace_sched_wakeup.c	/^static void stop_wakeup_tracer(struct trace_array *tr)$/;"	f	file:
stopmachine_state	stop_machine.c	/^enum stopmachine_state {$/;"	g	file:
stopref	module.c	/^struct stopref$/;"	s	file:
store	padata.c	/^	ssize_t (*store)(struct padata_instance *, struct attribute *,$/;"	m	struct:padata_sysfs_entry	file:
store	sched/fair.c	/^	ssize_t (*store)(struct kobject *a, struct attribute *b,$/;"	m	struct:hmp_global_attr	file:
store_cpumask	padata.c	/^static ssize_t store_cpumask(struct padata_instance *pinst,$/;"	f	file:
store_stacktrace	latencytop.c	/^static inline void store_stacktrace(struct task_struct *tsk,$/;"	f	file:
store_trace_args	trace/trace_kprobe.c	/^static __kprobes void store_trace_args(int ent_size, struct trace_probe *tp,$/;"	f	file:
store_uevent	module.c	/^static ssize_t store_uevent(struct module_attribute *mattr,$/;"	f	file:
str	module.c	/^		unsigned int sym, str, mod, vers, info, pcpu;$/;"	m	struct:load_info::__anon26	file:
str	trace/blktrace.c	/^	const char *str;$/;"	m	struct:__anon85	file:
str	trace/ring_buffer.c	/^	char str[];$/;"	m	struct:rb_item	file:
str_to_u32	swap/parser/msg_parser.c	/^static int str_to_u32(const char *str, u32 *val)$/;"	f	file:
strdup_from_user	swap/uprobe/swap_uaccess.h	/^static const char *strdup_from_user(const char __user *user_s, gfp_t gfp)$/;"	f
strict_iomem	resource.c	/^static int __init strict_iomem(char *str)$/;"	f	file:
strict_iomem_checks	resource.c	/^static int strict_iomem_checks = 1;$/;"	v	file:
strict_iomem_checks	resource.c	/^static int strict_iomem_checks;$/;"	v	file:
string	trace/trace_events_filter.c	/^		char *string;$/;"	m	struct:filter_parse_state::__anon90	file:
string	trace/trace_events_filter.c	/^		char string[MAX_FILTER_STR_VAL];$/;"	m	struct:filter_parse_state::__anon91	file:
string	trace/trace_events_filter.c	/^	char *string;$/;"	m	struct:filter_op	file:
string	trace/trace_probe.c	/^static __kprobes int PRINT_TYPE_FUNC_NAME(string)(struct trace_seq *s,$/;"	f	file:
string	trace/trace_probe.c	/^typedef u32 string;$/;"	t	file:
string_size	trace/trace_probe.c	/^typedef u32 string_size;$/;"	t	file:
stroffs	module.c	/^	unsigned long symoffs, stroffs;$/;"	m	struct:load_info	file:
strong_try_module_get	module.c	/^static inline int strong_try_module_get(struct module *mod)$/;"	f	file:
strtab	module.c	/^	char *secstrings, *strtab;$/;"	m	struct:load_info	file:
stub_timer	timer.c	/^static void stub_timer(unsigned long data)$/;"	f	file:
stutter	rcutorture.c	/^static int stutter = 5;		\/* Start\/stop testing interval (in sec) *\/$/;"	v	file:
stutter_pause_test	rcutorture.c	/^static int stutter_pause_test;$/;"	v	file:
stutter_task	rcutorture.c	/^static struct task_struct *stutter_task;$/;"	v	typeref:struct:task_struct	file:
sub_preempt_count	sched/core.c	/^EXPORT_SYMBOL(sub_preempt_count);$/;"	v
sub_preempt_count	sched/core.c	/^void __kprobes sub_preempt_count(int val)$/;"	f
subbuf_actor_t	relay.c	/^typedef int (*subbuf_actor_t) (size_t read_start,$/;"	t	file:
subbuf_read_actor	relay.c	/^static int subbuf_read_actor(size_t read_start,$/;"	f	file:
subbuf_size	swap/writer/debugfs_writer.c	/^enum { subbuf_size = 8*1024 };$/;"	e	enum:__anon62	file:
subbuf_splice_actor	relay.c	/^static ssize_t subbuf_splice_actor(struct file *in,$/;"	f	file:
subbuf_start_default_callback	relay.c	/^static int subbuf_start_default_callback (struct rchan_buf *buf,$/;"	f	file:
subbuffer_callback	swap/buffer/swap_buffer_module.c	/^static subbuffer_callback_type subbuffer_callback;$/;"	v	file:
subbuffer_callback_type	swap/buffer/swap_buffer_module.c	/^typedef int(*subbuffer_callback_type)(bool wakeup);$/;"	t	file:
subbuffer_full_cb	swap/buffer/swap_buffer_module.h	/^	int (*subbuffer_full_cb)(bool wakeup);$/;"	m	struct:buffer_init_t
subbuffer_size	swap/buffer/swap_buffer_module.h	/^	size_t subbuffer_size;$/;"	m	struct:buffer_init_t
subbuffers_count	swap/buffer/buffer_queue.c	/^	unsigned int subbuffers_count;$/;"	m	struct:queue_t	file:
subbuffers_num	swap/buffer/swap_buffer_module.c	/^static unsigned int subbuffers_num;$/;"	v	file:
subbuffers_size	swap/buffer/swap_buffer_module.c	/^static size_t subbuffers_size;$/;"	v	file:
submit	power/block_io.c	/^static int submit(int rw, struct block_device *bdev, sector_t sector,$/;"	f	file:
subsequent_install	swap/us_manager/pf/pf_group.c	/^static void subsequent_install(struct task_struct *task,$/;"	f	file:
subsys	cgroup.c	/^static struct cgroup_subsys *subsys[CGROUP_SUBSYS_COUNT] = {$/;"	v	typeref:struct:cgroup_subsys	file:
subsys_cgroup_allow_attach	cgroup.c	/^int subsys_cgroup_allow_attach(struct cgroup *cgrp, struct cgroup_taskset *tset)$/;"	f
subsys_mask	cgroup.c	/^	unsigned long subsys_mask;$/;"	m	struct:cgroup_sb_opts	file:
subsystem	trace/trace.h	/^	struct event_subsystem		*subsystem;$/;"	m	struct:ftrace_subsystem_dir	typeref:struct:ftrace_subsystem_dir::event_subsystem
subsystem_filter_read	trace/trace_events.c	/^subsystem_filter_read(struct file *filp, char __user *ubuf, size_t cnt,$/;"	f	file:
subsystem_filter_write	trace/trace_events.c	/^subsystem_filter_write(struct file *filp, const char __user *ubuf, size_t cnt,$/;"	f	file:
subsystem_open	trace/trace_events.c	/^static int subsystem_open(struct inode *inode, struct file *filp)$/;"	f	file:
subsystem_release	trace/trace_events.c	/^static int subsystem_release(struct inode *inode, struct file *file)$/;"	f	file:
subtract_blocked_load_contrib	sched/fair.c	/^static inline void subtract_blocked_load_contrib(struct cfs_rq *cfs_rq,$/;"	f	file:
subtract_range	range.c	/^void subtract_range(struct range *range, int az, u64 start, u64 end)$/;"	f
subtype	swap/ks_features/file_ops.c	/^	int subtype;$/;"	m	struct:file_probe	file:
subtype	swap/ks_features/file_ops.c	/^	int subtype;$/;"	m	struct:flock_private	file:
suffix_tbl	kexec.c	/^static __initdata char *suffix_tbl[] = {$/;"	v	file:
suid	audit.h	/^	kuid_t		    uid, euid, suid, fsuid;$/;"	m	struct:audit_context
sum_nr_running	sched/fair.c	/^	unsigned long sum_nr_running; \/* Nr tasks running in the group *\/$/;"	m	struct:sg_lb_stats	file:
sum_offline	rcutorture.c	/^static unsigned long sum_offline;$/;"	v	file:
sum_online	rcutorture.c	/^static unsigned long sum_online;$/;"	v	file:
sum_weighted_load	sched/fair.c	/^	unsigned long sum_weighted_load; \/* Weighted load of group's tasks *\/$/;"	m	struct:sg_lb_stats	file:
suspend	power/wakelock.c	/^static void suspend(struct work_struct *work)$/;"	f	file:
suspend_abort	power/wakeup_reason.c	/^static bool suspend_abort;$/;"	v	file:
suspend_backoff	power/wakelock.c	/^static void suspend_backoff(void)$/;"	f	file:
suspend_backoff_lock	power/wakelock.c	/^static struct wake_lock suspend_backoff_lock;$/;"	v	typeref:struct:wake_lock	file:
suspend_console	printk.c	/^void suspend_console(void)$/;"	f
suspend_count	power/sleep_history.c	/^	int suspend_count;$/;"	m	struct:sleep_history	file:
suspend_device_irqs	irq/pm.c	/^EXPORT_SYMBOL_GPL(suspend_device_irqs);$/;"	v
suspend_device_irqs	irq/pm.c	/^void suspend_device_irqs(void)$/;"	f
suspend_devices_and_enter	power/power.h	/^static inline int suspend_devices_and_enter(suspend_state_t state)$/;"	f
suspend_devices_and_enter	power/suspend.c	/^int suspend_devices_and_enter(suspend_state_t state)$/;"	f
suspend_enter	power/suspend.c	/^static int suspend_enter(suspend_state_t state, bool *wakeup)$/;"	f	file:
suspend_finish	power/suspend.c	/^static void suspend_finish(void)$/;"	f	file:
suspend_freeze_processes	power/power.h	/^static inline int suspend_freeze_processes(void)$/;"	f
suspend_freeze_wake	power/suspend.c	/^static bool suspend_freeze_wake;$/;"	v	file:
suspend_grep	debug/kdb/kdb_io.c	/^static int  suspend_grep;$/;"	v	file:
suspend_ops	power/suspend.c	/^static const struct platform_suspend_ops *suspend_ops;$/;"	v	typeref:struct:platform_suspend_ops	file:
suspend_prepare	power/suspend.c	/^static int suspend_prepare(void)$/;"	f	file:
suspend_set_ops	power/suspend.c	/^EXPORT_SYMBOL_GPL(suspend_set_ops);$/;"	v
suspend_set_ops	power/suspend.c	/^void suspend_set_ops(const struct platform_suspend_ops *ops)$/;"	f
suspend_short_count	power/wakelock.c	/^static unsigned suspend_short_count;$/;"	v	file:
suspend_stats_bkup	power/sleep_history.c	/^static struct suspend_stats suspend_stats_bkup;$/;"	v	typeref:struct:suspend_stats	file:
suspend_stats_open	power/main.c	/^static int suspend_stats_open(struct inode *inode, struct file *file)$/;"	f	file:
suspend_stats_operations	power/main.c	/^static const struct file_operations suspend_stats_operations = {$/;"	v	typeref:struct:file_operations	file:
suspend_stats_show	power/main.c	/^static int suspend_stats_show(struct seq_file *s, void *unused)$/;"	f	file:
suspend_step_name	power/main.c	/^static char *suspend_step_name(enum suspend_stat_step step)$/;"	f	file:
suspend_sys_sync	power/wakelock.c	/^static void suspend_sys_sync(struct work_struct *work)$/;"	f	file:
suspend_sys_sync_abort	power/wakelock.c	/^static bool suspend_sys_sync_abort;$/;"	v	file:
suspend_sys_sync_count	power/wakelock.c	/^static int suspend_sys_sync_count;$/;"	v	file:
suspend_sys_sync_handler	power/wakelock.c	/^static void suspend_sys_sync_handler(unsigned long arg)$/;"	f	file:
suspend_sys_sync_queue	power/power.h	/^static inline void suspend_sys_sync_queue(void) {}$/;"	f
suspend_sys_sync_queue	power/wakelock.c	/^void suspend_sys_sync_queue(void)$/;"	f
suspend_sys_sync_wait	power/power.h	/^static inline int suspend_sys_sync_wait(void) { return 0; }$/;"	f
suspend_sys_sync_wait	power/wakelock.c	/^int suspend_sys_sync_wait(void)$/;"	f
suspend_sys_sync_work_queue	power/wakelock.c	/^static struct workqueue_struct *suspend_sys_sync_work_queue;$/;"	v	typeref:struct:workqueue_struct	file:
suspend_test	power/suspend.c	/^static int suspend_test(int level)$/;"	f	file:
suspend_test_finish	power/power.h	/^static inline void suspend_test_finish(const char *label) {}$/;"	f
suspend_test_finish	power/suspend_test.c	/^void suspend_test_finish(const char *label)$/;"	f
suspend_test_start	power/power.h	/^static inline void suspend_test_start(void) {}$/;"	f
suspend_test_start	power/suspend_test.c	/^void suspend_test_start(void)$/;"	f
suspend_test_start_time	power/suspend_test.c	/^static unsigned long suspend_test_start_time;$/;"	v	file:
suspend_text	power/sleep_history.c	/^static char *suspend_text[] = {$/;"	v	file:
suspend_thaw_processes	power/power.h	/^static inline void suspend_thaw_processes(void)$/;"	f
suspend_time_before	power/suspend_time.c	/^static struct timespec suspend_time_before;$/;"	v	typeref:struct:timespec	file:
suspend_time_debug_fops	power/suspend_time.c	/^static const struct file_operations suspend_time_debug_fops = {$/;"	v	typeref:struct:file_operations	file:
suspend_time_debug_init	power/suspend_time.c	/^late_initcall(suspend_time_debug_init);$/;"	v
suspend_time_debug_init	power/suspend_time.c	/^static int __init suspend_time_debug_init(void)$/;"	f	file:
suspend_time_debug_open	power/suspend_time.c	/^static int suspend_time_debug_open(struct inode *inode, struct file *file)$/;"	f	file:
suspend_time_debug_show	power/suspend_time.c	/^static int suspend_time_debug_show(struct seq_file *s, void *data)$/;"	f	file:
suspend_time_syscore_exit	power/suspend_time.c	/^module_exit(suspend_time_syscore_exit);$/;"	v
suspend_time_syscore_exit	power/suspend_time.c	/^static void suspend_time_syscore_exit(void)$/;"	f	file:
suspend_time_syscore_init	power/suspend_time.c	/^module_init(suspend_time_syscore_init);$/;"	v
suspend_time_syscore_init	power/suspend_time.c	/^static int suspend_time_syscore_init(void)$/;"	f	file:
suspend_time_syscore_ops	power/suspend_time.c	/^static struct syscore_ops suspend_time_syscore_ops = {$/;"	v	typeref:struct:syscore_ops	file:
suspend_time_syscore_resume	power/suspend_time.c	/^static void suspend_time_syscore_resume(void)$/;"	f	file:
suspend_time_syscore_suspend	power/suspend_time.c	/^static int suspend_time_syscore_suspend(void)$/;"	f	file:
suspend_valid_only_mem	power/suspend.c	/^EXPORT_SYMBOL_GPL(suspend_valid_only_mem);$/;"	v
suspend_valid_only_mem	power/suspend.c	/^int suspend_valid_only_mem(suspend_state_t state)$/;"	f
suspend_work_queue	power/wakelock.c	/^struct workqueue_struct *suspend_work_queue;$/;"	v	typeref:struct:workqueue_struct
sw_perf_event_destroy	events/core.c	/^static void sw_perf_event_destroy(struct perf_event *event)$/;"	f	file:
swap	power/user.c	/^	int swap;$/;"	m	struct:snapshot_data	file:
swap_arch_arm_kprobe	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^void swap_arch_arm_kprobe(struct kprobe *p)$/;"	f
swap_arch_arm_kprobe	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^void swap_arch_arm_kprobe(struct kprobe *p)$/;"	f
swap_arch_disarm_kprobe	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^void swap_arch_disarm_kprobe(struct kprobe *p)$/;"	f
swap_arch_disarm_kprobe	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^void swap_arch_disarm_kprobe(struct kprobe *p)$/;"	f
swap_arch_exit_kprobes	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^void swap_arch_exit_kprobes(void)$/;"	f
swap_arch_exit_kprobes	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^void swap_arch_exit_kprobes(void)$/;"	f
swap_arch_exit_uprobes	swap/uprobe/arch/arm/swap-asm/swap_uprobes.c	/^void swap_arch_exit_uprobes(void)$/;"	f
swap_arch_exit_uprobes	swap/uprobe/arch/x86/swap-asm/swap_uprobes.c	/^void swap_arch_exit_uprobes(void)$/;"	f
swap_arch_init_kprobes	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^int swap_arch_init_kprobes(void)$/;"	f
swap_arch_init_kprobes	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^int swap_arch_init_kprobes(void)$/;"	f
swap_arch_init_uprobes	swap/uprobe/arch/arm/swap-asm/swap_uprobes.c	/^int swap_arch_init_uprobes(void)$/;"	f
swap_arch_init_uprobes	swap/uprobe/arch/x86/swap-asm/swap_uprobes.c	/^int swap_arch_init_uprobes(void)$/;"	f
swap_arch_prepare_kprobe	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^int swap_arch_prepare_kprobe(struct kprobe *p, struct slot_manager *sm)$/;"	f
swap_arch_prepare_kprobe	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^int swap_arch_prepare_kprobe(struct kprobe *p, struct slot_manager *sm)$/;"	f
swap_arch_prepare_kretprobe	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^void swap_arch_prepare_kretprobe(struct kretprobe_instance *ri,$/;"	f
swap_arch_prepare_kretprobe	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^void swap_arch_prepare_kretprobe(struct kretprobe_instance *ri,$/;"	f
swap_buffer-y	swap/buffer/Makefile	/^swap_buffer-y := swap_buffer_module.o \\$/;"	m
swap_buffer_callback	swap/buffer/swap_buffer_module.c	/^int swap_buffer_callback(void *buffer, bool wakeup)$/;"	f
swap_buffer_flush	swap/buffer/swap_buffer_module.c	/^EXPORT_SYMBOL_GPL(swap_buffer_flush);$/;"	v
swap_buffer_flush	swap/buffer/swap_buffer_module.c	/^unsigned int swap_buffer_flush(void)$/;"	f
swap_buffer_get	swap/buffer/swap_buffer_module.c	/^EXPORT_SYMBOL_GPL(swap_buffer_get);$/;"	v
swap_buffer_get	swap/buffer/swap_buffer_module.c	/^int swap_buffer_get(struct swap_subbuffer **subbuffer)$/;"	f
swap_buffer_init	swap/buffer/swap_buffer_module.c	/^EXPORT_SYMBOL_GPL(swap_buffer_init);$/;"	v
swap_buffer_init	swap/buffer/swap_buffer_module.c	/^int swap_buffer_init(struct buffer_init_t *buf_init)$/;"	f
swap_buffer_module_exit	swap/buffer/swap_buffer_module.c	/^module_exit(swap_buffer_module_exit);$/;"	v
swap_buffer_module_exit	swap/buffer/swap_buffer_module.c	/^static void __exit swap_buffer_module_exit(void)$/;"	f	file:
swap_buffer_module_init	swap/buffer/swap_buffer_module.c	/^module_init(swap_buffer_module_init);$/;"	v
swap_buffer_module_init	swap/buffer/swap_buffer_module.c	/^static int __init swap_buffer_module_init(void)$/;"	f	file:
swap_buffer_release	swap/buffer/swap_buffer_module.c	/^EXPORT_SYMBOL_GPL(swap_buffer_release);$/;"	v
swap_buffer_release	swap/buffer/swap_buffer_module.c	/^int swap_buffer_release(struct swap_subbuffer **subbuffer)$/;"	f
swap_buffer_status	swap/buffer/swap_buffer_module.c	/^static unsigned char swap_buffer_status = BUFFER_FREE;$/;"	v	file:
swap_buffer_uninit	swap/buffer/swap_buffer_module.c	/^EXPORT_SYMBOL_GPL(swap_buffer_uninit);$/;"	v
swap_buffer_uninit	swap/buffer/swap_buffer_module.c	/^int swap_buffer_uninit(void)$/;"	f
swap_buffer_write	swap/buffer/swap_buffer_module.c	/^EXPORT_SYMBOL_GPL(swap_buffer_write);$/;"	v
swap_buffer_write	swap/buffer/swap_buffer_module.c	/^ssize_t swap_buffer_write(void *data, size_t size, bool wakeup)$/;"	f
swap_can_boost	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^EXPORT_SYMBOL_GPL(swap_can_boost);$/;"	v
swap_can_boost	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^int swap_can_boost(kprobe_opcode_t *opcodes)$/;"	f
swap_cpu_down	swap/parser/cpu_ctrl.c	/^static int (*swap_cpu_down)(unsigned int, int);$/;"	v	file:
swap_cpu_maps_update_begin	swap/parser/cpu_ctrl.c	/^static void (*swap_cpu_maps_update_begin)(void);$/;"	v	file:
swap_cpu_maps_update_done	swap/parser/cpu_ctrl.c	/^static void (*swap_cpu_maps_update_done)(void);$/;"	v	file:
swap_cpu_notifier	swap/sampler/swap_sampler_module.c	/^static struct notifier_block __refdata swap_cpu_notifier = {$/;"	v	typeref:struct:__refdata	file:
swap_cpu_notify	swap/sampler/swap_sampler_module.c	/^static int __cpuinit swap_cpu_notify(struct notifier_block *self,$/;"	f	file:
swap_cpu_up	swap/parser/cpu_ctrl.c	/^static int (*swap_cpu_up)(unsigned int, int);$/;"	v	file:
swap_debugfs_getdir	swap/master/swap_debugfs.c	/^EXPORT_SYMBOL_GPL(swap_debugfs_getdir);$/;"	v
swap_debugfs_getdir	swap/master/swap_debugfs.c	/^struct dentry *swap_debugfs_getdir(void)$/;"	f
swap_debugfs_init	swap/master/swap_debugfs.c	/^int swap_debugfs_init(void)$/;"	f
swap_debugfs_uninit	swap/master/swap_debugfs.c	/^void swap_debugfs_uninit(void)$/;"	f
swap_depatch_syscall	swap/uprobe/arch/x86/swap-asm/swap_sc_patch.c	/^void swap_depatch_syscall(void)$/;"	f
swap_device_cdev	swap/driver/device_driver.c	/^static struct cdev *swap_device_cdev;$/;"	v	typeref:struct:cdev	file:
swap_device_class	swap/driver/device_driver.c	/^static struct class *swap_device_class;$/;"	v	typeref:struct:class	file:
swap_device_device	swap/driver/device_driver.c	/^static struct device *swap_device_device;$/;"	v	typeref:struct:device	file:
swap_device_exit	swap/driver/device_driver.c	/^void swap_device_exit(void)$/;"	f
swap_device_fops	swap/driver/device_driver.c	/^const struct file_operations swap_device_fops = {$/;"	v	typeref:struct:file_operations
swap_device_init	swap/driver/device_driver.c	/^int swap_device_init(void)$/;"	f
swap_device_ioctl	swap/driver/device_driver.c	/^static long swap_device_ioctl(struct file *filp, unsigned int cmd,$/;"	f	file:
swap_device_no	swap/driver/device_driver.c	/^static dev_t swap_device_no;$/;"	v	file:
swap_device_page_release	swap/driver/device_driver.c	/^static void swap_device_page_release(struct splice_pipe_desc *spd,$/;"	f	file:
swap_device_pipe_buf_ops	swap/driver/device_driver.c	/^static const struct pipe_buf_operations swap_device_pipe_buf_ops = {$/;"	v	typeref:struct:pipe_buf_operations	file:
swap_device_pipe_buf_release	swap/driver/device_driver.c	/^static void swap_device_pipe_buf_release(struct pipe_inode_info *inode,$/;"	f	file:
swap_device_read	swap/driver/device_driver.c	/^static ssize_t swap_device_read(struct file *filp, char __user *buf,$/;"	f	file:
swap_device_splice_read	swap/driver/device_driver.c	/^static ssize_t swap_device_splice_read(struct file *filp, loff_t *ppos,$/;"	f	file:
swap_device_splice_shrink_spd	swap/driver/device_driver.c	/^void swap_device_splice_shrink_spd(struct pipe_inode_info *pipe,$/;"	f
swap_device_wake_up_process	swap/driver/device_driver.c	/^void swap_device_wake_up_process(void)$/;"	f
swap_dir	swap/master/swap_debugfs.c	/^static struct dentry *swap_dir;$/;"	v	typeref:struct:dentry	file:
swap_disable_nonboot_cpus_lock	swap/parser/cpu_ctrl.c	/^int swap_disable_nonboot_cpus_lock(struct cpumask *mask)$/;"	f
swap_disable_nonboot_cpus_lock	swap/parser/cpu_ctrl.h	/^static inline int swap_disable_nonboot_cpus_lock(struct cpumask *mask)$/;"	f
swap_disable_wprot	swap/uprobe/arch/x86/swap-asm/swap_sc_patch.c	36;"	d	file:
swap_disarm_krp	swap/kprobe/swap_kprobes.c	/^static void swap_disarm_krp(struct kretprobe *rp)$/;"	f	file:
swap_disarm_krp_inst	swap/kprobe/swap_kprobes.c	/^static int swap_disarm_krp_inst(struct kretprobe_instance *ri)$/;"	f	file:
swap_do_mmap	swap/us_manager/us_manager_common.h	/^static inline unsigned long swap_do_mmap(struct file *filp, unsigned long addr,$/;"	f
swap_driver-y	swap/driver/Makefile	/^swap_driver-y := swap_driver_module.o \\$/;"	m
swap_enable_nonboot_cpus_unlock	swap/parser/cpu_ctrl.c	/^int swap_enable_nonboot_cpus_unlock(struct cpumask *mask)$/;"	f
swap_enable_nonboot_cpus_unlock	swap/parser/cpu_ctrl.h	/^static inline int swap_enable_nonboot_cpus_unlock(struct cpumask *mask)$/;"	f
swap_enable_wprot	swap/uprobe/arch/x86/swap-asm/swap_sc_patch.c	44;"	d	file:
swap_energy-y	swap/energy/Makefile	/^swap_energy-y := energy_module.o \\$/;"	m
swap_fbiprobe-y	swap/fbiprobe/Makefile	/^swap_fbiprobe-y := fbiprobe.o \\$/;"	m
swap_fixup_exception	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^static int (*swap_fixup_exception)(struct pt_regs *regs);$/;"	v	file:
swap_flush_anon_page	swap/kprobe/swap_kprobes_deps.c	/^static inline void swap_flush_anon_page(struct vm_area_struct *vma,$/;"	f	file:
swap_fp_backtrace	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	/^static inline int swap_fp_backtrace(struct task_struct *task,$/;"	f
swap_get_arg	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	/^static inline unsigned long swap_get_arg(struct pt_regs *regs, int num)$/;"	f
swap_get_arg	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	/^static inline unsigned long swap_get_arg(struct pt_regs *regs, int num)$/;"	f
swap_get_files_struct	swap/parser/usm_msg.c	/^static struct files_struct *(*swap_get_files_struct)(struct task_struct *);$/;"	v	typeref:struct:swap_get_files_struct	file:
swap_get_instr_ptr	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	/^static inline unsigned long swap_get_instr_ptr(struct pt_regs *regs)$/;"	f
swap_get_instr_ptr	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	/^static inline unsigned long swap_get_instr_ptr(struct pt_regs *regs)$/;"	f
swap_get_karg	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	/^static inline unsigned long swap_get_karg(struct pt_regs *regs, unsigned long n)$/;"	f
swap_get_karg	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	/^static inline unsigned long swap_get_karg(struct pt_regs *regs, unsigned long n)$/;"	f
swap_get_kprobe	swap/kprobe/swap_kprobes.c	/^struct kprobe *swap_get_kprobe(void *addr)$/;"	f
swap_get_kprobe_ctlblk	swap/kprobe/swap_kprobes.c	/^struct kprobe_ctlblk *swap_get_kprobe_ctlblk(void)$/;"	f
swap_get_ksyms	swap/ksyms/ksyms.h	/^static inline int swap_get_ksyms(void)$/;"	f
swap_get_ksyms	swap/ksyms/no_ksyms.c	/^EXPORT_SYMBOL_GPL(swap_get_ksyms);$/;"	v
swap_get_ksyms	swap/ksyms/no_ksyms.c	/^int swap_get_ksyms(void)$/;"	f
swap_get_ret_addr	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	/^static inline unsigned long swap_get_ret_addr(struct pt_regs *regs)$/;"	f
swap_get_ret_addr	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	/^static inline unsigned long swap_get_ret_addr(struct pt_regs *regs)$/;"	f
swap_get_sarg	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	/^static inline unsigned long swap_get_sarg(struct pt_regs *regs, unsigned long n)$/;"	f
swap_get_sarg	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	/^static inline unsigned long swap_get_sarg(struct pt_regs *regs, unsigned long n)$/;"	f
swap_get_stack_ptr	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	/^static inline unsigned long swap_get_stack_ptr(struct pt_regs *regs)$/;"	f
swap_get_stack_ptr	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	/^static inline unsigned long swap_get_stack_ptr(struct pt_regs *regs)$/;"	f
swap_get_syscall_uregs	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	/^static inline struct pt_regs *swap_get_syscall_uregs(unsigned long sp)$/;"	f
swap_get_syscall_uregs	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	/^static inline struct pt_regs *swap_get_syscall_uregs(unsigned long sp)$/;"	f
swap_get_uarg	swap/uprobe/arch/arm/swap-asm/swap_uprobes.h	/^static inline unsigned long swap_get_uarg(struct pt_regs *regs, unsigned long n)$/;"	f
swap_get_uarg	swap/uprobe/arch/x86/swap-asm/swap_uprobes.h	/^static inline unsigned long swap_get_uarg(struct pt_regs *regs, unsigned long n)$/;"	f
swap_get_urp_double	swap/uprobe/arch/arm/swap-asm/swap_uprobes.h	/^static inline u64 swap_get_urp_double(struct pt_regs *regs)$/;"	f
swap_get_urp_double	swap/uprobe/arch/x86/swap-asm/swap_uprobes.h	/^static inline u64 swap_get_urp_double(struct pt_regs *regs)$/;"	f
swap_get_urp_float	swap/uprobe/arch/arm/swap-asm/swap_uprobes.h	/^static inline u32 swap_get_urp_float(struct pt_regs *regs)$/;"	f
swap_get_urp_float	swap/uprobe/arch/x86/swap-asm/swap_uprobes.h	/^static inline u32 swap_get_urp_float(struct pt_regs *regs)$/;"	f
swap_hlist_for_each_entry	swap/kprobe/swap_kprobes_deps.h	47;"	d
swap_hlist_for_each_entry_rcu	swap/kprobe/swap_kprobes_deps.h	43;"	d
swap_hlist_for_each_entry_safe	swap/kprobe/swap_kprobes_deps.h	45;"	d
swap_hlist_replace_rcu	swap/kprobe/swap_kprobes.c	/^inline void swap_hlist_replace_rcu(struct hlist_node *old,$/;"	f
swap_hrtimer_running	swap/sampler/sampler_hrtimer.c	/^static int swap_hrtimer_running;$/;"	v	file:
swap_in_gate_area	swap/kprobe/swap_kprobes_deps.c	/^static inline int swap_in_gate_area(struct task_struct *task,$/;"	f	file:
swap_in_gate_area_no_xxx	swap/kprobe/swap_kprobes_deps.c	/^static inline int swap_in_gate_area_no_xxx(unsigned long addr)$/;"	f	file:
swap_init_init	swap/master/swap_initializer.c	/^int swap_init_init(void)$/;"	f
swap_init_mm	swap/kprobe/arch/arm/swap-asm/memory_rwx.c	/^static struct mm_struct *swap_init_mm;$/;"	v	typeref:struct:mm_struct	file:
swap_init_put	swap/master/swap_initializer.c	/^static void swap_init_put(void)$/;"	f	file:
swap_init_register	swap/master/swap_initializer.c	/^EXPORT_SYMBOL_GPL(swap_init_register);$/;"	v
swap_init_register	swap/master/swap_initializer.c	/^int swap_init_register(struct swap_init_struct *init)$/;"	f
swap_init_simple_open	swap/master/swap_initializer.c	/^EXPORT_SYMBOL_GPL(swap_init_simple_open);$/;"	v
swap_init_simple_open	swap/master/swap_initializer.c	/^int swap_init_simple_open(struct inode *inode, struct file *file)$/;"	f
swap_init_simple_release	swap/master/swap_initializer.c	/^EXPORT_SYMBOL_GPL(swap_init_simple_release);$/;"	v
swap_init_simple_release	swap/master/swap_initializer.c	/^int swap_init_simple_release(struct inode *inode, struct file *file)$/;"	f
swap_init_stat_get	swap/master/swap_initializer.c	/^int swap_init_stat_get(void)$/;"	f
swap_init_stat_put	swap/master/swap_initializer.c	/^void swap_init_stat_put(void)$/;"	f
swap_init_struct	swap/master/swap_initializer.h	/^struct swap_init_struct {$/;"	s
swap_init_t	swap/master/swap_initializer.h	/^typedef int (*swap_init_t)(void);$/;"	t
swap_init_try_get	swap/master/swap_initializer.c	/^static bool swap_init_try_get(void)$/;"	f	file:
swap_init_uninit	swap/master/swap_initializer.c	/^int swap_init_uninit(void)$/;"	f
swap_init_unregister	swap/master/swap_initializer.c	/^EXPORT_SYMBOL_GPL(swap_init_unregister);$/;"	v
swap_init_unregister	swap/master/swap_initializer.c	/^void swap_init_unregister(struct swap_init_struct *init)$/;"	f
swap_irq_disable	swap/buffer/kernel_operations.h	/^static inline void swap_irq_disable(unsigned long *flags)$/;"	f
swap_irq_enable	swap/buffer/kernel_operations.h	/^static inline void swap_irq_enable(unsigned long *flags)$/;"	f
swap_is_zero_pfn	swap/kprobe/swap_kprobes_deps.c	/^static inline int swap_is_zero_pfn(unsigned long pfn)$/;"	f	file:
swap_jprobe_return	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^EXPORT_SYMBOL_GPL(swap_jprobe_return);$/;"	v
swap_jprobe_return	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^void swap_jprobe_return(void)$/;"	f
swap_jprobe_return	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^EXPORT_SYMBOL_GPL(swap_jprobe_return);$/;"	v
swap_jprobe_return	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^void swap_jprobe_return(void)$/;"	f
swap_kmap_atomic	swap/kprobe/swap_kprobes_deps.c	/^static inline void *swap_kmap_atomic(struct page *page)$/;"	f	file:
swap_kprobe-y	swap/kprobe/Makefile	/^swap_kprobe-y := swap_kprobes.o \\$/;"	m
swap_kprobe_running	swap/kprobe/swap_kprobes.c	/^struct kprobe *swap_kprobe_running(void)$/;"	f
swap_kprobes_inc_nmissed_count	swap/kprobe/swap_kprobes.c	/^void swap_kprobes_inc_nmissed_count(struct kprobe *p)$/;"	f
swap_kretprobe_trampoline	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^void __naked swap_kretprobe_trampoline(void)$/;"	f
swap_ks_features-y	swap/ks_features/Makefile	/^swap_ks_features-y := ks_features.o \\$/;"	m
swap_ksyms	swap/ksyms/ksyms.h	/^static inline unsigned long swap_ksyms(const char *name)$/;"	f
swap_ksyms	swap/ksyms/no_ksyms.c	/^EXPORT_SYMBOL_GPL(swap_ksyms);$/;"	v
swap_ksyms	swap/ksyms/no_ksyms.c	/^unsigned long swap_ksyms(const char *name)$/;"	f
swap_ksyms-y	swap/ksyms/Makefile	/^swap_ksyms-y := ksyms_module.o$/;"	m
swap_ksyms_exit	swap/ksyms/ksyms_module.c	/^module_exit(swap_ksyms_exit);$/;"	v
swap_ksyms_exit	swap/ksyms/ksyms_module.c	/^void __exit swap_ksyms_exit(void)$/;"	f
swap_ksyms_init	swap/ksyms/ksyms_module.c	/^int __init swap_ksyms_init(void)$/;"	f
swap_ksyms_init	swap/ksyms/ksyms_module.c	/^module_init(swap_ksyms_init);$/;"	v
swap_ksyms_substr	swap/ksyms/ksyms.c	/^EXPORT_SYMBOL_GPL(swap_ksyms_substr);$/;"	v
swap_ksyms_substr	swap/ksyms/ksyms.c	/^unsigned long swap_ksyms_substr(const char *name)$/;"	f
swap_ksyms_substr	swap/ksyms/no_ksyms.c	/^EXPORT_SYMBOL_GPL(swap_ksyms_substr);$/;"	v
swap_ksyms_substr	swap/ksyms/no_ksyms.c	/^unsigned long swap_ksyms_substr(const char *name)$/;"	f
swap_kunmap_atomic	swap/kprobe/swap_kprobes_deps.c	/^static inline void swap_kunmap_atomic(void *kvaddr)$/;"	f	file:
swap_log	time/time_history.c	/^static struct time_history_iter *swap_log(struct time_history_iter *iter)$/;"	f	file:
swap_longjmp_break_handler	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^EXPORT_SYMBOL_GPL(swap_longjmp_break_handler);$/;"	v
swap_longjmp_break_handler	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^int swap_longjmp_break_handler (struct kprobe *p, struct pt_regs *regs)$/;"	f
swap_longjmp_break_handler	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^int swap_longjmp_break_handler(struct kprobe *p, struct pt_regs *regs)$/;"	f
swap_map_handle	power/swap.c	/^struct swap_map_handle {$/;"	s	file:
swap_map_page	power/swap.c	/^struct swap_map_page {$/;"	s	file:
swap_map_page_list	power/swap.c	/^struct swap_map_page_list {$/;"	s	file:
swap_master-y	swap/master/Makefile	/^swap_master-y := master_module.o \\$/;"	m
swap_message_parser-y	swap/parser/Makefile	/^swap_message_parser-y := swap_msg_parser.o \\$/;"	m
swap_msg	swap/writer/swap_msg.c	/^struct swap_msg {$/;"	s	file:
swap_msg_current_time	swap/writer/swap_msg.h	/^static inline u64 swap_msg_current_time(void)$/;"	f
swap_msg_discard_get	swap/writer/swap_msg.c	/^EXPORT_SYMBOL_GPL(swap_msg_discard_get);$/;"	v
swap_msg_discard_get	swap/writer/swap_msg.c	/^int swap_msg_discard_get(void)$/;"	f
swap_msg_discard_reset	swap/writer/swap_msg.c	/^EXPORT_SYMBOL_GPL(swap_msg_discard_reset);$/;"	v
swap_msg_discard_reset	swap/writer/swap_msg.c	/^void swap_msg_discard_reset(void)$/;"	f
swap_msg_error	swap/writer/swap_msg.c	/^EXPORT_SYMBOL_GPL(swap_msg_error);$/;"	v
swap_msg_error	swap/writer/swap_msg.c	/^void swap_msg_error(const char *fmt, ...)$/;"	f
swap_msg_exit	swap/writer/swap_msg.c	/^void swap_msg_exit(void)$/;"	f
swap_msg_flush	swap/writer/swap_msg.c	/^EXPORT_SYMBOL_GPL(swap_msg_flush);$/;"	v
swap_msg_flush	swap/writer/swap_msg.c	/^int swap_msg_flush(struct swap_msg *m, size_t size)$/;"	f
swap_msg_flush_wakeupoff	swap/writer/swap_msg.c	/^EXPORT_SYMBOL_GPL(swap_msg_flush_wakeupoff);$/;"	v
swap_msg_flush_wakeupoff	swap/writer/swap_msg.c	/^int swap_msg_flush_wakeupoff(struct swap_msg *m, size_t size)$/;"	f
swap_msg_get	swap/writer/swap_msg.c	/^EXPORT_SYMBOL_GPL(swap_msg_get);$/;"	v
swap_msg_get	swap/writer/swap_msg.c	/^struct swap_msg *swap_msg_get(enum swap_msg_id id)$/;"	f
swap_msg_id	swap/writer/swap_msg.h	/^enum swap_msg_id {$/;"	g
swap_msg_init	swap/writer/swap_msg.c	/^int swap_msg_init(void)$/;"	f
swap_msg_pack_args	swap/writer/swap_msg.c	/^EXPORT_SYMBOL_GPL(swap_msg_pack_args);$/;"	v
swap_msg_pack_args	swap/writer/swap_msg.c	/^int swap_msg_pack_args(char *buf, int len,$/;"	f
swap_msg_pack_ret_val	swap/writer/swap_msg.c	/^EXPORT_SYMBOL_GPL(swap_msg_pack_ret_val);$/;"	v
swap_msg_pack_ret_val	swap/writer/swap_msg.c	/^int swap_msg_pack_ret_val(char *buf, int len,$/;"	f
swap_msg_payload	swap/writer/swap_msg.h	/^static inline void *swap_msg_payload(struct swap_msg *m)$/;"	f
swap_msg_put	swap/writer/swap_msg.c	/^EXPORT_SYMBOL_GPL(swap_msg_put);$/;"	v
swap_msg_put	swap/writer/swap_msg.c	/^void swap_msg_put(struct swap_msg *m)$/;"	f
swap_msg_raw	swap/writer/swap_msg.c	/^EXPORT_SYMBOL_GPL(swap_msg_raw);$/;"	v
swap_msg_raw	swap/writer/swap_msg.c	/^int swap_msg_raw(void *data, size_t size)$/;"	f
swap_msg_seq_num_reset	swap/writer/swap_msg.c	/^EXPORT_SYMBOL_GPL(swap_msg_seq_num_reset);$/;"	v
swap_msg_seq_num_reset	swap/writer/swap_msg.c	/^void swap_msg_seq_num_reset(void)$/;"	f
swap_msg_size	swap/writer/swap_msg.h	/^static inline size_t swap_msg_size(struct swap_msg *m)$/;"	f
swap_msg_spec2time	swap/writer/swap_msg.h	/^static inline u64 swap_msg_spec2time(struct timespec *ts)$/;"	f
swap_msg_timespec2time	swap/writer/swap_msg.c	/^u64 swap_msg_timespec2time(struct timespec *ts)$/;"	f
swap_nsp-y	swap/nsp/Makefile	/^swap_nsp-y := \\$/;"	m
swap_patch_syscall	swap/uprobe/arch/x86/swap-asm/swap_sc_patch.c	/^void swap_patch_syscall(void)$/;"	f
swap_preempt_enable_no_resched	swap/kprobe/swap_kprobes_deps.h	60;"	d
swap_preload-y	swap/preload/Makefile	/^swap_preload-y := preload_module.o \\$/;"	m
swap_put_files_struct	swap/parser/usm_msg.c	/^static void (*swap_put_files_struct)(struct files_struct *fs);$/;"	v	file:
swap_put_ksyms	swap/ksyms/ksyms.h	/^static inline void swap_put_ksyms(void)$/;"	f
swap_put_ksyms	swap/ksyms/no_ksyms.c	/^EXPORT_SYMBOL_GPL(swap_put_ksyms);$/;"	v
swap_put_ksyms	swap/ksyms/no_ksyms.c	/^void swap_put_ksyms(void)$/;"	f
swap_put_uarg	swap/uprobe/arch/arm/swap-asm/swap_uprobes.h	/^static inline void swap_put_uarg(struct pt_regs *regs, unsigned long n,$/;"	f
swap_put_uarg	swap/uprobe/arch/x86/swap-asm/swap_uprobes.h	/^static inline void swap_put_uarg(struct pt_regs *regs, unsigned long n,$/;"	f
swap_read_page	power/swap.c	/^static int swap_read_page(struct swap_map_handle *handle, void *buf,$/;"	f	file:
swap_reader_finish	power/swap.c	/^static int swap_reader_finish(struct swap_map_handle *handle)$/;"	f	file:
swap_register_jprobe	swap/kprobe/swap_kprobes.c	/^EXPORT_SYMBOL_GPL(swap_register_jprobe);$/;"	v
swap_register_jprobe	swap/kprobe/swap_kprobes.c	/^int swap_register_jprobe(struct jprobe *jp)$/;"	f
swap_register_kprobe	swap/kprobe/swap_kprobes.c	/^EXPORT_SYMBOL_GPL(swap_register_kprobe);$/;"	v
swap_register_kprobe	swap/kprobe/swap_kprobes.c	/^int swap_register_kprobe(struct kprobe *p)$/;"	f
swap_register_kretprobe	swap/kprobe/swap_kprobes.c	/^EXPORT_SYMBOL_GPL(swap_register_kretprobe);$/;"	v
swap_register_kretprobe	swap/kprobe/swap_kprobes.c	/^int swap_register_kretprobe(struct kretprobe *rp)$/;"	f
swap_register_probe_type	swap/us_manager/probes/probes.c	/^EXPORT_SYMBOL_GPL(swap_register_probe_type);$/;"	v
swap_register_probe_type	swap/us_manager/probes/probes.c	/^int swap_register_probe_type(enum probe_t probe_type, struct probe_iface *pi)$/;"	f
swap_register_ujprobe	swap/uprobe/swap_uprobes.c	/^EXPORT_SYMBOL_GPL(swap_register_ujprobe);$/;"	v
swap_register_ujprobe	swap/uprobe/swap_uprobes.c	/^int swap_register_ujprobe(struct ujprobe *jp)$/;"	f
swap_register_undef_hook	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^EXPORT_SYMBOL_GPL(swap_register_undef_hook);$/;"	v
swap_register_undef_hook	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^void swap_register_undef_hook(struct undef_hook *hook)$/;"	f
swap_register_uprobe	swap/uprobe/swap_uprobes.c	/^EXPORT_SYMBOL_GPL(swap_register_uprobe);$/;"	v
swap_register_uprobe	swap/uprobe/swap_uprobes.c	/^int swap_register_uprobe(struct uprobe *up)$/;"	f
swap_register_uretprobe	swap/uprobe/swap_uprobes.c	/^EXPORT_SYMBOL_GPL(swap_register_uretprobe);$/;"	v
swap_register_uretprobe	swap/uprobe/swap_uprobes.c	/^int swap_register_uretprobe(struct uretprobe *rp)$/;"	f
swap_reset_current_kprobe	swap/kprobe/swap_kprobes.c	/^void swap_reset_current_kprobe(void)$/;"	f
swap_retprobe-y	swap/retprobe/Makefile	/^swap_retprobe-y := \\$/;"	m
swap_sample_cb_t	swap/sampler/swap_sampler_module.h	/^typedef void (*swap_sample_cb_t)(struct pt_regs *);$/;"	t
swap_sampler-y	swap/sampler/Makefile	/^swap_sampler-y := swap_sampler_module.o$/;"	m
swap_sampler_start	swap/sampler/swap_sampler_module.c	/^EXPORT_SYMBOL_GPL(swap_sampler_start);$/;"	v
swap_sampler_start	swap/sampler/swap_sampler_module.c	/^int swap_sampler_start(unsigned int timer_quantum, swap_sample_cb_t cb)$/;"	f
swap_sampler_stop	swap/sampler/swap_sampler_module.c	/^EXPORT_SYMBOL_GPL(swap_sampler_stop);$/;"	v
swap_sampler_stop	swap/sampler/swap_sampler_module.c	/^int swap_sampler_stop(void)$/;"	f
swap_set_arg	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	/^static inline void swap_set_arg(struct pt_regs *regs, int num,$/;"	f
swap_set_arg	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	/^static inline void swap_set_arg(struct pt_regs *regs, int num,$/;"	f
swap_set_instr_ptr	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	/^static inline void swap_set_instr_ptr(struct pt_regs *regs, unsigned long val)$/;"	f
swap_set_instr_ptr	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	/^static inline void swap_set_instr_ptr(struct pt_regs *regs, unsigned long val)$/;"	f
swap_set_memory_ro	swap/kprobe/arch/arm/swap-asm/memory_rwx.c	/^static int (*swap_set_memory_ro)(unsigned long addr, int numpages);$/;"	v	file:
swap_set_memory_rw	swap/kprobe/arch/arm/swap-asm/memory_rwx.c	/^static int (*swap_set_memory_rw)(unsigned long addr, int numpages);$/;"	v	file:
swap_set_ret_addr	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	/^static inline void swap_set_ret_addr(struct pt_regs *regs, unsigned long val)$/;"	f
swap_set_ret_addr	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	/^static inline void swap_set_ret_addr(struct pt_regs *regs, unsigned long val)$/;"	f
swap_set_stack_ptr	swap/kprobe/arch/arm/swap-asm/swap_kprobes.h	/^static inline void swap_set_stack_ptr(struct pt_regs *regs, unsigned long sp)$/;"	f
swap_set_stack_ptr	swap/kprobe/arch/x86/swap-asm/swap_kprobes.h	/^static inline void swap_set_stack_ptr(struct pt_regs *regs, unsigned long sp)$/;"	f
swap_setjmp_pre_handler	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^int swap_setjmp_pre_handler(struct kprobe *p, struct pt_regs *regs)$/;"	f
swap_setjmp_pre_handler	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^int swap_setjmp_pre_handler(struct kprobe *p, struct pt_regs *regs)$/;"	f
swap_show_registers	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^static void (*swap_show_registers)(struct pt_regs *regs);$/;"	v	file:
swap_slot_alloc	swap/kprobe/swap_slots.c	/^EXPORT_SYMBOL_GPL(swap_slot_alloc);$/;"	v
swap_slot_alloc	swap/kprobe/swap_slots.c	/^void *swap_slot_alloc(struct slot_manager *sm)$/;"	f
swap_slot_free	swap/kprobe/swap_slots.c	/^EXPORT_SYMBOL_GPL(swap_slot_free);$/;"	v
swap_slot_free	swap/kprobe/swap_slots.c	/^void swap_slot_free(struct slot_manager *sm, void *slot)$/;"	f
swap_subbuffer	swap/buffer/buffer_description.h	/^struct swap_subbuffer {$/;"	s
swap_subbuffer_ptr	swap/buffer/data_types.h	/^typedef struct page *swap_subbuffer_ptr;$/;"	t	typeref:struct:page
swap_task_data-y	swap/task_data/Makefile	/^swap_task_data-y := task_data.o$/;"	m
swap_task_data_clean	swap/task_data/task_data.h	/^static inline void swap_task_data_clean(struct task_struct *task)$/;"	f
swap_task_data_get	swap/task_data/task_data.c	/^EXPORT_SYMBOL_GPL(swap_task_data_get);$/;"	v
swap_task_data_get	swap/task_data/task_data.c	/^void *swap_task_data_get(struct task_struct *task, int *ok)$/;"	f
swap_task_data_set	swap/task_data/task_data.c	/^EXPORT_SYMBOL_GPL(swap_task_data_set);$/;"	v
swap_task_data_set	swap/task_data/task_data.c	/^void swap_task_data_set(struct task_struct *task, void *data,$/;"	f
swap_text_poke	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^static void *(*swap_text_poke)(void *addr, const void *opcode, size_t len);$/;"	v	file:
swap_timer	swap/sampler/sampler_timers.h	/^typedef struct hrtimer   swap_timer;$/;"	t	typeref:struct:hrtimer
swap_timer	swap/sampler/sampler_timers.h	/^typedef struct timer_list   swap_timer;$/;"	t	typeref:struct:timer_list
swap_timer_restart	swap/sampler/swap_sampler_module.c	/^static restart_ret swap_timer_restart(swap_timer *timer)$/;"	f	file:
swap_timer_running	swap/sampler/sampler_timer.c	/^static int swap_timer_running;$/;"	v	file:
swap_timer_start	swap/sampler/swap_sampler_module.c	/^static int swap_timer_start(void)$/;"	f	file:
swap_timer_stop	swap/sampler/swap_sampler_module.c	/^static void swap_timer_stop(void)$/;"	f	file:
swap_two_pages_data	power/snapshot.c	/^swap_two_pages_data(struct page *p1, struct page *p2, void *buf)$/;"	f	file:
swap_ujprobe_return	swap/uprobe/swap_uprobes.c	/^EXPORT_SYMBOL_GPL(swap_ujprobe_return);$/;"	v
swap_ujprobe_return	swap/uprobe/swap_uprobes.c	/^void swap_ujprobe_return(void)$/;"	f
swap_uninit_t	swap/master/swap_initializer.h	/^typedef void (*swap_uninit_t)(void);$/;"	t
swap_unregister_all_uprobes	swap/uprobe/swap_uprobes.c	/^EXPORT_SYMBOL_GPL(swap_unregister_all_uprobes);$/;"	v
swap_unregister_all_uprobes	swap/uprobe/swap_uprobes.c	/^void swap_unregister_all_uprobes(struct task_struct *task)$/;"	f
swap_unregister_jprobe	swap/kprobe/swap_kprobes.c	/^EXPORT_SYMBOL_GPL(swap_unregister_jprobe);$/;"	v
swap_unregister_jprobe	swap/kprobe/swap_kprobes.c	/^void swap_unregister_jprobe(struct jprobe *jp)$/;"	f
swap_unregister_kprobe	swap/kprobe/swap_kprobes.c	/^EXPORT_SYMBOL_GPL(swap_unregister_kprobe);$/;"	v
swap_unregister_kprobe	swap/kprobe/swap_kprobes.c	/^void swap_unregister_kprobe(struct kprobe *kp)$/;"	f
swap_unregister_kretprobe	swap/kprobe/swap_kprobes.c	/^EXPORT_SYMBOL_GPL(swap_unregister_kretprobe);$/;"	v
swap_unregister_kretprobe	swap/kprobe/swap_kprobes.c	/^void swap_unregister_kretprobe(struct kretprobe *rp)$/;"	f
swap_unregister_kretprobe_bottom	swap/kprobe/swap_kprobes.c	/^EXPORT_SYMBOL_GPL(swap_unregister_kretprobe_bottom);$/;"	v
swap_unregister_kretprobe_bottom	swap/kprobe/swap_kprobes.c	/^void swap_unregister_kretprobe_bottom(struct kretprobe *rp)$/;"	f
swap_unregister_kretprobe_top	swap/kprobe/swap_kprobes.c	/^EXPORT_SYMBOL_GPL(swap_unregister_kretprobe_top);$/;"	v
swap_unregister_kretprobe_top	swap/kprobe/swap_kprobes.c	/^void swap_unregister_kretprobe_top(struct kretprobe *rp, int rp_disarm)$/;"	f
swap_unregister_kretprobes	swap/kprobe/swap_kprobes.c	/^EXPORT_SYMBOL_GPL(swap_unregister_kretprobes);$/;"	v
swap_unregister_kretprobes	swap/kprobe/swap_kprobes.c	/^void swap_unregister_kretprobes(struct kretprobe **rpp, size_t size)$/;"	f
swap_unregister_kretprobes_bottom	swap/kprobe/swap_kprobes.c	/^EXPORT_SYMBOL_GPL(swap_unregister_kretprobes_bottom);$/;"	v
swap_unregister_kretprobes_bottom	swap/kprobe/swap_kprobes.c	/^void swap_unregister_kretprobes_bottom(struct kretprobe **rps, size_t size)$/;"	f
swap_unregister_kretprobes_top	swap/kprobe/swap_kprobes.c	/^EXPORT_SYMBOL_GPL(swap_unregister_kretprobes_top);$/;"	v
swap_unregister_kretprobes_top	swap/kprobe/swap_kprobes.c	/^void swap_unregister_kretprobes_top(struct kretprobe **rps, size_t size,$/;"	f
swap_unregister_probe_type	swap/us_manager/probes/probes.c	/^EXPORT_SYMBOL_GPL(swap_unregister_probe_type);$/;"	v
swap_unregister_probe_type	swap/us_manager/probes/probes.c	/^void swap_unregister_probe_type(enum probe_t probe_type)$/;"	f
swap_unregister_ujprobe	swap/uprobe/swap_uprobes.c	/^EXPORT_SYMBOL_GPL(swap_unregister_ujprobe);$/;"	v
swap_unregister_ujprobe	swap/uprobe/swap_uprobes.c	/^void swap_unregister_ujprobe(struct ujprobe *jp)$/;"	f
swap_unregister_undef_hook	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^EXPORT_SYMBOL_GPL(swap_unregister_undef_hook);$/;"	v
swap_unregister_undef_hook	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^void swap_unregister_undef_hook(struct undef_hook *hook)$/;"	f
swap_unregister_uprobe	swap/uprobe/swap_uprobes.c	/^void swap_unregister_uprobe(struct uprobe *up)$/;"	f
swap_unregister_uretprobe	swap/uprobe/swap_uprobes.c	/^EXPORT_SYMBOL_GPL(swap_unregister_uretprobe);$/;"	v
swap_unregister_uretprobe	swap/uprobe/swap_uprobes.c	/^void swap_unregister_uretprobe(struct uretprobe *rp)$/;"	f
swap_unregister_valid_kprobe	swap/kprobe/swap_kprobes.c	/^static void swap_unregister_valid_kprobe(struct kprobe *p, struct kprobe *old_p)$/;"	f	file:
swap_uprobe-y	swap/uprobe/Makefile	/^swap_uprobe-y := swap_uprobes.o$/;"	m
swap_us_manager-y	swap/us_manager/Makefile	/^swap_us_manager-y := us_manager.o us_slot_manager.o helper.o debugfs_us_manager.o \\$/;"	m
swap_webprobe-y	swap/webprobe/Makefile	/^swap_webprobe-y := webprobe.o \\$/;"	m
swap_write_page	power/swap.c	/^static int swap_write_page(struct swap_map_handle *handle, void *buf,$/;"	f	file:
swap_writer-y	swap/writer/Makefile	/^swap_writer-y := swap_writer_module.o \\$/;"	m
swap_writer_finish	power/swap.c	/^static int swap_writer_finish(struct swap_map_handle *handle,$/;"	f	file:
swap_wsp-y	swap/wsp/Makefile	/^swap_wsp-y := wsp_module.o \\$/;"	m
swap_zero_pfn	swap/kprobe/swap_kprobes_deps.c	/^static unsigned long swap_zero_pfn ;$/;"	v	file:
swevent_hash	events/core.c	/^static inline u64 swevent_hash(u64 type, u32 event_id)$/;"	f	file:
swevent_hlist	events/core.c	/^	struct swevent_hlist		*swevent_hlist;$/;"	m	struct:swevent_htable	typeref:struct:swevent_htable::swevent_hlist	file:
swevent_hlist_deref	events/core.c	/^swevent_hlist_deref(struct swevent_htable *swhash)$/;"	f	file:
swevent_hlist_get	events/core.c	/^static int swevent_hlist_get(struct perf_event *event)$/;"	f	file:
swevent_hlist_get_cpu	events/core.c	/^static int swevent_hlist_get_cpu(struct perf_event *event, int cpu)$/;"	f	file:
swevent_hlist_put	events/core.c	/^static void swevent_hlist_put(struct perf_event *event)$/;"	f	file:
swevent_hlist_put_cpu	events/core.c	/^static void swevent_hlist_put_cpu(struct perf_event *event, int cpu)$/;"	f	file:
swevent_hlist_release	events/core.c	/^static void swevent_hlist_release(struct swevent_htable *swhash)$/;"	f	file:
swevent_htable	events/core.c	/^struct swevent_htable {$/;"	s	file:
switch_entry_handler	swap/ks_features/ks_features.c	/^static int switch_entry_handler(struct kretprobe_instance *ri,$/;"	f	file:
switch_hrtimer_base	hrtimer.c	/^switch_hrtimer_base(struct hrtimer *timer, struct hrtimer_clock_base *base,$/;"	f	file:
switch_hrtimer_base	hrtimer.c	270;"	d	file:
switch_ret_handler	swap/ks_features/ks_features.c	/^static int switch_ret_handler(struct kretprobe_instance *ri,$/;"	f	file:
switch_rp	swap/ks_features/ks_features.c	/^struct kretprobe switch_rp = {$/;"	v	typeref:struct:kretprobe
switch_task_namespaces	nsproxy.c	/^void switch_task_namespaces(struct task_struct *p, struct nsproxy *new)$/;"	f
switch_to_krp	swap/energy/energy.c	/^static struct kretprobe switch_to_krp = {$/;"	v	typeref:struct:kretprobe	file:
switched_from	sched/sched.h	/^	void (*switched_from) (struct rq *this_rq, struct task_struct *task);$/;"	m	struct:sched_class
switched_from_fair	sched/fair.c	/^static void switched_from_fair(struct rq *rq, struct task_struct *p)$/;"	f	file:
switched_from_rt	sched/rt.c	/^static void switched_from_rt(struct rq *rq, struct task_struct *p)$/;"	f	file:
switched_to	sched/sched.h	/^	void (*switched_to) (struct rq *this_rq, struct task_struct *task);$/;"	m	struct:sched_class
switched_to_fair	sched/fair.c	/^static void switched_to_fair(struct rq *rq, struct task_struct *p)$/;"	f	file:
switched_to_idle	sched/idle_task.c	/^static void switched_to_idle(struct rq *rq, struct task_struct *p)$/;"	f	file:
switched_to_rt	sched/rt.c	/^static void switched_to_rt(struct rq *rq, struct task_struct *p)$/;"	f	file:
switched_to_stop	sched/stop_task.c	/^static void switched_to_stop(struct rq *rq, struct task_struct *p)$/;"	f	file:
swsusp_alloc	power/snapshot.c	/^swsusp_alloc(struct memory_bitmap *orig_bm, struct memory_bitmap *copy_bm,$/;"	f	file:
swsusp_check	power/swap.c	/^int swsusp_check(void)$/;"	f
swsusp_close	power/swap.c	/^void swsusp_close(fmode_t mode)$/;"	f
swsusp_extent	power/swap.c	/^struct swsusp_extent {$/;"	s	file:
swsusp_extents	power/swap.c	/^static struct rb_root swsusp_extents = RB_ROOT;$/;"	v	typeref:struct:rb_root	file:
swsusp_extents_insert	power/swap.c	/^static int swsusp_extents_insert(unsigned long swap_offset)$/;"	f	file:
swsusp_free	power/snapshot.c	/^void swsusp_free(void)$/;"	f
swsusp_header	power/swap.c	/^static struct swsusp_header *swsusp_header;$/;"	v	typeref:struct:swsusp_header	file:
swsusp_header	power/swap.c	/^struct swsusp_header {$/;"	s	file:
swsusp_header_init	power/swap.c	/^core_initcall(swsusp_header_init);$/;"	v
swsusp_header_init	power/swap.c	/^static int swsusp_header_init(void)$/;"	f	file:
swsusp_info	power/power.h	/^struct swsusp_info {$/;"	s
swsusp_page_is_forbidden	power/snapshot.c	/^int swsusp_page_is_forbidden(struct page *page)$/;"	f
swsusp_page_is_free	power/snapshot.c	/^static int swsusp_page_is_free(struct page *page)$/;"	f	file:
swsusp_read	power/swap.c	/^int swsusp_read(unsigned int *flags_p)$/;"	f
swsusp_resume_block	power/hibernate.c	/^sector_t swsusp_resume_block;$/;"	v
swsusp_resume_device	power/hibernate.c	/^dev_t swsusp_resume_device;$/;"	v
swsusp_save	power/snapshot.c	/^asmlinkage int swsusp_save(void)$/;"	f
swsusp_set_page_forbidden	power/snapshot.c	/^static void swsusp_set_page_forbidden(struct page *page)$/;"	f	file:
swsusp_set_page_free	power/snapshot.c	/^void swsusp_set_page_free(struct page *page)$/;"	f
swsusp_show_speed	power/hibernate.c	/^void swsusp_show_speed(struct timeval *start, struct timeval *stop,$/;"	f
swsusp_swap_check	power/swap.c	/^static int swsusp_swap_check(void)$/;"	f	file:
swsusp_swap_in_use	power/swap.c	/^int swsusp_swap_in_use(void)$/;"	f
swsusp_unmark	power/swap.c	/^int swsusp_unmark(void)$/;"	f
swsusp_unset_page_forbidden	power/snapshot.c	/^static void swsusp_unset_page_forbidden(struct page *page)$/;"	f	file:
swsusp_unset_page_free	power/snapshot.c	/^void swsusp_unset_page_free(struct page *page)$/;"	f
swsusp_write	power/swap.c	/^int swsusp_write(unsigned int flags)$/;"	f
sym	module.c	/^		unsigned int sym, str, mod, vers, info, pcpu;$/;"	m	struct:load_info::__anon26	file:
sym	module.c	/^	const struct kernel_symbol *sym;$/;"	m	struct:find_symbol_arg	typeref:struct:find_symbol_arg::kernel_symbol	file:
sym_end	debug/kdb/kdb_private.h	/^		unsigned long sym_end;$/;"	m	struct:__ksymtab
sym_name	debug/kdb/kdb_private.h	/^		const char *sym_name;	\/* Full symbol name, including$/;"	m	struct:__ksymtab
sym_start	debug/kdb/kdb_private.h	/^		unsigned long sym_start;$/;"	m	struct:__ksymtab
symbol	trace/trace_kprobe.c	/^	const char		*symbol;	\/* symbol name *\/$/;"	m	struct:trace_probe	file:
symbol	trace/trace_probe.c	/^	char		*symbol;$/;"	m	struct:symbol_cache	file:
symbol_cache	trace/trace_probe.c	/^struct symbol_cache {$/;"	s	file:
symbol_cb	swap/ksyms/ksyms.c	/^static int symbol_cb(void *data, const char *sym, struct module *mod,$/;"	f	file:
symbol_data	swap/ksyms/ksyms.c	/^struct symbol_data {$/;"	s	file:
symbol_name	swap/kprobe/swap_kprobes.h	/^	char						*symbol_name;$/;"	m	struct:kprobe
symbol_put_addr	module.c	/^EXPORT_SYMBOL_GPL(symbol_put_addr);$/;"	v
symbol_put_addr	module.c	/^void symbol_put_addr(void *addr)$/;"	f
symoffs	module.c	/^	unsigned long symoffs, stroffs;$/;"	m	struct:load_info	file:
symversion	module.c	273;"	d	file:
symversion	module.c	275;"	d	file:
sync	rcutorture.c	/^	void (*sync)(void);$/;"	m	struct:rcu_torture_ops	file:
sync_access	time/timer_stats.c	/^static void sync_access(void)$/;"	f	file:
sync_child_event	events/core.c	/^static void sync_child_event(struct perf_event *child_event,$/;"	f	file:
sync_cmos_clock	time/ntp.c	/^static void sync_cmos_clock(struct work_struct *work)$/;"	f	file:
sync_init	swap/buffer/kernel_operations.h	/^static inline void sync_init(struct sync_t *buffer_sync)$/;"	f
sync_lock	swap/buffer/kernel_operations.h	/^static inline void sync_lock(struct sync_t *buffer_sync)$/;"	f
sync_lock_no_flags	swap/buffer/kernel_operations.h	/^static inline void sync_lock_no_flags(struct sync_t *buffer_sync)$/;"	f
sync_rcu_preempt_exp_count	rcutiny_plugin.h	/^static unsigned long sync_rcu_preempt_exp_count;$/;"	v
sync_rcu_preempt_exp_count	rcutree_plugin.h	/^static unsigned long sync_rcu_preempt_exp_count;$/;"	v
sync_rcu_preempt_exp_done	rcutree_plugin.h	/^static int sync_rcu_preempt_exp_done(struct rcu_node *rnp)$/;"	f
sync_rcu_preempt_exp_init	rcutree_plugin.h	/^sync_rcu_preempt_exp_init(struct rcu_state *rsp, struct rcu_node *rnp)$/;"	f
sync_read	power/power.h	/^	int		sync_read;	\/* Set to one to notify the caller of$/;"	m	struct:snapshot_handle
sync_t	swap/buffer/data_types.h	/^struct sync_t {$/;"	s
sync_unlock	swap/buffer/kernel_operations.h	/^static inline void sync_unlock(struct sync_t *buffer_sync)$/;"	f
sync_unlock_no_flags	swap/buffer/kernel_operations.h	/^static inline void sync_unlock_no_flags(struct sync_t *buffer_sync)$/;"	f
synchronize_irq	irq/manage.c	/^EXPORT_SYMBOL(synchronize_irq);$/;"	v
synchronize_irq	irq/manage.c	/^void synchronize_irq(unsigned int irq)$/;"	f
synchronize_rcu	rcutiny_plugin.h	/^EXPORT_SYMBOL_GPL(synchronize_rcu);$/;"	v
synchronize_rcu	rcutiny_plugin.h	/^void synchronize_rcu(void)$/;"	f
synchronize_rcu	rcutree_plugin.h	/^EXPORT_SYMBOL_GPL(synchronize_rcu);$/;"	v
synchronize_rcu	rcutree_plugin.h	/^void synchronize_rcu(void)$/;"	f
synchronize_rcu_bh	rcutree.c	/^EXPORT_SYMBOL_GPL(synchronize_rcu_bh);$/;"	v
synchronize_rcu_bh	rcutree.c	/^void synchronize_rcu_bh(void)$/;"	f
synchronize_rcu_expedited	rcutiny_plugin.h	/^EXPORT_SYMBOL_GPL(synchronize_rcu_expedited);$/;"	v
synchronize_rcu_expedited	rcutiny_plugin.h	/^void synchronize_rcu_expedited(void)$/;"	f
synchronize_rcu_expedited	rcutree_plugin.h	/^EXPORT_SYMBOL_GPL(synchronize_rcu_expedited);$/;"	v
synchronize_rcu_expedited	rcutree_plugin.h	/^void synchronize_rcu_expedited(void)$/;"	f
synchronize_sched	rcutiny.c	/^EXPORT_SYMBOL_GPL(synchronize_sched);$/;"	v
synchronize_sched	rcutiny.c	/^void synchronize_sched(void)$/;"	f
synchronize_sched	rcutree.c	/^EXPORT_SYMBOL_GPL(synchronize_sched);$/;"	v
synchronize_sched	rcutree.c	/^void synchronize_sched(void)$/;"	f
synchronize_sched_expedited	rcutree.c	/^EXPORT_SYMBOL_GPL(synchronize_sched_expedited);$/;"	v
synchronize_sched_expedited	rcutree.c	/^void synchronize_sched_expedited(void)$/;"	f
synchronize_sched_expedited_cpu_stop	rcutree.c	/^static int synchronize_sched_expedited_cpu_stop(void *data)$/;"	f	file:
synchronize_srcu	srcu.c	/^EXPORT_SYMBOL_GPL(synchronize_srcu);$/;"	v
synchronize_srcu	srcu.c	/^void synchronize_srcu(struct srcu_struct *sp)$/;"	f
synchronize_srcu_expedited	srcu.c	/^EXPORT_SYMBOL_GPL(synchronize_srcu_expedited);$/;"	v
synchronize_srcu_expedited	srcu.c	/^void synchronize_srcu_expedited(struct srcu_struct *sp)$/;"	f
sys32_quotactl	sys_ni.c	/^cond_syscall(sys32_quotactl);$/;"	v
sys_accept	sys_ni.c	/^cond_syscall(sys_accept);$/;"	v
sys_accept4	sys_ni.c	/^cond_syscall(sys_accept4);$/;"	v
sys_acct	sys_ni.c	/^cond_syscall(sys_acct);$/;"	v
sys_add_key	sys_ni.c	/^cond_syscall(sys_add_key);$/;"	v
sys_bdflush	sys_ni.c	/^cond_syscall(sys_bdflush);$/;"	v
sys_bind	sys_ni.c	/^cond_syscall(sys_bind);$/;"	v
sys_chown16	sys_ni.c	/^cond_syscall(sys_chown16);$/;"	v
sys_connect	sys_ni.c	/^cond_syscall(sys_connect);$/;"	v
sys_delete_module	sys_ni.c	/^cond_syscall(sys_delete_module);$/;"	v
sys_dfs	ptree.c	/^asmlinkage long sys_dfs(struct prinfo *buf, int *nr,$/;"	f
sys_epoll_create	sys_ni.c	/^cond_syscall(sys_epoll_create);$/;"	v
sys_epoll_create1	sys_ni.c	/^cond_syscall(sys_epoll_create1);$/;"	v
sys_epoll_ctl	sys_ni.c	/^cond_syscall(sys_epoll_ctl);$/;"	v
sys_epoll_pwait	sys_ni.c	/^cond_syscall(sys_epoll_pwait);$/;"	v
sys_epoll_wait	sys_ni.c	/^cond_syscall(sys_epoll_wait);$/;"	v
sys_eventfd	sys_ni.c	/^cond_syscall(sys_eventfd);$/;"	v
sys_eventfd2	sys_ni.c	/^cond_syscall(sys_eventfd2);$/;"	v
sys_exit_addr	swap/kprobe/swap_kprobes.c	/^static unsigned long sys_exit_addr;$/;"	v	file:
sys_exit_group_addr	swap/kprobe/swap_kprobes.c	/^static unsigned long sys_exit_group_addr;$/;"	v	file:
sys_fanotify_init	sys_ni.c	/^cond_syscall(sys_fanotify_init);$/;"	v
sys_fanotify_mark	sys_ni.c	/^cond_syscall(sys_fanotify_mark);$/;"	v
sys_fchown16	sys_ni.c	/^cond_syscall(sys_fchown16);$/;"	v
sys_finit_module	sys_ni.c	/^cond_syscall(sys_finit_module);$/;"	v
sys_flock	sys_ni.c	/^cond_syscall(sys_flock);$/;"	v
sys_futex	sys_ni.c	/^cond_syscall(sys_futex);$/;"	v
sys_get_mempolicy	sys_ni.c	/^cond_syscall(sys_get_mempolicy);$/;"	v
sys_get_robust_list	sys_ni.c	/^cond_syscall(sys_get_robust_list);$/;"	v
sys_getegid16	sys_ni.c	/^cond_syscall(sys_getegid16);$/;"	v
sys_geteuid16	sys_ni.c	/^cond_syscall(sys_geteuid16);$/;"	v
sys_getgid16	sys_ni.c	/^cond_syscall(sys_getgid16);$/;"	v
sys_getgroups16	sys_ni.c	/^cond_syscall(sys_getgroups16);$/;"	v
sys_getpeername	sys_ni.c	/^cond_syscall(sys_getpeername);$/;"	v
sys_getresgid16	sys_ni.c	/^cond_syscall(sys_getresgid16);$/;"	v
sys_getresuid16	sys_ni.c	/^cond_syscall(sys_getresuid16);$/;"	v
sys_getsockname	sys_ni.c	/^cond_syscall(sys_getsockname);$/;"	v
sys_getsockopt	sys_ni.c	/^cond_syscall(sys_getsockopt);$/;"	v
sys_getuid16	sys_ni.c	/^cond_syscall(sys_getuid16);$/;"	v
sys_init_module	sys_ni.c	/^cond_syscall(sys_init_module);$/;"	v
sys_inotify_add_watch	sys_ni.c	/^cond_syscall(sys_inotify_add_watch);$/;"	v
sys_inotify_init	sys_ni.c	/^cond_syscall(sys_inotify_init);$/;"	v
sys_inotify_init1	sys_ni.c	/^cond_syscall(sys_inotify_init1);$/;"	v
sys_inotify_rm_watch	sys_ni.c	/^cond_syscall(sys_inotify_rm_watch);$/;"	v
sys_io_cancel	sys_ni.c	/^cond_syscall(sys_io_cancel);$/;"	v
sys_io_destroy	sys_ni.c	/^cond_syscall(sys_io_destroy);$/;"	v
sys_io_getevents	sys_ni.c	/^cond_syscall(sys_io_getevents);$/;"	v
sys_io_setup	sys_ni.c	/^cond_syscall(sys_io_setup);$/;"	v
sys_io_submit	sys_ni.c	/^cond_syscall(sys_io_submit);$/;"	v
sys_ioprio_get	sys_ni.c	/^cond_syscall(sys_ioprio_get);$/;"	v
sys_ioprio_set	sys_ni.c	/^cond_syscall(sys_ioprio_set);$/;"	v
sys_ipc	sys_ni.c	/^cond_syscall(sys_ipc);$/;"	v
sys_kcmp	sys_ni.c	/^cond_syscall(sys_kcmp);$/;"	v
sys_kexec_load	sys_ni.c	/^cond_syscall(sys_kexec_load);$/;"	v
sys_keyctl	sys_ni.c	/^cond_syscall(sys_keyctl);$/;"	v
sys_lchown16	sys_ni.c	/^cond_syscall(sys_lchown16);$/;"	v
sys_listen	sys_ni.c	/^cond_syscall(sys_listen);$/;"	v
sys_lookup_dcookie	sys_ni.c	/^cond_syscall(sys_lookup_dcookie);$/;"	v
sys_madvise	sys_ni.c	/^cond_syscall(sys_madvise);$/;"	v
sys_map_item	swap/ksyms/no_ksyms.c	/^struct sys_map_item {$/;"	s	file:
sys_mbind	sys_ni.c	/^cond_syscall(sys_mbind);$/;"	v
sys_migrate_pages	sys_ni.c	/^cond_syscall(sys_migrate_pages);$/;"	v
sys_mincore	sys_ni.c	/^cond_syscall(sys_mincore);$/;"	v
sys_mlock	sys_ni.c	/^cond_syscall(sys_mlock);$/;"	v
sys_mlockall	sys_ni.c	/^cond_syscall(sys_mlockall);$/;"	v
sys_move_pages	sys_ni.c	/^cond_syscall(sys_move_pages);$/;"	v
sys_mprotect	sys_ni.c	/^cond_syscall(sys_mprotect);$/;"	v
sys_mq_getsetattr	sys_ni.c	/^cond_syscall(sys_mq_getsetattr);$/;"	v
sys_mq_notify	sys_ni.c	/^cond_syscall(sys_mq_notify);$/;"	v
sys_mq_open	sys_ni.c	/^cond_syscall(sys_mq_open);$/;"	v
sys_mq_timedreceive	sys_ni.c	/^cond_syscall(sys_mq_timedreceive);$/;"	v
sys_mq_timedsend	sys_ni.c	/^cond_syscall(sys_mq_timedsend);$/;"	v
sys_mq_unlink	sys_ni.c	/^cond_syscall(sys_mq_unlink);$/;"	v
sys_mremap	sys_ni.c	/^cond_syscall(sys_mremap);$/;"	v
sys_msgctl	sys_ni.c	/^cond_syscall(sys_msgctl);$/;"	v
sys_msgget	sys_ni.c	/^cond_syscall(sys_msgget);$/;"	v
sys_msgrcv	sys_ni.c	/^cond_syscall(sys_msgrcv);$/;"	v
sys_msgsnd	sys_ni.c	/^cond_syscall(sys_msgsnd);$/;"	v
sys_msync	sys_ni.c	/^cond_syscall(sys_msync);$/;"	v
sys_munlock	sys_ni.c	/^cond_syscall(sys_munlock);$/;"	v
sys_munlockall	sys_ni.c	/^cond_syscall(sys_munlockall);$/;"	v
sys_name_to_handle_at	sys_ni.c	/^cond_syscall(sys_name_to_handle_at);$/;"	v
sys_ni_syscall	sys_ni.c	/^asmlinkage long sys_ni_syscall(void)$/;"	f
sys_open_by_handle_at	sys_ni.c	/^cond_syscall(sys_open_by_handle_at);$/;"	v
sys_pciconfig_iobase	sys_ni.c	/^cond_syscall(sys_pciconfig_iobase);$/;"	v
sys_pciconfig_read	sys_ni.c	/^cond_syscall(sys_pciconfig_read);$/;"	v
sys_pciconfig_write	sys_ni.c	/^cond_syscall(sys_pciconfig_write);$/;"	v
sys_perf_event_open	sys_ni.c	/^cond_syscall(sys_perf_event_open);$/;"	v
sys_perf_refcount_enter	trace/trace_syscalls.c	/^static int sys_perf_refcount_enter;$/;"	v	file:
sys_perf_refcount_exit	trace/trace_syscalls.c	/^static int sys_perf_refcount_exit;$/;"	v	file:
sys_process_vm_readv	sys_ni.c	/^cond_syscall(sys_process_vm_readv);$/;"	v
sys_process_vm_writev	sys_ni.c	/^cond_syscall(sys_process_vm_writev);$/;"	v
sys_ptree	ptree.c	/^asmlinkage long sys_ptree(struct prinfo *buf, int *nr)$/;"	f
sys_quotactl	sys_ni.c	/^cond_syscall(sys_quotactl);$/;"	v
sys_read_data	swap/energy/energy.c	/^struct sys_read_data {$/;"	s	file:
sys_read_krp	swap/energy/energy.c	/^static struct kretprobe sys_read_krp = {$/;"	v	typeref:struct:kretprobe	file:
sys_recv	sys_ni.c	/^cond_syscall(sys_recv);$/;"	v
sys_recvfrom	sys_ni.c	/^cond_syscall(sys_recvfrom);$/;"	v
sys_recvmmsg	sys_ni.c	/^cond_syscall(sys_recvmmsg);$/;"	v
sys_recvmsg	sys_ni.c	/^cond_syscall(sys_recvmsg);$/;"	v
sys_refcount_enter	trace/trace.h	/^	int			sys_refcount_enter;$/;"	m	struct:trace_array
sys_refcount_exit	trace/trace.h	/^	int			sys_refcount_exit;$/;"	m	struct:trace_array
sys_remap_file_pages	sys_ni.c	/^cond_syscall(sys_remap_file_pages);$/;"	v
sys_request_key	sys_ni.c	/^cond_syscall(sys_request_key);$/;"	v
sys_seccomp	sys_ni.c	/^cond_syscall(sys_seccomp);$/;"	v
sys_semctl	sys_ni.c	/^cond_syscall(sys_semctl);$/;"	v
sys_semget	sys_ni.c	/^cond_syscall(sys_semget);$/;"	v
sys_semop	sys_ni.c	/^cond_syscall(sys_semop);$/;"	v
sys_semtimedop	sys_ni.c	/^cond_syscall(sys_semtimedop);$/;"	v
sys_send	sys_ni.c	/^cond_syscall(sys_send);$/;"	v
sys_sendmmsg	sys_ni.c	/^cond_syscall(sys_sendmmsg);$/;"	v
sys_sendmsg	sys_ni.c	/^cond_syscall(sys_sendmsg);$/;"	v
sys_sendto	sys_ni.c	/^cond_syscall(sys_sendto);$/;"	v
sys_set_mempolicy	sys_ni.c	/^cond_syscall(sys_set_mempolicy);$/;"	v
sys_set_robust_list	sys_ni.c	/^cond_syscall(sys_set_robust_list);$/;"	v
sys_setfsgid16	sys_ni.c	/^cond_syscall(sys_setfsgid16);$/;"	v
sys_setfsuid16	sys_ni.c	/^cond_syscall(sys_setfsuid16);$/;"	v
sys_setgid16	sys_ni.c	/^cond_syscall(sys_setgid16);$/;"	v
sys_setgroups16	sys_ni.c	/^cond_syscall(sys_setgroups16);$/;"	v
sys_setregid16	sys_ni.c	/^cond_syscall(sys_setregid16);$/;"	v
sys_setresgid16	sys_ni.c	/^cond_syscall(sys_setresgid16);$/;"	v
sys_setresuid16	sys_ni.c	/^cond_syscall(sys_setresuid16);$/;"	v
sys_setreuid16	sys_ni.c	/^cond_syscall(sys_setreuid16);$/;"	v
sys_setsockopt	sys_ni.c	/^cond_syscall(sys_setsockopt);$/;"	v
sys_setuid16	sys_ni.c	/^cond_syscall(sys_setuid16);$/;"	v
sys_shmat	sys_ni.c	/^cond_syscall(sys_shmat);$/;"	v
sys_shmctl	sys_ni.c	/^cond_syscall(sys_shmctl);$/;"	v
sys_shmdt	sys_ni.c	/^cond_syscall(sys_shmdt);$/;"	v
sys_shmget	sys_ni.c	/^cond_syscall(sys_shmget);$/;"	v
sys_shutdown	sys_ni.c	/^cond_syscall(sys_shutdown);$/;"	v
sys_signalfd	sys_ni.c	/^cond_syscall(sys_signalfd);$/;"	v
sys_signalfd4	sys_ni.c	/^cond_syscall(sys_signalfd4);$/;"	v
sys_socket	sys_ni.c	/^cond_syscall(sys_socket);$/;"	v
sys_socketcall	sys_ni.c	/^cond_syscall(sys_socketcall);$/;"	v
sys_socketpair	sys_ni.c	/^cond_syscall(sys_socketpair);$/;"	v
sys_spu_create	sys_ni.c	/^cond_syscall(sys_spu_create);$/;"	v
sys_spu_run	sys_ni.c	/^cond_syscall(sys_spu_run);$/;"	v
sys_subpage_prot	sys_ni.c	/^cond_syscall(sys_subpage_prot);$/;"	v
sys_swap_func	swap/uprobe/arch/x86/swap-asm/swap_sc_patch.c	/^asmlinkage long sys_swap_func(void)$/;"	f
sys_swapoff	sys_ni.c	/^cond_syscall(sys_swapoff);$/;"	v
sys_swapon	sys_ni.c	/^cond_syscall(sys_swapon);$/;"	v
sys_syslog	sys_ni.c	/^cond_syscall(sys_syslog);$/;"	v
sys_timerfd_create	sys_ni.c	/^cond_syscall(sys_timerfd_create);$/;"	v
sys_timerfd_gettime	sys_ni.c	/^cond_syscall(sys_timerfd_gettime);$/;"	v
sys_timerfd_settime	sys_ni.c	/^cond_syscall(sys_timerfd_settime);$/;"	v
sys_trace_period	swap/parser/msg_parser.h	/^	u32 sys_trace_period;       \/**< Trace period. *\/$/;"	m	struct:conf_data
sys_tracepoint_refcount	tracepoint.c	/^static int sys_tracepoint_refcount;$/;"	v	file:
sys_tz	time.c	/^EXPORT_SYMBOL(sys_tz);$/;"	v
sys_tz	time.c	/^struct timezone sys_tz;$/;"	v	typeref:struct:timezone
sys_visit	ptree.c	/^asmlinkage void sys_visit(struct prinfo *buf, int *nr,$/;"	f
sys_vm86	sys_ni.c	/^cond_syscall(sys_vm86);$/;"	v
sys_vm86old	sys_ni.c	/^cond_syscall(sys_vm86old);$/;"	v
sys_write_krp	swap/energy/energy.c	/^static struct kretprobe sys_write_krp = {$/;"	v	typeref:struct:kretprobe	file:
syscall_desc	swap/parser/features.c	/^	syscall_desc	= (1 << 15),	\/**< Descriptor syscalls tracing *\/$/;"	e	enum:features_list	file:
syscall_enter_define_fields	trace/trace_syscalls.c	/^static int __init syscall_enter_define_fields(struct ftrace_event_call *call)$/;"	f	file:
syscall_enter_register	trace/trace_syscalls.c	/^static int syscall_enter_register(struct ftrace_event_call *event,$/;"	f	file:
syscall_exit_define_fields	trace/trace_syscalls.c	/^static int __init syscall_exit_define_fields(struct ftrace_event_call *call)$/;"	f	file:
syscall_exit_register	trace/trace_syscalls.c	/^static int syscall_exit_register(struct ftrace_event_call *event,$/;"	f	file:
syscall_file	swap/parser/features.c	/^	syscall_file	= (1 << 10),	\/**< File operation syscalls tracing *\/$/;"	e	enum:features_list	file:
syscall_get_enter_fields	trace/trace_syscalls.c	/^syscall_get_enter_fields(struct ftrace_event_call *call)$/;"	f	file:
syscall_id	swap/ks_features/features_data.c	/^enum syscall_id {$/;"	g	file:
syscall_ipc	swap/parser/features.c	/^	syscall_ipc	= (1 << 11),	\/**< IPC syscall tracing *\/$/;"	e	enum:features_list	file:
syscall_name	swap/ks_features/ks_features.c	/^static const char *const syscall_name[] = {$/;"	v	file:
syscall_name_cnt	swap/ks_features/ks_features.c	/^	syscall_name_cnt = sizeof(syscall_name) \/ sizeof(char *)$/;"	e	enum:__anon51	file:
syscall_network	swap/parser/features.c	/^	syscall_network	= (1 << 14),	\/**< Network syscalls tracing *\/$/;"	e	enum:features_list	file:
syscall_nr_to_meta	trace/trace_syscalls.c	/^static struct syscall_metadata *syscall_nr_to_meta(int nr)$/;"	f	file:
syscall_process	swap/parser/features.c	/^	syscall_process	= (1 << 12),	\/**< Process syscalls tracing *\/$/;"	e	enum:features_list	file:
syscall_regfunc	tracepoint.c	/^void syscall_regfunc(void)$/;"	f
syscall_signal	swap/parser/features.c	/^	syscall_signal	= (1 << 13),	\/**< Signal syscalls tracing *\/$/;"	e	enum:features_list	file:
syscall_trace_enter	trace/trace.h	/^struct syscall_trace_enter {$/;"	s
syscall_trace_exit	trace/trace.h	/^struct syscall_trace_exit {$/;"	s
syscall_unregfunc	tracepoint.c	/^void syscall_unregfunc(void)$/;"	f
syscalls_metadata	trace/trace_syscalls.c	/^static struct syscall_metadata **syscalls_metadata;$/;"	v	typeref:struct:syscall_metadata	file:
sysctl_base_table	sysctl.c	/^static struct ctl_table sysctl_base_table[] = {$/;"	v	typeref:struct:ctl_table	file:
sysctl_getname	sysctl_binary.c	/^static char *sysctl_getname(const int *name, int nlen, const struct bin_table **tablep)$/;"	f	file:
sysctl_hung_task_check_count	hung_task.c	/^unsigned long __read_mostly sysctl_hung_task_check_count = PID_MAX_LIMIT;$/;"	v
sysctl_hung_task_panic	hung_task.c	/^unsigned int __read_mostly sysctl_hung_task_panic =$/;"	v
sysctl_hung_task_timeout_secs	hung_task.c	/^unsigned long __read_mostly sysctl_hung_task_timeout_secs = CONFIG_DEFAULT_HUNG_TASK_TIMEOUT;$/;"	v
sysctl_hung_task_warnings	hung_task.c	/^unsigned long __read_mostly sysctl_hung_task_warnings = 10;$/;"	v
sysctl_init	sysctl.c	/^int __init sysctl_init(void)$/;"	f
sysctl_kprobes_optimization	kprobes.c	/^int sysctl_kprobes_optimization;$/;"	v
sysctl_legacy_va_layout	sysctl.c	/^int sysctl_legacy_va_layout;$/;"	v
sysctl_numa_balancing_scan_delay	sched/fair.c	/^unsigned int sysctl_numa_balancing_scan_delay = 1000;$/;"	v
sysctl_numa_balancing_scan_period_max	sched/fair.c	/^unsigned int sysctl_numa_balancing_scan_period_max = 100*50;$/;"	v
sysctl_numa_balancing_scan_period_min	sched/fair.c	/^unsigned int sysctl_numa_balancing_scan_period_min = 100;$/;"	v
sysctl_numa_balancing_scan_period_reset	sched/fair.c	/^unsigned int sysctl_numa_balancing_scan_period_reset = 100*600;$/;"	v
sysctl_numa_balancing_scan_size	sched/fair.c	/^unsigned int sysctl_numa_balancing_scan_size = 256;$/;"	v
sysctl_sched_autogroup_enabled	sched/auto_group.c	/^unsigned int __read_mostly sysctl_sched_autogroup_enabled = 1;$/;"	v
sysctl_sched_cfs_bandwidth_slice	sched/fair.c	/^unsigned int sysctl_sched_cfs_bandwidth_slice = 5000UL;$/;"	v
sysctl_sched_features	sched/core.c	/^const_debug unsigned int sysctl_sched_features =$/;"	v
sysctl_sched_latency	sched/fair.c	/^unsigned int sysctl_sched_latency = 6000000ULL;$/;"	v
sysctl_sched_migration_cost	sched/fair.c	/^const_debug unsigned int sysctl_sched_migration_cost = 500000UL;$/;"	v
sysctl_sched_min_granularity	sched/fair.c	/^unsigned int sysctl_sched_min_granularity = 750000ULL;$/;"	v
sysctl_sched_nr_migrate	sched/core.c	/^const_debug unsigned int sysctl_sched_nr_migrate = 32;$/;"	v
sysctl_sched_rt_period	sched/core.c	/^unsigned int sysctl_sched_rt_period = 1000000;$/;"	v
sysctl_sched_rt_runtime	sched/core.c	/^int sysctl_sched_rt_runtime = 950000;$/;"	v
sysctl_sched_shares_window	sched/fair.c	/^unsigned int __read_mostly sysctl_sched_shares_window = 10000000UL;$/;"	v
sysctl_sched_time_avg	sched/core.c	/^const_debug unsigned int sysctl_sched_time_avg = MSEC_PER_SEC;$/;"	v
sysctl_sched_tunable_scaling	sched/fair.c	/^enum sched_tunable_scaling sysctl_sched_tunable_scaling$/;"	v	typeref:enum:sched_tunable_scaling
sysctl_sched_wakeup_granularity	sched/fair.c	/^unsigned int sysctl_sched_wakeup_granularity = 1000000UL;$/;"	v
sysctl_timer_migration	sched/core.c	/^const_debug unsigned int sysctl_timer_migration = 1;$/;"	v
sysfs_blk_trace_attr_show	trace/blktrace.c	/^static ssize_t sysfs_blk_trace_attr_show(struct device *dev,$/;"	f	file:
sysfs_blk_trace_attr_store	trace/blktrace.c	/^static ssize_t sysfs_blk_trace_attr_store(struct device *dev,$/;"	f	file:
sysfs_override_clocksource	time/clocksource.c	/^static ssize_t sysfs_override_clocksource(struct device *dev,$/;"	f	file:
sysfs_show_available_clocksources	time/clocksource.c	/^sysfs_show_available_clocksources(struct device *dev,$/;"	f	file:
sysfs_show_current_clocksources	time/clocksource.c	/^sysfs_show_current_clocksources(struct device *dev,$/;"	f	file:
sysfs_test_command	rtmutex-tester.c	/^static ssize_t sysfs_test_command(struct device *dev, struct device_attribute *attr,$/;"	f	file:
sysfs_test_status	rtmutex-tester.c	/^static ssize_t sysfs_test_status(struct device *dev, struct device_attribute *attr,$/;"	f	file:
syslog_action_restricted	printk.c	/^static int syslog_action_restricted(int type)$/;"	f	file:
syslog_idx	printk.c	/^static u32 syslog_idx;$/;"	v	file:
syslog_partial	printk.c	/^static size_t syslog_partial;$/;"	v	file:
syslog_prev	printk.c	/^static enum log_flags syslog_prev;$/;"	v	typeref:enum:log_flags	file:
syslog_print	printk.c	/^static int syslog_print(char __user *buf, int size)$/;"	f	file:
syslog_print_all	printk.c	/^static int syslog_print_all(char __user *buf, int size, bool clear)$/;"	f	file:
syslog_seq	printk.c	/^static u64 syslog_seq;$/;"	v	file:
sysrq_dbg_op	debug/debug_core.c	/^static struct sysrq_key_op sysrq_dbg_op = {$/;"	v	typeref:struct:sysrq_key_op	file:
sysrq_handle_dbg	debug/debug_core.c	/^static void sysrq_handle_dbg(int key)$/;"	f	file:
sysrq_poweroff_op	power/poweroff.c	/^static struct sysrq_key_op	sysrq_poweroff_op = {$/;"	v	typeref:struct:sysrq_key_op	file:
sysrq_sched_debug_show	sched/debug.c	/^void sysrq_sched_debug_show(void)$/;"	f
sysrq_sysctl_handler	sysctl.c	/^static int sysrq_sysctl_handler(ctl_table *table, int write,$/;"	f	file:
sysrq_timer_list_show	time/timer_list.c	/^void sysrq_timer_list_show(void)$/;"	f
system	swap/energy/debugfs_energy.c	/^	u64 (*system)(void);$/;"	m	struct:param_data	file:
system_enable_read	trace/trace_events.c	/^system_enable_read(struct file *filp, char __user *ubuf, size_t cnt,$/;"	f	file:
system_enable_write	trace/trace_events.c	/^system_enable_write(struct file *filp, const char __user *ubuf, size_t cnt,$/;"	f	file:
system_entering_hibernation	power/hibernate.c	/^EXPORT_SYMBOL(system_entering_hibernation);$/;"	v
system_entering_hibernation	power/hibernate.c	/^bool system_entering_hibernation(void)$/;"	f
system_freezable_power_efficient_wq	workqueue.c	/^EXPORT_SYMBOL_GPL(system_freezable_power_efficient_wq);$/;"	v
system_freezable_wq	workqueue.c	/^EXPORT_SYMBOL_GPL(system_freezable_wq);$/;"	v
system_freezing_cnt	freezer.c	/^EXPORT_SYMBOL(system_freezing_cnt);$/;"	v
system_freezing_cnt	freezer.c	/^atomic_t system_freezing_cnt = ATOMIC_INIT(0);$/;"	v
system_highpri_wq	workqueue.c	/^EXPORT_SYMBOL_GPL(system_highpri_wq);$/;"	v
system_long_wq	workqueue.c	/^EXPORT_SYMBOL_GPL(system_long_wq);$/;"	v
system_power_efficient_wq	workqueue.c	/^EXPORT_SYMBOL_GPL(system_power_efficient_wq);$/;"	v
system_refcount	trace/trace_events.c	/^static inline int system_refcount(struct event_subsystem *system)$/;"	f	file:
system_refcount_dec	trace/trace_events.c	/^static int system_refcount_dec(struct event_subsystem *system)$/;"	f	file:
system_refcount_inc	trace/trace_events.c	/^static int system_refcount_inc(struct event_subsystem *system)$/;"	f	file:
system_tr_open	trace/trace_events.c	/^static int system_tr_open(struct inode *inode, struct file *filp)$/;"	f	file:
system_unbound_wq	workqueue.c	/^EXPORT_SYMBOL_GPL(system_unbound_wq);$/;"	v
system_wq	workqueue.c	/^EXPORT_SYMBOL(system_wq);$/;"	v
systems	trace/trace.h	/^	struct list_head	systems;$/;"	m	struct:trace_array	typeref:struct:trace_array::list_head
sz	swap/energy/energy.c	/^	int sz;$/;"	m	struct:cmd_pt	file:
t_action	trace/blktrace.c	/^static inline u32 t_action(const struct trace_entry *ent)$/;"	f	file:
t_bytes	trace/blktrace.c	/^static inline u32 t_bytes(const struct trace_entry *ent)$/;"	f	file:
t_error	trace/blktrace.c	/^static inline __u16 t_error(const struct trace_entry *ent)$/;"	f	file:
t_hash_next	trace/ftrace.c	/^t_hash_next(struct seq_file *m, loff_t *pos)$/;"	f	file:
t_hash_show	trace/ftrace.c	/^t_hash_show(struct seq_file *m, struct ftrace_iterator *iter)$/;"	f	file:
t_hash_start	trace/ftrace.c	/^static void *t_hash_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
t_next	trace/ftrace.c	/^t_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
t_next	trace/trace.c	/^t_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
t_next	trace/trace_events.c	/^t_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
t_next	trace/trace_printk.c	/^static void *t_next(struct seq_file *m, void * v, loff_t *pos)$/;"	f	file:
t_next	trace/trace_stack.c	/^t_next(struct seq_file *m, void *v, loff_t *pos)$/;"	f	file:
t_sec	trace/blktrace.c	/^static inline u32 t_sec(const struct trace_entry *ent)$/;"	f	file:
t_sector	trace/blktrace.c	/^static inline unsigned long long t_sector(const struct trace_entry *ent)$/;"	f	file:
t_show	trace/ftrace.c	/^static int t_show(struct seq_file *m, void *v)$/;"	f	file:
t_show	trace/trace.c	/^static int t_show(struct seq_file *m, void *v)$/;"	f	file:
t_show	trace/trace_events.c	/^static int t_show(struct seq_file *m, void *v)$/;"	f	file:
t_show	trace/trace_printk.c	/^static int t_show(struct seq_file *m, void *v)$/;"	f	file:
t_show	trace/trace_stack.c	/^static int t_show(struct seq_file *m, void *v)$/;"	f	file:
t_start	trace/ftrace.c	/^static void *t_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
t_start	trace/trace.c	/^static void *t_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
t_start	trace/trace_events.c	/^static void *t_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
t_start	trace/trace_printk.c	/^t_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
t_start	trace/trace_stack.c	/^static void *t_start(struct seq_file *m, loff_t *pos)$/;"	f	file:
t_stop	trace/ftrace.c	/^static void t_stop(struct seq_file *m, void *p)$/;"	f	file:
t_stop	trace/trace.c	/^static void t_stop(struct seq_file *m, void *p)$/;"	f	file:
t_stop	trace/trace_events.c	/^static void t_stop(struct seq_file *m, void *p)$/;"	f	file:
t_stop	trace/trace_printk.c	/^static void t_stop(struct seq_file *m, void *p)$/;"	f	file:
t_stop	trace/trace_stack.c	/^static void t_stop(struct seq_file *m, void *p)$/;"	f	file:
tag_chunk	audit_tree.c	/^static int tag_chunk(struct inode *inode, struct audit_tree *tree)$/;"	f	file:
tag_mount	audit_tree.c	/^static int tag_mount(struct vfsmount *mnt, void *arg)$/;"	f	file:
tail	softirq.c	/^	struct tasklet_struct **tail;$/;"	m	struct:tasklet_head	typeref:struct:tasklet_head::tasklet_struct	file:
tail	time/time_history.c	/^	int tail;$/;"	m	struct:time_history_log_buf	file:
tail	trace/trace_events_filter.c	/^		unsigned int tail;$/;"	m	struct:filter_parse_state::__anon90	file:
tail	trace/trace_events_filter.c	/^		unsigned int tail;$/;"	m	struct:filter_parse_state::__anon91	file:
tail_page	trace/ring_buffer.c	/^	struct buffer_page		*tail_page;	\/* write to tail *\/$/;"	m	struct:ring_buffer_per_cpu	typeref:struct:ring_buffer_per_cpu::buffer_page	file:
tainted_mask	panic.c	/^static unsigned long tainted_mask;$/;"	v	file:
take_cpu_down	cpu.c	/^static int __ref take_cpu_down(void *_param)$/;"	f	file:
take_cpu_down_param	cpu.c	/^struct take_cpu_down_param {$/;"	s	file:
takeover_tasklets	softirq.c	/^static void takeover_tasklets(unsigned int cpu)$/;"	f	file:
target	test_kprobes.c	/^static u32 (*target)(u32 value);$/;"	v	file:
target2	test_kprobes.c	/^static u32 (*target2)(u32 value);$/;"	v	file:
target_auid	audit.h	/^	kuid_t		    target_auid;$/;"	m	struct:audit_context
target_auid	auditsc.c	/^	kuid_t			target_auid[AUDIT_AUX_PIDS];$/;"	m	struct:audit_aux_data_pids	file:
target_binaries	swap/preload/preload_control.c	/^static struct bin_desc *target_binaries = NULL;$/;"	v	typeref:struct:bin_desc	file:
target_binaries_cnt	swap/preload/preload_control.c	/^static unsigned int target_binaries_cnt = 0;$/;"	v	file:
target_binaries_slots	swap/preload/preload_control.c	/^static unsigned int target_binaries_slots = 0;$/;"	v	file:
target_comm	audit.h	/^	char		    target_comm[TASK_COMM_LEN];$/;"	m	struct:audit_context
target_comm	auditsc.c	/^	char 			target_comm[AUDIT_AUX_PIDS][TASK_COMM_LEN];$/;"	m	struct:audit_aux_data_pids	file:
target_load	sched/fair.c	/^static unsigned long target_load(int cpu, int type)$/;"	f	file:
target_pid	audit.h	/^	pid_t		    target_pid;$/;"	m	struct:audit_context
target_pid	auditsc.c	/^	pid_t			target_pid[AUDIT_AUX_PIDS];$/;"	m	struct:audit_aux_data_pids	file:
target_sessionid	audit.h	/^	unsigned int	    target_sessionid;$/;"	m	struct:audit_context
target_sessionid	auditsc.c	/^	unsigned int		target_sessionid[AUDIT_AUX_PIDS];$/;"	m	struct:audit_aux_data_pids	file:
target_sid	audit.h	/^	u32		    target_sid;$/;"	m	struct:audit_context
target_sid	auditsc.c	/^	u32			target_sid[AUDIT_AUX_PIDS];$/;"	m	struct:audit_aux_data_pids	file:
target_uid	audit.h	/^	kuid_t		    target_uid;$/;"	m	struct:audit_context
target_uid	auditsc.c	/^	kuid_t			target_uid[AUDIT_AUX_PIDS];$/;"	m	struct:audit_aux_data_pids	file:
task	cgroup.c	/^	struct task_struct	*task;$/;"	m	struct:task_and_cgroup	typeref:struct:task_and_cgroup::task_struct	file:
task	debug/debug_core.h	/^	struct task_struct	*task;$/;"	m	struct:debuggerinfo_struct	typeref:struct:debuggerinfo_struct::task_struct
task	events/core.c	/^	struct task_struct		*task;$/;"	m	struct:perf_task_event	typeref:struct:perf_task_event::task_struct	file:
task	events/core.c	/^	struct task_struct	*task;$/;"	m	struct:perf_comm_event	typeref:struct:perf_comm_event::task_struct	file:
task	futex.c	/^	struct task_struct *task;$/;"	m	struct:futex_q	typeref:struct:futex_q::task_struct	file:
task	rtmutex_common.h	/^	struct task_struct	*task;$/;"	m	struct:rt_mutex_waiter	typeref:struct:rt_mutex_waiter::task_struct
task	sched/core.c	/^	struct task_struct *task;$/;"	m	struct:migration_arg	typeref:struct:migration_arg::task_struct	file:
task	semaphore.c	/^	struct task_struct *task;$/;"	m	struct:semaphore_waiter	typeref:struct:semaphore_waiter::task_struct	file:
task	swap/kprobe/swap_kprobes.h	/^	struct task_struct *task;       \/**< Pointer to the target task_struct.*\/$/;"	m	struct:kretprobe_instance	typeref:struct:kretprobe_instance::task_struct
task	swap/kprobe/swap_kprobes.h	/^	struct task_struct *task;$/;"	m	struct:jprobe_instance	typeref:struct:jprobe_instance::task_struct
task	swap/nsp/nsp_tdata.c	/^	struct task_struct *task;$/;"	m	struct:priv_tdata	typeref:struct:priv_tdata::task_struct	file:
task	swap/uprobe/swap_uprobes.h	/^	struct task_struct *task;           \/**< Pointer to the task struct *\/$/;"	m	struct:uprobe	typeref:struct:uprobe::task_struct
task	swap/uprobe/swap_uprobes.h	/^	struct task_struct *task;           \/**< Pointer to the task struct *\/$/;"	m	struct:uretprobe_instance	typeref:struct:uretprobe_instance::task_struct
task	swap/uprobe/swap_uprobes.h	/^	struct task_struct *task;$/;"	m	struct:urinst_info	typeref:struct:urinst_info::task_struct
task	swap/us_manager/helper.c	/^	struct task_struct *task;$/;"	m	struct:clean_data	typeref:struct:clean_data::task_struct	file:
task	swap/us_manager/helper.c	/^	struct task_struct *task;$/;"	m	struct:comm_data	typeref:struct:comm_data::task_struct	file:
task	swap/us_manager/sspt/sspt_proc.h	/^	struct task_struct *task;	\/**< Ptr to the task *\/$/;"	m	struct:sspt_proc	typeref:struct:sspt_proc::task_struct
task	workqueue_internal.h	/^	struct task_struct	*task;		\/* I: worker task *\/$/;"	m	struct:worker	typeref:struct:worker::task_struct
task_active_pid_ns	pid.c	/^EXPORT_SYMBOL_GPL(task_active_pid_ns);$/;"	v
task_active_pid_ns	pid.c	/^struct pid_namespace *task_active_pid_ns(struct task_struct *tsk)$/;"	f
task_and_cgroup	cgroup.c	/^struct task_and_cgroup {$/;"	s	file:
task_blocked_on_lock	rtmutex.c	/^static inline struct rt_mutex *task_blocked_on_lock(struct task_struct *p)$/;"	f	file:
task_blocks_on_rt_mutex	rtmutex.c	/^static int task_blocks_on_rt_mutex(struct rt_mutex *lock,$/;"	f	file:
task_bp_pinned	events/hw_breakpoint.c	/^static int task_bp_pinned(int cpu, struct perf_event *bp, enum bp_type_idx type)$/;"	f	file:
task_ca	sched/cpuacct.c	/^static inline struct cpuacct *task_ca(struct task_struct *tsk)$/;"	f	file:
task_cfs_rq	sched/fair.c	/^static inline struct cfs_rq *task_cfs_rq(struct task_struct *p)$/;"	f	file:
task_cgroup_from_root	cgroup.c	/^static struct cgroup *task_cgroup_from_root(struct task_struct *task,$/;"	f	file:
task_clear_jobctl_pending	signal.c	/^void task_clear_jobctl_pending(struct task_struct *task, unsigned int mask)$/;"	f
task_clear_jobctl_trapping	signal.c	/^void task_clear_jobctl_trapping(struct task_struct *task)$/;"	f
task_clock_event_add	events/core.c	/^static int task_clock_event_add(struct perf_event *event, int flags)$/;"	f	file:
task_clock_event_del	events/core.c	/^static void task_clock_event_del(struct perf_event *event, int flags)$/;"	f	file:
task_clock_event_init	events/core.c	/^static int task_clock_event_init(struct perf_event *event)$/;"	f	file:
task_clock_event_read	events/core.c	/^static void task_clock_event_read(struct perf_event *event)$/;"	f	file:
task_clock_event_start	events/core.c	/^static void task_clock_event_start(struct perf_event *event, int flags)$/;"	f	file:
task_clock_event_stop	events/core.c	/^static void task_clock_event_stop(struct perf_event *event, int flags)$/;"	f	file:
task_clock_event_update	events/core.c	/^static void task_clock_event_update(struct perf_event *event, u64 now)$/;"	f	file:
task_cputime	sched/cputime.c	/^void task_cputime(struct task_struct *t, cputime_t *utime, cputime_t *stime)$/;"	f
task_cputime_adjusted	sched/cputime.c	/^void task_cputime_adjusted(struct task_struct *p, cputime_t *ut, cputime_t *st)$/;"	f
task_cputime_expired	posix-cpu-timers.c	/^static inline int task_cputime_expired(const struct task_cputime *sample,$/;"	f	file:
task_cputime_scaled	sched/cputime.c	/^void task_cputime_scaled(struct task_struct *t,$/;"	f
task_cputime_zero	posix-cpu-timers.c	/^static inline int task_cputime_zero(const struct task_cputime *cputime)$/;"	f	file:
task_cs	cpuset.c	/^static inline struct cpuset *task_cs(struct task_struct *task)$/;"	f	file:
task_ctx	events/core.c	/^	struct perf_event_context	*task_ctx;$/;"	m	struct:perf_task_event	typeref:struct:perf_task_event::perf_event_context	file:
task_ctx_sched_out	events/core.c	/^static void task_ctx_sched_out(struct perf_event_context *ctx)$/;"	f	file:
task_curr	sched/core.c	/^inline int task_curr(const struct task_struct *p)$/;"	f
task_current	sched/sched.h	/^static inline int task_current(struct rq *rq, struct task_struct *p)$/;"	f
task_data	swap/task_data/task_data.c	/^struct task_data {$/;"	s	file:
task_data_exit	swap/task_data/task_data.c	/^static void task_data_exit(void)$/;"	f	file:
task_data_init	swap/task_data/task_data.c	/^static int task_data_init(void)$/;"	f	file:
task_data_once	swap/task_data/task_data.c	/^static int task_data_once(void)$/;"	f	file:
task_data_start	swap/task_data/task_data.c	/^static void task_data_start(void)$/;"	f	file:
task_data_stop	swap/task_data/task_data.c	/^static void task_data_stop(void)$/;"	f	file:
task_delta_exec	sched/core.c	/^unsigned long long task_delta_exec(struct task_struct *p)$/;"	f
task_fork	sched/sched.h	/^	void (*task_fork) (struct task_struct *p);$/;"	m	struct:sched_class
task_fork_fair	sched/fair.c	/^static void task_fork_fair(struct task_struct *p)$/;"	f	file:
task_free_register	fork.c	/^EXPORT_SYMBOL(task_free_register);$/;"	v
task_free_register	fork.c	/^int task_free_register(struct notifier_block *n)$/;"	f
task_free_unregister	fork.c	/^EXPORT_SYMBOL(task_free_unregister);$/;"	v
task_free_unregister	fork.c	/^int task_free_unregister(struct notifier_block *n)$/;"	f
task_freezer	cgroup_freezer.c	/^static inline struct freezer *task_freezer(struct task_struct *task)$/;"	f	file:
task_function_call	events/core.c	/^task_function_call(struct task_struct *p, int (*func) (void *info), void *info)$/;"	f	file:
task_group	sched/sched.h	/^static inline struct task_group *task_group(struct task_struct *p)$/;"	f
task_group	sched/sched.h	/^struct task_group {$/;"	s
task_group_account_field	sched/cputime.c	/^static inline void task_group_account_field(struct task_struct *p, int index,$/;"	f	file:
task_group_is_autogroup	sched/auto_group.h	/^static inline bool task_group_is_autogroup(struct task_group *tg)$/;"	f
task_group_path	sched/debug.c	/^static char *task_group_path(struct task_group *tg)$/;"	f	file:
task_groups	sched/core.c	/^LIST_HEAD(task_groups);$/;"	v
task_gtime	sched/cputime.c	/^cputime_t task_gtime(struct task_struct *t)$/;"	f
task_h_load	sched/fair.c	/^static unsigned long task_h_load(struct task_struct *p)$/;"	f	file:
task_handoff_register	profile.c	/^EXPORT_SYMBOL_GPL(task_handoff_register);$/;"	v
task_handoff_register	profile.c	/^int task_handoff_register(struct notifier_block *n)$/;"	f
task_handoff_unregister	profile.c	/^EXPORT_SYMBOL_GPL(task_handoff_unregister);$/;"	v
task_handoff_unregister	profile.c	/^int task_handoff_unregister(struct notifier_block *n)$/;"	f
task_has_mempolicy	cpuset.c	/^static inline bool task_has_mempolicy(struct task_struct *task)$/;"	f	file:
task_has_pi_waiters	rtmutex_common.h	/^static inline int task_has_pi_waiters(struct task_struct *p)$/;"	f
task_has_rt_policy	sched/sched.h	/^static inline int task_has_rt_policy(struct task_struct *p)$/;"	f
task_hot	sched/fair.c	/^task_hot(struct task_struct *p, u64 now, struct sched_domain *sd)$/;"	f	file:
task_move_group	sched/sched.h	/^	void (*task_move_group) (struct task_struct *p, int on_rq);$/;"	m	struct:sched_class
task_move_group_fair	sched/fair.c	/^static void task_move_group_fair(struct task_struct *p, int on_rq)$/;"	f	file:
task_nice	sched/core.c	/^EXPORT_SYMBOL(task_nice);$/;"	v
task_nice	sched/core.c	/^int task_nice(const struct task_struct *p)$/;"	f
task_numa_fault	sched/fair.c	/^void task_numa_fault(int node, int pages, bool migrated)$/;"	f
task_numa_placement	sched/fair.c	/^static void task_numa_placement(struct task_struct *p)$/;"	f	file:
task_numa_work	sched/fair.c	/^void task_numa_work(struct callback_head *work)$/;"	f
task_of	sched/fair.c	/^static inline struct task_struct *task_of(struct sched_entity *se)$/;"	f	file:
task_participate_group_stop	signal.c	/^static bool task_participate_group_stop(struct task_struct *task)$/;"	f	file:
task_pid_type	exit.c	/^struct pid *task_pid_type(struct task_struct *task, enum pid_type type)$/;"	f	file:
task_prio	sched/core.c	/^int task_prio(const struct task_struct *p)$/;"	f
task_rq	sched/sched.h	543;"	d
task_running	sched/sched.h	/^static inline int task_running(struct rq *rq, struct task_struct *p)$/;"	f
task_sched_runtime	sched/core.c	/^unsigned long long task_sched_runtime(struct task_struct *p)$/;"	f
task_set_jobctl_pending	signal.c	/^bool task_set_jobctl_pending(struct task_struct *task, unsigned int mask)$/;"	f
task_state_char	trace/trace_output.c	/^static int task_state_char(unsigned long state)$/;"	f	file:
task_stopped_code	exit.c	/^static int *task_stopped_code(struct task_struct *p, bool ptrace)$/;"	f	file:
task_struct_cachep	fork.c	/^static struct kmem_cache *task_struct_cachep;$/;"	v	typeref:struct:kmem_cache	file:
task_tgid_nr_ns	pid.c	/^EXPORT_SYMBOL(task_tgid_nr_ns);$/;"	v
task_tgid_nr_ns	pid.c	/^pid_t task_tgid_nr_ns(struct task_struct *tsk, struct pid_namespace *ns)$/;"	f
task_tick	sched/sched.h	/^	void (*task_tick) (struct rq *rq, struct task_struct *p, int queued);$/;"	m	struct:sched_class
task_tick_fair	sched/fair.c	/^static void task_tick_fair(struct rq *rq, struct task_struct *curr, int queued)$/;"	f	file:
task_tick_idle	sched/idle_task.c	/^static void task_tick_idle(struct rq *rq, struct task_struct *curr, int queued)$/;"	f	file:
task_tick_numa	sched/fair.c	/^static void task_tick_numa(struct rq *rq, struct task_struct *curr)$/;"	f	file:
task_tick_numa	sched/fair.c	/^void task_tick_numa(struct rq *rq, struct task_struct *curr)$/;"	f
task_tick_rt	sched/rt.c	/^static void task_tick_rt(struct rq *rq, struct task_struct *p, int queued)$/;"	f	file:
task_tick_stop	sched/stop_task.c	/^static void task_tick_stop(struct rq *rq, struct task_struct *curr, int queued)$/;"	f	file:
task_top_pi_waiter	rtmutex_common.h	/^task_top_pi_waiter(struct task_struct *p)$/;"	f
task_user_regset_view	ptrace.c	/^EXPORT_SYMBOL_GPL(task_user_regset_view);$/;"	v
task_waking	sched/sched.h	/^	void (*task_waking) (struct task_struct *task);$/;"	m	struct:sched_class
task_waking_fair	sched/fair.c	/^static void task_waking_fair(struct task_struct *p)$/;"	f	file:
task_wants_autogroup	sched/auto_group.c	/^bool task_wants_autogroup(struct task_struct *p, struct task_group *tg)$/;"	f
task_woken	sched/sched.h	/^	void (*task_woken) (struct rq *this_rq, struct task_struct *task);$/;"	m	struct:sched_class
task_woken_rt	sched/rt.c	/^static void task_woken_rt(struct rq *rq, struct task_struct *p)$/;"	f	file:
task_work_add	task_work.c	/^task_work_add(struct task_struct *task, struct callback_head *work, bool notify)$/;"	f
task_work_cancel	task_work.c	/^task_work_cancel(struct task_struct *task, task_work_func_t func)$/;"	f
task_work_run	task_work.c	/^void task_work_run(void)$/;"	f
tasklet_action	softirq.c	/^static void tasklet_action(struct softirq_action *a)$/;"	f	file:
tasklet_head	softirq.c	/^struct tasklet_head$/;"	s	file:
tasklet_hi_action	softirq.c	/^static void tasklet_hi_action(struct softirq_action *a)$/;"	f	file:
tasklet_hrtimer_init	softirq.c	/^EXPORT_SYMBOL_GPL(tasklet_hrtimer_init);$/;"	v
tasklet_hrtimer_init	softirq.c	/^void tasklet_hrtimer_init(struct tasklet_hrtimer *ttimer,$/;"	f
tasklet_init	softirq.c	/^EXPORT_SYMBOL(tasklet_init);$/;"	v
tasklet_init	softirq.c	/^void tasklet_init(struct tasklet_struct *t,$/;"	f
tasklet_kill	softirq.c	/^EXPORT_SYMBOL(tasklet_kill);$/;"	v
tasklet_kill	softirq.c	/^void tasklet_kill(struct tasklet_struct *t)$/;"	f
tasklet_kill_immediate	softirq.c	/^void tasklet_kill_immediate(struct tasklet_struct *t, unsigned int cpu)$/;"	f
tasks_timeline	sched/sched.h	/^	struct rb_root tasks_timeline;$/;"	m	struct:cfs_rq	typeref:struct:cfs_rq::rb_root
taskstats_cache	taskstats.c	/^struct kmem_cache *taskstats_cache;$/;"	v	typeref:struct:kmem_cache
taskstats_cmd_get_policy	taskstats.c	/^static const struct nla_policy taskstats_cmd_get_policy[TASKSTATS_CMD_ATTR_MAX+1] = {$/;"	v	typeref:struct:nla_policy	file:
taskstats_exit	taskstats.c	/^void taskstats_exit(struct task_struct *tsk, int group_dead)$/;"	f
taskstats_init	taskstats.c	/^late_initcall(taskstats_init);$/;"	v
taskstats_init	taskstats.c	/^static int __init taskstats_init(void)$/;"	f	file:
taskstats_init_early	taskstats.c	/^void __init taskstats_init_early(void)$/;"	f
taskstats_ops	taskstats.c	/^static struct genl_ops taskstats_ops = {$/;"	v	typeref:struct:genl_ops	file:
taskstats_packet_size	taskstats.c	/^static size_t taskstats_packet_size(void)$/;"	f	file:
taskstats_tgid_alloc	taskstats.c	/^static struct taskstats *taskstats_tgid_alloc(struct task_struct *tsk)$/;"	f	file:
taskstats_user_cmd	taskstats.c	/^static int taskstats_user_cmd(struct sk_buff *skb, struct genl_info *info)$/;"	f	file:
tbase_get_base	timer.c	/^static inline struct tvec_base *tbase_get_base(struct tvec_base *base)$/;"	f	file:
tbase_get_deferrable	timer.c	/^static inline unsigned int tbase_get_deferrable(struct tvec_base *base)$/;"	f	file:
tbase_get_irqsafe	timer.c	/^static inline unsigned int tbase_get_irqsafe(struct tvec_base *base)$/;"	f	file:
tc_array	cgroup.c	/^	struct flex_array	*tc_array;$/;"	m	struct:cgroup_taskset	typeref:struct:cgroup_taskset::flex_array	file:
tc_array_len	cgroup.c	/^	int			tc_array_len;$/;"	m	struct:cgroup_taskset	file:
tdata	swap/nsp/nsp_tdata.c	/^	struct tdata tdata;$/;"	m	struct:priv_tdata	typeref:struct:priv_tdata::tdata	file:
tdata	swap/nsp/nsp_tdata.h	/^struct tdata {$/;"	s
tdata_create	swap/nsp/nsp_tdata.c	/^struct tdata *tdata_create(struct task_struct *task)$/;"	f
tdata_destroy	swap/nsp/nsp_tdata.c	/^void tdata_destroy(struct tdata *tdata)$/;"	f
tdata_disable	swap/nsp/nsp_tdata.c	/^void tdata_disable(void)$/;"	f
tdata_enable	swap/nsp/nsp_tdata.c	/^int tdata_enable(void)$/;"	f
tdata_find	swap/nsp/nsp_tdata.c	/^struct tdata *tdata_find(struct task_struct *task)$/;"	f
tdata_get	swap/nsp/nsp_tdata.c	/^struct tdata *tdata_get(struct task_struct *task)$/;"	f
tdata_once	swap/nsp/nsp_tdata.c	/^int tdata_once(void)$/;"	f
tdata_put	swap/nsp/nsp_tdata.c	/^void tdata_put(struct tdata *tdata)$/;"	f
tdata_stat	swap/wsp/wsp_res.h	/^enum tdata_stat {$/;"	g
te_blk_io_trace	trace/blktrace.c	/^const struct blk_io_trace *te_blk_io_trace(const struct trace_entry *ent)$/;"	f	file:
ten_thousand	sysctl.c	/^static int ten_thousand = 10000;$/;"	v	file:
test_boost	rcutorture.c	/^static int test_boost = 1;	\/* Test RCU prio boost: 0=no, 1=maybe, 2=yes. *\/$/;"	v	file:
test_boost_duration	rcutorture.c	/^static int test_boost_duration = 4; \/* Duration of each boost test, seconds. *\/$/;"	v	file:
test_boost_interval	rcutorture.c	/^static int test_boost_interval = 7; \/* Interval between boost tests, seconds. *\/$/;"	v	file:
test_cpu_buff_start	trace/trace.c	/^static void test_cpu_buff_start(struct trace_iterator *iter)$/;"	f	file:
test_filter_data	trace/trace_events_filter.c	/^} test_filter_data[] = {$/;"	v	typeref:struct:test_filter_data_t	file:
test_filter_data_t	trace/trace_events_filter.c	/^static struct test_filter_data_t {$/;"	s	file:
test_ftrace_alive	trace/trace.c	/^static void test_ftrace_alive(struct seq_file *m)$/;"	f	file:
test_func	rtmutex-tester.c	/^static int test_func(void *data)$/;"	f	file:
test_global	trace/trace_selftest.c	/^static struct ftrace_ops test_global = {$/;"	v	typeref:struct:ftrace_ops	file:
test_jprobe	test_kprobes.c	/^static int test_jprobe(void)$/;"	f	file:
test_jprobes	test_kprobes.c	/^static int test_jprobes(void)$/;"	f	file:
test_kprobe	test_kprobes.c	/^static int test_kprobe(void)$/;"	f	file:
test_kprobes	test_kprobes.c	/^static int test_kprobes(void)$/;"	f	file:
test_kretprobe	test_kprobes.c	/^static int test_kretprobe(void)$/;"	f	file:
test_kretprobes	test_kprobes.c	/^static int test_kretprobes(void)$/;"	f	file:
test_no_idle_hz	rcutorture.c	/^static bool test_no_idle_hz = true;$/;"	v	file:
test_opcodes	rtmutex-tester.c	/^enum test_opcodes {$/;"	g	file:
test_pred_visited	trace/trace_events_filter.c	/^static int test_pred_visited;$/;"	v	file:
test_pred_visited_fn	trace/trace_events_filter.c	/^static int test_pred_visited_fn(struct filter_pred *pred, void *event)$/;"	f	file:
test_probe1	trace/trace_selftest.c	/^static struct ftrace_ops test_probe1 = {$/;"	v	typeref:struct:ftrace_ops	file:
test_probe2	trace/trace_selftest.c	/^static struct ftrace_ops test_probe2 = {$/;"	v	typeref:struct:ftrace_ops	file:
test_probe3	trace/trace_selftest.c	/^static struct ftrace_ops test_probe3 = {$/;"	v	typeref:struct:ftrace_ops	file:
test_rec_probe	trace/trace_selftest.c	/^static struct ftrace_ops test_rec_probe = {$/;"	v	typeref:struct:ftrace_ops	file:
test_recsafe_probe	trace/trace_selftest.c	/^static struct ftrace_ops test_recsafe_probe = {$/;"	v	typeref:struct:ftrace_ops	file:
test_regs_probe	trace/trace_selftest.c	/^static struct ftrace_ops test_regs_probe = {$/;"	v	typeref:struct:ftrace_ops	file:
test_ringbuffer	trace/ring_buffer.c	/^late_initcall(test_ringbuffer);$/;"	v
test_ringbuffer	trace/ring_buffer.c	/^static __init int test_ringbuffer(void)$/;"	f	file:
test_suspend	power/suspend_test.c	/^late_initcall(test_suspend);$/;"	v
test_suspend	power/suspend_test.c	/^static int __init test_suspend(void)$/;"	f	file:
test_taint	panic.c	/^EXPORT_SYMBOL(test_taint);$/;"	v
test_taint	panic.c	/^int test_taint(unsigned flag)$/;"	f
test_thread_data	rtmutex-tester.c	/^struct test_thread_data {$/;"	s	file:
test_time_stamp	trace/ring_buffer.c	/^static inline int test_time_stamp(u64 delta)$/;"	f	file:
test_wakealarm	power/suspend_test.c	/^static void __init test_wakealarm(struct rtc_device *rtc, suspend_state_t state)$/;"	f	file:
test_walk_pred_cb	trace/trace_events_filter.c	/^static int test_walk_pred_cb(enum move_type move, struct filter_pred *pred,$/;"	f	file:
test_work	trace/trace_events.c	/^static __init void test_work(struct work_struct *dummy)$/;"	f	file:
text_len	printk.c	/^	u16 text_len;		\/* length of text buffer *\/$/;"	m	struct:log	file:
text_mutex	extable.c	/^DEFINE_MUTEX(text_mutex);$/;"	v
tg	sched/auto_group.h	/^	struct task_group	*tg;$/;"	m	struct:autogroup	typeref:struct:autogroup::task_group
tg	sched/core.c	/^	struct task_group *tg;$/;"	m	struct:cfs_schedulable_data	typeref:struct:cfs_schedulable_data::task_group	file:
tg	sched/core.c	/^	struct task_group *tg;$/;"	m	struct:rt_schedulable_data	typeref:struct:rt_schedulable_data::task_group	file:
tg	sched/sched.h	/^	struct task_group *tg;	\/* group that "owns" this runqueue *\/$/;"	m	struct:cfs_rq	typeref:struct:cfs_rq::task_group
tg	sched/sched.h	/^	struct task_group *tg;$/;"	m	struct:rt_rq	typeref:struct:rt_rq::task_group
tg_cfs_bandwidth	sched/fair.c	/^static inline struct cfs_bandwidth *tg_cfs_bandwidth(struct task_group *tg)$/;"	f	file:
tg_cfs_schedulable_down	sched/core.c	/^static int tg_cfs_schedulable_down(struct task_group *tg, void *data)$/;"	f	file:
tg_get_cfs_period	sched/core.c	/^long tg_get_cfs_period(struct task_group *tg)$/;"	f
tg_get_cfs_quota	sched/core.c	/^long tg_get_cfs_quota(struct task_group *tg)$/;"	f
tg_has_rt_tasks	sched/core.c	/^static inline int tg_has_rt_tasks(struct task_group *tg)$/;"	f	file:
tg_load_contrib	sched/sched.h	/^	u64 tg_load_contrib;$/;"	m	struct:cfs_rq
tg_load_down	sched/fair.c	/^static int tg_load_down(struct task_group *tg, void *data)$/;"	f	file:
tg_nop	sched/core.c	/^int tg_nop(struct task_group *tg, void *data)$/;"	f
tg_rt_schedulable	sched/core.c	/^static int tg_rt_schedulable(struct task_group *tg, void *data)$/;"	f	file:
tg_runnable_contrib	sched/sched.h	/^	u32 tg_runnable_contrib, tg_usage_contrib;$/;"	m	struct:cfs_rq
tg_set_cfs_bandwidth	sched/core.c	/^static int tg_set_cfs_bandwidth(struct task_group *tg, u64 period, u64 quota)$/;"	f	file:
tg_set_cfs_period	sched/core.c	/^int tg_set_cfs_period(struct task_group *tg, long cfs_period_us)$/;"	f
tg_set_cfs_quota	sched/core.c	/^int tg_set_cfs_quota(struct task_group *tg, long cfs_quota_us)$/;"	f
tg_set_rt_bandwidth	sched/core.c	/^static int tg_set_rt_bandwidth(struct task_group *tg,$/;"	f	file:
tg_throttle_down	sched/fair.c	/^static int tg_throttle_down(struct task_group *tg, void *data)$/;"	f	file:
tg_unthrottle_up	sched/fair.c	/^static int tg_unthrottle_up(struct task_group *tg, void *data)$/;"	f	file:
tg_usage_contrib	sched/sched.h	/^	u32 tg_runnable_contrib, tg_usage_contrib;$/;"	m	struct:cfs_rq
tg_visitor	sched/sched.h	/^typedef int (*tg_visitor)(struct task_group *, void *);$/;"	t
tgid	swap/parser/msg_parser.h	/^	pid_t tgid;                 \/**< Application PID. *\/$/;"	m	struct:app_info_data
tgid	swap/us_manager/sspt/sspt_proc.h	/^	pid_t tgid;			\/**< Thread group ID *\/$/;"	m	struct:sspt_proc
th_ctxt	time/time_history.c	/^static struct time_history th_ctxt = {$/;"	v	typeref:struct:time_history	file:
thaw_kernel_threads	power/process.c	/^void thaw_kernel_threads(void)$/;"	f
thaw_processes	power/process.c	/^void thaw_processes(void)$/;"	f
thaw_workqueues	workqueue.c	/^void thaw_workqueues(void)$/;"	f
this	sched/fair.c	/^	struct sched_group *this;  \/* Local group in this sd *\/$/;"	m	struct:sd_lb_stats	typeref:struct:sd_lb_stats::sched_group	file:
this_cpu_load	sched/core.c	/^unsigned long this_cpu_load(void)$/;"	f
this_cpu_loadx	sched/core.c	/^unsigned long this_cpu_loadx(int i)$/;"	f
this_has_capacity	sched/fair.c	/^	unsigned long this_has_capacity;$/;"	m	struct:sd_lb_stats	file:
this_idle_cpus	sched/fair.c	/^	unsigned int  this_idle_cpus;$/;"	m	struct:sd_lb_stats	file:
this_load	sched/fair.c	/^	unsigned long this_load;$/;"	m	struct:sd_lb_stats	file:
this_load_per_task	sched/fair.c	/^	unsigned long this_load_per_task;$/;"	m	struct:sd_lb_stats	file:
this_nr_running	sched/fair.c	/^	unsigned long this_nr_running;$/;"	m	struct:sd_lb_stats	file:
this_rq	sched/sched.h	542;"	d
this_scd	sched/clock.c	/^static inline struct sched_clock_data *this_scd(void)$/;"	f	file:
thr	power/swap.c	/^	struct task_struct *thr;                  \/* thread *\/$/;"	m	struct:cmp_data	typeref:struct:cmp_data::task_struct	file:
thr	power/swap.c	/^	struct task_struct *thr;                  \/* thread *\/$/;"	m	struct:crc_data	typeref:struct:crc_data::task_struct	file:
thr	power/swap.c	/^	struct task_struct *thr;                  \/* thread *\/$/;"	m	struct:dec_data	typeref:struct:dec_data::task_struct	file:
thr_query	debug/debug_core.h	/^	unsigned long		thr_query;$/;"	m	struct:kgdb_state
thread_ack	stop_machine.c	/^	atomic_t		thread_ack;$/;"	m	struct:stop_machine_data	file:
thread_cpu_clock_get	posix-cpu-timers.c	/^static int thread_cpu_clock_get(const clockid_t which_clock,$/;"	f	file:
thread_cpu_clock_getres	posix-cpu-timers.c	/^static int thread_cpu_clock_getres(const clockid_t which_clock,$/;"	f	file:
thread_cpu_timer_create	posix-cpu-timers.c	/^static int thread_cpu_timer_create(struct k_itimer *timer)$/;"	f	file:
thread_data	rtmutex-tester.c	/^static struct test_thread_data thread_data[MAX_RT_TEST_THREADS];$/;"	v	typeref:struct:test_thread_data	file:
thread_group_cputime	sched/cputime.c	/^void thread_group_cputime(struct task_struct *tsk, struct task_cputime *times)$/;"	f
thread_group_cputime_adjusted	sched/cputime.c	/^void thread_group_cputime_adjusted(struct task_struct *p, cputime_t *ut, cputime_t *st)$/;"	f
thread_group_cputimer	posix-cpu-timers.c	/^void thread_group_cputimer(struct task_struct *tsk, struct task_cputime *times)$/;"	f
thread_info_cache	fork.c	/^static struct kmem_cache *thread_info_cache;$/;"	v	typeref:struct:kmem_cache	file:
thread_info_cache_init	fork.c	/^void thread_info_cache_init(void)$/;"	f
thread_slot	swap/preload/preload_threads.c	/^struct thread_slot {$/;"	s	file:
threadfn	kthread.c	/^	int (*threadfn)(void *data);$/;"	m	struct:kthread_create_info	file:
threadid	debug/debug_core.h	/^	unsigned long		threadid;$/;"	m	struct:kgdb_state
threads	rtmutex-tester.c	/^static struct task_struct *threads[MAX_RT_TEST_THREADS];$/;"	v	typeref:struct:task_struct	file:
three	sysctl.c	/^static int __maybe_unused three = 3;$/;"	v	file:
throttle_cfs_rq	sched/fair.c	/^static void throttle_cfs_rq(struct cfs_rq *cfs_rq)$/;"	f	file:
throttle_count	sched/sched.h	/^	int throttled, throttle_count;$/;"	m	struct:cfs_rq
throttled	sched/sched.h	/^	int throttled, throttle_count;$/;"	m	struct:cfs_rq
throttled_cfs_rq	sched/sched.h	/^	struct list_head throttled_cfs_rq;$/;"	m	struct:cfs_bandwidth	typeref:struct:cfs_bandwidth::list_head
throttled_clock	sched/sched.h	/^	u64 throttled_clock, throttled_clock_task;$/;"	m	struct:cfs_rq
throttled_clock_task	sched/sched.h	/^	u64 throttled_clock, throttled_clock_task;$/;"	m	struct:cfs_rq
throttled_clock_task_time	sched/sched.h	/^	u64 throttled_clock_task_time;$/;"	m	struct:cfs_rq
throttled_hierarchy	sched/fair.c	/^static inline int throttled_hierarchy(struct cfs_rq *cfs_rq)$/;"	f	file:
throttled_lb_pair	sched/fair.c	/^static inline int throttled_lb_pair(struct task_group *tg,$/;"	f	file:
throttled_list	sched/sched.h	/^	struct list_head throttled_list;$/;"	m	struct:cfs_rq	typeref:struct:cfs_rq::list_head
throttled_time	sched/sched.h	/^	u64 throttled_time;$/;"	m	struct:cfs_bandwidth
thumb_noret	swap/kprobe/swap_kprobes.h	/^	unsigned thumb_noret:1;  \/**< No-return flag for Thumb.*\/$/;"	m	struct:kretprobe
thumb_noret	swap/uprobe/swap_uprobes.h	/^	unsigned thumb_noret:1;             \/**< No-return flag for Thumb *\/$/;"	m	struct:uretprobe
tick_broadcast_clear_oneshot	time/tick-broadcast.c	/^static inline void tick_broadcast_clear_oneshot(int cpu) { }$/;"	f	file:
tick_broadcast_clear_oneshot	time/tick-broadcast.c	/^static void tick_broadcast_clear_oneshot(int cpu)$/;"	f	file:
tick_broadcast_device	time/tick-broadcast.c	/^static struct tick_device tick_broadcast_device;$/;"	v	typeref:struct:tick_device	file:
tick_broadcast_force	time/tick-broadcast.c	/^static int tick_broadcast_force;$/;"	v	file:
tick_broadcast_force_mask	time/tick-broadcast.c	/^static cpumask_var_t tick_broadcast_force_mask;$/;"	v	file:
tick_broadcast_init	time/tick-broadcast.c	/^void __init tick_broadcast_init(void)$/;"	f
tick_broadcast_init	time/tick-internal.h	/^static inline void tick_broadcast_init(void) { }$/;"	f
tick_broadcast_init_next_event	time/tick-broadcast.c	/^static void tick_broadcast_init_next_event(struct cpumask *mask,$/;"	f	file:
tick_broadcast_mask	time/tick-broadcast.c	/^static cpumask_var_t tick_broadcast_mask;$/;"	v	file:
tick_broadcast_on	time/tick-broadcast.c	/^static cpumask_var_t tick_broadcast_on;$/;"	v	file:
tick_broadcast_on_off	time/tick-broadcast.c	/^void tick_broadcast_on_off(unsigned long reason, int *oncpu)$/;"	f
tick_broadcast_on_off	time/tick-internal.h	/^static inline void tick_broadcast_on_off(unsigned long reason, int *oncpu) { }$/;"	f
tick_broadcast_oneshot_active	time/tick-broadcast.c	/^int tick_broadcast_oneshot_active(void)$/;"	f
tick_broadcast_oneshot_active	time/tick-internal.h	/^static inline int tick_broadcast_oneshot_active(void) { return 0; }$/;"	f
tick_broadcast_oneshot_available	time/tick-broadcast.c	/^bool tick_broadcast_oneshot_available(void)$/;"	f
tick_broadcast_oneshot_available	time/tick-internal.h	/^static inline bool tick_broadcast_oneshot_available(void) { return false; }$/;"	f
tick_broadcast_oneshot_available	time/tick-internal.h	/^static inline bool tick_broadcast_oneshot_available(void) { return true; }$/;"	f
tick_broadcast_oneshot_control	time/tick-broadcast.c	/^int tick_broadcast_oneshot_control(unsigned long reason)$/;"	f
tick_broadcast_oneshot_control	time/tick-internal.h	/^static inline int tick_broadcast_oneshot_control(unsigned long reason) { return 0; }$/;"	f
tick_broadcast_oneshot_mask	time/tick-broadcast.c	/^static cpumask_var_t tick_broadcast_oneshot_mask;$/;"	v	file:
tick_broadcast_pending_mask	time/tick-broadcast.c	/^static cpumask_var_t tick_broadcast_pending_mask;$/;"	v	file:
tick_broadcast_set_affinity	time/tick-broadcast.c	/^static void tick_broadcast_set_affinity(struct clock_event_device *bc,$/;"	f	file:
tick_broadcast_set_event	time/tick-broadcast.c	/^static int tick_broadcast_set_event(struct clock_event_device *bc, int cpu,$/;"	f	file:
tick_broadcast_setup_oneshot	time/tick-broadcast.c	/^void tick_broadcast_setup_oneshot(struct clock_event_device *bc)$/;"	f
tick_broadcast_setup_oneshot	time/tick-internal.h	/^static inline void tick_broadcast_setup_oneshot(struct clock_event_device *bc)$/;"	f
tick_broadcast_start_periodic	time/tick-broadcast.c	/^static void tick_broadcast_start_periodic(struct clock_event_device *bc)$/;"	f	file:
tick_broadcast_switch_to_oneshot	time/tick-broadcast.c	/^void tick_broadcast_switch_to_oneshot(void)$/;"	f
tick_broadcast_switch_to_oneshot	time/tick-internal.h	/^static inline void tick_broadcast_switch_to_oneshot(void) { }$/;"	f
tick_cancel_sched_timer	time/tick-sched.c	/^void tick_cancel_sched_timer(int cpu)$/;"	f
tick_check_broadcast_device	time/tick-broadcast.c	/^static bool tick_check_broadcast_device(struct clock_event_device *curdev,$/;"	f	file:
tick_check_broadcast_expired	time/tick-broadcast.c	/^int tick_check_broadcast_expired(void)$/;"	f
tick_check_idle	time/tick-sched.c	/^void tick_check_idle(int cpu)$/;"	f
tick_check_new_device	time/tick-common.c	/^void tick_check_new_device(struct clock_event_device *newdev)$/;"	f
tick_check_nohz	time/tick-sched.c	/^static inline void tick_check_nohz(int cpu) { }$/;"	f	file:
tick_check_nohz	time/tick-sched.c	/^static inline void tick_check_nohz(int cpu)$/;"	f	file:
tick_check_oneshot_broadcast	time/tick-broadcast.c	/^void tick_check_oneshot_broadcast(int cpu)$/;"	f
tick_check_oneshot_broadcast	time/tick-internal.h	/^static inline void tick_check_oneshot_broadcast(int cpu) { }$/;"	f
tick_check_oneshot_change	time/tick-sched.c	/^int tick_check_oneshot_change(int allow_nohz)$/;"	f
tick_check_percpu	time/tick-common.c	/^static bool tick_check_percpu(struct clock_event_device *curdev,$/;"	f	file:
tick_check_preferred	time/tick-common.c	/^static bool tick_check_preferred(struct clock_event_device *curdev,$/;"	f	file:
tick_clock_notify	time/tick-sched.c	/^void tick_clock_notify(void)$/;"	f
tick_device_is_functional	time/tick-internal.h	/^static inline int tick_device_is_functional(struct clock_event_device *dev)$/;"	f
tick_device_setup_broadcast_func	time/tick-broadcast.c	/^static void tick_device_setup_broadcast_func(struct clock_event_device *dev)$/;"	f	file:
tick_device_uses_broadcast	time/tick-broadcast.c	/^int tick_device_uses_broadcast(struct clock_event_device *dev, int cpu)$/;"	f
tick_device_uses_broadcast	time/tick-internal.h	/^static inline int tick_device_uses_broadcast(struct clock_event_device *dev,$/;"	f
tick_do_broadcast	time/tick-broadcast.c	/^static void tick_do_broadcast(struct cpumask *mask)$/;"	f	file:
tick_do_broadcast_on_off	time/tick-broadcast.c	/^static void tick_do_broadcast_on_off(unsigned long *reason)$/;"	f	file:
tick_do_periodic_broadcast	time/tick-broadcast.c	/^static void tick_do_periodic_broadcast(void)$/;"	f	file:
tick_do_periodic_broadcast	time/tick-internal.h	/^static inline void tick_do_periodic_broadcast(struct clock_event_device *d) { }$/;"	f
tick_do_update_jiffies64	time/tick-sched.c	/^static void tick_do_update_jiffies64(ktime_t now)$/;"	f	file:
tick_get_broadcast_device	time/tick-broadcast.c	/^struct tick_device *tick_get_broadcast_device(void)$/;"	f
tick_get_broadcast_mask	time/tick-broadcast.c	/^struct cpumask *tick_get_broadcast_mask(void)$/;"	f
tick_get_broadcast_oneshot_mask	time/tick-broadcast.c	/^struct cpumask *tick_get_broadcast_oneshot_mask(void)$/;"	f
tick_get_device	time/tick-common.c	/^struct tick_device *tick_get_device(int cpu)$/;"	f
tick_get_tick_sched	time/tick-sched.c	/^struct tick_sched *tick_get_tick_sched(int cpu)$/;"	f
tick_gtod	sched/clock.c	/^	u64			tick_gtod;$/;"	m	struct:sched_clock_data	file:
tick_handle_oneshot_broadcast	time/tick-broadcast.c	/^static void tick_handle_oneshot_broadcast(struct clock_event_device *dev)$/;"	f	file:
tick_handle_periodic	time/tick-common.c	/^void tick_handle_periodic(struct clock_event_device *dev)$/;"	f
tick_handle_periodic_broadcast	time/tick-broadcast.c	/^static void tick_handle_periodic_broadcast(struct clock_event_device *dev)$/;"	f	file:
tick_handover_do_timer	time/tick-common.c	/^void tick_handover_do_timer(int *cpup)$/;"	f
tick_init	time/tick-common.c	/^void __init tick_init(void)$/;"	f
tick_init_highres	time/tick-oneshot.c	/^int tick_init_highres(void)$/;"	f
tick_init_jiffy_update	time/tick-sched.c	/^static ktime_t tick_init_jiffy_update(void)$/;"	f	file:
tick_install_broadcast_device	time/tick-broadcast.c	/^void tick_install_broadcast_device(struct clock_event_device *dev)$/;"	f
tick_install_broadcast_device	time/tick-internal.h	/^static inline void tick_install_broadcast_device(struct clock_event_device *dev)$/;"	f
tick_irq_exit	softirq.c	/^static inline void tick_irq_exit(void)$/;"	f	file:
tick_is_broadcast_device	time/tick-broadcast.c	/^int tick_is_broadcast_device(struct clock_event_device *dev)$/;"	f
tick_is_broadcast_device	time/tick-internal.h	/^static inline int tick_is_broadcast_device(struct clock_event_device *dev)$/;"	f
tick_is_oneshot_available	time/tick-common.c	/^int tick_is_oneshot_available(void)$/;"	f
tick_length	time/ntp.c	/^static u64			tick_length;$/;"	v	file:
tick_length_base	time/ntp.c	/^static u64			tick_length_base;$/;"	v	file:
tick_next_period	time/tick-common.c	/^ktime_t tick_next_period;$/;"	v
tick_nohz_account_idle_ticks	time/tick-sched.c	/^static void tick_nohz_account_idle_ticks(struct tick_sched *ts)$/;"	f	file:
tick_nohz_cpu_down_callback	time/tick-sched.c	/^static int __cpuinit tick_nohz_cpu_down_callback(struct notifier_block *nfb,$/;"	f	file:
tick_nohz_enabled_snap	rcutree.h	/^	int tick_nohz_enabled_snap; \/* Previously seen value from sysfs. *\/$/;"	m	struct:rcu_dynticks
tick_nohz_full_check	time/tick-sched.c	/^void tick_nohz_full_check(void)$/;"	f
tick_nohz_full_cpu	time/tick-sched.c	/^int tick_nohz_full_cpu(int cpu)$/;"	f
tick_nohz_full_kick	time/tick-sched.c	/^void tick_nohz_full_kick(void)$/;"	f
tick_nohz_full_kick_all	time/tick-sched.c	/^void tick_nohz_full_kick_all(void)$/;"	f
tick_nohz_full_setup	time/tick-sched.c	/^static int __init tick_nohz_full_setup(char *str)$/;"	f	file:
tick_nohz_full_stop_tick	time/tick-sched.c	/^static void tick_nohz_full_stop_tick(struct tick_sched *ts)$/;"	f	file:
tick_nohz_get_sleep_length	time/tick-sched.c	/^ktime_t tick_nohz_get_sleep_length(void)$/;"	f
tick_nohz_handler	time/tick-sched.c	/^static void tick_nohz_handler(struct clock_event_device *dev)$/;"	f	file:
tick_nohz_idle_enter	time/tick-sched.c	/^EXPORT_SYMBOL_GPL(tick_nohz_idle_enter);$/;"	v
tick_nohz_idle_enter	time/tick-sched.c	/^void tick_nohz_idle_enter(void)$/;"	f
tick_nohz_idle_exit	time/tick-sched.c	/^EXPORT_SYMBOL_GPL(tick_nohz_idle_exit);$/;"	v
tick_nohz_idle_exit	time/tick-sched.c	/^void tick_nohz_idle_exit(void)$/;"	f
tick_nohz_init	time/tick-sched.c	/^void __init tick_nohz_init(void)$/;"	f
tick_nohz_init_all	time/tick-sched.c	/^static int tick_nohz_init_all(void)$/;"	f	file:
tick_nohz_irq_exit	time/tick-sched.c	/^void tick_nohz_irq_exit(void)$/;"	f
tick_nohz_kick_tick	time/tick-sched.c	/^static void tick_nohz_kick_tick(int cpu, ktime_t now)$/;"	f	file:
tick_nohz_reprogram	time/tick-sched.c	/^static int tick_nohz_reprogram(struct tick_sched *ts, ktime_t now)$/;"	f	file:
tick_nohz_restart	time/tick-sched.c	/^static void tick_nohz_restart(struct tick_sched *ts, ktime_t now)$/;"	f	file:
tick_nohz_restart_sched_tick	time/tick-sched.c	/^static void tick_nohz_restart_sched_tick(struct tick_sched *ts, ktime_t now)$/;"	f	file:
tick_nohz_start_idle	time/tick-sched.c	/^static ktime_t tick_nohz_start_idle(int cpu, struct tick_sched *ts)$/;"	f	file:
tick_nohz_stop_idle	time/tick-sched.c	/^static void tick_nohz_stop_idle(int cpu, ktime_t now)$/;"	f	file:
tick_nohz_stop_sched_tick	time/tick-sched.c	/^static ktime_t tick_nohz_stop_sched_tick(struct tick_sched *ts,$/;"	f	file:
tick_nohz_switch_to_nohz	time/tick-sched.c	/^static inline void tick_nohz_switch_to_nohz(void) { }$/;"	f	file:
tick_nohz_switch_to_nohz	time/tick-sched.c	/^static void tick_nohz_switch_to_nohz(void)$/;"	f	file:
tick_nohz_task_switch	time/tick-sched.c	/^void tick_nohz_task_switch(struct task_struct *tsk)$/;"	f
tick_nohz_update_jiffies	time/tick-sched.c	/^static void tick_nohz_update_jiffies(ktime_t now)$/;"	f	file:
tick_nsec	time/ntp.c	/^unsigned long			tick_nsec;$/;"	v
tick_oneshot_mode_active	time/tick-oneshot.c	/^int tick_oneshot_mode_active(void)$/;"	f
tick_oneshot_notify	time/tick-internal.h	/^static inline void tick_oneshot_notify(void) { }$/;"	f
tick_oneshot_notify	time/tick-sched.c	/^void tick_oneshot_notify(void)$/;"	f
tick_period	time/tick-common.c	/^ktime_t tick_period;$/;"	v
tick_periodic	time/tick-common.c	/^static void tick_periodic(int cpu)$/;"	f	file:
tick_program_event	time/tick-internal.h	/^static inline int tick_program_event(ktime_t expires, int force)$/;"	f
tick_program_event	time/tick-oneshot.c	/^int tick_program_event(ktime_t expires, int force)$/;"	f
tick_raw	sched/clock.c	/^	u64			tick_raw;$/;"	m	struct:sched_clock_data	file:
tick_receive_broadcast	time/tick-broadcast.c	/^int tick_receive_broadcast(void)$/;"	f
tick_resume	time/tick-common.c	/^void tick_resume(void)$/;"	f
tick_resume_broadcast	time/tick-broadcast.c	/^int tick_resume_broadcast(void)$/;"	f
tick_resume_broadcast	time/tick-internal.h	/^static inline int tick_resume_broadcast(void) { return 0; }$/;"	f
tick_resume_broadcast_oneshot	time/tick-broadcast.c	/^int tick_resume_broadcast_oneshot(struct clock_event_device *bc)$/;"	f
tick_resume_broadcast_oneshot	time/tick-internal.h	/^static inline int tick_resume_broadcast_oneshot(struct clock_event_device *bc)$/;"	f
tick_resume_oneshot	time/tick-internal.h	/^static inline void tick_resume_oneshot(void)$/;"	f
tick_resume_oneshot	time/tick-oneshot.c	/^void tick_resume_oneshot(void)$/;"	f
tick_sched_do_timer	time/tick-sched.c	/^static void tick_sched_do_timer(ktime_t now)$/;"	f	file:
tick_sched_handle	time/tick-sched.c	/^static void tick_sched_handle(struct tick_sched *ts, struct pt_regs *regs)$/;"	f	file:
tick_sched_timer	time/tick-sched.c	/^static enum hrtimer_restart tick_sched_timer(struct hrtimer *timer)$/;"	f	file:
tick_set_periodic_handler	time/tick-broadcast.c	/^void tick_set_periodic_handler(struct clock_event_device *dev, int broadcast)$/;"	f
tick_set_periodic_handler	time/tick-internal.h	/^static inline void tick_set_periodic_handler(struct clock_event_device *dev,$/;"	f
tick_setup_device	time/tick-common.c	/^static void tick_setup_device(struct tick_device *td,$/;"	f	file:
tick_setup_hrtimer_broadcast	time/tick-broadcast-hrtimer.c	/^void tick_setup_hrtimer_broadcast(void)$/;"	f
tick_setup_oneshot	time/tick-internal.h	/^void tick_setup_oneshot(struct clock_event_device *newdev,$/;"	f
tick_setup_oneshot	time/tick-oneshot.c	/^void tick_setup_oneshot(struct clock_event_device *newdev,$/;"	f
tick_setup_periodic	time/tick-common.c	/^void tick_setup_periodic(struct clock_event_device *dev, int broadcast)$/;"	f
tick_setup_sched_timer	time/tick-sched.c	/^void tick_setup_sched_timer(void)$/;"	f
tick_shutdown	time/tick-common.c	/^void tick_shutdown(unsigned int *cpup)$/;"	f
tick_shutdown_broadcast	time/tick-broadcast.c	/^void tick_shutdown_broadcast(unsigned int *cpup)$/;"	f
tick_shutdown_broadcast	time/tick-internal.h	/^static inline void tick_shutdown_broadcast(unsigned int *cpup) { }$/;"	f
tick_shutdown_broadcast_oneshot	time/tick-broadcast.c	/^void tick_shutdown_broadcast_oneshot(unsigned int *cpup)$/;"	f
tick_shutdown_broadcast_oneshot	time/tick-internal.h	/^static inline void tick_shutdown_broadcast_oneshot(unsigned int *cpup) { }$/;"	f
tick_suspend	time/tick-common.c	/^void tick_suspend(void)$/;"	f
tick_suspend_broadcast	time/tick-broadcast.c	/^void tick_suspend_broadcast(void)$/;"	f
tick_suspend_broadcast	time/tick-internal.h	/^static inline void tick_suspend_broadcast(void) { }$/;"	f
tick_switch_to_oneshot	time/tick-oneshot.c	/^int tick_switch_to_oneshot(void (*handler)(struct clock_event_device *))$/;"	f
tick_usec	time/ntp.c	/^unsigned long			tick_usec = TICK_USEC;$/;"	v
ticks_this_gp	rcutree.h	/^	unsigned long	ticks_this_gp;	\/* The number of scheduling-clock *\/$/;"	m	struct:rcu_data
tid	events/core.c	/^		u32				tid;$/;"	m	struct:perf_comm_event::__anon7	file:
tid	events/core.c	/^		u32				tid;$/;"	m	struct:perf_mmap_event::__anon8	file:
tid	events/core.c	/^		u32				tid;$/;"	m	struct:perf_task_event::__anon6	file:
tid	events/core.c	/^	u32				tid;$/;"	m	struct:perf_read_event	file:
tid	swap/ks_features/ksf_msg.c	/^	u32 tid;$/;"	m	struct:msg_context_switch	file:
tid	swap/ks_features/ksf_msg.c	/^	u32 tid;$/;"	m	struct:msg_file_entry	file:
tid	swap/ks_features/ksf_msg.c	/^	u32 tid;$/;"	m	struct:msg_file_exit	file:
tid	swap/ks_features/ksf_msg.c	/^	u32 tid;$/;"	m	struct:msg_sys_header	file:
tid	swap/parser/features.c	/^	u32 tid;$/;"	m	struct:sample	file:
tid	swap/retprobe/rp_msg.c	/^	u32 tid;$/;"	m	struct:msg_entry	file:
tid	swap/retprobe/rp_msg.c	/^	u32 tid;$/;"	m	struct:msg_exit	file:
time	cpuset.c	/^	time_t time;		\/* clock (secs) when val computed *\/$/;"	m	struct:fmeter	file:
time	events/core.c	/^		u64				time;$/;"	m	struct:perf_task_event::__anon6	file:
time	events/core.c	/^	u64				time;$/;"	m	struct:perf_cgroup_info	file:
time	swap/nsp/nsp_tdata.h	/^	u64 time;$/;"	m	struct:tdata
time	swap/writer/swap_msg.c	/^	u64 time;$/;"	m	struct:swap_msg	file:
time	trace/ftrace.c	/^	unsigned long long		time;$/;"	m	struct:ftrace_profile	file:
time_adjust	time/ntp.c	/^static long			time_adjust;$/;"	v	file:
time_constant	time/ntp.c	/^static long			time_constant = 2;$/;"	v	file:
time_esterror	time/ntp.c	/^static long			time_esterror = NTP_PHASE_LIMIT;$/;"	v	file:
time_freq	time/ntp.c	/^static s64			time_freq;$/;"	v	file:
time_hardirqs_off	trace/trace_irqsoff.c	/^void time_hardirqs_off(unsigned long a0, unsigned long a1)$/;"	f
time_hardirqs_on	trace/trace_irqsoff.c	/^void time_hardirqs_on(unsigned long a0, unsigned long a1)$/;"	f
time_history	time/time_history.c	/^struct time_history {$/;"	s	file:
time_history_check_log_filter	time/time_history.c	/^static int time_history_check_log_filter(const void *alarmid)$/;"	f	file:
time_history_fops	time/time_history.c	/^static const struct file_operations time_history_fops = {$/;"	v	typeref:struct:file_operations	file:
time_history_get_alarm_by_id	time/time_history.c	/^static struct alarm_info *time_history_get_alarm_by_id(const void *alarmid)$/;"	f	file:
time_history_init	time/time_history.c	/^arch_initcall(time_history_init);$/;"	v
time_history_init	time/time_history.c	/^static int __init time_history_init(void)$/;"	f	file:
time_history_init_log_entry	time/time_history.c	/^static struct time_log_entry *time_history_init_log_entry($/;"	f	file:
time_history_insert_alarm_log	time/time_history.c	/^static int time_history_insert_alarm_log(enum time_history_type type,$/;"	f	file:
time_history_insert_setting_log	time/time_history.c	/^static int time_history_insert_setting_log(enum time_history_type type,$/;"	f	file:
time_history_insert_time_log	time/time_history.c	/^static int time_history_insert_time_log(enum time_history_type type,$/;"	f	file:
time_history_insert_timezone_log	time/time_history.c	/^static int time_history_insert_timezone_log(char *old_tz, char *new_tz)$/;"	f	file:
time_history_iter	time/time_history.c	/^struct time_history_iter {$/;"	s	file:
time_history_log_buf	time/time_history.c	/^struct time_history_log_buf {$/;"	s	file:
time_history_next	time/time_history.c	/^static void *time_history_next(struct seq_file *seq, void *v, loff_t *pos)$/;"	f	file:
time_history_open	time/time_history.c	/^static int time_history_open(struct inode *inode, struct file *file)$/;"	f	file:
time_history_ringbuf_tail	time/time_history.c	/^static int time_history_ringbuf_tail(struct time_history_log_buf *log_buf)$/;"	f	file:
time_history_seq_ops	time/time_history.c	/^static const struct seq_operations time_history_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
time_history_show	time/time_history.c	/^static int time_history_show(struct seq_file *seq, void *v)$/;"	f	file:
time_history_show_header	time/time_history.c	/^static void time_history_show_header(struct seq_file *seq)$/;"	f	file:
time_history_start	time/time_history.c	/^static void *time_history_start(struct seq_file *seq, loff_t *pos)$/;"	f	file:
time_history_stop	time/time_history.c	/^static void time_history_stop(struct seq_file *seq, void *v)$/;"	f	file:
time_history_timezone_offset	time/time_history.c	/^static time_t time_history_timezone_offset(void)$/;"	f	file:
time_history_valid_tz_format	time/time_history.c	/^static int time_history_valid_tz_format(char *timezone)$/;"	f	file:
time_history_write	time/time_history.c	/^static ssize_t time_history_write(struct file *file,$/;"	f	file:
time_in_suspend_bins	power/suspend_time.c	/^static unsigned int time_in_suspend_bins[32];$/;"	v	file:
time_log	time/time_history.c	/^static struct time_history_log_buf time_log = {$/;"	v	typeref:struct:time_history_log_buf	file:
time_log_buf	time/time_history.c	/^static struct time_log_entry time_log_buf[TIME_LOG_MAX];$/;"	v	typeref:struct:time_log_entry	file:
time_log_entry	time/time_history.c	/^struct time_log_entry {$/;"	s	file:
time_maxerror	time/ntp.c	/^static long			time_maxerror = NTP_PHASE_LIMIT;$/;"	v	file:
time_offset	time/ntp.c	/^static s64			time_offset;$/;"	v	file:
time_reftime	time/ntp.c	/^static long			time_reftime;$/;"	v	file:
time_squared	trace/ftrace.c	/^	unsigned long long		time_squared;$/;"	m	struct:ftrace_profile	file:
time_stamp	trace/ring_buffer.c	/^	u64		 time_stamp;	\/* page time stamp *\/$/;"	m	struct:buffer_data_page	file:
time_start	time/timer_stats.c	/^static ktime_t time_start, time_stop;$/;"	v	file:
time_start	trace/trace.h	/^	cycle_t				time_start;$/;"	m	struct:trace_buffer
time_state	time/ntp.c	/^static int			time_state = TIME_OK;$/;"	v	file:
time_status	time/ntp.c	/^static int			time_status = STA_UNSYNC;$/;"	v	file:
time_stop	time/timer_stats.c	/^static ktime_t time_start, time_stop;$/;"	v	file:
time_to_tm	time/timeconv.c	/^EXPORT_SYMBOL(time_to_tm);$/;"	v
time_to_tm	time/timeconv.c	/^void time_to_tm(time_t totalsecs, int offset, struct tm *result)$/;"	f
timecounter_cyc2time	time/clocksource.c	/^EXPORT_SYMBOL_GPL(timecounter_cyc2time);$/;"	v
timecounter_cyc2time	time/clocksource.c	/^u64 timecounter_cyc2time(struct timecounter *tc,$/;"	f
timecounter_init	time/clocksource.c	/^EXPORT_SYMBOL_GPL(timecounter_init);$/;"	v
timecounter_init	time/clocksource.c	/^void timecounter_init(struct timecounter *tc,$/;"	f
timecounter_read	time/clocksource.c	/^EXPORT_SYMBOL_GPL(timecounter_read);$/;"	v
timecounter_read	time/clocksource.c	/^u64 timecounter_read(struct timecounter *tc)$/;"	f
timecounter_read_delta	time/clocksource.c	/^static u64 timecounter_read_delta(struct timecounter *tc)$/;"	f	file:
timekeeper	time/timekeeping.c	/^static struct timekeeper timekeeper;$/;"	v	typeref:struct:timekeeper	file:
timekeeper_seq	time/timekeeping.c	/^static seqcount_t timekeeper_seq;$/;"	v	file:
timekeeping_adjust	time/timekeeping.c	/^static void timekeeping_adjust(struct timekeeper *tk, s64 offset)$/;"	f	file:
timekeeping_bigadjust	time/timekeeping.c	/^static __always_inline int timekeeping_bigadjust(struct timekeeper *tk,$/;"	f	file:
timekeeping_clocktai	time/timekeeping.c	/^EXPORT_SYMBOL(timekeeping_clocktai);$/;"	v
timekeeping_clocktai	time/timekeeping.c	/^void timekeeping_clocktai(struct timespec *ts)$/;"	f
timekeeping_forward_now	time/timekeeping.c	/^static void timekeeping_forward_now(struct timekeeper *tk)$/;"	f	file:
timekeeping_get_ns	time/timekeeping.c	/^static inline s64 timekeeping_get_ns(struct timekeeper *tk)$/;"	f	file:
timekeeping_get_ns_raw	time/timekeeping.c	/^static inline s64 timekeeping_get_ns_raw(struct timekeeper *tk)$/;"	f	file:
timekeeping_get_tai_offset	time/timekeeping.c	/^s32 timekeeping_get_tai_offset(void)$/;"	f
timekeeping_init	time/timekeeping.c	/^void __init timekeeping_init(void)$/;"	f
timekeeping_init_ops	time/timekeeping.c	/^device_initcall(timekeeping_init_ops);$/;"	v
timekeeping_init_ops	time/timekeeping.c	/^static int __init timekeeping_init_ops(void)$/;"	f	file:
timekeeping_inject_offset	time/timekeeping.c	/^EXPORT_SYMBOL(timekeeping_inject_offset);$/;"	v
timekeeping_inject_offset	time/timekeeping.c	/^int timekeeping_inject_offset(struct timespec *ts)$/;"	f
timekeeping_inject_sleeptime	time/timekeeping.c	/^void timekeeping_inject_sleeptime(struct timespec *delta)$/;"	f
timekeeping_max_deferment	time/timekeeping.c	/^u64 timekeeping_max_deferment(void)$/;"	f
timekeeping_notify	time/timekeeping.c	/^void timekeeping_notify(struct clocksource *clock)$/;"	f
timekeeping_resume	time/timekeeping.c	/^static void timekeeping_resume(void)$/;"	f	file:
timekeeping_set_tai_offset	time/timekeeping.c	/^void timekeeping_set_tai_offset(s32 tai_offset)$/;"	f
timekeeping_suspend	time/timekeeping.c	/^static int timekeeping_suspend(void)$/;"	f	file:
timekeeping_suspend_time	time/timekeeping.c	/^static struct timespec timekeeping_suspend_time;$/;"	v	typeref:struct:timespec	file:
timekeeping_suspended	time/timekeeping.c	/^int __read_mostly timekeeping_suspended;$/;"	v
timekeeping_syscore_ops	time/timekeeping.c	/^static struct syscore_ops timekeeping_syscore_ops = {$/;"	v	typeref:struct:syscore_ops	file:
timekeeping_update	time/timekeeping.c	/^static void timekeeping_update(struct timekeeper *tk, bool clearntp, bool mirror)$/;"	f	file:
timekeeping_valid_for_hres	time/timekeeping.c	/^int timekeeping_valid_for_hres(void)$/;"	f
timeout_jiffies	hung_task.c	/^static unsigned long timeout_jiffies(unsigned long timeout)$/;"	f	file:
timer	sched/fair.c	/^	struct hrtimer timer;$/;"	m	struct:hmp_keepalive	typeref:struct:hmp_keepalive::hrtimer	file:
timer	time/timer_stats.c	/^	void			*timer;$/;"	m	struct:entry	file:
timer_active	sched/sched.h	/^	int idle, timer_active;$/;"	m	struct:cfs_bandwidth
timer_cpu_notify	timer.c	/^static int __cpuinit timer_cpu_notify(struct notifier_block *self,$/;"	f	file:
timer_debug_descr	timer.c	/^static struct debug_obj_descr timer_debug_descr = {$/;"	v	typeref:struct:debug_obj_descr	file:
timer_debug_descr	timer.c	/^static struct debug_obj_descr timer_debug_descr;$/;"	v	typeref:struct:debug_obj_descr	file:
timer_debug_hint	timer.c	/^static void *timer_debug_hint(void *addr)$/;"	f	file:
timer_delete_hook	posix-timers.c	/^static inline int timer_delete_hook(struct k_itimer *timer)$/;"	f	file:
timer_fixup_activate	timer.c	/^static int timer_fixup_activate(void *addr, enum debug_obj_state state)$/;"	f	file:
timer_fixup_assert_init	timer.c	/^static int timer_fixup_assert_init(void *addr, enum debug_obj_state state)$/;"	f	file:
timer_fixup_free	timer.c	/^static int timer_fixup_free(void *addr, enum debug_obj_state state)$/;"	f	file:
timer_fixup_init	timer.c	/^static int timer_fixup_init(void *addr, enum debug_obj_state state)$/;"	f	file:
timer_flag	time/timer_stats.c	/^	unsigned int		timer_flag;$/;"	m	struct:entry	file:
timer_jiffies	timer.c	/^	unsigned long timer_jiffies;$/;"	m	struct:tvec_base	file:
timer_list_fops	time/timer_list.c	/^static const struct file_operations timer_list_fops = {$/;"	v	typeref:struct:file_operations	file:
timer_list_header	time/timer_list.c	/^static inline void timer_list_header(struct seq_file *m, u64 now)$/;"	f	file:
timer_list_iter	time/timer_list.c	/^struct timer_list_iter {$/;"	s	file:
timer_list_next	time/timer_list.c	/^static void *timer_list_next(struct seq_file *file, void *v, loff_t *offset)$/;"	f	file:
timer_list_open	time/timer_list.c	/^static int timer_list_open(struct inode *inode, struct file *filp)$/;"	f	file:
timer_list_show	time/timer_list.c	/^static int timer_list_show(struct seq_file *m, void *v)$/;"	f	file:
timer_list_show_tickdevices_header	time/timer_list.c	/^static void timer_list_show_tickdevices_header(struct seq_file *m)$/;"	f	file:
timer_list_sops	time/timer_list.c	/^static const struct seq_operations timer_list_sops = {$/;"	v	typeref:struct:seq_operations	file:
timer_list_start	time/timer_list.c	/^static void *timer_list_start(struct seq_file *file, loff_t *offset)$/;"	f	file:
timer_list_stop	time/timer_list.c	/^static void timer_list_stop(struct seq_file *seq, void *v)$/;"	f	file:
timer_set_base	timer.c	/^timer_set_base(struct timer_list *timer, struct tvec_base *new_base)$/;"	f	file:
timer_stats_account_hrtimer	hrtimer.c	/^static inline void timer_stats_account_hrtimer(struct hrtimer *timer)$/;"	f	file:
timer_stats_account_timer	timer.c	/^static void timer_stats_account_timer(struct timer_list *timer) {}$/;"	f	file:
timer_stats_account_timer	timer.c	/^static void timer_stats_account_timer(struct timer_list *timer)$/;"	f	file:
timer_stats_active	time/timer_stats.c	/^int __read_mostly timer_stats_active;$/;"	v
timer_stats_hrtimer_clear_start_info	hrtimer.c	/^static inline void timer_stats_hrtimer_clear_start_info(struct hrtimer *timer)$/;"	f	file:
timer_stats_hrtimer_set_start_info	hrtimer.c	/^static inline void timer_stats_hrtimer_set_start_info(struct hrtimer *timer)$/;"	f	file:
timer_stats_update_stats	time/timer_stats.c	/^void timer_stats_update_stats(void *timer, pid_t pid, void *startf,$/;"	f
timerqueue	time/alarmtimer.c	/^	struct timerqueue_head	timerqueue;$/;"	m	struct:alarm_base	typeref:struct:alarm_base::timerqueue_head	file:
timers_nb	timer.c	/^static struct notifier_block __cpuinitdata timers_nb = {$/;"	v	typeref:struct:__cpuinitdata	file:
timespec_add_safe	time.c	/^struct timespec timespec_add_safe(const struct timespec lhs,$/;"	f
timespec_to_jiffies	time.c	/^EXPORT_SYMBOL(timespec_to_jiffies);$/;"	v
timespec_to_jiffies	time.c	/^timespec_to_jiffies(const struct timespec *value)$/;"	f
timespec_to_sample	posix-cpu-timers.c	/^timespec_to_sample(const clockid_t which_clock, const struct timespec *tp)$/;"	f	file:
timespec_trunc	time.c	/^EXPORT_SYMBOL(timespec_trunc);$/;"	v
timespec_trunc	time.c	/^struct timespec timespec_trunc(struct timespec t, unsigned gran)$/;"	f
timestamp	events/core.c	/^	u64				timestamp;$/;"	m	struct:perf_cgroup_info	file:
timestamp	swap/energy/tm_stat.h	/^	u64 timestamp;		\/**< Time stamp *\/$/;"	m	struct:tm_stat
timeval_to_jiffies	time.c	/^EXPORT_SYMBOL(timeval_to_jiffies);$/;"	v
timeval_to_jiffies	time.c	/^timeval_to_jiffies(const struct timeval *value)$/;"	f
timeval_valid	itimer.c	187;"	d	file:
timezone	time/time_history.c	/^	char timezone[8];$/;"	m	struct:time_history	file:
timezone_id	time/time_history.c	/^	char timezone_id[16];$/;"	m	struct:time_history	file:
tk_normalize_xtime	time/timekeeping.c	/^static inline void tk_normalize_xtime(struct timekeeper *tk)$/;"	f	file:
tk_set_sleep_time	time/timekeeping.c	/^static void tk_set_sleep_time(struct timekeeper *tk, struct timespec t)$/;"	f	file:
tk_set_wall_to_mono	time/timekeeping.c	/^static void tk_set_wall_to_mono(struct timekeeper *tk, struct timespec wtm)$/;"	f	file:
tk_set_xtime	time/timekeeping.c	/^static void tk_set_xtime(struct timekeeper *tk, const struct timespec *ts)$/;"	f	file:
tk_setup_internals	time/timekeeping.c	/^static void tk_setup_internals(struct timekeeper *tk, struct clocksource *clock)$/;"	f	file:
tk_xtime_add	time/timekeeping.c	/^static void tk_xtime_add(struct timekeeper *tk, const struct timespec *ts)$/;"	f	file:
tm	swap/energy/energy.c	/^	struct tm_stat tm[NR_CPUS];$/;"	m	struct:cpus_time	typeref:struct:cpus_time::tm_stat	file:
tm_hour	debug/kdb/kdb_main.c	/^	int tm_hour;	\/* hours *\/$/;"	m	struct:kdb_tm	file:
tm_mday	debug/kdb/kdb_main.c	/^	int tm_mday;	\/* day of the month *\/$/;"	m	struct:kdb_tm	file:
tm_min	debug/kdb/kdb_main.c	/^	int tm_min;	\/* minutes *\/$/;"	m	struct:kdb_tm	file:
tm_mon	debug/kdb/kdb_main.c	/^	int tm_mon;	\/* month *\/$/;"	m	struct:kdb_tm	file:
tm_sec	debug/kdb/kdb_main.c	/^	int tm_sec;	\/* seconds *\/$/;"	m	struct:kdb_tm	file:
tm_stat	swap/energy/tm_stat.h	/^struct tm_stat {$/;"	s
tm_stat_current_running	swap/energy/tm_stat.h	/^static inline u64 tm_stat_current_running(struct tm_stat *tm, u64 now)$/;"	f
tm_stat_init	swap/energy/tm_stat.h	/^static inline void tm_stat_init(struct tm_stat *tm)$/;"	f
tm_stat_running	swap/energy/tm_stat.h	/^static inline u64 tm_stat_running(struct tm_stat *tm)$/;"	f
tm_stat_set_timestamp	swap/energy/tm_stat.h	/^static inline void tm_stat_set_timestamp(struct tm_stat *tm, u64 time)$/;"	f
tm_stat_timestamp	swap/energy/tm_stat.h	/^static inline u64 tm_stat_timestamp(struct tm_stat *tm)$/;"	f
tm_stat_update	swap/energy/tm_stat.h	/^static inline void tm_stat_update(struct tm_stat *tm, u64 time)$/;"	f
tm_year	debug/kdb/kdb_main.c	/^	int tm_year;	\/* year *\/$/;"	m	struct:kdb_tm	file:
tmpmask	time/tick-broadcast.c	/^static cpumask_var_t tmpmask;$/;"	v	file:
tms_brt	swap/energy/lcd/lcd_base.c	/^	struct tm_stat *tms_brt;$/;"	m	struct:lcd_priv_data	typeref:struct:lcd_priv_data::tm_stat	file:
tms_brt_cnt	swap/energy/lcd/lcd_base.c	/^	size_t tms_brt_cnt;$/;"	m	struct:lcd_priv_data	file:
tnt	panic.c	/^struct tnt {$/;"	s	file:
tnts	panic.c	/^static const struct tnt tnts[] = {$/;"	v	typeref:struct:tnt	file:
to_file_probe	swap/ks_features/file_ops.c	30;"	d	file:
to_kthread	kthread.c	/^static inline struct kthread *to_kthread(struct task_struct *k)$/;"	f	file:
to_live_kthread	kthread.c	/^static struct kthread *to_live_kthread(struct task_struct *k)$/;"	f	file:
to_module_attr	params.c	503;"	d	file:
to_module_kobject	params.c	504;"	d	file:
to_param_attr	params.c	522;"	d	file:
to_ratio	sched/core.c	/^static unsigned long to_ratio(u64 period, u64 runtime)$/;"	f	file:
to_sysfs	sched/fair.c	/^	int (*to_sysfs)(int);$/;"	m	struct:hmp_global_attr	file:
to_sysfs_text	sched/fair.c	/^	ssize_t (*to_sysfs_text)(char *buf, int buf_size);$/;"	m	struct:hmp_global_attr	file:
to_us_ip	swap/us_manager/sspt/ip.h	51;"	d
toggle_bp_slot	events/hw_breakpoint.c	/^toggle_bp_slot(struct perf_event *bp, bool enable, enum bp_type_idx type,$/;"	f	file:
toggle_bp_task_slot	events/hw_breakpoint.c	/^static void toggle_bp_task_slot(struct perf_event *bp, int cpu, bool enable,$/;"	f	file:
too_many_workers	workqueue.c	/^static bool too_many_workers(struct worker_pool *pool)$/;"	f	file:
top_cpuset	cpuset.c	/^static struct cpuset top_cpuset = {$/;"	v	typeref:struct:cpuset	file:
top_threshold	swap/buffer/swap_buffer_module.h	/^	unsigned char top_threshold;$/;"	m	struct:buffer_init_t
top_trace_array	trace/trace.h	/^static inline struct trace_array *top_trace_array(void)$/;"	f
torture_type	rcutorture.c	/^static char *torture_type = "rcu"; \/* What RCU implementation to torture. *\/$/;"	v	file:
total_forks	fork.c	/^unsigned long total_forks;	\/* Handle normal Linux uptimes. *\/$/;"	v
total_load	sched/fair.c	/^	unsigned long total_load;  \/* Total load of all groups in sd *\/$/;"	m	struct:sd_lb_stats	file:
total_pwr	sched/fair.c	/^	unsigned long total_pwr;   \/*	Total power of all groups in sd *\/$/;"	m	struct:sd_lb_stats	file:
total_ref_count	trace/trace_event_perf.c	/^static int	total_ref_count;$/;"	v	file:
totalhigh	sys.c	/^	u32 totalhigh;$/;"	m	struct:compat_sysinfo	file:
totalram	sys.c	/^	u32 totalram;$/;"	m	struct:compat_sysinfo	file:
totalswap	sys.c	/^	u32 totalswap;$/;"	m	struct:compat_sysinfo	file:
touch_all_softlockup_watchdogs	watchdog.c	/^void touch_all_softlockup_watchdogs(void)$/;"	f
touch_move_constraints	power/qos.c	/^static struct pm_qos_constraints touch_move_constraints = {$/;"	v	typeref:struct:pm_qos_constraints	file:
touch_move_pm_qos	power/qos.c	/^static struct pm_qos_object touch_move_pm_qos = {$/;"	v	typeref:struct:pm_qos_object	file:
touch_nmi_watchdog	watchdog.c	/^EXPORT_SYMBOL(touch_nmi_watchdog);$/;"	v
touch_nmi_watchdog	watchdog.c	/^void touch_nmi_watchdog(void)$/;"	f
touch_press_constraints	power/qos.c	/^static struct pm_qos_constraints touch_press_constraints = {$/;"	v	typeref:struct:pm_qos_constraints	file:
touch_press_pm_qos	power/qos.c	/^static struct pm_qos_object touch_press_pm_qos = {$/;"	v	typeref:struct:pm_qos_object	file:
touch_release_constraints	power/qos.c	/^static struct pm_qos_constraints touch_release_constraints = {$/;"	v	typeref:struct:pm_qos_constraints	file:
touch_release_pm_qos	power/qos.c	/^static struct pm_qos_object touch_release_pm_qos = {$/;"	v	typeref:struct:pm_qos_object	file:
touch_softlockup_watchdog	watchdog.c	/^EXPORT_SYMBOL(touch_softlockup_watchdog);$/;"	v
touch_softlockup_watchdog	watchdog.c	/^void touch_softlockup_watchdog(void)$/;"	f
touch_softlockup_watchdog_sync	watchdog.c	/^void touch_softlockup_watchdog_sync(void)$/;"	f
tp_perf_event_destroy	events/core.c	/^static void tp_perf_event_destroy(struct perf_event *event)$/;"	f	file:
tp_probes	tracepoint.c	/^struct tp_probes {$/;"	s	file:
tr	trace/trace.c	/^	struct trace_array		*tr;$/;"	m	struct:trace_option_dentry	typeref:struct:trace_option_dentry::trace_array	file:
tr	trace/trace.h	/^	struct trace_array		*tr;$/;"	m	struct:ftrace_subsystem_dir	typeref:struct:ftrace_subsystem_dir::trace_array
tr	trace/trace.h	/^	struct trace_array		*tr;$/;"	m	struct:trace_buffer	typeref:struct:trace_buffer::trace_array
tr	trace/trace.h	/^	struct trace_array	*tr;$/;"	m	struct:trace_cpu	typeref:struct:trace_cpu::trace_array
trace_access_lock	trace/trace.c	/^static inline void trace_access_lock(int cpu)$/;"	f	file:
trace_access_lock_init	trace/trace.c	/^static inline void trace_access_lock_init(void)$/;"	f	file:
trace_access_unlock	trace/trace.c	/^static inline void trace_access_unlock(int cpu)$/;"	f	file:
trace_add_event_call	trace/trace_events.c	/^int trace_add_event_call(struct ftrace_event_call *call)$/;"	f
trace_array	trace/trace.h	/^struct trace_array {$/;"	s
trace_array_cpu	trace/trace.h	/^struct trace_array_cpu {$/;"	s
trace_array_get	trace/trace.c	/^int trace_array_get(struct trace_array *this_tr)$/;"	f
trace_array_printk	trace/trace.c	/^int trace_array_printk(struct trace_array *tr,$/;"	f
trace_array_printk_buf	trace/trace.c	/^int trace_array_printk_buf(struct ring_buffer *buffer,$/;"	f
trace_array_put	trace/trace.c	/^void trace_array_put(struct trace_array *this_tr)$/;"	f
trace_array_vprintk	trace/trace.c	/^int trace_array_vprintk(struct trace_array *tr,$/;"	f
trace_assign_type	trace/trace.h	273;"	d
trace_blk_event	trace/blktrace.c	/^static struct trace_event trace_blk_event = {$/;"	v	typeref:struct:trace_event	file:
trace_blk_event_funcs	trace/blktrace.c	/^static struct trace_event_functions trace_blk_event_funcs = {$/;"	v	typeref:struct:trace_event_functions	file:
trace_bprint_event	trace/trace_output.c	/^static struct trace_event trace_bprint_event = {$/;"	v	typeref:struct:trace_event	file:
trace_bprint_funcs	trace/trace_output.c	/^static struct trace_event_functions trace_bprint_funcs = {$/;"	v	typeref:struct:trace_event_functions	file:
trace_bprint_print	trace/trace_output.c	/^trace_bprint_print(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_bprint_raw	trace/trace_output.c	/^trace_bprint_raw(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_bprintk_fmt	trace/trace_printk.c	/^struct trace_bprintk_fmt {$/;"	s	file:
trace_bputs_event	trace/trace_output.c	/^static struct trace_event trace_bputs_event = {$/;"	v	typeref:struct:trace_event	file:
trace_bputs_funcs	trace/trace_output.c	/^static struct trace_event_functions trace_bputs_funcs = {$/;"	v	typeref:struct:trace_event_functions	file:
trace_bputs_print	trace/trace_output.c	/^trace_bputs_print(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_bputs_raw	trace/trace_output.c	/^trace_bputs_raw(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_branch_disable	trace/trace.h	/^static inline void trace_branch_disable(void)$/;"	f
trace_branch_enable	trace/trace.h	/^static inline int trace_branch_enable(struct trace_array *tr)$/;"	f
trace_branch_event	trace/trace_branch.c	/^static struct trace_event trace_branch_event = {$/;"	v	typeref:struct:trace_event	file:
trace_branch_funcs	trace/trace_branch.c	/^static struct trace_event_functions trace_branch_funcs = {$/;"	v	typeref:struct:trace_event_functions	file:
trace_branch_print	trace/trace_branch.c	/^static enum print_line_t trace_branch_print(struct trace_iterator *iter,$/;"	f	file:
trace_buf_size	trace/trace.c	/^static unsigned long		trace_buf_size = TRACE_BUF_SIZE_DEFAULT;$/;"	v	file:
trace_buffer	trace/trace.h	/^	struct trace_buffer	trace_buffer;$/;"	m	struct:trace_array	typeref:struct:trace_array::trace_buffer
trace_buffer	trace/trace.h	/^struct trace_buffer {$/;"	s
trace_buffer_iter	trace/trace.h	/^trace_buffer_iter(struct trace_iterator *iter, int cpu)$/;"	f
trace_buffer_lock_reserve	trace/trace.c	/^trace_buffer_lock_reserve(struct ring_buffer *buffer,$/;"	f
trace_buffer_struct	trace/trace.c	/^struct trace_buffer_struct {$/;"	s	file:
trace_buffer_unlock_commit	trace/trace.c	/^EXPORT_SYMBOL_GPL(trace_buffer_unlock_commit);$/;"	v
trace_buffer_unlock_commit	trace/trace.c	/^void trace_buffer_unlock_commit(struct ring_buffer *buffer,$/;"	f
trace_buffer_unlock_commit_regs	trace/trace.c	/^EXPORT_SYMBOL_GPL(trace_buffer_unlock_commit_regs);$/;"	v
trace_buffer_unlock_commit_regs	trace/trace.c	/^void trace_buffer_unlock_commit_regs(struct ring_buffer *buffer,$/;"	f
trace_clear_recursion	trace/trace.h	/^static __always_inline void trace_clear_recursion(int bit)$/;"	f
trace_clock	trace/trace_clock.c	/^u64 notrace trace_clock(void)$/;"	f
trace_clock_counter	trace/trace_clock.c	/^u64 notrace trace_clock_counter(void)$/;"	f
trace_clock_fops	trace/trace.c	/^static const struct file_operations trace_clock_fops = {$/;"	v	typeref:struct:file_operations	file:
trace_clock_global	trace/trace_clock.c	/^u64 notrace trace_clock_global(void)$/;"	f
trace_clock_jiffies	trace/trace_clock.c	/^u64 notrace trace_clock_jiffies(void)$/;"	f
trace_clock_local	trace/trace_clock.c	/^EXPORT_SYMBOL_GPL(trace_clock_local);$/;"	v
trace_clock_local	trace/trace_clock.c	/^u64 notrace trace_clock_local(void)$/;"	f
trace_clocks	trace/trace.c	/^} trace_clocks[] = {$/;"	v	typeref:struct:__anon76	file:
trace_cmdline_lock	trace/trace.c	/^static arch_spinlock_t trace_cmdline_lock = __ARCH_SPIN_LOCK_UNLOCKED;$/;"	v	file:
trace_consume	trace/trace.c	/^static void trace_consume(struct trace_iterator *iter)$/;"	f	file:
trace_counter	trace/trace_clock.c	/^static atomic64_t trace_counter;$/;"	v	file:
trace_cpu	trace/trace.h	/^	struct trace_cpu	trace_cpu;	\/* place holder *\/$/;"	m	struct:trace_array	typeref:struct:trace_array::trace_cpu
trace_cpu	trace/trace.h	/^	struct trace_cpu	trace_cpu;$/;"	m	struct:trace_array_cpu	typeref:struct:trace_array_cpu::trace_cpu
trace_cpu	trace/trace.h	/^struct trace_cpu {$/;"	s
trace_create_cpu_file	trace/trace.c	/^trace_create_cpu_file(const char *name, umode_t mode, struct dentry *parent,$/;"	f	file:
trace_create_file	trace/trace.c	/^struct dentry *trace_create_file(const char *name,$/;"	f
trace_create_file_ops	trace/trace_events.c	/^trace_create_file_ops(struct module *mod)$/;"	f	file:
trace_create_new_event	trace/trace_events.c	/^trace_create_new_event(struct ftrace_event_call *call,$/;"	f	file:
trace_ctx_event	trace/trace_output.c	/^static struct trace_event trace_ctx_event = {$/;"	v	typeref:struct:trace_event	file:
trace_ctx_funcs	trace/trace_output.c	/^static struct trace_event_functions trace_ctx_funcs = {$/;"	v	typeref:struct:trace_event_functions	file:
trace_ctx_hex	trace/trace_output.c	/^static enum print_line_t trace_ctx_hex(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_ctx_print	trace/trace_output.c	/^static enum print_line_t trace_ctx_print(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_ctx_raw	trace/trace_output.c	/^static enum print_line_t trace_ctx_raw(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_ctxwake_bin	trace/trace_output.c	/^static enum print_line_t trace_ctxwake_bin(struct trace_iterator *iter,$/;"	f	file:
trace_ctxwake_hex	trace/trace_output.c	/^static int trace_ctxwake_hex(struct trace_iterator *iter, char S)$/;"	f	file:
trace_ctxwake_print	trace/trace_output.c	/^static enum print_line_t trace_ctxwake_print(struct trace_iterator *iter,$/;"	f	file:
trace_ctxwake_raw	trace/trace_output.c	/^static int trace_ctxwake_raw(struct trace_iterator *iter, char S)$/;"	f	file:
trace_current_buffer_discard_commit	trace/trace.c	/^EXPORT_SYMBOL_GPL(trace_current_buffer_discard_commit);$/;"	v
trace_current_buffer_discard_commit	trace/trace.c	/^void trace_current_buffer_discard_commit(struct ring_buffer *buffer,$/;"	f
trace_current_buffer_lock_reserve	trace/trace.c	/^EXPORT_SYMBOL_GPL(trace_current_buffer_lock_reserve);$/;"	v
trace_current_buffer_lock_reserve	trace/trace.c	/^trace_current_buffer_lock_reserve(struct ring_buffer **current_rb,$/;"	f
trace_current_buffer_unlock_commit	trace/trace.c	/^EXPORT_SYMBOL_GPL(trace_current_buffer_unlock_commit);$/;"	v
trace_current_buffer_unlock_commit	trace/trace.c	/^void trace_current_buffer_unlock_commit(struct ring_buffer *buffer,$/;"	f
trace_default_header	trace/trace.c	/^void trace_default_header(struct seq_file *m)$/;"	f
trace_define_common_fields	trace/trace_events.c	/^static int trace_define_common_fields(void)$/;"	f	file:
trace_define_field	trace/trace_events.c	/^EXPORT_SYMBOL_GPL(trace_define_field);$/;"	v
trace_define_field	trace/trace_events.c	/^int trace_define_field(struct ftrace_event_call *call, const char *type,$/;"	f
trace_destroy_fields	trace/trace_events.c	/^static void trace_destroy_fields(struct ftrace_event_call *call)$/;"	f	file:
trace_die_handler	trace/trace.c	/^static int trace_die_handler(struct notifier_block *self,$/;"	f	file:
trace_die_notifier	trace/trace.c	/^static struct notifier_block trace_die_notifier = {$/;"	v	typeref:struct:notifier_block	file:
trace_dump_stack	trace/trace.c	/^void trace_dump_stack(int skip)$/;"	f
trace_empty	trace/trace.c	/^int trace_empty(struct trace_iterator *iter)$/;"	f
trace_event_buffer_lock_reserve	trace/trace.c	/^EXPORT_SYMBOL_GPL(trace_event_buffer_lock_reserve);$/;"	v
trace_event_buffer_lock_reserve	trace/trace.c	/^trace_event_buffer_lock_reserve(struct ring_buffer **current_rb,$/;"	f
trace_event_enable_cmd_record	trace/trace_events.c	/^void trace_event_enable_cmd_record(bool enable)$/;"	f
trace_event_raw_init	trace/trace_events.c	/^EXPORT_SYMBOL_GPL(trace_event_raw_init);$/;"	v
trace_event_raw_init	trace/trace_events.c	/^int trace_event_raw_init(struct ftrace_event_call *call)$/;"	f
trace_event_read_lock	trace/trace_output.c	/^void trace_event_read_lock(void)$/;"	f
trace_event_read_unlock	trace/trace_output.c	/^void trace_event_read_unlock(void)$/;"	f
trace_event_sem	trace/trace_output.c	/^DECLARE_RWSEM(trace_event_sem);$/;"	v
trace_find_cmdline	trace/trace.c	/^void trace_find_cmdline(int pid, char comm[])$/;"	f
trace_find_event_field	trace/trace_events.c	/^trace_find_event_field(struct ftrace_event_call *call, char *name)$/;"	f
trace_find_next_entry	trace/trace.c	/^struct trace_entry *trace_find_next_entry(struct trace_iterator *iter,$/;"	f
trace_find_next_entry_inc	trace/trace.c	/^void *trace_find_next_entry_inc(struct trace_iterator *iter)$/;"	f
trace_find_tgid	trace/trace.c	/^int trace_find_tgid(int pid)$/;"	f
trace_flag_type	trace/trace.h	/^enum trace_flag_type {$/;"	g
trace_flags	trace/trace.c	/^unsigned long trace_flags = TRACE_ITER_PRINT_PARENT | TRACE_ITER_PRINTK |$/;"	v
trace_fn_bin	trace/trace_output.c	/^static enum print_line_t trace_fn_bin(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_fn_event	trace/trace_output.c	/^static struct trace_event trace_fn_event = {$/;"	v	typeref:struct:trace_event	file:
trace_fn_funcs	trace/trace_output.c	/^static struct trace_event_functions trace_fn_funcs = {$/;"	v	typeref:struct:trace_event_functions	file:
trace_fn_hex	trace/trace_output.c	/^static enum print_line_t trace_fn_hex(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_fn_raw	trace/trace_output.c	/^static enum print_line_t trace_fn_raw(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_fn_trace	trace/trace_output.c	/^static enum print_line_t trace_fn_trace(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_format_open	trace/trace_events.c	/^static int trace_format_open(struct inode *inode, struct file *file)$/;"	f	file:
trace_format_seq_ops	trace/trace_events.c	/^static const struct seq_operations trace_format_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
trace_function	trace/trace.c	/^trace_function(struct trace_array *tr,$/;"	f
trace_get_context_bit	trace/trace.h	/^static __always_inline int trace_get_context_bit(void)$/;"	f
trace_get_fields	trace/trace_events.c	/^trace_get_fields(struct ftrace_event_call *event_call)$/;"	f	file:
trace_get_syscall_nr	trace/trace_syscalls.c	/^trace_get_syscall_nr(struct task_struct *task, struct pt_regs *regs)$/;"	f	file:
trace_get_user	trace/trace.c	/^int trace_get_user(struct trace_parser *parser, const char __user *ubuf,$/;"	f
trace_graph_ent_bin	trace/trace_output.c	/^static enum print_line_t trace_graph_ent_bin(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_graph_ent_event	trace/trace_output.c	/^static struct trace_event trace_graph_ent_event = {$/;"	v	typeref:struct:trace_event	file:
trace_graph_ent_funcs	trace/trace_output.c	/^static struct trace_event_functions trace_graph_ent_funcs = {$/;"	v	typeref:struct:trace_event_functions	file:
trace_graph_ent_hex	trace/trace_output.c	/^static enum print_line_t trace_graph_ent_hex(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_graph_ent_raw	trace/trace_output.c	/^static enum print_line_t trace_graph_ent_raw(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_graph_ent_trace	trace/trace_output.c	/^static enum print_line_t trace_graph_ent_trace(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_graph_entry	trace/trace_functions_graph.c	/^int trace_graph_entry(struct ftrace_graph_ent *trace)$/;"	f
trace_graph_entry_watchdog	trace/trace_selftest.c	/^static int trace_graph_entry_watchdog(struct ftrace_graph_ent *trace)$/;"	f	file:
trace_graph_function	trace/trace_functions_graph.c	/^trace_graph_function(struct trace_array *tr,$/;"	f
trace_graph_ret_bin	trace/trace_output.c	/^static enum print_line_t trace_graph_ret_bin(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_graph_ret_event	trace/trace_output.c	/^static struct trace_event trace_graph_ret_event = {$/;"	v	typeref:struct:trace_event	file:
trace_graph_ret_funcs	trace/trace_output.c	/^static struct trace_event_functions trace_graph_ret_funcs = {$/;"	v	typeref:struct:trace_event_functions	file:
trace_graph_ret_hex	trace/trace_output.c	/^static enum print_line_t trace_graph_ret_hex(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_graph_ret_raw	trace/trace_output.c	/^static enum print_line_t trace_graph_ret_raw(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_graph_ret_trace	trace/trace_output.c	/^static enum print_line_t trace_graph_ret_trace(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_graph_return	trace/trace_functions_graph.c	/^void trace_graph_return(struct ftrace_graph_ret *trace)$/;"	f
trace_graph_thresh_entry	trace/trace_functions_graph.c	/^int trace_graph_thresh_entry(struct ftrace_graph_ent *trace)$/;"	f
trace_graph_thresh_return	trace/trace_functions_graph.c	/^void trace_graph_thresh_return(struct ftrace_graph_ret *trace)$/;"	f
trace_hardirqs_off	lockdep.c	/^EXPORT_SYMBOL(trace_hardirqs_off);$/;"	v
trace_hardirqs_off	lockdep.c	/^void trace_hardirqs_off(void)$/;"	f
trace_hardirqs_off	trace/trace_irqsoff.c	/^EXPORT_SYMBOL(trace_hardirqs_off);$/;"	v
trace_hardirqs_off	trace/trace_irqsoff.c	/^void trace_hardirqs_off(void)$/;"	f
trace_hardirqs_off_caller	lockdep.c	/^EXPORT_SYMBOL(trace_hardirqs_off_caller);$/;"	v
trace_hardirqs_off_caller	lockdep.c	/^void trace_hardirqs_off_caller(unsigned long ip)$/;"	f
trace_hardirqs_off_caller	trace/trace_irqsoff.c	/^EXPORT_SYMBOL(trace_hardirqs_off_caller);$/;"	v
trace_hardirqs_off_caller	trace/trace_irqsoff.c	/^void trace_hardirqs_off_caller(unsigned long caller_addr)$/;"	f
trace_hardirqs_on	lockdep.c	/^EXPORT_SYMBOL(trace_hardirqs_on);$/;"	v
trace_hardirqs_on	lockdep.c	/^void trace_hardirqs_on(void)$/;"	f
trace_hardirqs_on	trace/trace_irqsoff.c	/^EXPORT_SYMBOL(trace_hardirqs_on);$/;"	v
trace_hardirqs_on	trace/trace_irqsoff.c	/^void trace_hardirqs_on(void)$/;"	f
trace_hardirqs_on_caller	lockdep.c	/^EXPORT_SYMBOL(trace_hardirqs_on_caller);$/;"	v
trace_hardirqs_on_caller	lockdep.c	/^void trace_hardirqs_on_caller(unsigned long ip)$/;"	f
trace_hardirqs_on_caller	trace/trace_irqsoff.c	/^EXPORT_SYMBOL(trace_hardirqs_on_caller);$/;"	v
trace_hardirqs_on_caller	trace/trace_irqsoff.c	/^void trace_hardirqs_on_caller(unsigned long caller_addr)$/;"	f
trace_init_cmdlines	trace/trace.c	/^static void trace_init_cmdlines(void)$/;"	f	file:
trace_init_global_iter	trace/trace.c	/^void trace_init_global_iter(struct trace_iterator *iter)$/;"	f
trace_instance_dir	trace/trace.c	/^struct dentry *trace_instance_dir;$/;"	v	typeref:struct:dentry
trace_iterator_flags	trace/trace.h	/^enum trace_iterator_flags {$/;"	g
trace_iterator_increment	trace/trace.c	/^static void trace_iterator_increment(struct trace_iterator *iter)$/;"	f	file:
trace_keep_overwrite	trace/trace.c	/^int trace_keep_overwrite(struct tracer *tracer, u32 mask, int set)$/;"	f
trace_latency_header	trace/trace.c	/^void trace_latency_header(struct seq_file *m)$/;"	f
trace_likely_condition	trace/trace_branch.c	/^void trace_likely_condition(struct ftrace_branch_data *f, int val, int expect)$/;"	f	file:
trace_lookup_stack	trace/trace_stack.c	/^static int trace_lookup_stack(struct seq_file *m, long i)$/;"	f	file:
trace_module_add_events	trace/trace_events.c	/^static void trace_module_add_events(struct module *mod)$/;"	f	file:
trace_module_has_bad_taint	tracepoint.c	/^bool trace_module_has_bad_taint(struct module *mod)$/;"	f
trace_module_nb	trace/trace_events.c	/^static struct notifier_block trace_module_nb = {$/;"	v	typeref:struct:notifier_block	file:
trace_module_notify	trace/trace_events.c	/^static inline int trace_module_notify(struct notifier_block *self,$/;"	f	file:
trace_module_notify	trace/trace_events.c	/^static int trace_module_notify(struct notifier_block *self,$/;"	f	file:
trace_module_remove_events	trace/trace_events.c	/^static void trace_module_remove_events(struct module *mod)$/;"	f	file:
trace_nop_print	trace/trace_output.c	/^enum print_line_t trace_nop_print(struct trace_iterator *iter, int flags,$/;"	f
trace_note	trace/blktrace.c	/^static void trace_note(struct blk_trace *bt, pid_t pid, int action,$/;"	f	file:
trace_note_time	trace/blktrace.c	/^static void trace_note_time(struct blk_trace *bt)$/;"	f	file:
trace_note_tsk	trace/blktrace.c	/^static void trace_note_tsk(struct blk_trace *bt, struct task_struct *tsk)$/;"	f	file:
trace_option_dentry	trace/trace.c	/^struct trace_option_dentry {$/;"	s	file:
trace_options	trace/trace.c	/^static const char *trace_options[] = {$/;"	v	file:
trace_options_core_fops	trace/trace.c	/^static const struct file_operations trace_options_core_fops = {$/;"	v	typeref:struct:file_operations	file:
trace_options_core_read	trace/trace.c	/^trace_options_core_read(struct file *filp, char __user *ubuf, size_t cnt,$/;"	f	file:
trace_options_core_write	trace/trace.c	/^trace_options_core_write(struct file *filp, const char __user *ubuf, size_t cnt,$/;"	f	file:
trace_options_fops	trace/trace.c	/^static const struct file_operations trace_options_fops = {$/;"	v	typeref:struct:file_operations	file:
trace_options_init_dentry	trace/trace.c	/^static struct dentry *trace_options_init_dentry(struct trace_array *tr)$/;"	f	file:
trace_options_read	trace/trace.c	/^trace_options_read(struct file *filp, char __user *ubuf, size_t cnt,$/;"	f	file:
trace_options_write	trace/trace.c	/^trace_options_write(struct file *filp, const char __user *ubuf, size_t cnt,$/;"	f	file:
trace_opts	trace/trace_functions_graph.c	/^static struct tracer_opt trace_opts[] = {$/;"	v	typeref:struct:tracer_opt	file:
trace_opts	trace/trace_irqsoff.c	/^static struct tracer_opt trace_opts[] = {$/;"	v	typeref:struct:tracer_opt	file:
trace_opts	trace/trace_sched_wakeup.c	/^static struct tracer_opt trace_opts[] = {$/;"	v	typeref:struct:tracer_opt	file:
trace_panic_handler	trace/trace.c	/^static int trace_panic_handler(struct notifier_block *this,$/;"	f	file:
trace_panic_notifier	trace/trace.c	/^static struct notifier_block trace_panic_notifier = {$/;"	v	typeref:struct:notifier_block	file:
trace_parser	trace/trace.h	/^struct trace_parser {$/;"	s
trace_parser_clear	trace/trace.h	/^static inline void trace_parser_clear(struct trace_parser *parser)$/;"	f
trace_parser_cont	trace/trace.h	/^static inline bool trace_parser_cont(struct trace_parser *parser)$/;"	f
trace_parser_get_init	trace/trace.c	/^int trace_parser_get_init(struct trace_parser *parser, int size)$/;"	f
trace_parser_loaded	trace/trace.h	/^static inline bool trace_parser_loaded(struct trace_parser *parser)$/;"	f
trace_parser_put	trace/trace.c	/^void trace_parser_put(struct trace_parser *parser)$/;"	f
trace_percpu_buffer	trace/trace.c	/^static struct trace_buffer_struct *trace_percpu_buffer;$/;"	v	typeref:struct:trace_buffer_struct	file:
trace_percpu_irq_buffer	trace/trace.c	/^static struct trace_buffer_struct *trace_percpu_irq_buffer;$/;"	v	typeref:struct:trace_buffer_struct	file:
trace_percpu_nmi_buffer	trace/trace.c	/^static struct trace_buffer_struct *trace_percpu_nmi_buffer;$/;"	v	typeref:struct:trace_buffer_struct	file:
trace_percpu_sirq_buffer	trace/trace.c	/^static struct trace_buffer_struct *trace_percpu_sirq_buffer;$/;"	v	typeref:struct:trace_buffer_struct	file:
trace_poll	trace/trace.c	/^trace_poll(struct trace_iterator *iter, struct file *filp, poll_table *poll_table)$/;"	f	file:
trace_preempt_off	trace/trace_irqsoff.c	/^void trace_preempt_off(unsigned long a0, unsigned long a1)$/;"	f
trace_preempt_on	trace/trace_irqsoff.c	/^void trace_preempt_on(unsigned long a0, unsigned long a1)$/;"	f
trace_print_bprintk_msg_only	trace/trace_output.c	/^enum print_line_t trace_print_bprintk_msg_only(struct trace_iterator *iter)$/;"	f
trace_print_bputs_msg_only	trace/trace_output.c	/^enum print_line_t trace_print_bputs_msg_only(struct trace_iterator *iter)$/;"	f
trace_print_context	trace/trace_output.c	/^int trace_print_context(struct trace_iterator *iter)$/;"	f
trace_print_event	trace/trace_output.c	/^static struct trace_event trace_print_event = {$/;"	v	typeref:struct:trace_event	file:
trace_print_funcs	trace/trace_output.c	/^static struct trace_event_functions trace_print_funcs = {$/;"	v	typeref:struct:trace_event_functions	file:
trace_print_graph_duration	trace/trace_functions_graph.c	/^trace_print_graph_duration(unsigned long long duration, struct trace_seq *s)$/;"	f
trace_print_lat_context	trace/trace_output.c	/^int trace_print_lat_context(struct trace_iterator *iter)$/;"	f
trace_print_lat_fmt	trace/trace_output.c	/^int trace_print_lat_fmt(struct trace_seq *s, struct trace_entry *entry)$/;"	f
trace_print_print	trace/trace_output.c	/^static enum print_line_t trace_print_print(struct trace_iterator *iter,$/;"	f	file:
trace_print_printk_msg_only	trace/trace_output.c	/^enum print_line_t trace_print_printk_msg_only(struct trace_iterator *iter)$/;"	f
trace_print_raw	trace/trace_output.c	/^static enum print_line_t trace_print_raw(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_print_seq	trace/trace_output.c	/^int trace_print_seq(struct seq_file *m, struct trace_seq *s)$/;"	f
trace_printk_init_buffers	trace/trace.c	/^void trace_printk_init_buffers(void)$/;"	f
trace_printk_seq	trace/trace.c	/^trace_printk_seq(struct trace_seq *s)$/;"	f
trace_printk_start_comm	trace/trace.c	/^void trace_printk_start_comm(void)$/;"	f
trace_printk_start_stop_comm	trace/trace.c	/^static void trace_printk_start_stop_comm(int enabled)$/;"	f	file:
trace_probe	trace/trace_kprobe.c	/^struct trace_probe {$/;"	s	file:
trace_probe_file_index	trace/trace_kprobe.c	/^trace_probe_file_index(struct trace_probe *tp, struct ftrace_event_file *file)$/;"	f	file:
trace_probe_has_gone	trace/trace_kprobe.c	/^static __kprobes bool trace_probe_has_gone(struct trace_probe *tp)$/;"	f	file:
trace_probe_is_enabled	trace/trace_kprobe.c	/^static __kprobes bool trace_probe_is_enabled(struct trace_probe *tp)$/;"	f	file:
trace_probe_is_on_module	trace/trace_kprobe.c	/^static __kprobes bool trace_probe_is_on_module(struct trace_probe *tp)$/;"	f	file:
trace_probe_is_registered	trace/trace_kprobe.c	/^static __kprobes bool trace_probe_is_registered(struct trace_probe *tp)$/;"	f	file:
trace_probe_is_return	trace/trace_kprobe.c	/^static __kprobes bool trace_probe_is_return(struct trace_probe *tp)$/;"	f	file:
trace_probe_module_callback	trace/trace_kprobe.c	/^static int trace_probe_module_callback(struct notifier_block *nb,$/;"	f	file:
trace_probe_module_nb	trace/trace_kprobe.c	/^static struct notifier_block trace_probe_module_nb = {$/;"	v	typeref:struct:notifier_block	file:
trace_probe_nr_files	trace/trace_kprobe.c	/^static int trace_probe_nr_files(struct trace_probe *tp)$/;"	f	file:
trace_probe_offset	trace/trace_kprobe.c	/^static __kprobes unsigned long trace_probe_offset(struct trace_probe *tp)$/;"	f	file:
trace_probe_symbol	trace/trace_kprobe.c	/^static __kprobes const char *trace_probe_symbol(struct trace_probe *tp)$/;"	f	file:
trace_probe_within_module	trace/trace_kprobe.c	/^static __kprobes bool trace_probe_within_module(struct trace_probe *tp,$/;"	f	file:
trace_rcu_future_gp	rcutree.c	/^static void trace_rcu_future_gp(struct rcu_node *rnp, struct rcu_data *rdp,$/;"	f	file:
trace_recursion_clear	trace/trace.h	442;"	d
trace_recursion_set	trace/trace.h	441;"	d
trace_recursion_test	trace/trace.h	443;"	d
trace_recursive_lock	trace/ring_buffer.c	/^static __always_inline int trace_recursive_lock(void)$/;"	f	file:
trace_recursive_lock	trace/ring_buffer.c	2686;"	d	file:
trace_recursive_unlock	trace/ring_buffer.c	/^static __always_inline void trace_recursive_unlock(void)$/;"	f	file:
trace_recursive_unlock	trace/ring_buffer.c	2687;"	d	file:
trace_remove_event_call	trace/trace_events.c	/^int trace_remove_event_call(struct ftrace_event_call *call)$/;"	f
trace_save_cmdline	trace/trace.c	/^static int trace_save_cmdline(struct task_struct *tsk)$/;"	f	file:
trace_search_list	trace/trace_output.c	/^static int trace_search_list(struct list_head **list)$/;"	f	file:
trace_selftest_function_recursion	trace/trace_selftest.c	/^trace_selftest_function_recursion(void)$/;"	f	file:
trace_selftest_function_recursion	trace/trace_selftest.c	528;"	d	file:
trace_selftest_function_regs	trace/trace_selftest.c	/^trace_selftest_function_regs(void)$/;"	f	file:
trace_selftest_ops	trace/trace_selftest.c	/^static int trace_selftest_ops(int cnt)$/;"	f	file:
trace_selftest_recursion_cnt	trace/trace_selftest.c	/^static int trace_selftest_recursion_cnt;$/;"	v	file:
trace_selftest_regs_stat	trace/trace_selftest.c	/^} trace_selftest_regs_stat;$/;"	v	typeref:enum:__anon83	file:
trace_selftest_startup_branch	trace/trace_selftest.c	/^trace_selftest_startup_branch(struct tracer *trace, struct trace_array *tr)$/;"	f
trace_selftest_startup_dynamic_tracing	trace/trace_selftest.c	/^int trace_selftest_startup_dynamic_tracing(struct tracer *trace,$/;"	f
trace_selftest_startup_dynamic_tracing	trace/trace_selftest.c	527;"	d	file:
trace_selftest_startup_function	trace/trace_selftest.c	/^trace_selftest_startup_function(struct tracer *trace, struct trace_array *tr)$/;"	f
trace_selftest_startup_function_graph	trace/trace_selftest.c	/^trace_selftest_startup_function_graph(struct tracer *trace,$/;"	f
trace_selftest_startup_irqsoff	trace/trace_selftest.c	/^trace_selftest_startup_irqsoff(struct tracer *trace, struct trace_array *tr)$/;"	f
trace_selftest_startup_nop	trace/trace_selftest.c	/^trace_selftest_startup_nop(struct tracer *trace, struct trace_array *tr)$/;"	f
trace_selftest_startup_preemptirqsoff	trace/trace_selftest.c	/^trace_selftest_startup_preemptirqsoff(struct tracer *trace, struct trace_array *tr)$/;"	f
trace_selftest_startup_preemptoff	trace/trace_selftest.c	/^trace_selftest_startup_preemptoff(struct tracer *trace, struct trace_array *tr)$/;"	f
trace_selftest_startup_sched_switch	trace/trace_selftest.c	/^trace_selftest_startup_sched_switch(struct tracer *trace, struct trace_array *tr)$/;"	f
trace_selftest_startup_wakeup	trace/trace_selftest.c	/^trace_selftest_startup_wakeup(struct tracer *trace, struct trace_array *tr)$/;"	f
trace_selftest_test_dyn_cnt	trace/trace_selftest.c	/^static int trace_selftest_test_dyn_cnt;$/;"	v	file:
trace_selftest_test_dyn_func	trace/trace_selftest.c	/^static void trace_selftest_test_dyn_func(unsigned long ip,$/;"	f	file:
trace_selftest_test_global_cnt	trace/trace_selftest.c	/^static int trace_selftest_test_global_cnt;$/;"	v	file:
trace_selftest_test_global_func	trace/trace_selftest.c	/^static void trace_selftest_test_global_func(unsigned long ip,$/;"	f	file:
trace_selftest_test_probe1_cnt	trace/trace_selftest.c	/^static int trace_selftest_test_probe1_cnt;$/;"	v	file:
trace_selftest_test_probe1_func	trace/trace_selftest.c	/^static void trace_selftest_test_probe1_func(unsigned long ip,$/;"	f	file:
trace_selftest_test_probe2_cnt	trace/trace_selftest.c	/^static int trace_selftest_test_probe2_cnt;$/;"	v	file:
trace_selftest_test_probe2_func	trace/trace_selftest.c	/^static void trace_selftest_test_probe2_func(unsigned long ip,$/;"	f	file:
trace_selftest_test_probe3_cnt	trace/trace_selftest.c	/^static int trace_selftest_test_probe3_cnt;$/;"	v	file:
trace_selftest_test_probe3_func	trace/trace_selftest.c	/^static void trace_selftest_test_probe3_func(unsigned long ip,$/;"	f	file:
trace_selftest_test_recursion_func	trace/trace_selftest.c	/^static void trace_selftest_test_recursion_func(unsigned long ip,$/;"	f	file:
trace_selftest_test_recursion_safe_func	trace/trace_selftest.c	/^static void trace_selftest_test_recursion_safe_func(unsigned long ip,$/;"	f	file:
trace_selftest_test_regs_func	trace/trace_selftest.c	/^static void trace_selftest_test_regs_func(unsigned long ip,$/;"	f	file:
trace_seq_bprintf	trace/trace_output.c	/^int trace_seq_bprintf(struct trace_seq *s, const char *fmt, const u32 *binary)$/;"	f
trace_seq_path	trace/trace_output.c	/^int trace_seq_path(struct trace_seq *s, const struct path *path)$/;"	f
trace_seq_printf	trace/trace_output.c	/^EXPORT_SYMBOL_GPL(trace_seq_printf);$/;"	v
trace_seq_printf	trace/trace_output.c	/^trace_seq_printf(struct trace_seq *s, const char *fmt, ...)$/;"	f
trace_seq_putc	trace/trace_output.c	/^EXPORT_SYMBOL(trace_seq_putc);$/;"	v
trace_seq_putc	trace/trace_output.c	/^int trace_seq_putc(struct trace_seq *s, unsigned char c)$/;"	f
trace_seq_putmem	trace/trace_output.c	/^int trace_seq_putmem(struct trace_seq *s, const void *mem, size_t len)$/;"	f
trace_seq_putmem_hex	trace/trace_output.c	/^int trace_seq_putmem_hex(struct trace_seq *s, const void *mem, size_t len)$/;"	f
trace_seq_puts	trace/trace_output.c	/^int trace_seq_puts(struct trace_seq *s, const char *str)$/;"	f
trace_seq_reserve	trace/trace_output.c	/^void *trace_seq_reserve(struct trace_seq *s, size_t len)$/;"	f
trace_seq_to_buffer	trace/trace.c	/^static ssize_t trace_seq_to_buffer(struct trace_seq *s, void *buf, size_t cnt)$/;"	f	file:
trace_seq_to_user	trace/trace.c	/^ssize_t trace_seq_to_user(struct trace_seq *s, char __user *ubuf, size_t cnt)$/;"	f
trace_seq_vprintf	trace/trace_output.c	/^EXPORT_SYMBOL_GPL(trace_seq_vprintf);$/;"	v
trace_seq_vprintf	trace/trace_output.c	/^trace_seq_vprintf(struct trace_seq *s, const char *fmt, va_list args)$/;"	f
trace_set_clr_event	trace/trace_events.c	/^EXPORT_SYMBOL_GPL(trace_set_clr_event);$/;"	v
trace_set_clr_event	trace/trace_events.c	/^int trace_set_clr_event(const char *system, const char *event, int set)$/;"	f
trace_set_options	trace/trace.c	/^static int trace_set_options(struct trace_array *tr, char *option)$/;"	f	file:
trace_softirqs_off	lockdep.c	/^void trace_softirqs_off(unsigned long ip)$/;"	f
trace_softirqs_off	trace/trace_irqsoff.c	/^void trace_softirqs_off(unsigned long ip)$/;"	f
trace_softirqs_on	lockdep.c	/^void trace_softirqs_on(unsigned long ip)$/;"	f
trace_softirqs_on	trace/trace_irqsoff.c	/^void trace_softirqs_on(unsigned long ip)$/;"	f
trace_stack_event	trace/trace_output.c	/^static struct trace_event trace_stack_event = {$/;"	v	typeref:struct:trace_event	file:
trace_stack_funcs	trace/trace_output.c	/^static struct trace_event_functions trace_stack_funcs = {$/;"	v	typeref:struct:trace_event_functions	file:
trace_stack_print	trace/trace_output.c	/^static enum print_line_t trace_stack_print(struct trace_iterator *iter,$/;"	f	file:
trace_stat_seq_ops	trace/trace_stat.c	/^static const struct seq_operations trace_stat_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
trace_test_and_set_recursion	trace/trace.h	/^static __always_inline int trace_test_and_set_recursion(int start, int max)$/;"	f
trace_test_buffer	trace/trace_selftest.c	/^static int trace_test_buffer(struct trace_buffer *buf, unsigned long *count)$/;"	f	file:
trace_test_buffer_cpu	trace/trace_selftest.c	/^static int trace_test_buffer_cpu(struct trace_buffer *buf, int cpu)$/;"	f	file:
trace_type	trace/trace.h	/^enum trace_type {$/;"	g
trace_types_lock	trace/trace.c	/^DEFINE_MUTEX(trace_types_lock);$/;"	v
trace_uprobe	trace/trace_uprobe.c	/^struct trace_uprobe {$/;"	s	file:
trace_uprobe_filter	trace/trace_uprobe.c	/^struct trace_uprobe_filter {$/;"	s	file:
trace_uprobe_register	trace/trace_uprobe.c	/^int trace_uprobe_register(struct ftrace_event_call *event, enum trace_reg type, void *data)$/;"	f	file:
trace_user_stack_event	trace/trace_output.c	/^static struct trace_event trace_user_stack_event = {$/;"	v	typeref:struct:trace_event	file:
trace_user_stack_funcs	trace/trace_output.c	/^static struct trace_event_functions trace_user_stack_funcs = {$/;"	v	typeref:struct:trace_event_functions	file:
trace_user_stack_print	trace/trace_output.c	/^static enum print_line_t trace_user_stack_print(struct trace_iterator *iter,$/;"	f	file:
trace_valid_entry	trace/trace_selftest.c	/^static inline int trace_valid_entry(struct trace_entry *entry)$/;"	f	file:
trace_vbprintk	trace/trace.c	/^EXPORT_SYMBOL_GPL(trace_vbprintk);$/;"	v
trace_vbprintk	trace/trace.c	/^int trace_vbprintk(unsigned long ip, const char *fmt, va_list args)$/;"	f
trace_vprintk	trace/trace.c	/^EXPORT_SYMBOL_GPL(trace_vprintk);$/;"	v
trace_vprintk	trace/trace.c	/^int trace_vprintk(unsigned long ip, const char *fmt, va_list args)$/;"	f
trace_wake_event	trace/trace_output.c	/^static struct trace_event trace_wake_event = {$/;"	v	typeref:struct:trace_event	file:
trace_wake_funcs	trace/trace_output.c	/^static struct trace_event_functions trace_wake_funcs = {$/;"	v	typeref:struct:trace_event_functions	file:
trace_wake_hex	trace/trace_output.c	/^static enum print_line_t trace_wake_hex(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_wake_print	trace/trace_output.c	/^static enum print_line_t trace_wake_print(struct trace_iterator *iter,$/;"	f	file:
trace_wake_raw	trace/trace_output.c	/^static enum print_line_t trace_wake_raw(struct trace_iterator *iter, int flags,$/;"	f	file:
trace_wakeup_test_thread	trace/trace_selftest.c	/^static int trace_wakeup_test_thread(void *data)$/;"	f	file:
traceoff_count_probe_ops	trace/trace_functions.c	/^static struct ftrace_probe_ops traceoff_count_probe_ops = {$/;"	v	typeref:struct:ftrace_probe_ops	file:
traceoff_probe_ops	trace/trace_functions.c	/^static struct ftrace_probe_ops traceoff_probe_ops = {$/;"	v	typeref:struct:ftrace_probe_ops	file:
traceon_count_probe_ops	trace/trace_functions.c	/^static struct ftrace_probe_ops traceon_count_probe_ops = {$/;"	v	typeref:struct:ftrace_probe_ops	file:
traceon_probe_ops	trace/trace_functions.c	/^static struct ftrace_probe_ops traceon_probe_ops = {$/;"	v	typeref:struct:ftrace_probe_ops	file:
tracepoint_add_old_probes	tracepoint.c	/^static void tracepoint_add_old_probes(void *old)$/;"	f	file:
tracepoint_add_probe	tracepoint.c	/^tracepoint_add_probe(const char *name, void *probe, void *data)$/;"	f	file:
tracepoint_debug	tracepoint.c	/^static const int tracepoint_debug;$/;"	v	file:
tracepoint_entry	tracepoint.c	/^struct tracepoint_entry {$/;"	s	file:
tracepoint_entry_add_probe	tracepoint.c	/^tracepoint_entry_add_probe(struct tracepoint_entry *entry,$/;"	f	file:
tracepoint_entry_remove_probe	tracepoint.c	/^tracepoint_entry_remove_probe(struct tracepoint_entry *entry,$/;"	f	file:
tracepoint_get_iter	tracepoint.c	/^static void tracepoint_get_iter(struct tracepoint_iter *iter)$/;"	f	file:
tracepoint_get_iter_range	tracepoint.c	/^static int tracepoint_get_iter_range(struct tracepoint * const **tracepoint,$/;"	f	file:
tracepoint_iter_next	tracepoint.c	/^EXPORT_SYMBOL_GPL(tracepoint_iter_next);$/;"	v
tracepoint_iter_next	tracepoint.c	/^void tracepoint_iter_next(struct tracepoint_iter *iter)$/;"	f
tracepoint_iter_reset	tracepoint.c	/^EXPORT_SYMBOL_GPL(tracepoint_iter_reset);$/;"	v
tracepoint_iter_reset	tracepoint.c	/^void tracepoint_iter_reset(struct tracepoint_iter *iter)$/;"	f
tracepoint_iter_start	tracepoint.c	/^EXPORT_SYMBOL_GPL(tracepoint_iter_start);$/;"	v
tracepoint_iter_start	tracepoint.c	/^void tracepoint_iter_start(struct tracepoint_iter *iter)$/;"	f
tracepoint_iter_stop	tracepoint.c	/^EXPORT_SYMBOL_GPL(tracepoint_iter_stop);$/;"	v
tracepoint_iter_stop	tracepoint.c	/^void tracepoint_iter_stop(struct tracepoint_iter *iter)$/;"	f
tracepoint_module_coming	tracepoint.c	/^static int tracepoint_module_coming(struct module *mod)$/;"	f	file:
tracepoint_module_going	tracepoint.c	/^static int tracepoint_module_going(struct module *mod)$/;"	f	file:
tracepoint_module_nb	tracepoint.c	/^struct notifier_block tracepoint_module_nb = {$/;"	v	typeref:struct:notifier_block
tracepoint_module_notify	tracepoint.c	/^int tracepoint_module_notify(struct notifier_block *self,$/;"	f
tracepoint_probe_register	tracepoint.c	/^EXPORT_SYMBOL_GPL(tracepoint_probe_register);$/;"	v
tracepoint_probe_register	tracepoint.c	/^int tracepoint_probe_register(const char *name, void *probe, void *data)$/;"	f
tracepoint_probe_register_noupdate	tracepoint.c	/^EXPORT_SYMBOL_GPL(tracepoint_probe_register_noupdate);$/;"	v
tracepoint_probe_register_noupdate	tracepoint.c	/^int tracepoint_probe_register_noupdate(const char *name, void *probe,$/;"	f
tracepoint_probe_unregister	tracepoint.c	/^EXPORT_SYMBOL_GPL(tracepoint_probe_unregister);$/;"	v
tracepoint_probe_unregister	tracepoint.c	/^int tracepoint_probe_unregister(const char *name, void *probe, void *data)$/;"	f
tracepoint_probe_unregister_noupdate	tracepoint.c	/^EXPORT_SYMBOL_GPL(tracepoint_probe_unregister_noupdate);$/;"	v
tracepoint_probe_unregister_noupdate	tracepoint.c	/^int tracepoint_probe_unregister_noupdate(const char *name, void *probe,$/;"	f
tracepoint_probe_update_all	tracepoint.c	/^EXPORT_SYMBOL_GPL(tracepoint_probe_update_all);$/;"	v
tracepoint_probe_update_all	tracepoint.c	/^void tracepoint_probe_update_all(void)$/;"	f
tracepoint_remove_probe	tracepoint.c	/^tracepoint_remove_probe(const char *name, void *probe, void *data)$/;"	f	file:
tracepoint_table	tracepoint.c	/^static struct hlist_head tracepoint_table[TRACEPOINT_TABLE_SIZE];$/;"	v	typeref:struct:hlist_head	file:
tracepoint_update_probe_range	tracepoint.c	/^static void tracepoint_update_probe_range(struct tracepoint * const *begin,$/;"	f	file:
tracepoint_update_probes	tracepoint.c	/^static void tracepoint_update_probes(void)$/;"	f	file:
traceprobe_command	trace/trace_probe.c	/^int traceprobe_command(const char *buf, int (*createfn)(int, char **))$/;"	f
traceprobe_conflict_field_name	trace/trace_probe.c	/^int traceprobe_conflict_field_name(const char *name,$/;"	f
traceprobe_free_probe_arg	trace/trace_probe.c	/^void traceprobe_free_probe_arg(struct probe_arg *arg)$/;"	f
traceprobe_parse_probe_arg	trace/trace_probe.c	/^int traceprobe_parse_probe_arg(char *arg, ssize_t *size,$/;"	f
traceprobe_probes_write	trace/trace_probe.c	/^ssize_t traceprobe_probes_write(struct file *file, const char __user *buffer,$/;"	f
traceprobe_split_symbol_offset	trace/trace_probe.c	/^int traceprobe_split_symbol_offset(char *symbol, unsigned long *offset)$/;"	f
traceprobe_update_arg	trace/trace_probe.c	/^void traceprobe_update_arg(struct probe_arg *arg)$/;"	f
tracer	trace/trace.h	/^struct tracer {$/;"	s
tracer_alloc_buffers	trace/trace.c	/^__init static int tracer_alloc_buffers(void)$/;"	f	file:
tracer_alloc_buffers	trace/trace.c	/^early_initcall(tracer_alloc_buffers);$/;"	v
tracer_enabled	trace/trace_sched_switch.c	/^static int __read_mostly	tracer_enabled;$/;"	v	file:
tracer_enabled	trace/trace_sched_wakeup.c	/^static int __read_mostly	tracer_enabled;$/;"	v	file:
tracer_flags	trace/trace.h	/^struct tracer_flags {$/;"	s
tracer_flags	trace/trace_functions_graph.c	/^static struct tracer_flags tracer_flags = {$/;"	v	typeref:struct:tracer_flags	file:
tracer_flags	trace/trace_irqsoff.c	/^static struct tracer_flags tracer_flags = {$/;"	v	typeref:struct:tracer_flags	file:
tracer_flags	trace/trace_sched_wakeup.c	/^static struct tracer_flags tracer_flags = {$/;"	v	typeref:struct:tracer_flags	file:
tracer_init	trace/trace.c	/^int tracer_init(struct tracer *t, struct trace_array *tr)$/;"	f
tracer_init_debugfs	trace/trace.c	/^fs_initcall(tracer_init_debugfs);$/;"	v
tracer_init_debugfs	trace/trace.c	/^static __init int tracer_init_debugfs(void)$/;"	f	file:
tracer_opt	trace/trace.h	/^struct tracer_opt {$/;"	s
tracer_seq_ops	trace/trace.c	/^static const struct seq_operations tracer_seq_ops = {$/;"	v	typeref:struct:seq_operations	file:
tracer_stat	trace/trace_stat.h	/^struct tracer_stat {$/;"	s
tracer_tracing_is_on	trace/trace.c	/^int tracer_tracing_is_on(struct trace_array *tr)$/;"	f
tracer_tracing_off	trace/trace.c	/^void tracer_tracing_off(struct trace_array *tr)$/;"	f
tracer_tracing_on	trace/trace.c	/^void tracer_tracing_on(struct trace_array *tr)$/;"	f
tracing_buffer_mask	trace/trace.c	/^cpumask_var_t __read_mostly	tracing_buffer_mask;$/;"	v
tracing_buffers_fops	trace/trace.c	/^static const struct file_operations tracing_buffers_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_buffers_open	trace/trace.c	/^static int tracing_buffers_open(struct inode *inode, struct file *filp)$/;"	f	file:
tracing_buffers_poll	trace/trace.c	/^tracing_buffers_poll(struct file *filp, poll_table *poll_table)$/;"	f	file:
tracing_buffers_read	trace/trace.c	/^tracing_buffers_read(struct file *filp, char __user *ubuf,$/;"	f	file:
tracing_buffers_release	trace/trace.c	/^static int tracing_buffers_release(struct inode *inode, struct file *file)$/;"	f	file:
tracing_buffers_splice_read	trace/trace.c	/^tracing_buffers_splice_read(struct file *file, loff_t *ppos,$/;"	f	file:
tracing_clock_open	trace/trace.c	/^static int tracing_clock_open(struct inode *inode, struct file *file)$/;"	f	file:
tracing_clock_show	trace/trace.c	/^static int tracing_clock_show(struct seq_file *m, void *v)$/;"	f	file:
tracing_clock_write	trace/trace.c	/^static ssize_t tracing_clock_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
tracing_cpumask	trace/trace.c	/^static cpumask_var_t tracing_cpumask;$/;"	v	file:
tracing_cpumask_fops	trace/trace.c	/^static const struct file_operations tracing_cpumask_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_cpumask_read	trace/trace.c	/^tracing_cpumask_read(struct file *filp, char __user *ubuf,$/;"	f	file:
tracing_cpumask_write	trace/trace.c	/^tracing_cpumask_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
tracing_dentry_percpu	trace/trace.c	/^static struct dentry *tracing_dentry_percpu(struct trace_array *tr, int cpu)$/;"	f	file:
tracing_disabled	trace/trace.c	/^static int tracing_disabled = 1;$/;"	v	file:
tracing_dyn_info_fops	trace/trace.c	/^static const struct file_operations tracing_dyn_info_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_entries_fops	trace/trace.c	/^static const struct file_operations tracing_entries_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_entries_read	trace/trace.c	/^tracing_entries_read(struct file *filp, char __user *ubuf,$/;"	f	file:
tracing_entries_write	trace/trace.c	/^tracing_entries_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
tracing_fill_pipe_page	trace/trace.c	/^tracing_fill_pipe_page(size_t rem, struct trace_iterator *iter)$/;"	f	file:
tracing_fops	trace/trace.c	/^static const struct file_operations tracing_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_free_buffer_fops	trace/trace.c	/^static const struct file_operations tracing_free_buffer_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_free_buffer_release	trace/trace.c	/^tracing_free_buffer_release(struct inode *inode, struct file *filp)$/;"	f	file:
tracing_free_buffer_write	trace/trace.c	/^tracing_free_buffer_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
tracing_generic_entry_update	trace/trace.c	/^EXPORT_SYMBOL_GPL(tracing_generic_entry_update);$/;"	v
tracing_generic_entry_update	trace/trace.c	/^tracing_generic_entry_update(struct trace_entry *entry, unsigned long flags,$/;"	f
tracing_get_cpu	trace/trace.c	/^static inline int tracing_get_cpu(struct inode *inode)$/;"	f	file:
tracing_init_debugfs_percpu	trace/trace.c	/^tracing_init_debugfs_percpu(struct trace_array *tr, long cpu)$/;"	f	file:
tracing_init_dentry	trace/trace.c	/^struct dentry *tracing_init_dentry(void)$/;"	f
tracing_init_dentry_tr	trace/trace.c	/^struct dentry *tracing_init_dentry_tr(struct trace_array *tr)$/;"	f
tracing_is_enabled	trace/trace.c	/^int tracing_is_enabled(void)$/;"	f
tracing_is_on	trace/trace.c	/^EXPORT_SYMBOL_GPL(tracing_is_on);$/;"	v
tracing_is_on	trace/trace.c	/^int tracing_is_on(void)$/;"	f
tracing_iter_fops	trace/trace.c	/^static const struct file_operations tracing_iter_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_iter_reset	trace/trace.c	/^void tracing_iter_reset(struct trace_iterator *iter, int cpu)$/;"	f
tracing_mark_fops	trace/trace.c	/^static const struct file_operations tracing_mark_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_mark_write	trace/trace.c	/^tracing_mark_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
tracing_max_lat_fops	trace/trace.c	/^static const struct file_operations tracing_max_lat_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_max_lat_read	trace/trace.c	/^tracing_max_lat_read(struct file *filp, char __user *ubuf,$/;"	f	file:
tracing_max_lat_write	trace/trace.c	/^tracing_max_lat_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
tracing_max_latency	trace/trace.c	/^unsigned long __read_mostly	tracing_max_latency;$/;"	v
tracing_off	trace/trace.c	/^EXPORT_SYMBOL_GPL(tracing_off);$/;"	v
tracing_off	trace/trace.c	/^void tracing_off(void)$/;"	f
tracing_off_permanent	trace/ring_buffer.c	/^void tracing_off_permanent(void)$/;"	f
tracing_on	trace/trace.c	/^EXPORT_SYMBOL_GPL(tracing_on);$/;"	v
tracing_on	trace/trace.c	/^void tracing_on(void)$/;"	f
tracing_open	trace/trace.c	/^static int tracing_open(struct inode *inode, struct file *file)$/;"	f	file:
tracing_open_generic	trace/trace.c	/^int tracing_open_generic(struct inode *inode, struct file *filp)$/;"	f
tracing_open_generic_tr	trace/trace.c	/^int tracing_open_generic_tr(struct inode *inode, struct file *filp)$/;"	f
tracing_open_pipe	trace/trace.c	/^static int tracing_open_pipe(struct inode *inode, struct file *filp)$/;"	f	file:
tracing_pipe_buf_ops	trace/trace.c	/^static const struct pipe_buf_operations tracing_pipe_buf_ops = {$/;"	v	typeref:struct:pipe_buf_operations	file:
tracing_pipe_buf_release	trace/trace.c	/^static void tracing_pipe_buf_release(struct pipe_inode_info *pipe,$/;"	f	file:
tracing_pipe_fops	trace/trace.c	/^static const struct file_operations tracing_pipe_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_poll_pipe	trace/trace.c	/^tracing_poll_pipe(struct file *filp, poll_table *poll_table)$/;"	f	file:
tracing_read_dyn_info	trace/trace.c	/^tracing_read_dyn_info(struct file *filp, char __user *ubuf,$/;"	f	file:
tracing_read_pipe	trace/trace.c	/^tracing_read_pipe(struct file *filp, char __user *ubuf,$/;"	f	file:
tracing_readme_fops	trace/trace.c	/^static const struct file_operations tracing_readme_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_readme_read	trace/trace.c	/^tracing_readme_read(struct file *filp, char __user *ubuf,$/;"	f	file:
tracing_record_cmdline	trace/trace.c	/^void tracing_record_cmdline(struct task_struct *tsk)$/;"	f
tracing_release	trace/trace.c	/^static int tracing_release(struct inode *inode, struct file *file)$/;"	f	file:
tracing_release_generic_tr	trace/trace.c	/^static int tracing_release_generic_tr(struct inode *inode, struct file *file)$/;"	f	file:
tracing_release_pipe	trace/trace.c	/^static int tracing_release_pipe(struct inode *inode, struct file *file)$/;"	f	file:
tracing_reset	trace/trace.c	/^void tracing_reset(struct trace_buffer *buf, int cpu)$/;"	f
tracing_reset_all_online_cpus	trace/trace.c	/^void tracing_reset_all_online_cpus(void)$/;"	f
tracing_reset_online_cpus	trace/trace.c	/^void tracing_reset_online_cpus(struct trace_buffer *buf)$/;"	f
tracing_resize_ring_buffer	trace/trace.c	/^static ssize_t tracing_resize_ring_buffer(struct trace_array *tr,$/;"	f	file:
tracing_saved_cmdlines_fops	trace/trace.c	/^static const struct file_operations tracing_saved_cmdlines_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_saved_cmdlines_read	trace/trace.c	/^tracing_saved_cmdlines_read(struct file *file, char __user *ubuf,$/;"	f	file:
tracing_saved_tgids_fops	trace/trace.c	/^static const struct file_operations tracing_saved_tgids_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_saved_tgids_read	trace/trace.c	/^tracing_saved_tgids_read(struct file *file, char __user *ubuf,$/;"	f	file:
tracing_sched_register	trace/trace_sched_switch.c	/^static int tracing_sched_register(void)$/;"	f	file:
tracing_sched_switch_assign_trace	trace/trace_sched_switch.c	/^void tracing_sched_switch_assign_trace(struct trace_array *tr)$/;"	f
tracing_sched_switch_trace	trace/trace_sched_switch.c	/^tracing_sched_switch_trace(struct trace_array *tr,$/;"	f
tracing_sched_unregister	trace/trace_sched_switch.c	/^static void tracing_sched_unregister(void)$/;"	f	file:
tracing_sched_wakeup_trace	trace/trace_sched_switch.c	/^tracing_sched_wakeup_trace(struct trace_array *tr,$/;"	f
tracing_seek	trace/trace.c	/^static loff_t tracing_seek(struct file *file, loff_t offset, int origin)$/;"	f	file:
tracing_selftest_disabled	trace/trace.c	/^bool __read_mostly tracing_selftest_disabled;$/;"	v
tracing_selftest_running	trace/trace.c	/^static bool __read_mostly tracing_selftest_running;$/;"	v	file:
tracing_set_trace_read	trace/trace.c	/^tracing_set_trace_read(struct file *filp, char __user *ubuf,$/;"	f	file:
tracing_set_trace_write	trace/trace.c	/^tracing_set_trace_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
tracing_set_tracer	trace/trace.c	/^static int tracing_set_tracer(const char *buf)$/;"	f	file:
tracing_single_release_tr	trace/trace.c	/^static int tracing_single_release_tr(struct inode *inode, struct file *file)$/;"	f	file:
tracing_snapshot	trace/trace.c	/^EXPORT_SYMBOL_GPL(tracing_snapshot);$/;"	v
tracing_snapshot	trace/trace.c	/^void tracing_snapshot(void)$/;"	f
tracing_snapshot_alloc	trace/trace.c	/^EXPORT_SYMBOL_GPL(tracing_snapshot_alloc);$/;"	v
tracing_snapshot_alloc	trace/trace.c	/^void tracing_snapshot_alloc(void)$/;"	f
tracing_snapshot_open	trace/trace.c	/^static int tracing_snapshot_open(struct inode *inode, struct file *file)$/;"	f	file:
tracing_snapshot_release	trace/trace.c	/^static int tracing_snapshot_release(struct inode *inode, struct file *file)$/;"	f	file:
tracing_snapshot_write	trace/trace.c	/^tracing_snapshot_write(struct file *filp, const char __user *ubuf, size_t cnt,$/;"	f	file:
tracing_spd_release_pipe	trace/trace.c	/^static void tracing_spd_release_pipe(struct splice_pipe_desc *spd,$/;"	f	file:
tracing_splice_read_pipe	trace/trace.c	/^static ssize_t tracing_splice_read_pipe(struct file *filp,$/;"	f	file:
tracing_start	trace/trace.c	/^void tracing_start(void)$/;"	f
tracing_start_cmdline_record	trace/trace_sched_switch.c	/^void tracing_start_cmdline_record(void)$/;"	f
tracing_start_function_trace	trace/trace_functions.c	/^static void tracing_start_function_trace(void)$/;"	f	file:
tracing_start_sched_switch	trace/trace_sched_switch.c	/^static void tracing_start_sched_switch(void)$/;"	f	file:
tracing_start_sched_switch_record	trace/trace_sched_switch.c	/^void tracing_start_sched_switch_record(void)$/;"	f
tracing_start_tr	trace/trace.c	/^static void tracing_start_tr(struct trace_array *tr)$/;"	f	file:
tracing_stat_fops	trace/trace_stat.c	/^static const struct file_operations tracing_stat_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_stat_init	trace/trace_stat.c	/^static int tracing_stat_init(void)$/;"	f	file:
tracing_stat_open	trace/trace_stat.c	/^static int tracing_stat_open(struct inode *inode, struct file *file)$/;"	f	file:
tracing_stat_release	trace/trace_stat.c	/^static int tracing_stat_release(struct inode *i, struct file *f)$/;"	f	file:
tracing_stats_fops	trace/trace.c	/^static const struct file_operations tracing_stats_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_stats_read	trace/trace.c	/^tracing_stats_read(struct file *filp, char __user *ubuf,$/;"	f	file:
tracing_stop	trace/trace.c	/^void tracing_stop(void)$/;"	f
tracing_stop_cmdline_record	trace/trace_sched_switch.c	/^void tracing_stop_cmdline_record(void)$/;"	f
tracing_stop_function_trace	trace/trace_functions.c	/^static void tracing_stop_function_trace(void)$/;"	f	file:
tracing_stop_sched_switch	trace/trace_sched_switch.c	/^static void tracing_stop_sched_switch(void)$/;"	f	file:
tracing_stop_sched_switch_record	trace/trace_sched_switch.c	/^void tracing_stop_sched_switch_record(void)$/;"	f
tracing_stop_tr	trace/trace.c	/^static void tracing_stop_tr(struct trace_array *tr)$/;"	f	file:
tracing_thresh	trace/trace.c	/^unsigned long __read_mostly	tracing_thresh;$/;"	v
tracing_total_entries_fops	trace/trace.c	/^static const struct file_operations tracing_total_entries_fops = {$/;"	v	typeref:struct:file_operations	file:
tracing_total_entries_read	trace/trace.c	/^tracing_total_entries_read(struct file *filp, char __user *ubuf,$/;"	f	file:
tracing_trace_options_open	trace/trace.c	/^static int tracing_trace_options_open(struct inode *inode, struct file *file)$/;"	f	file:
tracing_trace_options_show	trace/trace.c	/^static int tracing_trace_options_show(struct seq_file *m, void *v)$/;"	f	file:
tracing_trace_options_write	trace/trace.c	/^tracing_trace_options_write(struct file *filp, const char __user *ubuf,$/;"	f	file:
tracing_update_buffers	trace/trace.c	/^int tracing_update_buffers(void)$/;"	f
tracing_wait_pipe	trace/trace.c	/^static int tracing_wait_pipe(struct file *filp)$/;"	f	file:
tracing_write_stub	trace/trace.c	/^tracing_write_stub(struct file *filp, const char __user *ubuf,$/;"	f	file:
tramp	swap/uprobe/arch/x86/swap-asm/swap_uprobes.h	/^	u8 tramp[UPROBES_TRAMP_LEN + BP_INSN_SIZE]; \/**< BP for uretprobe *\/$/;"	m	struct:arch_specific_tramp
tramp	swap/uprobe/swap_uprobes.h	/^	unsigned long tramp;$/;"	m	struct:urinst_info
trampoline_addr	swap/uprobe/arch/x86/swap-asm/swap_uprobes.c	/^static unsigned long trampoline_addr(struct uprobe *up)$/;"	f	file:
trampoline_probe_handler	swap/kprobe/swap_kprobes.c	/^int trampoline_probe_handler(struct kprobe *p, struct pt_regs *regs)$/;"	f
trampoline_probe_handler_x86	swap/kprobe/arch/x86/swap-asm/swap_kprobes.c	/^static __used void *trampoline_probe_handler_x86(struct pt_regs *regs)$/;"	f	file:
trampoline_uprobe_handler	swap/uprobe/swap_uprobes.c	/^int trampoline_uprobe_handler(struct kprobe *p, struct pt_regs *regs)$/;"	f
transfer_pid	pid.c	/^void transfer_pid(struct task_struct *old, struct task_struct *new,$/;"	f
tree_count	audit.h	/^	int tree_count;$/;"	m	struct:audit_context
trees	audit.h	/^	struct audit_tree_refs *trees, *first_trees;$/;"	m	struct:audit_context	typeref:struct:audit_context::audit_tree_refs
trees	audit_tree.c	/^	struct list_head trees;		\/* with root here *\/$/;"	m	struct:audit_chunk	typeref:struct:audit_chunk::list_head	file:
trigger_load_balance	sched/fair.c	/^void trigger_load_balance(struct rq *rq, int cpu)$/;"	f
trim_marked	audit_tree.c	/^static void trim_marked(struct audit_tree *tree)$/;"	f	file:
true	panic.c	/^	char	true;$/;"	m	struct:tnt	file:
try_check_zero	srcu.c	/^static bool try_check_zero(struct srcu_struct *sp, int idx, int trycount)$/;"	f	file:
try_force_unload	module.c	/^static inline int try_force_unload(unsigned int flags)$/;"	f	file:
try_misrouted_irq	irq/spurious.c	/^try_misrouted_irq(unsigned int irq, struct irq_desc *desc,$/;"	f	file:
try_module_get	module.c	/^EXPORT_SYMBOL(try_module_get);$/;"	v
try_module_get	module.c	/^bool try_module_get(struct module *module)$/;"	f
try_one_irq	irq/spurious.c	/^static int try_one_irq(int irq, struct irq_desc *desc, bool force)$/;"	f	file:
try_stop_cpus	stop_machine.c	/^int try_stop_cpus(const struct cpumask *cpumask, cpu_stop_fn_t fn, void *arg)$/;"	f
try_stop_module	module.c	/^static int try_stop_module(struct module *mod, int flags, int *forced)$/;"	f	file:
try_to_del_timer_sync	timer.c	/^EXPORT_SYMBOL(try_to_del_timer_sync);$/;"	v
try_to_del_timer_sync	timer.c	/^int try_to_del_timer_sync(struct timer_list *timer)$/;"	f
try_to_force_load	module.c	/^static int try_to_force_load(struct module *mod, const char *reason)$/;"	f	file:
try_to_freeze_tasks	power/process.c	/^static int try_to_freeze_tasks(bool user_only)$/;"	f	file:
try_to_grab_pending	workqueue.c	/^static int try_to_grab_pending(struct work_struct *work, bool is_dwork,$/;"	f	file:
try_to_optimize_kprobe	kprobes.c	/^static __kprobes void try_to_optimize_kprobe(struct kprobe *p)$/;"	f	file:
try_to_optimize_kprobe	kprobes.c	918;"	d	file:
try_to_suspend	power/autosleep.c	/^static void try_to_suspend(struct work_struct *work)$/;"	f	file:
try_to_take_rt_mutex	rtmutex.c	/^static int try_to_take_rt_mutex(struct rt_mutex *lock, struct task_struct *task,$/;"	f	file:
try_to_wake_up	sched/core.c	/^try_to_wake_up(struct task_struct *p, unsigned int state, int wake_flags)$/;"	f	file:
try_to_wake_up_local	sched/core.c	/^static void try_to_wake_up_local(struct task_struct *p)$/;"	f	file:
try_wait_for_completion	sched/core.c	/^EXPORT_SYMBOL(try_wait_for_completion);$/;"	v
try_wait_for_completion	sched/core.c	/^bool try_wait_for_completion(struct completion *x)$/;"	f
ts	power/sleep_history.c	/^	struct timespec ts;$/;"	m	struct:sleep_history	typeref:struct:sleep_history::timespec	file:
ts	trace/ring_buffer_benchmark.c	/^	u64		ts;$/;"	m	struct:rb_page	file:
ts	trace/trace_stat.c	/^	struct tracer_stat	*ts;$/;"	m	struct:stat_session	typeref:struct:stat_session::tracer_stat	file:
ts_nsec	printk.c	/^	u64 ts_nsec;			\/* time of first print *\/$/;"	m	struct:cont	file:
ts_nsec	printk.c	/^	u64 ts_nsec;		\/* timestamp in nanoseconds *\/$/;"	m	struct:log	file:
tsk_fork_get_node	kthread.c	/^int tsk_fork_get_node(struct task_struct *tsk)$/;"	f
tstat_hashentry	time/timer_stats.c	134;"	d	file:
tstat_lookup	time/timer_stats.c	/^static struct entry *tstat_lookup(struct entry *entry, char *comm)$/;"	f	file:
tstats_fops	time/timer_stats.c	/^static const struct file_operations tstats_fops = {$/;"	v	typeref:struct:file_operations	file:
tstats_open	time/timer_stats.c	/^static int tstats_open(struct inode *inode, struct file *filp)$/;"	f	file:
tstats_show	time/timer_stats.c	/^static int tstats_show(struct seq_file *m, void *v)$/;"	f	file:
tstats_write	time/timer_stats.c	/^static ssize_t tstats_write(struct file *file, const char __user *buf,$/;"	f	file:
ttwu_activate	sched/core.c	/^static void ttwu_activate(struct rq *rq, struct task_struct *p, int en_flags)$/;"	f	file:
ttwu_count	sched/sched.h	/^	unsigned int ttwu_count;$/;"	m	struct:rq
ttwu_do_activate	sched/core.c	/^ttwu_do_activate(struct rq *rq, struct task_struct *p, int wake_flags)$/;"	f	file:
ttwu_do_wakeup	sched/core.c	/^ttwu_do_wakeup(struct rq *rq, struct task_struct *p, int wake_flags)$/;"	f	file:
ttwu_local	sched/sched.h	/^	unsigned int ttwu_local;$/;"	m	struct:rq
ttwu_queue	sched/core.c	/^static void ttwu_queue(struct task_struct *p, int cpu)$/;"	f	file:
ttwu_queue_remote	sched/core.c	/^static void ttwu_queue_remote(struct task_struct *p, int cpu)$/;"	f	file:
ttwu_remote	sched/core.c	/^static int ttwu_remote(struct task_struct *p, int wake_flags)$/;"	f	file:
ttwu_stat	sched/core.c	/^ttwu_stat(struct task_struct *p, int cpu, int wake_flags)$/;"	f	file:
tv1	timer.c	/^	struct tvec_root tv1;$/;"	m	struct:tvec_base	typeref:struct:tvec_base::tvec_root	file:
tv2	timer.c	/^	struct tvec tv2;$/;"	m	struct:tvec_base	typeref:struct:tvec_base::tvec	file:
tv3	timer.c	/^	struct tvec tv3;$/;"	m	struct:tvec_base	typeref:struct:tvec_base::tvec	file:
tv4	timer.c	/^	struct tvec tv4;$/;"	m	struct:tvec_base	typeref:struct:tvec_base::tvec	file:
tv5	timer.c	/^	struct tvec tv5;$/;"	m	struct:tvec_base	typeref:struct:tvec_base::tvec	file:
tvec	timer.c	/^struct tvec {$/;"	s	file:
tvec_base	timer.c	/^struct tvec_base {$/;"	s	file:
tvec_root	timer.c	/^struct tvec_root {$/;"	s	file:
two	sysctl.c	/^static int __maybe_unused two = 2;$/;"	v	file:
type	audit.h	/^	int type;$/;"	m	struct:audit_context
type	audit.h	/^	unsigned char		type;		\/* record type *\/$/;"	m	struct:audit_names
type	auditsc.c	/^	int			type;$/;"	m	struct:audit_aux_data	file:
type	cgroup.c	/^	struct cftype			*type;$/;"	m	struct:cfent	typeref:struct:cfent::cftype	file:
type	cgroup.c	/^	struct { enum cgroup_filetype type; struct pid_namespace *ns; } key;$/;"	m	struct:cgroup_pidlist::__anon65	typeref:enum:cgroup_pidlist::__anon65::cgroup_filetype	file:
type	gcov/gcc_3_4.c	/^	unsigned int type;$/;"	m	struct:gcov_iterator	file:
type	kallsyms.c	/^	char type;$/;"	m	struct:kallsym_iter	file:
type	power/sleep_history.c	/^	char type;$/;"	m	struct:sleep_history	file:
type	swap/ks_features/features_data.c	/^	enum probe_t type;$/;"	m	struct:feature	typeref:enum:feature::probe_t	file:
type	swap/ks_features/file_ops.c	/^	int type;$/;"	m	struct:lock_arg	file:
type	swap/ks_features/ks_features.c	/^	int type;$/;"	m	struct:ks_probe	file:
type	swap/ks_features/ksf_msg.c	/^	u32 type;$/;"	m	struct:lock_arg	file:
type	swap/preload/preload_module.c	/^	enum mmap_type_t type;$/;"	m	struct:mmap_priv	typeref:enum:mmap_priv::mmap_type_t	file:
type	swap/us_manager/callbacks.c	/^	enum callback_t type;$/;"	m	struct:cb_item	typeref:enum:cb_item::callback_t	file:
type	swap/us_manager/probes/probe_info_new.h	/^	enum probe_t type;$/;"	m	struct:probe_info_new	typeref:enum:probe_info_new::probe_t
type	swap/wsp/wsp_res.h	/^	enum wsp_res_t type;$/;"	m	struct:wsp_res	typeref:enum:wsp_res::wsp_res_t
type	trace/trace.h	/^	const char		*type;$/;"	m	struct:ftrace_event_field
type	trace/trace_probe.h	/^	const struct fetch_type	*type;	\/* Type of this argument *\/$/;"	m	struct:probe_arg	typeref:struct:probe_arg::fetch_type
type_info	gcov/gcc_3_4.c	/^	struct type_info type_info[0];$/;"	m	struct:gcov_iterator	typeref:struct:gcov_iterator::type_info	file:
type_info	gcov/gcc_3_4.c	/^struct type_info {$/;"	s	file:
type_show	events/core.c	/^type_show(struct device *dev, struct device_attribute *attr, char *page)$/;"	f	file:
type_text	power/sleep_history.c	/^static char *type_text[] = {$/;"	v	file:
tz_offset	time/time_history.c	/^	time_t tz_offset;$/;"	m	struct:time_log_entry	file:
u	swap/us_manager/probes/probe_info_new.h	/^	} u;$/;"	m	struct:probe_info_new	typeref:union:probe_info_new::__anon57
u	tracepoint.c	/^	} u;$/;"	m	struct:tp_probes	typeref:union:tp_probes::__anon13	file:
u16	trace/trace_events_filter.c	/^DEFINE_COMPARISON_PRED(u16);$/;"	v
u32	trace/trace_events_filter.c	/^DEFINE_COMPARISON_PRED(u32);$/;"	v
u64	trace/trace_events_filter.c	/^DEFINE_COMPARISON_PRED(u64);$/;"	v
u8	trace/trace_events_filter.c	/^DEFINE_COMPARISON_PRED(u8);$/;"	v
uevent_filter	params.c	/^static int uevent_filter(struct kset *kset, struct kobject *kobj)$/;"	f	file:
uevent_helper	ksysfs.c	/^KERNEL_ATTR_RW(uevent_helper);$/;"	v
uevent_helper_show	ksysfs.c	/^static ssize_t uevent_helper_show(struct kobject *kobj,$/;"	f	file:
uevent_helper_store	ksysfs.c	/^static ssize_t uevent_helper_store(struct kobject *kobj,$/;"	f	file:
uevent_seqnum	ksysfs.c	/^KERNEL_ATTR_RO(uevent_seqnum);$/;"	v
uevent_seqnum_show	ksysfs.c	/^static ssize_t uevent_seqnum_show(struct kobject *kobj,$/;"	f	file:
uflist	swap/kprobe/swap_kprobes.h	/^	struct hlist_node uflist;            \/**< Jprobes hash list. *\/$/;"	m	struct:jprobe_instance	typeref:struct:jprobe_instance::hlist_node
uflist	swap/kprobe/swap_kprobes.h	/^	struct hlist_node uflist;       \/**< Kretprobe hash list.*\/$/;"	m	struct:kretprobe_instance	typeref:struct:kretprobe_instance::hlist_node
uflist	swap/uprobe/swap_uprobes.h	/^	struct hlist_node uflist;           \/**< Free list *\/$/;"	m	struct:uretprobe_instance	typeref:struct:uretprobe_instance::hlist_node
uid	audit.h	/^			kuid_t			uid;$/;"	m	struct:audit_context::__anon15::__anon17
uid	audit.h	/^	kuid_t			uid;$/;"	m	struct:audit_names
uid	audit.h	/^	kuid_t		    uid, euid, suid, fsuid;$/;"	m	struct:audit_context
uid	trace/trace.h	/^	kuid_t			uid;$/;"	m	struct:trace_array_cpu
uid_cache_init	user.c	/^module_init(uid_cache_init);$/;"	v
uid_cache_init	user.c	/^static int __init uid_cache_init(void)$/;"	f	file:
uid_cachep	user.c	/^static struct kmem_cache *uid_cachep;$/;"	v	typeref:struct:kmem_cache	file:
uid_hash_find	user.c	/^static struct user_struct *uid_hash_find(kuid_t uid, struct hlist_head *hashent)$/;"	f	file:
uid_hash_insert	user.c	/^static void uid_hash_insert(struct user_struct *up, struct hlist_head *hashent)$/;"	f	file:
uid_hash_remove	user.c	/^static void uid_hash_remove(struct user_struct *up)$/;"	f	file:
uid_m_show	user_namespace.c	/^static int uid_m_show(struct seq_file *seq, void *v)$/;"	f	file:
uid_m_start	user_namespace.c	/^static void *uid_m_start(struct seq_file *seq, loff_t *ppos)$/;"	f	file:
uidhash_table	user.c	/^struct hlist_head uidhash_table[UIDHASH_SZ];$/;"	v	typeref:struct:hlist_head
uidhashentry	user.c	69;"	d	file:
uinst_info	swap/uprobe/swap_uprobes.h	/^struct uinst_info {$/;"	s
uinst_info_create	swap/uprobe/swap_uprobes.c	/^EXPORT_SYMBOL_GPL(uinst_info_create);$/;"	v
uinst_info_create	swap/uprobe/swap_uprobes.c	/^struct uinst_info *uinst_info_create(unsigned long vaddr,$/;"	f
uinst_info_destroy	swap/uprobe/swap_uprobes.c	/^EXPORT_SYMBOL_GPL(uinst_info_destroy);$/;"	v
uinst_info_destroy	swap/uprobe/swap_uprobes.c	/^void uinst_info_destroy(struct uinst_info *uinst)$/;"	f
uinst_info_disarm	swap/uprobe/swap_uprobes.c	/^EXPORT_SYMBOL_GPL(uinst_info_disarm);$/;"	v
uinst_info_disarm	swap/uprobe/swap_uprobes.c	/^void uinst_info_disarm(struct uinst_info *uinst, struct task_struct *task)$/;"	f
ujprobe	swap/uprobe/swap_uprobes.h	/^struct ujprobe {$/;"	s
umh_complete	kmod.c	/^static void umh_complete(struct subprocess_info *sub_info)$/;"	f	file:
unapply_uprobe	events/uprobes.c	/^static int unapply_uprobe(struct uprobe *uprobe, struct mm_struct *mm)$/;"	f	file:
unblock_all_signals	signal.c	/^EXPORT_SYMBOL(unblock_all_signals);$/;"	v
unblock_all_signals	signal.c	/^unblock_all_signals(void)$/;"	f
unbound_attrs	workqueue.c	/^	struct workqueue_attrs	*unbound_attrs;	\/* WQ: only for unbound wqs *\/$/;"	m	struct:workqueue_struct	typeref:struct:workqueue_struct::workqueue_attrs	file:
unbound_pwq_by_node	workqueue.c	/^static struct pool_workqueue *unbound_pwq_by_node(struct workqueue_struct *wq,$/;"	f	file:
unbound_release_work	workqueue.c	/^	struct work_struct	unbound_release_work;$/;"	m	struct:pool_workqueue	typeref:struct:pool_workqueue::work_struct	file:
unbound_std_wq_attrs	workqueue.c	/^static struct workqueue_attrs *unbound_std_wq_attrs[NR_STD_WORKER_POOLS];$/;"	v	typeref:struct:workqueue_attrs	file:
unc	power/swap.c	/^	unsigned char *unc[LZO_THREADS];          \/* uncompressed data *\/$/;"	m	struct:crc_data	file:
unc	power/swap.c	/^	unsigned char unc[LZO_UNC_SIZE];          \/* uncompressed buffer *\/$/;"	m	struct:cmp_data	file:
unc	power/swap.c	/^	unsigned char unc[LZO_UNC_SIZE];          \/* uncompressed buffer *\/$/;"	m	struct:dec_data	file:
unc_len	power/swap.c	/^	size_t *unc_len[LZO_THREADS];             \/* uncompressed lengths *\/$/;"	m	struct:crc_data	file:
unc_len	power/swap.c	/^	size_t unc_len;                           \/* uncompressed length *\/$/;"	m	struct:cmp_data	file:
unc_len	power/swap.c	/^	size_t unc_len;                           \/* uncompressed length *\/$/;"	m	struct:dec_data	file:
unclone_ctx	events/core.c	/^static void unclone_ctx(struct perf_event_context *ctx)$/;"	f	file:
undef_ho_k	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^static struct undef_hook undef_ho_k = {$/;"	v	typeref:struct:undef_hook	file:
undef_hook_for_us_arm	swap/uprobe/arch/arm/swap-asm/swap_uprobes.c	/^static struct undef_hook undef_hook_for_us_arm = {$/;"	v	typeref:struct:undef_hook	file:
undef_hook_for_us_thumb	swap/uprobe/arch/arm/swap-asm/swap_uprobes.c	/^static struct undef_hook undef_hook_for_us_thumb = {$/;"	v	typeref:struct:undef_hook	file:
unfreeze_cgroup	cgroup_freezer.c	/^static void unfreeze_cgroup(struct freezer *freezer)$/;"	f	file:
unhandled_signal	signal.c	/^int unhandled_signal(struct task_struct *tsk, int sig)$/;"	f
uninit	swap/us_manager/probes/register_probes.h	/^	void (*uninit)(struct us_ip *);$/;"	m	struct:probe_iface
uninit_data_energy	swap/energy/energy.c	/^static void uninit_data_energy(void)$/;"	f	file:
uninit_ed	swap/energy/energy.c	/^static void uninit_ed(struct energy_data *ed)$/;"	f	file:
uninit_feature	swap/energy/energy.c	/^static void uninit_feature(void)$/;"	f	file:
uninit_mb	swap/parser/msg_buf.c	/^void uninit_mb(struct msg_buf *mb)$/;"	f
uninit_syscall_features	swap/ks_features/ks_features.c	/^static void uninit_syscall_features(void)$/;"	f	file:
uninit_variables	swap/nsp/nsp.c	/^static void uninit_variables(void)$/;"	f	file:
uninstall_all	swap/us_manager/pf/pf_group.c	/^void uninstall_all(void)$/;"	f
uninstall_features	swap/ks_features/ks_features.c	/^static int uninstall_features(struct feature *f)$/;"	f	file:
uninstall_page	swap/us_manager/pf/pf_group.c	/^void uninstall_page(unsigned long addr)$/;"	f
uninstall_proc	swap/us_manager/pf/pf_group.c	/^void uninstall_proc(struct sspt_proc *proc)$/;"	f
unknown_wakeup	power/wakelock.c	/^static struct wake_lock unknown_wakeup;$/;"	v	typeref:struct:wake_lock	file:
unloaded_info	gcov/fs.c	/^	struct gcov_info *unloaded_info;$/;"	m	struct:gcov_node	typeref:struct:gcov_node::gcov_info	file:
unlock_futex_pi	futex.c	/^static int unlock_futex_pi(u32 __user *uaddr, u32 uval)$/;"	f	file:
unlock_hrtimer_base	hrtimer.c	/^void unlock_hrtimer_base(const struct hrtimer *timer, unsigned long *flags)$/;"	f	file:
unlock_timer	posix-timers.c	/^static inline void unlock_timer(struct k_itimer *timr, unsigned long flags)$/;"	f	file:
unmap_cnt	swap/us_manager/helper.c	/^static atomic_t unmap_cnt = ATOMIC_INIT(0);$/;"	v	file:
unmap_data	swap/us_manager/helper.c	/^struct unmap_data {$/;"	s	file:
unmap_kretprobe	swap/us_manager/helper.c	/^static struct kretprobe unmap_kretprobe = {$/;"	v	typeref:struct:kretprobe	file:
unmask_irq	irq/chip.c	/^void unmask_irq(struct irq_desc *desc)$/;"	f
unoptimize_all_kprobes	kprobes.c	/^static void __kprobes unoptimize_all_kprobes(void)$/;"	f	file:
unoptimize_kprobe	kprobes.c	/^static __kprobes void unoptimize_kprobe(struct kprobe *p, bool force)$/;"	f	file:
unoptimize_kprobe	kprobes.c	915;"	d	file:
unpack_orig_pfns	power/snapshot.c	/^static int unpack_orig_pfns(unsigned long *buf, struct memory_bitmap *bm)$/;"	f	file:
unqueue_me	futex.c	/^static int unqueue_me(struct futex_q *q)$/;"	f	file:
unreg	swap/us_manager/probes/register_probes.h	/^	void (*unreg)(struct us_ip *, int);$/;"	m	struct:probe_iface
unreg_event_syscall_enter	trace/trace_syscalls.c	/^static void unreg_event_syscall_enter(struct ftrace_event_file *file,$/;"	f	file:
unreg_event_syscall_exit	trace/trace_syscalls.c	/^static void unreg_event_syscall_exit(struct ftrace_event_file *file,$/;"	f	file:
unreg_krp_args	swap/kprobe/swap_kprobes.c	/^struct unreg_krp_args {$/;"	s	file:
unreg_msg_handler	swap/parser/swap_msg_parser.c	/^static void unreg_msg_handler(void)$/;"	f	file:
unregister_comm	swap/us_manager/helper.c	/^static void unregister_comm(void)$/;"	f	file:
unregister_console	printk.c	/^EXPORT_SYMBOL(unregister_console);$/;"	v
unregister_console	printk.c	/^int unregister_console(struct console *console)$/;"	f
unregister_cp	swap/us_manager/helper.c	/^static void unregister_cp(void)$/;"	f	file:
unregister_cpu_notifier	cpu.c	/^EXPORT_SYMBOL(unregister_cpu_notifier);$/;"	v
unregister_cpu_notifier	cpu.c	/^void __ref unregister_cpu_notifier(struct notifier_block *nb)$/;"	f
unregister_ctx_task	swap/us_manager/helper.c	/^static void unregister_ctx_task(void)$/;"	f	file:
unregister_die_notifier	notifier.c	/^EXPORT_SYMBOL_GPL(unregister_die_notifier);$/;"	v
unregister_die_notifier	notifier.c	/^int unregister_die_notifier(struct notifier_block *nb)$/;"	f
unregister_early_suspend	power/earlysuspend.c	/^EXPORT_SYMBOL(unregister_early_suspend);$/;"	v
unregister_early_suspend	power/earlysuspend.c	/^void unregister_early_suspend(struct early_suspend *handler)$/;"	f
unregister_exec_domain	exec_domain.c	/^EXPORT_SYMBOL(unregister_exec_domain);$/;"	v
unregister_exec_domain	exec_domain.c	/^unregister_exec_domain(struct exec_domain *ep)$/;"	f
unregister_fair_sched_group	sched/fair.c	/^void unregister_fair_sched_group(struct task_group *tg, int cpu) { }$/;"	f
unregister_fair_sched_group	sched/fair.c	/^void unregister_fair_sched_group(struct task_group *tg, int cpu)$/;"	f
unregister_ftrace_command	trace/ftrace.c	/^int unregister_ftrace_command(struct ftrace_func_command *cmd)$/;"	f
unregister_ftrace_event	trace/trace_output.c	/^EXPORT_SYMBOL_GPL(unregister_ftrace_event);$/;"	v
unregister_ftrace_event	trace/trace_output.c	/^int unregister_ftrace_event(struct trace_event *event)$/;"	f
unregister_ftrace_function	trace/ftrace.c	/^EXPORT_SYMBOL_GPL(unregister_ftrace_function);$/;"	v
unregister_ftrace_function	trace/ftrace.c	/^int unregister_ftrace_function(struct ftrace_ops *ops)$/;"	f
unregister_ftrace_function_probe	trace/ftrace.c	/^unregister_ftrace_function_probe(char *glob, struct ftrace_probe_ops *ops,$/;"	f
unregister_ftrace_function_probe_all	trace/ftrace.c	/^void unregister_ftrace_function_probe_all(char *glob)$/;"	f
unregister_ftrace_function_probe_func	trace/ftrace.c	/^unregister_ftrace_function_probe_func(char *glob, struct ftrace_probe_ops *ops)$/;"	f
unregister_ftrace_graph	trace/ftrace.c	/^void unregister_ftrace_graph(void)$/;"	f
unregister_ftrace_profiler	trace/ftrace.c	/^static void unregister_ftrace_profiler(void)$/;"	f	file:
unregister_handler_proc	irq/internals.h	/^static inline void unregister_handler_proc(unsigned int irq,$/;"	f
unregister_handler_proc	irq/proc.c	/^void unregister_handler_proc(unsigned int irq, struct irqaction *action)$/;"	f
unregister_helper_bottom	swap/us_manager/helper.c	/^void unregister_helper_bottom(void)$/;"	f
unregister_helper_top	swap/us_manager/helper.c	/^void unregister_helper_top(void)$/;"	f
unregister_hw_breakpoint	events/hw_breakpoint.c	/^EXPORT_SYMBOL_GPL(unregister_hw_breakpoint);$/;"	v
unregister_hw_breakpoint	events/hw_breakpoint.c	/^void unregister_hw_breakpoint(struct perf_event *bp)$/;"	f
unregister_irq_proc	irq/internals.h	/^static inline void unregister_irq_proc(unsigned int irq, struct irq_desc *desc) { }$/;"	f
unregister_irq_proc	irq/proc.c	/^void unregister_irq_proc(unsigned int irq, struct irq_desc *desc)$/;"	f
unregister_irqsoff_function	trace/trace_irqsoff.c	/^static void unregister_irqsoff_function(int graph)$/;"	f	file:
unregister_jprobe	kprobes.c	/^EXPORT_SYMBOL_GPL(unregister_jprobe);$/;"	v
unregister_jprobe	kprobes.c	/^void __kprobes unregister_jprobe(struct jprobe *jp)$/;"	f
unregister_jprobes	kprobes.c	/^EXPORT_SYMBOL_GPL(unregister_jprobes);$/;"	v
unregister_jprobes	kprobes.c	/^void __kprobes unregister_jprobes(struct jprobe **jps, int num)$/;"	f
unregister_kprobe	kprobes.c	/^EXPORT_SYMBOL_GPL(unregister_kprobe);$/;"	v
unregister_kprobe	kprobes.c	/^void __kprobes unregister_kprobe(struct kprobe *p)$/;"	f
unregister_kprobes	kprobes.c	/^EXPORT_SYMBOL_GPL(unregister_kprobes);$/;"	v
unregister_kprobes	kprobes.c	/^void __kprobes unregister_kprobes(struct kprobe **kps, int num)$/;"	f
unregister_kretprobe	kprobes.c	/^EXPORT_SYMBOL_GPL(unregister_kretprobe);$/;"	v
unregister_kretprobe	kprobes.c	/^void __kprobes unregister_kretprobe(struct kretprobe *rp)$/;"	f
unregister_kretprobes	kprobes.c	/^EXPORT_SYMBOL_GPL(unregister_kretprobes);$/;"	v
unregister_kretprobes	kprobes.c	/^void __kprobes unregister_kretprobes(struct kretprobe **rps, int num)$/;"	f
unregister_lcd	swap/energy/lcd/lcd_base.c	/^static void unregister_lcd(struct lcd_ops *ops)$/;"	f	file:
unregister_lcd_debugfs	swap/energy/lcd/lcd_debugfs.c	/^void unregister_lcd_debugfs(struct lcd_ops *ops)$/;"	f
unregister_mf	swap/us_manager/helper.c	/^static void unregister_mf(void)$/;"	f	file:
unregister_mmap	swap/us_manager/helper.c	/^static void unregister_mmap(void)$/;"	f	file:
unregister_module_notifier	module.c	/^EXPORT_SYMBOL(unregister_module_notifier);$/;"	v
unregister_module_notifier	module.c	/^int unregister_module_notifier(struct notifier_block * nb)$/;"	f
unregister_mr	swap/us_manager/helper.c	/^static void unregister_mr(void)$/;"	f	file:
unregister_multiple_syscalls	swap/ks_features/ks_features.c	/^static int unregister_multiple_syscalls(size_t *id_p, size_t cnt)$/;"	f	file:
unregister_pm_notifier	power/main.c	/^EXPORT_SYMBOL_GPL(unregister_pm_notifier);$/;"	v
unregister_pm_notifier	power/main.c	/^int unregister_pm_notifier(struct notifier_block *nb)$/;"	f
unregister_preload_probes	swap/preload/preload_probe.c	/^void unregister_preload_probes(void)$/;"	f
unregister_probe_event	trace/trace_kprobe.c	/^static int unregister_probe_event(struct trace_probe *tp)$/;"	f	file:
unregister_reboot_notifier	sys.c	/^EXPORT_SYMBOL(unregister_reboot_notifier);$/;"	v
unregister_reboot_notifier	sys.c	/^int unregister_reboot_notifier(struct notifier_block *nb)$/;"	f
unregister_sched_domain_sysctl	sched/core.c	/^static void unregister_sched_domain_sysctl(void)$/;"	f	file:
unregister_stat_tracer	trace/trace_stat.c	/^void unregister_stat_tracer(struct tracer_stat *trace)$/;"	f
unregister_switch_context	swap/ks_features/ks_features.c	/^static int unregister_switch_context(void)$/;"	f	file:
unregister_syscall	swap/ks_features/ks_features.c	/^static int unregister_syscall(size_t id)$/;"	f	file:
unregister_trace_probe	trace/trace_kprobe.c	/^static int unregister_trace_probe(struct trace_probe *tp)$/;"	f	file:
unregister_trace_uprobe	trace/trace_uprobe.c	/^static int unregister_trace_uprobe(struct trace_uprobe *tu)$/;"	f	file:
unregister_unmap	swap/us_manager/helper.c	/^static void unregister_unmap(void)$/;"	f	file:
unregister_uprobe_event	trace/trace_uprobe.c	/^static int unregister_uprobe_event(struct trace_uprobe *tu)$/;"	f	file:
unregister_wakeup_function	trace/trace_sched_wakeup.c	/^static void unregister_wakeup_function(int graph)$/;"	f	file:
unregister_wide_hw_breakpoint	events/hw_breakpoint.c	/^EXPORT_SYMBOL_GPL(unregister_wide_hw_breakpoint);$/;"	v
unregister_wide_hw_breakpoint	events/hw_breakpoint.c	/^void unregister_wide_hw_breakpoint(struct perf_event * __percpu *cpu_events)$/;"	f
unroll_tree_refs	auditsc.c	/^static void unroll_tree_refs(struct audit_context *ctx,$/;"	f	file:
unset	swap/energy/lcd/lcd_base.h	/^	call_lcd unset;			\/**< LCD deinitialization *\/$/;"	m	struct:lcd_ops
unset	swap/parser/features.c	/^	int (*unset)(void);$/;"	m	struct:feature_item	file:
unset_context_switch	swap/parser/features.c	/^int unset_context_switch(void)$/;"	f
unset_energy	swap/energy/energy.c	/^EXPORT_SYMBOL_GPL(unset_energy);$/;"	v
unset_energy	swap/energy/energy.c	/^int unset_energy(void)$/;"	f
unset_feature	swap/ks_features/ks_features.c	/^EXPORT_SYMBOL_GPL(unset_feature);$/;"	v
unset_feature	swap/ks_features/ks_features.c	/^int unset_feature(enum feature_id id)$/;"	f
unset_func_energy	swap/parser/features.c	/^static int unset_func_energy(void)$/;"	f	file:
unset_func_sampling	swap/parser/features.c	/^int unset_func_sampling(void)$/;"	f
unset_module_core_ro_nx	module.c	/^static void unset_module_core_ro_nx(struct module *mod) { }$/;"	f	file:
unset_module_core_ro_nx	module.c	/^static void unset_module_core_ro_nx(struct module *mod)$/;"	f	file:
unset_module_init_ro_nx	module.c	/^static void unset_module_init_ro_nx(struct module *mod) { }$/;"	f	file:
unset_module_init_ro_nx	module.c	/^static void unset_module_init_ro_nx(struct module *mod)$/;"	f	file:
unset_pst	swap/ks_features/ks_features.c	/^static void unset_pst(struct feature *f, size_t id)$/;"	f	file:
unset_syscall_desc	swap/parser/features.c	/^int unset_syscall_desc(void)$/;"	f
unset_syscall_file	swap/parser/features.c	/^int unset_syscall_file(void)$/;"	f
unset_syscall_ipc	swap/parser/features.c	/^int unset_syscall_ipc(void)$/;"	f
unset_syscall_network	swap/parser/features.c	/^int unset_syscall_network(void)$/;"	f
unset_syscall_process	swap/parser/features.c	/^int unset_syscall_process(void)$/;"	f
unset_syscall_signal	swap/parser/features.c	/^int unset_syscall_signal(void)$/;"	f
unset_sysfile_activity	swap/parser/features.c	/^static int unset_sysfile_activity(void)$/;"	f	file:
unset_us_inst	swap/parser/features.c	/^int unset_us_inst(void)$/;"	f
unshare_fd	fork.c	/^static int unshare_fd(unsigned long unshare_flags, struct files_struct **new_fdp)$/;"	f	file:
unshare_files	fork.c	/^int unshare_files(struct files_struct **displaced)$/;"	f
unshare_fs	fork.c	/^static int unshare_fs(unsigned long unshare_flags, struct fs_struct **new_fsp)$/;"	f	file:
unshare_nsproxy_namespaces	nsproxy.c	/^int unshare_nsproxy_namespaces(unsigned long unshare_flags,$/;"	f
unshare_userns	user_namespace.c	/^int unshare_userns(unsigned long unshare_flags, struct cred **new_cred)$/;"	f
untag_chunk	audit_tree.c	/^static void untag_chunk(struct node *p)$/;"	f	file:
unthrottle_cfs_rq	sched/fair.c	/^void unthrottle_cfs_rq(struct cfs_rq *cfs_rq)$/;"	f
unthrottle_offline_cfs_rqs	sched/fair.c	/^static inline void unthrottle_offline_cfs_rqs(struct rq *rq) {}$/;"	f	file:
unthrottle_offline_cfs_rqs	sched/fair.c	/^static void __maybe_unused unthrottle_offline_cfs_rqs(struct rq *rq)$/;"	f	file:
up	semaphore.c	/^	bool up;$/;"	m	struct:semaphore_waiter	file:
up	semaphore.c	/^EXPORT_SYMBOL(up);$/;"	v
up	semaphore.c	/^void up(struct semaphore *sem)$/;"	f
up	swap/uprobe/swap_uprobes.h	/^	struct uprobe up;                   \/**< Uprobe for this uretprobe *\/$/;"	m	struct:uretprobe	typeref:struct:uretprobe::uprobe
up	swap/uprobe/swap_uprobes.h	/^	struct uprobe up;       \/**< Uprobe for this ujprobe *\/$/;"	m	struct:ujprobe	typeref:struct:ujprobe::uprobe
up2kp	swap/uprobe/swap_uprobes.h	/^static inline struct kprobe *up2kp(struct uprobe *p)$/;"	f
up_cleanup	swap/us_manager/probes/probe_info_new.c	/^static void up_cleanup(struct probe_info *probe_i)$/;"	f	file:
up_copy	swap/us_manager/probes/probe_info_new.c	/^static int up_copy(struct probe_info *dst, const struct probe_info *src)$/;"	f	file:
up_get_uprobe	swap/us_manager/probes/probe_info_new.c	/^static struct uprobe *up_get_uprobe(struct us_ip *ip)$/;"	f	file:
up_iface	swap/us_manager/probes/probe_info_new.c	/^static struct probe_iface up_iface = {$/;"	v	typeref:struct:probe_iface	file:
up_init	swap/us_manager/probes/probe_info_new.c	/^static void up_init(struct us_ip *ip)$/;"	f	file:
up_read	rwsem.c	/^EXPORT_SYMBOL(up_read);$/;"	v
up_read	rwsem.c	/^void up_read(struct rw_semaphore *sem)$/;"	f
up_read_non_owner	rwsem.c	/^EXPORT_SYMBOL(up_read_non_owner);$/;"	v
up_read_non_owner	rwsem.c	/^void up_read_non_owner(struct rw_semaphore *sem)$/;"	f
up_register_probe	swap/us_manager/probes/probe_info_new.c	/^static int up_register_probe(struct us_ip *ip)$/;"	f	file:
up_uninit	swap/us_manager/probes/probe_info_new.c	/^static void up_uninit(struct us_ip *ip)$/;"	f	file:
up_unregister_probe	swap/us_manager/probes/probe_info_new.c	/^static void up_unregister_probe(struct us_ip *ip, int disarm)$/;"	f	file:
up_write	rwsem.c	/^EXPORT_SYMBOL(up_write);$/;"	v
up_write	rwsem.c	/^void up_write(struct rw_semaphore *sem)$/;"	f
update_avg	sched/core.c	/^static void update_avg(u64 *avg, u64 sample)$/;"	f	file:
update_bitfield_fetch_param	trace/trace_probe.c	/^update_bitfield_fetch_param(struct bitfield_fetch_param *data)$/;"	f	file:
update_blocked_averages	sched/fair.c	/^static inline void update_blocked_averages(int cpu)$/;"	f	file:
update_blocked_averages	sched/fair.c	/^static void update_blocked_averages(int cpu)$/;"	f	file:
update_cfs_rq_blocked_load	sched/fair.c	/^static inline void update_cfs_rq_blocked_load(struct cfs_rq *cfs_rq,$/;"	f	file:
update_cfs_rq_blocked_load	sched/fair.c	/^static void update_cfs_rq_blocked_load(struct cfs_rq *cfs_rq, int force_update)$/;"	f	file:
update_cfs_shares	sched/fair.c	/^static inline void update_cfs_shares(struct cfs_rq *cfs_rq)$/;"	f	file:
update_cfs_shares	sched/fair.c	/^static void update_cfs_shares(struct cfs_rq *cfs_rq)$/;"	f	file:
update_cgrp_time_from_cpuctx	events/core.c	/^static inline void update_cgrp_time_from_cpuctx(struct perf_cpu_context *cpuctx)$/;"	f	file:
update_cgrp_time_from_event	events/core.c	/^static inline void update_cgrp_time_from_event(struct perf_event *event)$/;"	f	file:
update_console_cmdline	printk.c	/^int update_console_cmdline(char *name, int idx, char *name_new, int idx_new, char *options)$/;"	f
update_context_time	events/core.c	/^static void update_context_time(struct perf_event_context *ctx)$/;"	f	file:
update_count	trace/trace_functions.c	/^static int update_count(void **data)$/;"	f	file:
update_cpu_load_active	sched/core.c	/^static void update_cpu_load_active(struct rq *this_rq)$/;"	f	file:
update_cpu_load_nohz	sched/core.c	/^void update_cpu_load_nohz(void)$/;"	f
update_cpu_power	sched/fair.c	/^static void update_cpu_power(struct sched_domain *sd, int cpu)$/;"	f	file:
update_cpumask	cpuset.c	/^static int update_cpumask(struct cpuset *cs, struct cpuset *trialcs,$/;"	f	file:
update_curr	sched/fair.c	/^static void update_curr(struct cfs_rq *cfs_rq)$/;"	f	file:
update_curr_rt	sched/rt.c	/^static void update_curr_rt(struct rq *rq)$/;"	f	file:
update_deref_fetch_param	trace/trace_probe.c	/^static __kprobes void update_deref_fetch_param(struct deref_fetch_param *data)$/;"	f	file:
update_domain_attr	cpuset.c	/^update_domain_attr(struct sched_domain_attr *dattr, struct cpuset *c)$/;"	f	file:
update_domain_attr_tree	cpuset.c	/^static void update_domain_attr_tree(struct sched_domain_attr *dattr,$/;"	f	file:
update_done	trace/ring_buffer.c	/^	struct completion		update_done;$/;"	m	struct:ring_buffer_per_cpu	typeref:struct:ring_buffer_per_cpu::completion	file:
update_entity_load_avg	sched/fair.c	/^static inline void update_entity_load_avg(struct sched_entity *se,$/;"	f	file:
update_event_times	events/core.c	/^static void update_event_times(struct perf_event *event)$/;"	f	file:
update_flag	cpuset.c	/^static int update_flag(cpuset_flagbits_t bit, struct cpuset *cs,$/;"	f	file:
update_ftrace_function	trace/ftrace.c	/^static void update_ftrace_function(void)$/;"	f	file:
update_function_graph_func	trace/ftrace.c	/^static inline void update_function_graph_func(void) { }$/;"	f	file:
update_function_graph_func	trace/ftrace.c	/^static void update_function_graph_func(void)$/;"	f	file:
update_global_ops	trace/ftrace.c	/^static void update_global_ops(void)$/;"	f	file:
update_group_power	sched/fair.c	/^void update_group_power(struct sched_domain *sd, int cpu)$/;"	f
update_group_times	events/core.c	/^static void update_group_times(struct perf_event *leader)$/;"	f	file:
update_gt_cputime	posix-cpu-timers.c	/^static void update_gt_cputime(struct task_cputime *a, struct task_cputime *b)$/;"	f	file:
update_h_load	sched/fair.c	/^static inline void update_h_load(long cpu)$/;"	f	file:
update_h_load	sched/fair.c	/^static void update_h_load(long cpu)$/;"	f	file:
update_idle_cpu_load	sched/core.c	/^void update_idle_cpu_load(struct rq *this_rq)$/;"	f
update_if_frozen	cgroup_freezer.c	/^static void update_if_frozen(struct cgroup *cgroup)$/;"	f	file:
update_iter	kallsyms.c	/^static int update_iter(struct kallsym_iter *iter, loff_t pos)$/;"	f	file:
update_load_add	sched/sched.h	/^static inline void update_load_add(struct load_weight *lw, unsigned long inc)$/;"	f
update_load_set	sched/sched.h	/^static inline void update_load_set(struct load_weight *lw, unsigned long w)$/;"	f
update_load_sub	sched/sched.h	/^static inline void update_load_sub(struct load_weight *lw, unsigned long dec)$/;"	f
update_lsm_rule	auditfilter.c	/^static int update_lsm_rule(struct audit_krule *r)$/;"	f	file:
update_max_interval	sched/fair.c	/^void update_max_interval(void)$/;"	f
update_max_tr	trace/trace.c	/^update_max_tr(struct trace_array *tr, struct task_struct *tsk, int cpu)$/;"	f
update_max_tr_single	trace/trace.c	/^update_max_tr_single(struct trace_array *tr, struct task_struct *tsk, int cpu)$/;"	f
update_min_vruntime	sched/fair.c	/^static void update_min_vruntime(struct cfs_rq *cfs_rq)$/;"	f	file:
update_nodemask	cpuset.c	/^static int update_nodemask(struct cpuset *cs, struct cpuset *trialcs,$/;"	f	file:
update_pages_handler	trace/ring_buffer.c	/^static void update_pages_handler(struct work_struct *work)$/;"	f	file:
update_pages_work	trace/ring_buffer.c	/^	struct work_struct		update_pages_work;$/;"	m	struct:ring_buffer_per_cpu	typeref:struct:ring_buffer_per_cpu::work_struct	file:
update_perf_cpu_limits	events/core.c	/^void update_perf_cpu_limits(void)$/;"	f
update_pmu_context	events/core.c	/^static void update_pmu_context(struct pmu *pmu, struct pmu *old_pmu)$/;"	f	file:
update_process_times	timer.c	/^void update_process_times(int user_tick)$/;"	f
update_pvclock_gtod	time/timekeeping.c	/^static void update_pvclock_gtod(struct timekeeper *tk)$/;"	f	file:
update_relax_domain_level	cpuset.c	/^static int update_relax_domain_level(struct cpuset *cs, s64 val)$/;"	f	file:
update_rlimit_cpu	posix-cpu-timers.c	/^void update_rlimit_cpu(struct task_struct *task, unsigned long rlim_new)$/;"	f
update_rmtp	hrtimer.c	/^static int update_rmtp(struct hrtimer *timer, struct timespec __user *rmtp)$/;"	f	file:
update_rmtp	time/alarmtimer.c	/^static int update_rmtp(ktime_t exp, enum  alarmtimer_type type,$/;"	f	file:
update_rq_clock	sched/core.c	/^void update_rq_clock(struct rq *rq)$/;"	f
update_rq_clock_task	sched/core.c	/^static void update_rq_clock_task(struct rq *rq, s64 delta)$/;"	f	file:
update_rq_runnable_avg	sched/fair.c	/^static inline void update_rq_runnable_avg(struct rq *rq, int runnable) {}$/;"	f	file:
update_rq_runnable_avg	sched/fair.c	/^static inline void update_rq_runnable_avg(struct rq *rq, int runnable)$/;"	f	file:
update_rt_migration	sched/rt.c	/^static void update_rt_migration(struct rt_rq *rt_rq)$/;"	f	file:
update_runtime	sched/rt.c	/^int update_runtime(struct notifier_block *nfb, unsigned long action, void *hcpu)$/;"	f
update_sd_lb_stats	sched/fair.c	/^static inline void update_sd_lb_stats(struct lb_env *env,$/;"	f	file:
update_sd_pick_busiest	sched/fair.c	/^static bool update_sd_pick_busiest(struct lb_env *env,$/;"	f	file:
update_sg_lb_stats	sched/fair.c	/^static inline void update_sg_lb_stats(struct lb_env *env,$/;"	f	file:
update_sleep_wait_stats_locked	power/wakelock.c	/^static void update_sleep_wait_stats_locked(int done)$/;"	f	file:
update_stats_curr_start	sched/fair.c	/^update_stats_curr_start(struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f	file:
update_stats_dequeue	sched/fair.c	/^update_stats_dequeue(struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f	file:
update_stats_enqueue	sched/fair.c	/^static void update_stats_enqueue(struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f	file:
update_stats_wait_end	sched/fair.c	/^update_stats_wait_end(struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f	file:
update_stats_wait_start	sched/fair.c	/^update_stats_wait_start(struct cfs_rq *cfs_rq, struct sched_entity *se)$/;"	f	file:
update_symbol_cache	trace/trace_probe.c	/^static unsigned long update_symbol_cache(struct symbol_cache *sc)$/;"	f	file:
update_sysctl	sched/fair.c	/^static void update_sysctl(void)$/;"	f	file:
update_tasks_cpumask	cpuset.c	/^static void update_tasks_cpumask(struct cpuset *cs, struct ptr_heap *heap)$/;"	f	file:
update_tasks_flags	cpuset.c	/^static void update_tasks_flags(struct cpuset *cs, struct ptr_heap *heap)$/;"	f	file:
update_tasks_nodemask	cpuset.c	/^static void update_tasks_nodemask(struct cpuset *cs, const nodemask_t *oldmem,$/;"	f	file:
update_top_cache_domain	sched/core.c	/^static void update_top_cache_domain(int cpu)$/;"	f	file:
update_ts_time_stats	time/tick-sched.c	/^update_ts_time_stats(int cpu, struct tick_sched *ts, ktime_t now, u64 *last_update_time)$/;"	f	file:
update_vmcoreinfo_note	kexec.c	/^static void update_vmcoreinfo_note(void)$/;"	f	file:
update_wall_time	time/timekeeping.c	/^static void update_wall_time(void)$/;"	f	file:
uprobe	events/uprobes.c	/^	struct uprobe		*uprobe;$/;"	m	struct:return_instance	typeref:struct:return_instance::uprobe	file:
uprobe	events/uprobes.c	/^struct uprobe {$/;"	s	file:
uprobe	swap/uprobe/swap_uprobes.h	/^struct uprobe {$/;"	s
uprobe	swap/us_manager/sspt/ip.h	/^		struct uprobe uprobe;$/;"	m	union:us_ip::__anon60	typeref:struct:us_ip::__anon60::uprobe
uprobe_apply	events/uprobes.c	/^int uprobe_apply(struct inode *inode, loff_t offset,$/;"	f
uprobe_clear_state	events/uprobes.c	/^void uprobe_clear_state(struct mm_struct *mm)$/;"	f
uprobe_copy_process	events/uprobes.c	/^void uprobe_copy_process(struct task_struct *t)$/;"	f
uprobe_ctlblk	swap/uprobe/arch/x86/swap-asm/swap_uprobes.c	/^struct uprobe_ctlblk {$/;"	s	file:
uprobe_deny_signal	events/uprobes.c	/^bool uprobe_deny_signal(void)$/;"	f
uprobe_dispatcher	trace/trace_uprobe.c	/^static int uprobe_dispatcher(struct uprobe_consumer *con, struct pt_regs *regs)$/;"	f	file:
uprobe_dup_mmap	events/uprobes.c	/^void uprobe_dup_mmap(struct mm_struct *oldmm, struct mm_struct *newmm)$/;"	f
uprobe_end_dup_mmap	events/uprobes.c	/^void uprobe_end_dup_mmap(void)$/;"	f
uprobe_event_define_fields	trace/trace_uprobe.c	/^static int uprobe_event_define_fields(struct ftrace_event_call *event_call)$/;"	f	file:
uprobe_events_ops	trace/trace_uprobe.c	/^static const struct file_operations uprobe_events_ops = {$/;"	v	typeref:struct:file_operations	file:
uprobe_exception_nb	events/uprobes.c	/^static struct notifier_block uprobe_exception_nb = {$/;"	v	typeref:struct:notifier_block	file:
uprobe_exceptions_nb	swap/uprobe/arch/x86/swap-asm/swap_uprobes.c	/^static struct notifier_block uprobe_exceptions_nb = {$/;"	v	typeref:struct:notifier_block	file:
uprobe_exceptions_notify	swap/uprobe/arch/x86/swap-asm/swap_uprobes.c	/^static int uprobe_exceptions_notify(struct notifier_block *self,$/;"	f	file:
uprobe_filter_event	trace/trace_uprobe.c	/^uprobe_filter_event(struct trace_uprobe *tu, struct perf_event *event)$/;"	f	file:
uprobe_filter_is_empty	trace/trace_uprobe.c	/^static inline bool uprobe_filter_is_empty(struct trace_uprobe_filter *filter)$/;"	f	file:
uprobe_free_utask	events/uprobes.c	/^void uprobe_free_utask(struct task_struct *t)$/;"	f
uprobe_funcs	trace/trace_uprobe.c	/^static struct trace_event_functions uprobe_funcs = {$/;"	v	typeref:struct:trace_event_functions	file:
uprobe_get_swbp_addr	events/uprobes.c	/^unsigned long __weak uprobe_get_swbp_addr(struct pt_regs *regs)$/;"	f
uprobe_handler	swap/uprobe/arch/x86/swap-asm/swap_uprobes.c	/^static int uprobe_handler(struct pt_regs *regs)$/;"	f	file:
uprobe_handler	swap/us_manager/probes/probe_info_new.c	/^static int uprobe_handler(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
uprobe_is_active	events/uprobes.c	/^static inline bool uprobe_is_active(struct uprobe *uprobe)$/;"	f	file:
uprobe_mmap	events/uprobes.c	/^int uprobe_mmap(struct vm_area_struct *vma)$/;"	f
uprobe_munmap	events/uprobes.c	/^void uprobe_munmap(struct vm_area_struct *vma, unsigned long start, unsigned long end)$/;"	f
uprobe_notify_resume	events/uprobes.c	/^void uprobe_notify_resume(struct pt_regs *regs)$/;"	f
uprobe_perf_close	trace/trace_uprobe.c	/^static int uprobe_perf_close(struct trace_uprobe *tu, struct perf_event *event)$/;"	f	file:
uprobe_perf_filter	trace/trace_uprobe.c	/^static bool uprobe_perf_filter(struct uprobe_consumer *uc,$/;"	f	file:
uprobe_perf_func	trace/trace_uprobe.c	/^static int uprobe_perf_func(struct trace_uprobe *tu, struct pt_regs *regs)$/;"	f	file:
uprobe_perf_open	trace/trace_uprobe.c	/^static int uprobe_perf_open(struct trace_uprobe *tu, struct perf_event *event)$/;"	f	file:
uprobe_perf_print	trace/trace_uprobe.c	/^static void uprobe_perf_print(struct trace_uprobe *tu,$/;"	f	file:
uprobe_post_sstep_notifier	events/uprobes.c	/^int uprobe_post_sstep_notifier(struct pt_regs *regs)$/;"	f
uprobe_pre_entry_handler_t	swap/uprobe/swap_uprobes.h	/^typedef unsigned long (*uprobe_pre_entry_handler_t)(void *priv_arg,$/;"	t
uprobe_pre_sstep_notifier	events/uprobes.c	/^int uprobe_pre_sstep_notifier(struct pt_regs *regs)$/;"	f
uprobe_profile_ops	trace/trace_uprobe.c	/^static const struct file_operations uprobe_profile_ops = {$/;"	v	typeref:struct:file_operations	file:
uprobe_register	events/uprobes.c	/^EXPORT_SYMBOL_GPL(uprobe_register);$/;"	v
uprobe_register	events/uprobes.c	/^int uprobe_register(struct inode *inode, loff_t offset, struct uprobe_consumer *uc)$/;"	f
uprobe_start_dup_mmap	events/uprobes.c	/^void uprobe_start_dup_mmap(void)$/;"	f
uprobe_table	swap/uprobe/swap_uprobes.c	/^struct hlist_head uprobe_table[UPROBE_TABLE_SIZE];$/;"	v	typeref:struct:hlist_head
uprobe_trace_entry_head	trace/trace_uprobe.c	/^struct uprobe_trace_entry_head {$/;"	s	file:
uprobe_trace_func	trace/trace_uprobe.c	/^static int uprobe_trace_func(struct trace_uprobe *tu, struct pt_regs *regs)$/;"	f	file:
uprobe_trace_print	trace/trace_uprobe.c	/^static void uprobe_trace_print(struct trace_uprobe *tu,$/;"	f	file:
uprobe_trap_handler	swap/uprobe/arch/arm/swap-asm/swap_uprobes.c	/^int uprobe_trap_handler(struct pt_regs *regs, unsigned int instr)$/;"	f
uprobe_unregister	events/uprobes.c	/^EXPORT_SYMBOL_GPL(uprobe_unregister);$/;"	v
uprobe_unregister	events/uprobes.c	/^void uprobe_unregister(struct inode *inode, loff_t offset, struct uprobe_consumer *uc)$/;"	f
uprobes_mmap_hash	events/uprobes.c	56;"	d	file:
uprobes_mmap_mutex	events/uprobes.c	/^static struct mutex uprobes_mmap_mutex[UPROBES_HASH_SZ];$/;"	v	typeref:struct:mutex	file:
uprobes_tree	events/uprobes.c	/^static struct rb_root uprobes_tree = RB_ROOT;$/;"	v	typeref:struct:rb_root	file:
uptime	sys.c	/^	s32 uptime;$/;"	m	struct:compat_sysinfo	file:
uretprobe	swap/uprobe/swap_uprobes.h	/^struct uretprobe {$/;"	s
uretprobe_dispatcher	trace/trace_uprobe.c	/^static int uretprobe_dispatcher(struct uprobe_consumer *con,$/;"	f	file:
uretprobe_handler_t	swap/uprobe/swap_uprobes.h	/^typedef int (*uretprobe_handler_t)(struct uretprobe_instance *,$/;"	t
uretprobe_inst_table	swap/uprobe/swap_uprobes.c	/^static struct hlist_head uretprobe_inst_table[UPROBE_TABLE_SIZE];$/;"	v	typeref:struct:hlist_head	file:
uretprobe_inst_table_head	swap/uprobe/swap_uprobes.c	/^static struct hlist_head *uretprobe_inst_table_head(void *hash_key)$/;"	f	file:
uretprobe_instance	swap/uprobe/swap_uprobes.h	/^struct uretprobe_instance {$/;"	s
uretprobe_lock	swap/uprobe/swap_uprobes.c	/^DEFINE_SPINLOCK(uretprobe_lock);	\/* Protects uretprobe_inst_table *\/$/;"	v
uretprobe_perf_func	trace/trace_uprobe.c	/^static void uretprobe_perf_func(struct trace_uprobe *tu, unsigned long func,$/;"	f	file:
uretprobe_trace_func	trace/trace_uprobe.c	/^static void uretprobe_trace_func(struct trace_uprobe *tu, unsigned long func,$/;"	f	file:
urinst_info	swap/uprobe/swap_uprobes.h	/^struct urinst_info {$/;"	s
urinst_info_create	swap/uprobe/swap_uprobes.c	/^static struct urinst_info *urinst_info_create(struct uretprobe_instance *ri)$/;"	f	file:
urinst_info_destroy	swap/uprobe/swap_uprobes.c	/^static void urinst_info_destroy(struct urinst_info *urinst)$/;"	f	file:
urinst_info_disarm	swap/uprobe/swap_uprobes.c	/^static void urinst_info_disarm(struct urinst_info *urinst, struct task_struct *task)$/;"	f	file:
urinst_info_get_current_hlist	swap/uprobe/swap_uprobes.c	/^EXPORT_SYMBOL_GPL(urinst_info_get_current_hlist);$/;"	v
urinst_info_get_current_hlist	swap/uprobe/swap_uprobes.c	/^void urinst_info_get_current_hlist(struct hlist_head *head, bool recycle)$/;"	f
urinst_info_put_current_hlist	swap/uprobe/swap_uprobes.c	/^EXPORT_SYMBOL_GPL(urinst_info_put_current_hlist);$/;"	v
urinst_info_put_current_hlist	swap/uprobe/swap_uprobes.c	/^void urinst_info_put_current_hlist(struct hlist_head *head,$/;"	f
urp_cleanup	swap/us_manager/probes/probe_info_new.c	/^static void urp_cleanup(struct probe_info *probe_i)$/;"	f	file:
urp_copy	swap/us_manager/probes/probe_info_new.c	/^static int urp_copy(struct probe_info *dst, const struct probe_info *src)$/;"	f	file:
urp_entry_handler	swap/us_manager/probes/probe_info_new.c	/^static int urp_entry_handler(struct uretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
urp_get_uprobe	swap/us_manager/probes/probe_info_new.c	/^static struct uprobe *urp_get_uprobe(struct us_ip *ip)$/;"	f	file:
urp_handler	swap/uprobe/arch/arm/swap-asm/swap_uprobes.c	/^static int urp_handler(struct pt_regs *regs, pid_t tgid)$/;"	f	file:
urp_iface	swap/us_manager/probes/probe_info_new.c	/^static struct probe_iface urp_iface = {$/;"	v	typeref:struct:probe_iface	file:
urp_init	swap/us_manager/probes/probe_info_new.c	/^static void urp_init(struct us_ip *ip)$/;"	f	file:
urp_register_probe	swap/us_manager/probes/probe_info_new.c	/^static int urp_register_probe(struct us_ip *ip)$/;"	f	file:
urp_ret_handler	swap/us_manager/probes/probe_info_new.c	/^static int urp_ret_handler(struct uretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
urp_uninit	swap/us_manager/probes/probe_info_new.c	/^static void urp_uninit(struct us_ip *ip)$/;"	f	file:
urp_unregister_probe	swap/us_manager/probes/probe_info_new.c	/^static void urp_unregister_probe(struct us_ip *ip, int disarm)$/;"	f	file:
us_filter	swap/us_manager/us_manager.c	/^static int us_filter(struct task_struct *task)$/;"	f	file:
us_inst_data	swap/parser/msg_parser.h	/^struct us_inst_data {$/;"	s
us_interaction_create	swap/driver/us_interaction.c	/^int us_interaction_create(void)$/;"	f
us_interaction_create	swap/driver/us_interaction.h	/^static inline int us_interaction_create(void)$/;"	f
us_interaction_destroy	swap/driver/us_interaction.c	/^void us_interaction_destroy(void)$/;"	f
us_interaction_destroy	swap/driver/us_interaction.h	/^static inline void us_interaction_destroy(void)$/;"	f
us_interaction_k2u_msg_t	swap/driver/us_interaction_msg.h	/^enum us_interaction_k2u_msg_t {$/;"	g
us_interaction_recv_msg	swap/driver/us_interaction.c	/^static void us_interaction_recv_msg(struct cn_msg *msg,$/;"	f	file:
us_interaction_send_msg	swap/driver/us_interaction.c	/^int us_interaction_send_msg(const void *data, size_t size)$/;"	f
us_interaction_send_msg	swap/driver/us_interaction.h	/^static inline int us_interaction_send_msg(const void *data, size_t size)$/;"	f
us_ip	swap/us_manager/sspt/ip.h	/^struct us_ip {$/;"	s
us_manager_dir	swap/us_manager/debugfs_us_manager.c	/^static struct dentry *us_manager_dir;$/;"	v	typeref:struct:dentry	file:
us_manager_reg_cb	swap/us_manager/callbacks.c	/^EXPORT_SYMBOL_GPL(us_manager_reg_cb);$/;"	v
us_manager_reg_cb	swap/us_manager/callbacks.c	/^int us_manager_reg_cb(enum callback_t cbt, void (*func)(void))$/;"	f
us_manager_unreg_cb	swap/us_manager/callbacks.c	/^EXPORT_SYMBOL_GPL(us_manager_unreg_cb);$/;"	v
us_manager_unreg_cb	swap/us_manager/callbacks.c	/^void us_manager_unreg_cb(int handle)$/;"	f
us_priv	swap/preload/preload_module.c	/^struct us_priv {$/;"	s	file:
usable	debug/kdb/kdb_main.c	/^	int usable;$/;"	m	struct:defcmd_set	file:
usage	debug/kdb/kdb_main.c	/^	char *usage;$/;"	m	struct:defcmd_set	file:
usage	seccomp.c	/^	atomic_t usage;$/;"	m	struct:seccomp_filter	file:
usage	swap/us_manager/pf/pf_group.c	/^	atomic_t usage;$/;"	m	struct:pf_group	file:
usage	swap/us_manager/sspt/sspt_proc.h	/^	atomic_t usage;$/;"	m	struct:sspt_proc
usage_avg	sched/sched.h	/^	atomic_t runnable_avg, usage_avg;$/;"	m	struct:task_group
usage_match	lockdep.c	/^static inline int usage_match(struct lock_list *entry, void *bit)$/;"	f	file:
usage_str	lockdep.c	/^static const char *usage_str[] =$/;"	v	file:
use_count	cgroup.c	/^	int use_count;$/;"	m	struct:cgroup_pidlist	file:
use_features0	swap/parser/msg_parser.h	/^	u64 use_features0;          \/**< Feature flags. *\/$/;"	m	struct:conf_data
use_features1	swap/parser/msg_parser.h	/^	u64 use_features1;          \/**< Feature flags. *\/$/;"	m	struct:conf_data
use_max_tr	trace/trace.h	/^	bool			use_max_tr;$/;"	m	struct:tracer
use_zero_page	swap/kprobe/swap_kprobes_deps.c	/^static inline int use_zero_page(struct vm_area_struct *vma)$/;"	f	file:
usecs_to_jiffies	time.c	/^EXPORT_SYMBOL(usecs_to_jiffies);$/;"	v
usecs_to_jiffies	time.c	/^unsigned long usecs_to_jiffies(const unsigned int u)$/;"	f
used_instances	swap/kprobe/swap_kprobes.h	/^	struct hlist_head used_instances;$/;"	m	struct:kretprobe	typeref:struct:kretprobe::hlist_head
used_instances	swap/uprobe/swap_uprobes.h	/^	struct hlist_head used_instances;   \/**< Used instances list *\/$/;"	m	struct:uretprobe	typeref:struct:uretprobe::hlist_head
used_space	power/snapshot.c	/^	unsigned int used_space;	\/* total size of objects allocated out$/;"	m	struct:chain_allocator	file:
user_enter	context_tracking.c	/^void user_enter(void)$/;"	f
user_exit	context_tracking.c	/^void user_exit(void)$/;"	f
user_namespaces_init	user_namespace.c	/^module_init(user_namespaces_init);$/;"	v
user_namespaces_init	user_namespace.c	/^static __init int user_namespaces_init(void)$/;"	f	file:
user_page	events/internal.h	/^	struct perf_event_mmap_page	*user_page;$/;"	m	struct:ring_buffer	typeref:struct:ring_buffer::perf_event_mmap_page
user_return_notifier_register	user-return-notifier.c	/^EXPORT_SYMBOL_GPL(user_return_notifier_register);$/;"	v
user_return_notifier_register	user-return-notifier.c	/^void user_return_notifier_register(struct user_return_notifier *urn)$/;"	f
user_return_notifier_unregister	user-return-notifier.c	/^EXPORT_SYMBOL_GPL(user_return_notifier_unregister);$/;"	v
user_return_notifier_unregister	user-return-notifier.c	/^void user_return_notifier_unregister(struct user_return_notifier *urn)$/;"	f
user_wake_lock	power/userwakelock.c	/^struct user_wake_lock {$/;"	s	file:
user_wake_locks	power/userwakelock.c	/^struct rb_root user_wake_locks;$/;"	v	typeref:struct:rb_root
usermodehelper_bset	kmod.c	/^static kernel_cap_t usermodehelper_bset = CAP_FULL_SET;$/;"	v	file:
usermodehelper_disabled	kmod.c	/^static enum umh_disable_depth usermodehelper_disabled = UMH_DISABLED;$/;"	v	typeref:enum:umh_disable_depth	file:
usermodehelper_inheritable	kmod.c	/^static kernel_cap_t usermodehelper_inheritable = CAP_FULL_SET;$/;"	v	file:
usermodehelper_init	kmod.c	/^void __init usermodehelper_init(void)$/;"	f
usermodehelper_read_lock_wait	kmod.c	/^EXPORT_SYMBOL_GPL(usermodehelper_read_lock_wait);$/;"	v
usermodehelper_read_lock_wait	kmod.c	/^long usermodehelper_read_lock_wait(long timeout)$/;"	f
usermodehelper_read_trylock	kmod.c	/^EXPORT_SYMBOL_GPL(usermodehelper_read_trylock);$/;"	v
usermodehelper_read_trylock	kmod.c	/^int usermodehelper_read_trylock(void)$/;"	f
usermodehelper_read_unlock	kmod.c	/^EXPORT_SYMBOL_GPL(usermodehelper_read_unlock);$/;"	v
usermodehelper_read_unlock	kmod.c	/^void usermodehelper_read_unlock(void)$/;"	f
usermodehelper_table	kmod.c	/^struct ctl_table usermodehelper_table[] = {$/;"	v	typeref:struct:ctl_table
userns_fixup_signal_uid	signal.c	/^static inline void userns_fixup_signal_uid(struct siginfo *info, struct task_struct *t)$/;"	f	file:
userns_get	user_namespace.c	/^static void *userns_get(struct task_struct *task)$/;"	f	file:
userns_install	user_namespace.c	/^static int userns_install(struct nsproxy *nsproxy, void *ns)$/;"	f	file:
userns_inum	user_namespace.c	/^static unsigned int userns_inum(void *ns)$/;"	f	file:
userns_may_setgroups	user_namespace.c	/^bool userns_may_setgroups(const struct user_namespace *ns)$/;"	f
userns_operations	user_namespace.c	/^const struct proc_ns_operations userns_operations = {$/;"	v	typeref:struct:proc_ns_operations
userns_put	user_namespace.c	/^static void userns_put(void *ns)$/;"	f	file:
usleep_range	timer.c	/^EXPORT_SYMBOL(usleep_range);$/;"	v
usleep_range	timer.c	/^void usleep_range(unsigned long min, unsigned long max)$/;"	f
usm_get_status	swap/us_manager/us_manager.c	/^EXPORT_SYMBOL_GPL(usm_get_status);$/;"	v
usm_get_status	swap/us_manager/us_manager.c	/^enum status_type usm_get_status(void)$/;"	f
usm_msg_comm	swap/parser/usm_msg.c	/^void usm_msg_comm(struct task_struct *task)$/;"	f
usm_msg_info	swap/parser/usm_msg.c	/^void usm_msg_info(struct task_struct *task, struct dentry *dentry)$/;"	f
usm_msg_map	swap/parser/usm_msg.c	/^void usm_msg_map(struct vm_area_struct *vma)$/;"	f
usm_msg_once	swap/parser/usm_msg.c	/^int usm_msg_once(void)$/;"	f
usm_msg_status_info	swap/parser/usm_msg.c	/^void usm_msg_status_info(struct task_struct *task)$/;"	f
usm_msg_term	swap/parser/usm_msg.c	/^void usm_msg_term(struct task_struct *task)$/;"	f
usm_msg_unmap	swap/parser/usm_msg.c	/^void usm_msg_unmap(unsigned long start, unsigned long end)$/;"	f
usm_once	swap/us_manager/us_manager.c	/^static int usm_once(void)$/;"	f	file:
usm_put_status	swap/us_manager/us_manager.c	/^EXPORT_SYMBOL_GPL(usm_put_status);$/;"	v
usm_put_status	swap/us_manager/us_manager.c	/^void usm_put_status(enum status_type st)$/;"	f
usm_start	swap/us_manager/us_manager.c	/^EXPORT_SYMBOL_GPL(usm_start);$/;"	v
usm_start	swap/us_manager/us_manager.c	/^int usm_start(void)$/;"	f
usm_stop	swap/us_manager/us_manager.c	/^EXPORT_SYMBOL_GPL(usm_stop);$/;"	v
usm_stop	swap/us_manager/us_manager.c	/^int usm_stop(void)$/;"	f
uts	power/power.h	/^	struct new_utsname	uts;$/;"	m	struct:swsusp_info	typeref:struct:swsusp_info::new_utsname
uts_kern_table	utsname_sysctl.c	/^static struct ctl_table uts_kern_table[] = {$/;"	v	typeref:struct:ctl_table	file:
uts_proc_notify	utsname_sysctl.c	/^void uts_proc_notify(enum uts_proc proc)$/;"	f
uts_root_table	utsname_sysctl.c	/^static struct ctl_table uts_root_table[] = {$/;"	v	typeref:struct:ctl_table	file:
uts_sem	sys.c	/^DECLARE_RWSEM(uts_sem);$/;"	v
utsname_sysctl_init	utsname_sysctl.c	/^__initcall(utsname_sysctl_init);$/;"	v
utsname_sysctl_init	utsname_sysctl.c	/^static int __init utsname_sysctl_init(void)$/;"	f	file:
utsns_get	utsname.c	/^static void *utsns_get(struct task_struct *task)$/;"	f	file:
utsns_install	utsname.c	/^static int utsns_install(struct nsproxy *nsproxy, void *new)$/;"	f	file:
utsns_inum	utsname.c	/^static unsigned int utsns_inum(void *vp)$/;"	f	file:
utsns_operations	utsname.c	/^const struct proc_ns_operations utsns_operations = {$/;"	v	typeref:struct:proc_ns_operations
utsns_put	utsname.c	/^static void utsns_put(void *ns)$/;"	f	file:
vaddr	events/uprobes.c	/^	unsigned long vaddr;$/;"	m	struct:map_info	file:
vaddr	swap/uprobe/swap_uprobes.h	/^	unsigned long vaddr;$/;"	m	struct:uinst_info
vaddr	trace/trace_uprobe.c	/^	unsigned long		vaddr[];$/;"	m	struct:uprobe_trace_entry_head	file:
vaddr_to_offset	events/uprobes.c	/^static loff_t vaddr_to_offset(struct vm_area_struct *vma, unsigned long vaddr)$/;"	f	file:
val	cpuset.c	/^	int val;		\/* most recent output value *\/$/;"	m	struct:fmeter	file:
val	params.c	/^	char val[];$/;"	m	struct:kmalloced_param	file:
val	trace/trace.h	/^	u32			val;$/;"	m	struct:tracer_flags
val	trace/trace.h	/^	u64 			val;$/;"	m	struct:filter_pred
valid	taskstats.c	/^	char valid;$/;"	m	struct:listener	file:
valid_state	lockdep.c	/^valid_state(struct task_struct *curr, struct held_lock *this,$/;"	f	file:
valid_state	power/power.h	/^static inline bool valid_state(suspend_state_t state) { return false; }$/;"	f
valid_state	power/suspend.c	/^bool valid_state(suspend_state_t state)$/;"	f
valid_vma	events/uprobes.c	/^static bool valid_vma(struct vm_area_struct *vma, bool is_register)$/;"	f	file:
validate_chain	lockdep.c	/^static inline int validate_chain(struct task_struct *curr,$/;"	f	file:
validate_chain	lockdep.c	/^static int validate_chain(struct task_struct *curr, struct lockdep_map *lock,$/;"	f	file:
validate_change	cpuset.c	/^static int validate_change(const struct cpuset *cur, const struct cpuset *trial)$/;"	f	file:
validate_coredump_safety	sysctl.c	/^static void validate_coredump_safety(void)$/;"	f	file:
validate_creds_for_do_exit	cred.c	/^void validate_creds_for_do_exit(struct task_struct *tsk)$/;"	f
validate_hw_breakpoint	events/hw_breakpoint.c	/^static int validate_hw_breakpoint(struct perf_event *bp)$/;"	f	file:
value	debug/kdb/kdb_private.h	/^		unsigned long value;	\/* Address of symbol *\/$/;"	m	struct:__ksymtab
value	kallsyms.c	/^	unsigned long value;$/;"	m	struct:kallsym_iter	file:
value	sched/fair.c	/^	int *value;$/;"	m	struct:hmp_global_attr	file:
values	gcov/gcov.h	/^	gcov_type	*values;$/;"	m	struct:gcov_ctr_info
var_count	swap/fbiprobe/fbiprobe.h	/^	uint8_t var_count;$/;"	m	struct:fbi_info
var_data	swap/fbiprobe/fbi_msg.c	/^	char var_data[0];$/;"	m	struct:msg_fbi	file:
var_id	swap/fbiprobe/fbi_msg.c	/^	u32 var_id;$/;"	m	struct:msg_fbi	file:
var_id	swap/fbiprobe/fbiprobe.h	/^	uint64_t var_id;           \/* Variable identifier$/;"	m	struct:fbi_var_data
vars	swap/fbiprobe/fbiprobe.h	/^	struct fbi_var_data *vars;$/;"	m	struct:fbi_info	typeref:struct:fbi_info::fbi_var_data
vec	timer.c	/^	struct list_head vec[TVN_SIZE];$/;"	m	struct:tvec	typeref:struct:tvec::list_head	file:
vec	timer.c	/^	struct list_head vec[TVR_SIZE];$/;"	m	struct:tvec_root	typeref:struct:tvec_root::list_head	file:
verbose	lockdep.c	/^static int verbose(struct lock_class *class)$/;"	f	file:
verbose	rcutorture.c	/^static bool verbose;		\/* Print more debug info. *\/$/;"	v	file:
verif_pid	trace/trace_functions_graph.c	/^verif_pid(struct trace_seq *s, pid_t pid, int cpu, struct fgraph_data *data)$/;"	f	file:
verify_export_symbols	module.c	/^static int verify_export_symbols(struct module *mod)$/;"	f	file:
verify_opcode	events/uprobes.c	/^static int verify_opcode(struct page *page, unsigned long vaddr, uprobe_opcode_t *new_opcode)$/;"	f	file:
vermagic	module.c	/^static const char vermagic[] = VERMAGIC_STRING;$/;"	v	file:
vers	module.c	/^		unsigned int sym, str, mod, vers, info, pcpu;$/;"	m	struct:load_info::__anon26	file:
version	gcov/gcov.h	/^	unsigned int			version;$/;"	m	struct:gcov_info
version	module.c	/^MODINFO_ATTR(version);$/;"	v
version_code	power/power.h	/^	u32			version_code;$/;"	m	struct:swsusp_info
version_sysfs_builtin	params.c	/^static void __init version_sysfs_builtin(void)$/;"	f	file:
very_verbose	lockdep.c	/^static int very_verbose(struct lock_class *class)$/;"	f	file:
virq_debug_fops	irq/irqdomain.c	/^static const struct file_operations virq_debug_fops = {$/;"	v	typeref:struct:file_operations	file:
virq_debug_open	irq/irqdomain.c	/^static int virq_debug_open(struct inode *inode, struct file *file)$/;"	f	file:
virq_debug_show	irq/irqdomain.c	/^static int virq_debug_show(struct seq_file *m, void *private)$/;"	f	file:
virt_ticks	posix-cpu-timers.c	/^static inline cputime_t virt_ticks(struct task_struct *p)$/;"	f	file:
vkdb_printf	debug/kdb/kdb_io.c	/^int vkdb_printf(const char *fmt, va_list ap)$/;"	f
vm_area_cachep	fork.c	/^struct kmem_cache *vm_area_cachep;$/;"	v	typeref:struct:kmem_cache
vm_end	swap/us_manager/sspt/sspt_file.h	/^	unsigned long vm_end;		\/**< VM end *\/$/;"	m	struct:sspt_file
vm_start	swap/us_manager/sspt/sspt_file.h	/^	unsigned long vm_start;		\/**< VM start *\/$/;"	m	struct:sspt_file
vm_table	sysctl.c	/^static struct ctl_table vm_table[] = {$/;"	v	typeref:struct:ctl_table	file:
vm_table	sysctl.c	/^static struct ctl_table vm_table[];$/;"	v	typeref:struct:ctl_table	file:
vma	events/core.c	/^	struct vm_area_struct	*vma;$/;"	m	struct:perf_mmap_event	typeref:struct:perf_mmap_event::vm_area_struct	file:
vma_has_uprobes	events/uprobes.c	/^vma_has_uprobes(struct vm_area_struct *vma, unsigned long start, unsigned long end)$/;"	f	file:
vmcoreinfo	ksysfs.c	/^KERNEL_ATTR_RO(vmcoreinfo);$/;"	v
vmcoreinfo_append_str	kexec.c	/^void vmcoreinfo_append_str(const char *fmt, ...)$/;"	f
vmcoreinfo_data	kexec.c	/^static unsigned char vmcoreinfo_data[VMCOREINFO_BYTES];$/;"	v	file:
vmcoreinfo_max_size	kexec.c	/^size_t vmcoreinfo_max_size = sizeof(vmcoreinfo_data);$/;"	v
vmcoreinfo_note	kexec.c	/^u32 vmcoreinfo_note[VMCOREINFO_NOTE_SIZE\/4];$/;"	v
vmcoreinfo_show	ksysfs.c	/^static ssize_t vmcoreinfo_show(struct kobject *kobj,$/;"	f	file:
vmcoreinfo_size	kexec.c	/^size_t vmcoreinfo_size;$/;"	v
vprintk	printk.c	/^EXPORT_SYMBOL(vprintk);$/;"	v
vprintk	printk.c	/^asmlinkage int vprintk(const char *fmt, va_list args)$/;"	f
vprintk_emit	printk.c	/^EXPORT_SYMBOL(vprintk_emit);$/;"	v
vprintk_emit	printk.c	/^asmlinkage int vprintk_emit(int facility, int level,$/;"	f
vtime_account_idle	sched/cputime.c	/^void vtime_account_idle(struct task_struct *tsk)$/;"	f
vtime_account_irq_enter	sched/cputime.c	/^EXPORT_SYMBOL_GPL(vtime_account_irq_enter);$/;"	v
vtime_account_irq_enter	sched/cputime.c	/^void vtime_account_irq_enter(struct task_struct *tsk)$/;"	f
vtime_account_irq_exit	sched/cputime.c	/^void vtime_account_irq_exit(struct task_struct *tsk)$/;"	f
vtime_account_system	sched/cputime.c	/^void vtime_account_system(struct task_struct *tsk)$/;"	f
vtime_account_user	sched/cputime.c	/^void vtime_account_user(struct task_struct *tsk)$/;"	f
vtime_accounting_enabled	sched/cputime.c	/^bool vtime_accounting_enabled(void)$/;"	f
vtime_delta	sched/cputime.c	/^static unsigned long long vtime_delta(struct task_struct *tsk)$/;"	f	file:
vtime_guest_enter	sched/cputime.c	/^void vtime_guest_enter(struct task_struct *tsk)$/;"	f
vtime_guest_exit	sched/cputime.c	/^void vtime_guest_exit(struct task_struct *tsk)$/;"	f
vtime_init_idle	sched/cputime.c	/^void vtime_init_idle(struct task_struct *t, int cpu)$/;"	f
vtime_task_switch	sched/cputime.c	/^void vtime_task_switch(struct task_struct *prev)$/;"	f
vtime_user_enter	sched/cputime.c	/^void vtime_user_enter(struct task_struct *tsk)$/;"	f
wait	cgroup.c	/^	wait_queue_t wait;$/;"	m	struct:cgroup_event	file:
wait_consider_task	exit.c	/^static int wait_consider_task(struct wait_opts *wo, int ptrace,$/;"	f	file:
wait_for_auditd	audit.c	/^static void wait_for_auditd(unsigned long sleep_time)$/;"	f	file:
wait_for_common	sched/core.c	/^wait_for_common(struct completion *x, long timeout, int state)$/;"	f	file:
wait_for_common_io	sched/core.c	/^wait_for_common_io(struct completion *x, long timeout, int state)$/;"	f	file:
wait_for_completion	sched/core.c	/^EXPORT_SYMBOL(wait_for_completion);$/;"	v
wait_for_completion	sched/core.c	/^void __sched wait_for_completion(struct completion *x)$/;"	f
wait_for_completion_interruptible	sched/core.c	/^EXPORT_SYMBOL(wait_for_completion_interruptible);$/;"	v
wait_for_completion_interruptible	sched/core.c	/^int __sched wait_for_completion_interruptible(struct completion *x)$/;"	f
wait_for_completion_interruptible_timeout	sched/core.c	/^EXPORT_SYMBOL(wait_for_completion_interruptible_timeout);$/;"	v
wait_for_completion_interruptible_timeout	sched/core.c	/^wait_for_completion_interruptible_timeout(struct completion *x,$/;"	f
wait_for_completion_io	sched/core.c	/^EXPORT_SYMBOL(wait_for_completion_io);$/;"	v
wait_for_completion_io	sched/core.c	/^void __sched wait_for_completion_io(struct completion *x)$/;"	f
wait_for_completion_io_timeout	sched/core.c	/^EXPORT_SYMBOL(wait_for_completion_io_timeout);$/;"	v
wait_for_completion_io_timeout	sched/core.c	/^wait_for_completion_io_timeout(struct completion *x, unsigned long timeout)$/;"	f
wait_for_completion_killable	sched/core.c	/^EXPORT_SYMBOL(wait_for_completion_killable);$/;"	v
wait_for_completion_killable	sched/core.c	/^int __sched wait_for_completion_killable(struct completion *x)$/;"	f
wait_for_completion_killable_timeout	sched/core.c	/^EXPORT_SYMBOL(wait_for_completion_killable_timeout);$/;"	v
wait_for_completion_killable_timeout	sched/core.c	/^wait_for_completion_killable_timeout(struct completion *x,$/;"	f
wait_for_completion_timeout	sched/core.c	/^EXPORT_SYMBOL(wait_for_completion_timeout);$/;"	v
wait_for_completion_timeout	sched/core.c	/^wait_for_completion_timeout(struct completion *x, unsigned long timeout)$/;"	f
wait_for_fb_sleep	power/fbearlysuspend.c	/^power_ro_attr(wait_for_fb_sleep);$/;"	v
wait_for_fb_sleep_show	power/fbearlysuspend.c	/^static ssize_t wait_for_fb_sleep_show(struct kobject *kobj,$/;"	f	file:
wait_for_fb_wake	power/fbearlysuspend.c	/^power_ro_attr(wait_for_fb_wake);$/;"	v
wait_for_fb_wake_show	power/fbearlysuspend.c	/^static ssize_t wait_for_fb_wake_show(struct kobject *kobj,$/;"	f	file:
wait_for_helper	kmod.c	/^static int wait_for_helper(void *data)$/;"	f	file:
wait_for_kprobe_optimizer	kprobes.c	/^static __kprobes void wait_for_kprobe_optimizer(void)$/;"	f	file:
wait_for_kprobe_optimizer	kprobes.c	922;"	d	file:
wait_for_vfork_done	fork.c	/^static int wait_for_vfork_done(struct task_struct *child,$/;"	f	file:
wait_for_wakeup	power/wakelock.c	/^static int wait_for_wakeup;$/;"	v	file:
wait_for_zero_refcount	module.c	/^static void wait_for_zero_refcount(struct module *mod)$/;"	f	file:
wait_noreap_copyout	exit.c	/^static int wait_noreap_copyout(struct wait_opts *wo, struct task_struct *p,$/;"	f	file:
wait_opts	exit.c	/^struct wait_opts {$/;"	s	file:
wait_pipe	trace/trace.h	/^	int			(*wait_pipe)(struct trace_iterator *iter);$/;"	m	struct:tracer
wait_rcu_gp	rcupdate.c	/^EXPORT_SYMBOL_GPL(wait_rcu_gp);$/;"	v
wait_rcu_gp	rcupdate.c	/^void wait_rcu_gp(call_rcu_func_t crf)$/;"	f
wait_task_continued	exit.c	/^static int wait_task_continued(struct wait_opts *wo, struct task_struct *p)$/;"	f	file:
wait_task_inactive	sched/core.c	/^unsigned long wait_task_inactive(struct task_struct *p, long match_state)$/;"	f
wait_task_stopped	exit.c	/^static int wait_task_stopped(struct wait_opts *wo,$/;"	f	file:
wait_task_zombie	exit.c	/^static int wait_task_zombie(struct wait_opts *wo, struct task_struct *p)$/;"	f	file:
wait_to_die	trace/ring_buffer_benchmark.c	/^static void wait_to_die(void)$/;"	f	file:
waiter	trace/trace.h	/^	struct task_struct	*waiter;$/;"	m	struct:trace_array	typeref:struct:trace_array::task_struct
waiters	trace/ring_buffer.c	/^	wait_queue_head_t		waiters;$/;"	m	struct:rb_irq_work	file:
waiters_pending	trace/ring_buffer.c	/^	bool				waiters_pending;$/;"	m	struct:rb_irq_work	file:
wake_affine	sched/fair.c	/^static int wake_affine(struct sched_domain *sd, struct task_struct *p, int sync)$/;"	f	file:
wake_bit_function	wait.c	/^EXPORT_SYMBOL(wake_bit_function);$/;"	v
wake_bit_function	wait.c	/^int wake_bit_function(wait_queue_t *wait, unsigned mode, int sync, void *arg)$/;"	f
wake_for_idle_pull	sched/sched.h	/^	int wake_for_idle_pull;$/;"	m	struct:rq
wake_futex	futex.c	/^static void wake_futex(struct futex_q *q)$/;"	f	file:
wake_futex_pi	futex.c	/^static int wake_futex_pi(u32 __user *uaddr, u32 uval, struct futex_q *this)$/;"	f	file:
wake_list	sched/sched.h	/^	struct llist_head wake_list;$/;"	m	struct:rq	typeref:struct:rq::llist_head
wake_lock	power/main.c	/^power_attr(wake_lock);$/;"	v
wake_lock	power/userwakelock.c	/^	struct wake_lock	wake_lock;$/;"	m	struct:user_wake_lock	typeref:struct:user_wake_lock::wake_lock	file:
wake_lock	power/wakelock.c	/^EXPORT_SYMBOL(wake_lock);$/;"	v
wake_lock	power/wakelock.c	/^void wake_lock(struct wake_lock *lock)$/;"	f
wake_lock_active	power/wakelock.c	/^EXPORT_SYMBOL(wake_lock_active);$/;"	v
wake_lock_active	power/wakelock.c	/^int wake_lock_active(struct wake_lock *lock)$/;"	f
wake_lock_destroy	power/wakelock.c	/^EXPORT_SYMBOL(wake_lock_destroy);$/;"	v
wake_lock_destroy	power/wakelock.c	/^void wake_lock_destroy(struct wake_lock *lock)$/;"	f
wake_lock_init	power/wakelock.c	/^EXPORT_SYMBOL(wake_lock_init);$/;"	v
wake_lock_init	power/wakelock.c	/^void wake_lock_init(struct wake_lock *lock, int type, const char *name)$/;"	f
wake_lock_internal	power/wakelock.c	/^static void wake_lock_internal($/;"	f	file:
wake_lock_show	power/userwakelock.c	/^ssize_t wake_lock_show($/;"	f
wake_lock_store	power/userwakelock.c	/^ssize_t wake_lock_store($/;"	f
wake_lock_timeout	power/wakelock.c	/^EXPORT_SYMBOL(wake_lock_timeout);$/;"	v
wake_lock_timeout	power/wakelock.c	/^void wake_lock_timeout(struct wake_lock *lock, long timeout)$/;"	f
wake_threads_waitq	irq/manage.c	/^static void wake_threads_waitq(struct irq_desc *desc)$/;"	f	file:
wake_unlock	power/main.c	/^power_attr(wake_unlock);$/;"	v
wake_unlock	power/wakelock.c	/^EXPORT_SYMBOL(wake_unlock);$/;"	v
wake_unlock	power/wakelock.c	/^void wake_unlock(struct wake_lock *lock)$/;"	f
wake_unlock_show	power/userwakelock.c	/^ssize_t wake_unlock_show($/;"	f
wake_unlock_stat_locked	power/wakelock.c	/^static void wake_unlock_stat_locked(struct wake_lock *lock, int expired)$/;"	f	file:
wake_unlock_store	power/userwakelock.c	/^ssize_t wake_unlock_store($/;"	f
wake_up_bit	wait.c	/^EXPORT_SYMBOL(wake_up_bit);$/;"	v
wake_up_bit	wait.c	/^void wake_up_bit(void *word, int bit)$/;"	f
wake_up_full_nohz_cpu	sched/core.c	/^static bool wake_up_full_nohz_cpu(int cpu)$/;"	f	file:
wake_up_idle_cpu	sched/core.c	/^static void wake_up_idle_cpu(int cpu)$/;"	f	file:
wake_up_klogd	printk.c	/^void wake_up_klogd(void)$/;"	f
wake_up_klogd_work_func	printk.c	/^static void wake_up_klogd_work_func(struct irq_work *irq_work)$/;"	f	file:
wake_up_new_task	sched/core.c	/^void wake_up_new_task(struct task_struct *p)$/;"	f
wake_up_nohz_cpu	sched/core.c	/^void wake_up_nohz_cpu(int cpu)$/;"	f
wake_up_process	sched/core.c	/^EXPORT_SYMBOL(wake_up_process);$/;"	v
wake_up_process	sched/core.c	/^int wake_up_process(struct task_struct *p)$/;"	f
wake_up_state	sched/core.c	/^int wake_up_state(struct task_struct *p, unsigned int state)$/;"	f
wake_up_worker	workqueue.c	/^static void wake_up_worker(struct worker_pool *pool)$/;"	f	file:
wakelock_stats_fops	power/wakelock.c	/^static const struct file_operations wakelock_stats_fops = {$/;"	v	typeref:struct:file_operations	file:
wakelock_stats_open	power/wakelock.c	/^static int wakelock_stats_open(struct inode *inode, struct file *file)$/;"	f	file:
wakelock_stats_show	power/wakelock.c	/^static int wakelock_stats_show(struct seq_file *m, void *unused)$/;"	f	file:
wakelocks_exit	power/wakelock.c	/^module_exit(wakelocks_exit);$/;"	v
wakelocks_exit	power/wakelock.c	/^static void  __exit wakelocks_exit(void)$/;"	f	file:
wakelocks_init	power/wakelock.c	/^core_initcall(wakelocks_init);$/;"	v
wakelocks_init	power/wakelock.c	/^static int __init wakelocks_init(void)$/;"	f	file:
wakeme_after_rcu	rcupdate.c	/^static void wakeme_after_rcu(struct rcu_head  *head)$/;"	f	file:
wakeme_after_rcu	srcu.c	/^static void wakeme_after_rcu(struct rcu_head *head)$/;"	f	file:
wakeup	events/internal.h	/^	local_t				wakeup;		\/* wakeup stamp      *\/$/;"	m	struct:ring_buffer
wakeup_by_interrupt	power/sleep_history.c	/^	char wakeup_by_interrupt[WAKEUP_BY_STRING];$/;"	m	union:wakeup_history	file:
wakeup_count	power/main.c	/^power_attr(wakeup_count);$/;"	v
wakeup_count_show	power/main.c	/^static ssize_t wakeup_count_show(struct kobject *kobj,$/;"	f	file:
wakeup_count_store	power/main.c	/^static ssize_t wakeup_count_store(struct kobject *kobj,$/;"	f	file:
wakeup_cpu	trace/trace_sched_wakeup.c	/^static int			wakeup_cpu;$/;"	v	file:
wakeup_current_cpu	trace/trace_sched_wakeup.c	/^static int			wakeup_current_cpu;$/;"	v	file:
wakeup_flag_changed	trace/trace_sched_wakeup.c	/^static int wakeup_flag_changed(struct tracer *tracer, u32 mask, int set)$/;"	f	file:
wakeup_function_set	trace/trace_sched_wakeup.c	/^static void wakeup_function_set(int set)$/;"	f	file:
wakeup_gran	sched/fair.c	/^wakeup_gran(struct sched_entity *curr, struct sched_entity *se)$/;"	f	file:
wakeup_graph_entry	trace/trace_sched_wakeup.c	/^static int wakeup_graph_entry(struct ftrace_graph_ent *trace)$/;"	f	file:
wakeup_graph_return	trace/trace_sched_wakeup.c	/^static void wakeup_graph_return(struct ftrace_graph_ret *trace) { }$/;"	f	file:
wakeup_graph_return	trace/trace_sched_wakeup.c	/^static void wakeup_graph_return(struct ftrace_graph_ret *trace)$/;"	f	file:
wakeup_history	power/sleep_history.c	/^union wakeup_history {$/;"	u	file:
wakeup_interval	trace/ring_buffer_benchmark.c	/^static int wakeup_interval = 100;$/;"	v	file:
wakeup_lock	trace/trace_sched_wakeup.c	/^static arch_spinlock_t wakeup_lock =$/;"	v	file:
wakeup_next_waiter	rtmutex.c	/^static void wakeup_next_waiter(struct rt_mutex *lock)$/;"	f	file:
wakeup_preempt_entity	sched/fair.c	/^wakeup_preempt_entity(struct sched_entity *curr, struct sched_entity *se)$/;"	f	file:
wakeup_print_header	trace/trace_sched_wakeup.c	/^static void wakeup_print_header(struct seq_file *s)$/;"	f	file:
wakeup_print_line	trace/trace_sched_wakeup.c	/^static enum print_line_t wakeup_print_line(struct trace_iterator *iter)$/;"	f	file:
wakeup_prio	trace/trace_sched_wakeup.c	/^static unsigned			wakeup_prio = -1;$/;"	v	file:
wakeup_readers	relay.c	/^static void wakeup_readers(unsigned long data)$/;"	f	file:
wakeup_reason	power/wakeup_reason.c	/^static struct kobject *wakeup_reason;$/;"	v	typeref:struct:kobject	file:
wakeup_reason_init	power/wakeup_reason.c	/^int __init wakeup_reason_init(void)$/;"	f
wakeup_reason_init	power/wakeup_reason.c	/^late_initcall(wakeup_reason_init);$/;"	v
wakeup_reason_pm_event	power/wakeup_reason.c	/^static int wakeup_reason_pm_event(struct notifier_block *notifier,$/;"	f	file:
wakeup_reason_pm_notifier_block	power/wakeup_reason.c	/^static struct notifier_block wakeup_reason_pm_notifier_block = {$/;"	v	typeref:struct:notifier_block	file:
wakeup_reset	trace/trace_sched_wakeup.c	/^static void wakeup_reset(struct trace_array *tr)$/;"	f	file:
wakeup_rt	trace/trace_sched_wakeup.c	/^static int			wakeup_rt;$/;"	v	file:
wakeup_rt_tracer_init	trace/trace_sched_wakeup.c	/^static int wakeup_rt_tracer_init(struct trace_array *tr)$/;"	f	file:
wakeup_set_flag	trace/trace_sched_wakeup.c	/^static int wakeup_set_flag(u32 old_flags, u32 bit, int set)$/;"	f	file:
wakeup_softirqd	softirq.c	/^static void wakeup_softirqd(void)$/;"	f	file:
wakeup_task	trace/trace_sched_wakeup.c	/^static struct task_struct	*wakeup_task;$/;"	v	typeref:struct:task_struct	file:
wakeup_trace	trace/trace_sched_wakeup.c	/^static struct trace_array	*wakeup_trace;$/;"	v	typeref:struct:trace_array	file:
wakeup_trace_close	trace/trace_sched_wakeup.c	/^static void wakeup_trace_close(struct trace_iterator *iter) { }$/;"	f	file:
wakeup_trace_close	trace/trace_sched_wakeup.c	/^static void wakeup_trace_close(struct trace_iterator *iter)$/;"	f	file:
wakeup_trace_open	trace/trace_sched_wakeup.c	/^static void wakeup_trace_open(struct trace_iterator *iter) { }$/;"	f	file:
wakeup_trace_open	trace/trace_sched_wakeup.c	/^static void wakeup_trace_open(struct trace_iterator *iter)$/;"	f	file:
wakeup_tracer_call	trace/trace_sched_wakeup.c	/^wakeup_tracer_call(unsigned long ip, unsigned long parent_ip,$/;"	f	file:
wakeup_tracer_init	trace/trace_sched_wakeup.c	/^static int wakeup_tracer_init(struct trace_array *tr)$/;"	f	file:
wakeup_tracer_reset	trace/trace_sched_wakeup.c	/^static void wakeup_tracer_reset(struct trace_array *tr)$/;"	f	file:
wakeup_tracer_start	trace/trace_sched_wakeup.c	/^static void wakeup_tracer_start(struct trace_array *tr)$/;"	f	file:
wakeup_tracer_stop	trace/trace_sched_wakeup.c	/^static void wakeup_tracer_stop(struct trace_array *tr)$/;"	f	file:
wakeup_work	rcutree.h	/^	struct irq_work wakeup_work;		\/* Postponed wakeups *\/$/;"	m	struct:rcu_state	typeref:struct:rcu_state::irq_work
wakeupby_integer_to_char	power/sleep_history.c	/^void wakeupby_integer_to_char(char *char_str, int digit)$/;"	f
wakeupby_string_add	power/sleep_history.c	/^void wakeupby_string_add(char *str1, char *str2)$/;"	f
wakeupby_string_legth	power/sleep_history.c	/^int wakeupby_string_legth(char *str3)$/;"	f
walk_pred_tree	trace/trace_events_filter.c	/^static int walk_pred_tree(struct filter_pred *preds,$/;"	f	file:
walk_return	trace/trace_events_filter.c	/^enum walk_return {$/;"	g	file:
walk_system_ram_range	resource.c	/^int walk_system_ram_range(unsigned long start_pfn, unsigned long nr_pages,$/;"	f
walk_tg_tree	sched/sched.h	/^static inline int walk_tg_tree(tg_visitor down, tg_visitor up, void *data)$/;"	f
walk_tg_tree_from	sched/core.c	/^int walk_tg_tree_from(struct task_group *from,$/;"	f
wants_signal	signal.c	/^static inline int wants_signal(int sig, struct task_struct *p)$/;"	f	file:
warn	module.c	/^	bool warn;$/;"	m	struct:find_symbol_arg	file:
warn_deprecated_v2	capability.c	/^static void warn_deprecated_v2(void)$/;"	f	file:
warn_failed_init_tracer	trace/trace_selftest.c	/^static inline void warn_failed_init_tracer(struct tracer *trace, int init_ret)$/;"	f	file:
warn_legacy_capability_use	capability.c	/^static void warn_legacy_capability_use(void)$/;"	f	file:
warn_no_thread	irq/handle.c	/^static void warn_no_thread(unsigned int irq, struct irqaction *action)$/;"	f	file:
warn_on_bintable	sysctl_binary.c	/^static void warn_on_bintable(const int *name, int nlen)$/;"	f	file:
warn_slowpath_common	panic.c	/^static void warn_slowpath_common(const char *file, int line, void *caller,$/;"	f	file:
warn_slowpath_fmt	panic.c	/^EXPORT_SYMBOL(warn_slowpath_fmt);$/;"	v
warn_slowpath_fmt	panic.c	/^void warn_slowpath_fmt(const char *file, int line, const char *fmt, ...)$/;"	f
warn_slowpath_fmt_taint	panic.c	/^EXPORT_SYMBOL(warn_slowpath_fmt_taint);$/;"	v
warn_slowpath_fmt_taint	panic.c	/^void warn_slowpath_fmt_taint(const char *file, int line,$/;"	f
warn_slowpath_null	panic.c	/^EXPORT_SYMBOL(warn_slowpath_null);$/;"	v
warn_slowpath_null	panic.c	/^void warn_slowpath_null(const char *file, int line)$/;"	f
warp_clock	time.c	/^static inline void warp_clock(void)$/;"	f	file:
watchdog	hung_task.c	/^static int watchdog(void *dummy)$/;"	f	file:
watchdog	sched/rt.c	/^static void watchdog(struct rq *rq, struct task_struct *p)$/;"	f	file:
watchdog	time/clocksource.c	/^static struct clocksource *watchdog;$/;"	v	typeref:struct:clocksource	file:
watchdog	watchdog.c	/^static void watchdog(unsigned int cpu)$/;"	f	file:
watchdog_check_hardlockup_other_cpu	watchdog.c	/^static inline void watchdog_check_hardlockup_other_cpu(void) { return; }$/;"	f	file:
watchdog_check_hardlockup_other_cpu	watchdog.c	/^static void watchdog_check_hardlockup_other_cpu(void)$/;"	f	file:
watchdog_cpus	watchdog.c	/^static cpumask_t __read_mostly watchdog_cpus;$/;"	v	file:
watchdog_disable	watchdog.c	/^static void watchdog_disable(unsigned int cpu)$/;"	f	file:
watchdog_disable_all_cpus	watchdog.c	/^static void watchdog_disable_all_cpus(void)$/;"	f	file:
watchdog_disabled	watchdog.c	/^static int __read_mostly watchdog_disabled;$/;"	v	file:
watchdog_enable	watchdog.c	/^static void watchdog_enable(unsigned int cpu)$/;"	f	file:
watchdog_enable_all_cpus	watchdog.c	/^static void watchdog_enable_all_cpus(void)$/;"	f	file:
watchdog_enabled	watchdog.c	/^int watchdog_enabled = 1;$/;"	v
watchdog_interrupt_count	watchdog.c	/^static void watchdog_interrupt_count(void)$/;"	f	file:
watchdog_next_cpu	watchdog.c	/^static unsigned int watchdog_next_cpu(unsigned int cpu)$/;"	f	file:
watchdog_nmi_disable	watchdog.c	/^static void watchdog_nmi_disable(unsigned int cpu) { return; }$/;"	f	file:
watchdog_nmi_disable	watchdog.c	/^static void watchdog_nmi_disable(unsigned int cpu)$/;"	f	file:
watchdog_nmi_enable	watchdog.c	/^static int watchdog_nmi_enable(unsigned int cpu) { return 0; }$/;"	f	file:
watchdog_nmi_enable	watchdog.c	/^static int watchdog_nmi_enable(unsigned int cpu)$/;"	f	file:
watchdog_overflow_callback	watchdog.c	/^static void watchdog_overflow_callback(struct perf_event *event,$/;"	f	file:
watchdog_reset_pending	time/clocksource.c	/^static atomic_t watchdog_reset_pending;$/;"	v	file:
watchdog_running	time/clocksource.c	/^static int watchdog_running;$/;"	v	file:
watchdog_set_prio	watchdog.c	/^static void watchdog_set_prio(unsigned int policy, unsigned int prio)$/;"	f	file:
watchdog_should_run	watchdog.c	/^static int watchdog_should_run(unsigned int cpu)$/;"	f	file:
watchdog_task	hung_task.c	/^static struct task_struct *watchdog_task;$/;"	v	typeref:struct:task_struct	file:
watchdog_threads	watchdog.c	/^static struct smp_hotplug_thread watchdog_threads = {$/;"	v	typeref:struct:smp_hotplug_thread	file:
watchdog_thresh	watchdog.c	/^int __read_mostly watchdog_thresh = 10;$/;"	v
watchdog_timer	time/clocksource.c	/^static struct timer_list watchdog_timer;$/;"	v	typeref:struct:timer_list	file:
watchdog_timer_fn	watchdog.c	/^static enum hrtimer_restart watchdog_timer_fn(struct hrtimer *hrtimer)$/;"	f	file:
watches	audit_watch.c	/^	struct list_head	watches; \/* anchor for audit_watch->wlist *\/$/;"	m	struct:audit_parent	typeref:struct:audit_parent::list_head	file:
watermark	events/internal.h	/^	long				watermark;	\/* wakeup watermark  *\/$/;"	m	struct:ring_buffer
wd_hw_attr	watchdog.c	/^static struct perf_event_attr wd_hw_attr = {$/;"	v	typeref:struct:perf_event_attr	file:
web_data	swap/webprobe/webprobe_prof.c	/^static struct web_prof_data *web_data;$/;"	v	typeref:struct:web_prof_data	file:
web_entry_handler	swap/webprobe/webprobe.c	/^static int web_entry_handler(struct uretprobe_instance *ri,$/;"	f	file:
web_func_inst_add	swap/webprobe/webprobe_prof.c	/^static int web_func_inst_add(unsigned long addr)$/;"	f	file:
web_func_inst_remove	swap/webprobe/webprobe_prof.c	/^int web_func_inst_remove(unsigned long addr)$/;"	f
web_msg_entry	swap/webprobe/web_msg.c	/^void web_msg_entry(struct pt_regs *regs)$/;"	f
web_msg_exit	swap/webprobe/web_msg.c	/^void web_msg_exit(struct pt_regs *regs)$/;"	f
web_prof_addr	swap/webprobe/webprobe_prof.c	/^unsigned long web_prof_addr(enum web_prof_addr_t type)$/;"	f
web_prof_addr_ptr	swap/webprobe/webprobe_prof.c	/^u64 *web_prof_addr_ptr(enum web_prof_addr_t type)$/;"	f
web_prof_addr_t	swap/webprobe/webprobe_prof.h	/^enum web_prof_addr_t {$/;"	g
web_prof_data	swap/webprobe/webprobe_prof.c	/^struct web_prof_data {$/;"	s	file:
web_prof_data_set	swap/webprobe/webprobe_prof.c	/^int web_prof_data_set(char *app_path, char *app_id)$/;"	f
web_prof_disable	swap/webprobe/webprobe_prof.c	/^int web_prof_disable(void)$/;"	f
web_prof_enable	swap/webprobe/webprobe_prof.c	/^int web_prof_enable(void)$/;"	f
web_prof_enabled	swap/webprobe/webprobe_prof.c	/^enum web_prof_state_t web_prof_enabled(void)$/;"	f
web_prof_exit	swap/webprobe/webprobe_prof.c	/^void web_prof_exit(void)$/;"	f
web_prof_init	swap/webprobe/webprobe_prof.c	/^int web_prof_init(void)$/;"	f
web_prof_lib_dentry	swap/webprobe/webprobe_prof.c	/^struct dentry *web_prof_lib_dentry(void)$/;"	f
web_prof_state_t	swap/webprobe/webprobe_prof.h	/^enum web_prof_state_t {$/;"	g
web_ret_handler	swap/webprobe/webprobe.c	/^static int web_ret_handler(struct uretprobe_instance *ri, struct pt_regs *regs)$/;"	f	file:
webapp_path	swap/wsp/wsp.c	/^static const char webapp_path[] = "\/usr\/bin\/WebProcess";$/;"	v	file:
webprobe_cleanup	swap/webprobe/webprobe.c	/^static void webprobe_cleanup(struct probe_info *probe_i)$/;"	f	file:
webprobe_copy	swap/webprobe/webprobe.c	/^static int webprobe_copy(struct probe_info *dest,$/;"	f	file:
webprobe_debugfs_exit	swap/webprobe/webprobe_debugfs.c	/^void webprobe_debugfs_exit(void)$/;"	f
webprobe_debugfs_init	swap/webprobe/webprobe_debugfs.c	/^int webprobe_debugfs_init(void)$/;"	f
webprobe_dir	swap/webprobe/webprobe_debugfs.c	/^static struct dentry *webprobe_dir;$/;"	v	typeref:struct:dentry	file:
webprobe_get_uprobe	swap/webprobe/webprobe.c	/^static struct uprobe *webprobe_get_uprobe(struct us_ip *ip)$/;"	f	file:
webprobe_iface	swap/webprobe/webprobe.c	/^static struct probe_iface webprobe_iface = {$/;"	v	typeref:struct:probe_iface	file:
webprobe_init	swap/webprobe/webprobe.c	/^static void webprobe_init(struct us_ip *ip)$/;"	f	file:
webprobe_module_exit	swap/webprobe/webprobe.c	/^static void webprobe_module_exit(void)$/;"	f	file:
webprobe_module_init	swap/webprobe/webprobe.c	/^static int webprobe_module_init(void)$/;"	f	file:
webprobe_register_probe	swap/webprobe/webprobe.c	/^static int webprobe_register_probe(struct us_ip *ip)$/;"	f	file:
webprobe_uninit	swap/webprobe/webprobe.c	/^static void webprobe_uninit(struct us_ip *ip)$/;"	f	file:
webprobe_unregister_probe	swap/webprobe/webprobe.c	/^static void webprobe_unregister_probe(struct us_ip *ip, int disarm)$/;"	f	file:
weighted_cpuload	sched/fair.c	/^static unsigned long weighted_cpuload(const int cpu)$/;"	f	file:
what2act	trace/blktrace.c	/^} what2act[] = {$/;"	v	typeref:struct:__anon84	file:
whence	swap/ks_features/file_ops.c	/^	int whence;$/;"	m	struct:lock_arg	file:
whence	swap/ks_features/ksf_msg.c	/^	u32 whence;$/;"	m	struct:lock_arg	file:
while_for_each_event_file	trace/trace_events.c	65;"	d	file:
while_for_each_ftrace_op	trace/ftrace.c	139;"	d	file:
while_for_each_ftrace_rec	trace/ftrace.c	1506;"	d	file:
will_become_orphaned_pgrp	exit.c	/^static int will_become_orphaned_pgrp(struct pid *pgrp, struct task_struct *ignored_task)$/;"	f	file:
willexecute_addr	swap/webprobe/webprobe_prof.c	/^	u64 willexecute_addr;$/;"	m	struct:web_prof_data	file:
willexecute_addr_local	swap/webprobe/webprobe.c	/^static unsigned long willexecute_addr_local;$/;"	v	file:
within	gcov/base.c	/^static inline int within(void *addr, void *start, unsigned long size)$/;"	f	file:
within	lockdep.c	/^static inline int within(const void *addr, void *start, unsigned long size)$/;"	f	file:
within	module.c	/^static inline int within(unsigned long addr, void *start, unsigned long size)$/;"	f	file:
wlist	audit_watch.c	/^	struct list_head	wlist;	\/* entry in parent->watches list *\/$/;"	m	struct:audit_watch	typeref:struct:audit_watch::list_head	file:
wm_i	swap/us_manager/probes/probes.h	/^		struct write_msg_info wm_i;$/;"	m	union:probe_info::__anon56	typeref:struct:probe_info::__anon56::write_msg_info
wo_flags	exit.c	/^	int			wo_flags;$/;"	m	struct:wait_opts	file:
wo_info	exit.c	/^	struct siginfo __user	*wo_info;$/;"	m	struct:wait_opts	typeref:struct:wait_opts::__user	file:
wo_pid	exit.c	/^	struct pid		*wo_pid;$/;"	m	struct:wait_opts	typeref:struct:wait_opts::pid	file:
wo_rusage	exit.c	/^	struct rusage __user	*wo_rusage;$/;"	m	struct:wait_opts	typeref:struct:wait_opts::__user	file:
wo_stat	exit.c	/^	int __user		*wo_stat;$/;"	m	struct:wait_opts	file:
wo_type	exit.c	/^	enum pid_type		wo_type;$/;"	m	struct:wait_opts	typeref:enum:wait_opts::pid_type	file:
work	async.c	/^	struct work_struct	work;$/;"	m	struct:async_entry	typeref:struct:async_entry::work_struct	file:
work	events/internal.h	/^	struct work_struct		work;$/;"	m	struct:ring_buffer	typeref:struct:ring_buffer::work_struct
work	kthread.c	/^	struct kthread_work	work;$/;"	m	struct:kthread_flush_work	typeref:struct:kthread_flush_work::kthread_work	file:
work	time/alarmtimer.c	/^struct work_struct work;$/;"	v	typeref:struct:work_struct
work	trace/ring_buffer.c	/^	struct irq_work			work;$/;"	m	struct:rb_irq_work	typeref:struct:rb_irq_work::irq_work	file:
work	workqueue.c	/^	struct work_struct	work;$/;"	m	struct:wq_barrier	typeref:struct:wq_barrier::work_struct	file:
work	workqueue.c	/^	struct work_struct work;$/;"	m	struct:work_for_cpu	typeref:struct:work_for_cpu::work_struct	file:
work_busy	workqueue.c	/^EXPORT_SYMBOL_GPL(work_busy);$/;"	v
work_busy	workqueue.c	/^unsigned int work_busy(struct work_struct *work)$/;"	f
work_color	workqueue.c	/^	int			work_color;	\/* L: current color *\/$/;"	m	struct:pool_workqueue	file:
work_color	workqueue.c	/^	int			work_color;	\/* WQ: current work color *\/$/;"	m	struct:workqueue_struct	file:
work_color_to_flags	workqueue.c	/^static unsigned int work_color_to_flags(int color)$/;"	f	file:
work_debug_descr	workqueue.c	/^static struct debug_obj_descr work_debug_descr = {$/;"	v	typeref:struct:debug_obj_descr	file:
work_debug_descr	workqueue.c	/^static struct debug_obj_descr work_debug_descr;$/;"	v	typeref:struct:debug_obj_descr	file:
work_debug_hint	workqueue.c	/^static void *work_debug_hint(void *addr)$/;"	f	file:
work_exited	task_work.c	/^static struct callback_head work_exited; \/* all we need is ->next == NULL *\/$/;"	v	typeref:struct:callback_head	file:
work_fixup_activate	workqueue.c	/^static int work_fixup_activate(void *addr, enum debug_obj_state state)$/;"	f	file:
work_fixup_free	workqueue.c	/^static int work_fixup_free(void *addr, enum debug_obj_state state)$/;"	f	file:
work_fixup_init	workqueue.c	/^static int work_fixup_init(void *addr, enum debug_obj_state state)$/;"	f	file:
work_for_cpu	workqueue.c	/^struct work_for_cpu {$/;"	s	file:
work_for_cpu_fn	workqueue.c	/^static void work_for_cpu_fn(struct work_struct *work)$/;"	f	file:
work_is_canceling	workqueue.c	/^static bool work_is_canceling(struct work_struct *work)$/;"	f	file:
work_next_color	workqueue.c	/^static int work_next_color(int color)$/;"	f	file:
work_on_cpu	workqueue.c	/^EXPORT_SYMBOL_GPL(work_on_cpu);$/;"	v
work_on_cpu	workqueue.c	/^long work_on_cpu(int cpu, long (*fn)(void *), void *arg)$/;"	f
worker	workqueue_internal.h	/^struct worker {$/;"	s
worker_clr_flags	workqueue.c	/^static inline void worker_clr_flags(struct worker *worker, unsigned int flags)$/;"	f	file:
worker_enter_idle	workqueue.c	/^static void worker_enter_idle(struct worker *worker)$/;"	f	file:
worker_idr	workqueue.c	/^	struct idr		worker_idr;	\/* MG: worker IDs and iteration *\/$/;"	m	struct:worker_pool	typeref:struct:worker_pool::idr	file:
worker_leave_idle	workqueue.c	/^static void worker_leave_idle(struct worker *worker)$/;"	f	file:
worker_pool	workqueue.c	/^struct worker_pool {$/;"	s	file:
worker_pool_assign_id	workqueue.c	/^static int worker_pool_assign_id(struct worker_pool *pool)$/;"	f	file:
worker_set_flags	workqueue.c	/^static inline void worker_set_flags(struct worker *worker, unsigned int flags,$/;"	f	file:
worker_thread	workqueue.c	/^static int worker_thread(void *__worker)$/;"	f	file:
worklist	workqueue.c	/^	struct list_head	worklist;	\/* L: list of pending works *\/$/;"	m	struct:worker_pool	typeref:struct:worker_pool::list_head	file:
workqueue_congested	workqueue.c	/^EXPORT_SYMBOL_GPL(workqueue_congested);$/;"	v
workqueue_congested	workqueue.c	/^bool workqueue_congested(int cpu, struct workqueue_struct *wq)$/;"	f
workqueue_cpu_down_callback	workqueue.c	/^static int __cpuinit workqueue_cpu_down_callback(struct notifier_block *nfb,$/;"	f	file:
workqueue_cpu_up_callback	workqueue.c	/^static int __cpuinit workqueue_cpu_up_callback(struct notifier_block *nfb,$/;"	f	file:
workqueue_freezing	workqueue.c	/^static bool workqueue_freezing;		\/* PL: have wqs started freezing? *\/$/;"	v	file:
workqueue_set_max_active	workqueue.c	/^EXPORT_SYMBOL_GPL(workqueue_set_max_active);$/;"	v
workqueue_set_max_active	workqueue.c	/^void workqueue_set_max_active(struct workqueue_struct *wq, int max_active)$/;"	f
workqueue_struct	workqueue.c	/^struct workqueue_struct {$/;"	s	file:
workqueue_sysfs_register	workqueue.c	/^int workqueue_sysfs_register(struct workqueue_struct *wq)$/;"	f
workqueue_sysfs_unregister	workqueue.c	/^static void workqueue_sysfs_unregister(struct workqueue_struct *wq)	{ }$/;"	f	file:
workqueue_sysfs_unregister	workqueue.c	/^static void workqueue_sysfs_unregister(struct workqueue_struct *wq)$/;"	f	file:
works	stop_machine.c	/^	struct list_head	works;		\/* list of pending works *\/$/;"	m	struct:cpu_stopper	typeref:struct:cpu_stopper::list_head	file:
wq	workqueue.c	/^	struct workqueue_struct		*wq;$/;"	m	struct:wq_device	typeref:struct:wq_device::workqueue_struct	file:
wq	workqueue.c	/^	struct workqueue_struct *wq;		\/* I: the owning workqueue *\/$/;"	m	struct:pool_workqueue	typeref:struct:pool_workqueue::workqueue_struct	file:
wq_barrier	workqueue.c	/^struct wq_barrier {$/;"	s	file:
wq_barrier_func	workqueue.c	/^static void wq_barrier_func(struct work_struct *work)$/;"	f	file:
wq_calc_node_cpumask	workqueue.c	/^static bool wq_calc_node_cpumask(const struct workqueue_attrs *attrs, int node,$/;"	f	file:
wq_clamp_max_active	workqueue.c	/^static int wq_clamp_max_active(int max_active, unsigned int flags,$/;"	f	file:
wq_cpumask_show	workqueue.c	/^static ssize_t wq_cpumask_show(struct device *dev,$/;"	f	file:
wq_cpumask_store	workqueue.c	/^static ssize_t wq_cpumask_store(struct device *dev,$/;"	f	file:
wq_dev	workqueue.c	/^	struct wq_device	*wq_dev;	\/* I: for sysfs interface *\/$/;"	m	struct:workqueue_struct	typeref:struct:workqueue_struct::wq_device	file:
wq_device	workqueue.c	/^struct wq_device {$/;"	s	file:
wq_device_release	workqueue.c	/^static void wq_device_release(struct device *dev)$/;"	f	file:
wq_disable_numa	workqueue.c	/^static bool wq_disable_numa;$/;"	v	file:
wq_flusher	workqueue.c	/^struct wq_flusher {$/;"	s	file:
wq_max_active_show	workqueue.c	/^static ssize_t wq_max_active_show(struct device *dev,$/;"	f	file:
wq_max_active_store	workqueue.c	/^static ssize_t wq_max_active_store(struct device *dev,$/;"	f	file:
wq_nice_show	workqueue.c	/^static ssize_t wq_nice_show(struct device *dev, struct device_attribute *attr,$/;"	f	file:
wq_nice_store	workqueue.c	/^static ssize_t wq_nice_store(struct device *dev, struct device_attribute *attr,$/;"	f	file:
wq_numa_enabled	workqueue.c	/^static bool wq_numa_enabled;		\/* unbound NUMA affinity enabled *\/$/;"	v	file:
wq_numa_init	workqueue.c	/^static void __init wq_numa_init(void)$/;"	f	file:
wq_numa_possible_cpumask	workqueue.c	/^static cpumask_var_t *wq_numa_possible_cpumask;$/;"	v	file:
wq_numa_show	workqueue.c	/^static ssize_t wq_numa_show(struct device *dev, struct device_attribute *attr,$/;"	f	file:
wq_numa_store	workqueue.c	/^static ssize_t wq_numa_store(struct device *dev, struct device_attribute *attr,$/;"	f	file:
wq_numa_tbl_len	workqueue.c	/^static int wq_numa_tbl_len;		\/* highest possible NUMA node id + 1 *\/$/;"	v	file:
wq_per_cpu_show	workqueue.c	/^static ssize_t wq_per_cpu_show(struct device *dev,$/;"	f	file:
wq_pool_ids_show	workqueue.c	/^static ssize_t wq_pool_ids_show(struct device *dev,$/;"	f	file:
wq_power_efficient	workqueue.c	/^static bool wq_power_efficient = true;$/;"	v	file:
wq_power_efficient	workqueue.c	/^static bool wq_power_efficient;$/;"	v	file:
wq_subsys	workqueue.c	/^static struct bus_type wq_subsys = {$/;"	v	typeref:struct:bus_type	file:
wq_sysfs_attrs	workqueue.c	/^static struct device_attribute wq_sysfs_attrs[] = {$/;"	v	typeref:struct:device_attribute	file:
wq_sysfs_init	workqueue.c	/^core_initcall(wq_sysfs_init);$/;"	v
wq_sysfs_init	workqueue.c	/^static int __init wq_sysfs_init(void)$/;"	f	file:
wq_sysfs_prep_attrs	workqueue.c	/^static struct workqueue_attrs *wq_sysfs_prep_attrs(struct workqueue_struct *wq)$/;"	f	file:
wq_sysfs_unbound_attrs	workqueue.c	/^static struct device_attribute wq_sysfs_unbound_attrs[] = {$/;"	v	typeref:struct:device_attribute	file:
wq_unbind_fn	workqueue.c	/^static void wq_unbind_fn(struct work_struct *work)$/;"	f	file:
wq_update_unbound_numa	workqueue.c	/^static void wq_update_unbound_numa(struct workqueue_struct *wq, int cpu,$/;"	f	file:
wq_update_unbound_numa_attrs_buf	workqueue.c	/^static struct workqueue_attrs *wq_update_unbound_numa_attrs_buf;$/;"	v	typeref:struct:workqueue_attrs	file:
wq_worker_sleeping	workqueue.c	/^struct task_struct *wq_worker_sleeping(struct task_struct *task, int cpu)$/;"	f
wq_worker_waking_up	workqueue.c	/^void wq_worker_waking_up(struct task_struct *task, int cpu)$/;"	f
wqattrs_equal	workqueue.c	/^static bool wqattrs_equal(const struct workqueue_attrs *a,$/;"	f	file:
wqattrs_hash	workqueue.c	/^static u32 wqattrs_hash(const struct workqueue_attrs *attrs)$/;"	f	file:
wqh	cgroup.c	/^	wait_queue_head_t *wqh;$/;"	m	struct:cgroup_event	file:
wrap_max	sched/clock.c	/^static inline u64 wrap_max(u64 x, u64 y)$/;"	f	file:
wrap_min	sched/clock.c	/^static inline u64 wrap_min(u64 x, u64 y)$/;"	f	file:
write	trace/ring_buffer.c	/^	local_t		 write;		\/* index for next write *\/$/;"	m	struct:buffer_page	file:
write_app_info	swap/webprobe/webprobe_debugfs.c	/^static ssize_t write_app_info(struct file *file, const char __user *user_buf,$/;"	f	file:
write_cmd	swap/nsp/nsp_debugfs.c	/^static ssize_t write_cmd(struct file *file, const char __user *user_buf,$/;"	f	file:
write_cmd	swap/wsp/wsp_debugfs.c	/^static ssize_t write_cmd(struct file *file, const char __user *user_buf,$/;"	f	file:
write_data_current	swap/kprobe/swap_kprobes_deps.c	/^static void write_data_current(unsigned long addr, void *buf, int len)$/;"	f	file:
write_enable	swap/master/swap_debugfs.c	/^static ssize_t write_enable(struct file *file, const char __user *user_buf,$/;"	f	file:
write_enabled	swap/nsp/nsp_debugfs.c	/^static ssize_t write_enabled(struct file *file, const char \/*__user*\/ *user_buf,$/;"	f	file:
write_enabled	swap/webprobe/webprobe_debugfs.c	/^static ssize_t write_enabled(struct file *file, const char __user *user_buf,$/;"	f	file:
write_enabled	swap/wsp/wsp_debugfs.c	/^static ssize_t write_enabled(struct file *file, const char __user *user_buf,$/;"	f	file:
write_enabled_file_bool	kprobes.c	/^static ssize_t write_enabled_file_bool(struct file *file,$/;"	f	file:
write_filter	swap/writer/debugfs_writer.c	/^static ssize_t write_filter(struct file *file, const char __user *user_buf,$/;"	f	file:
write_irq_affinity	irq/proc.c	/^static ssize_t write_irq_affinity(int type, struct file *file,$/;"	f	file:
write_iteration	trace/ring_buffer_benchmark.c	/^static int write_iteration = 50;$/;"	v	file:
write_mem_msg	debug/gdbstub.c	/^static int write_mem_msg(int binary)$/;"	f	file:
write_msg_handler	swap/preload/preload_module.c	/^static int write_msg_handler(struct kprobe *p, struct pt_regs *regs)$/;"	f	file:
write_msg_iface	swap/preload/preload_probe.c	/^static struct probe_iface write_msg_iface = {$/;"	v	typeref:struct:probe_iface	file:
write_msg_info	swap/preload/preload_probe.h	/^struct write_msg_info {$/;"	s
write_msg_init	swap/preload/preload_probe.c	/^static void write_msg_init(struct us_ip *ip)$/;"	f	file:
write_msg_uninit	swap/preload/preload_probe.c	/^static void write_msg_uninit(struct us_ip *ip)$/;"	f	file:
write_opcode	events/uprobes.c	/^static int write_opcode(struct mm_struct *mm, unsigned long vaddr,$/;"	f	file:
write_page	power/swap.c	/^static int write_page(void *buf, sector_t offset, struct bio **bio_chain)$/;"	f	file:
write_proc_vm_atomic	swap/kprobe/swap_kprobes_deps.h	107;"	d
write_profile	profile.c	/^static ssize_t write_profile(struct file *file, const char __user *buf,$/;"	f	file:
write_queue	swap/buffer/buffer_queue.c	/^struct queue_t write_queue = {$/;"	v	typeref:struct:queue_t
write_raw	swap/writer/debugfs_writer.c	/^static ssize_t write_raw(struct file *file, const char __user *user_buf,$/;"	f	file:
write_stamp	trace/ring_buffer.c	/^	u64				write_stamp;$/;"	m	struct:ring_buffer_per_cpu	file:
write_to_module	swap/kprobe/arch/arm/swap-asm/memory_rwx.c	/^static void write_to_module(unsigned long addr, unsigned long val)$/;"	f	file:
write_u32	swap/kprobe/arch/arm/swap-asm/swap_kprobes.c	/^static void write_u32(unsigned long addr, unsigned long val)$/;"	f	file:
writer_dir	swap/writer/debugfs_writer.c	/^static struct dentry *writer_dir;$/;"	v	typeref:struct:dentry	file:
writer_task	rcutorture.c	/^static struct task_struct *writer_task;$/;"	v	typeref:struct:task_struct	file:
wrk	power/swap.c	/^	unsigned char wrk[LZO1X_1_MEM_COMPRESS];  \/* compression workspace *\/$/;"	m	struct:cmp_data	file:
wrt_launcher_port	swap/parser/msg_cmd.c	/^static int wrt_launcher_port;$/;"	v	file:
ws	power/sleep_history.c	/^	struct slp_ws ws;$/;"	m	union:wakeup_history	typeref:struct:wakeup_history::slp_ws	file:
ws	power/sleep_history.c	/^	union wakeup_history ws;$/;"	m	struct:sleep_history	typeref:union:sleep_history::wakeup_history	file:
ws	time/alarmtimer.c	/^static struct wakeup_source *ws;$/;"	v	typeref:struct:wakeup_source	file:
wsp_app_register	swap/wsp/wsp.c	/^static int wsp_app_register(void)$/;"	f	file:
wsp_app_unregister	swap/wsp/wsp.c	/^static void wsp_app_unregister(void)$/;"	f	file:
wsp_bin	swap/wsp/wsp.c	/^struct wsp_bin {$/;"	s	file:
wsp_bin_register	swap/wsp/wsp.c	/^static int wsp_bin_register(struct pf_group *pfg, struct wsp_bin *bin)$/;"	f	file:
wsp_bin_unregister	swap/wsp/wsp.c	/^static void wsp_bin_unregister(struct pf_group *pfg, struct wsp_bin *bin)$/;"	f	file:
wsp_current_get_stat	swap/wsp/wsp_res.c	/^enum tdata_stat wsp_current_get_stat(void)$/;"	f
wsp_current_set_stat	swap/wsp/wsp_res.c	/^void wsp_current_set_stat(enum tdata_stat stat)$/;"	f
wsp_debugfs_exit	swap/wsp/wsp_debugfs.c	/^void wsp_debugfs_exit(void)$/;"	f
wsp_debugfs_init	swap/wsp/wsp_debugfs.c	/^int wsp_debugfs_init(void)$/;"	f
wsp_dir	swap/wsp/wsp_debugfs.c	/^static struct dentry *wsp_dir;$/;"	v	typeref:struct:dentry	file:
wsp_exit	swap/wsp/wsp.c	/^void wsp_exit(void)$/;"	f
wsp_get_mode	swap/wsp/wsp.c	/^enum wsp_mode wsp_get_mode(void)$/;"	f
wsp_id	swap/wsp/wsp_msg.h	/^enum wsp_id {$/;"	g
wsp_init	swap/wsp/wsp.c	/^int wsp_init(void)$/;"	f
wsp_is_addr_init	swap/wsp/wsp.c	/^static bool wsp_is_addr_init(void)$/;"	f	file:
wsp_mode	swap/wsp/wsp.h	/^enum wsp_mode {$/;"	g
wsp_msg	swap/wsp/wsp_msg.c	/^void wsp_msg(enum wsp_id id, u32 res_id, const char *path)$/;"	f
wsp_probe	swap/wsp/wsp.c	/^struct wsp_probe {$/;"	s	file:
wsp_probe_register	swap/wsp/wsp.c	/^static int wsp_probe_register(struct pf_group *pfg, struct dentry *dentry,$/;"	f	file:
wsp_probe_unregister	swap/wsp/wsp.c	/^static void wsp_probe_unregister(struct pf_group *pfg, struct dentry *dentry,$/;"	f	file:
wsp_res	swap/wsp/wsp_res.h	/^struct wsp_res {$/;"	s
wsp_res_count	swap/wsp/wsp_res.c	/^static atomic_t wsp_res_count;$/;"	v	file:
wsp_res_del	swap/wsp/wsp_res.c	/^void wsp_res_del(struct wsp_res *res)$/;"	f
wsp_res_exit	swap/wsp/wsp_res.c	/^void wsp_res_exit(void)$/;"	f
wsp_res_find	swap/wsp/wsp_res.c	/^struct wsp_res *wsp_res_find(void *ptr, enum wsp_res_t type)$/;"	f
wsp_res_init	swap/wsp/wsp_res.c	/^int wsp_res_init(void)$/;"	f
wsp_res_last	swap/wsp/wsp_res.c	/^struct wsp_res *wsp_res_last(void)$/;"	f
wsp_res_new	swap/wsp/wsp_res.c	/^struct wsp_res *wsp_res_new(void *ptr, enum wsp_res_t type)$/;"	f
wsp_res_stat	swap/wsp/wsp_res.h	/^enum wsp_res_stat {$/;"	g
wsp_res_stat_set_next	swap/wsp/wsp_res.c	/^int wsp_res_stat_set_next(struct wsp_res *res, enum wsp_res_stat stat)$/;"	f
wsp_res_t	swap/wsp/wsp_res.h	/^enum wsp_res_t {$/;"	g
wsp_set_addr	swap/wsp/wsp.c	/^int wsp_set_addr(const char *name, unsigned long offset)$/;"	f
wsp_set_mode	swap/wsp/wsp.c	/^int wsp_set_mode(enum wsp_mode mode)$/;"	f
wsp_tdata	swap/wsp/wsp_res.c	/^struct wsp_tdata {$/;"	s	file:
wsp_tdata_create	swap/wsp/wsp_res.c	/^static struct wsp_tdata *wsp_tdata_create(void)$/;"	f	file:
wsp_tdata_del_res	swap/wsp/wsp_res.c	/^static void wsp_tdata_del_res(struct wsp_res *res)$/;"	f	file:
wsp_tdata_destroy	swap/wsp/wsp_res.c	/^static void wsp_tdata_destroy(struct wsp_tdata *d)$/;"	f	file:
wsp_tdata_find_res	swap/wsp/wsp_res.c	/^struct wsp_res *wsp_tdata_find_res(struct wsp_tdata *data, void *ptr,$/;"	f
wsp_tdata_get_id	swap/wsp/wsp_res.c	/^static int wsp_tdata_get_id(void)$/;"	f	file:
wsp_tdata_last_res	swap/wsp/wsp_res.c	/^static struct wsp_res *wsp_tdata_last_res(struct wsp_tdata *d)$/;"	f	file:
wsp_tdata_new_res	swap/wsp/wsp_res.c	/^static struct wsp_res *wsp_tdata_new_res(struct wsp_tdata *d, void *ptr,$/;"	f	file:
xacct_add_tsk	tsacct.c	/^void xacct_add_tsk(struct taskstats *stats, struct task_struct *p)$/;"	f
xattr_enabled	cgroup.c	/^static inline int xattr_enabled(struct dentry *dentry)$/;"	f	file:
xattrs	cgroup.c	/^	struct simple_xattrs		xattrs;$/;"	m	struct:cfent	typeref:struct:cfent::simple_xattrs	file:
xol_add_vma	events/uprobes.c	/^static int xol_add_vma(struct xol_area *area)$/;"	f	file:
xol_free_insn_slot	events/uprobes.c	/^static void xol_free_insn_slot(struct task_struct *tsk)$/;"	f	file:
xol_get_insn_slot	events/uprobes.c	/^static unsigned long xol_get_insn_slot(struct uprobe *uprobe)$/;"	f	file:
xol_take_insn_slot	events/uprobes.c	/^static unsigned long xol_take_insn_slot(struct xol_area *area)$/;"	f	file:
xtime_update	time/timekeeping.c	/^void xtime_update(unsigned long ticks)$/;"	f
yield	sched/core.c	/^EXPORT_SYMBOL(yield);$/;"	v
yield	sched/core.c	/^void __sched yield(void)$/;"	f
yield_task	sched/sched.h	/^	void (*yield_task) (struct rq *rq);$/;"	m	struct:sched_class
yield_task_fair	sched/fair.c	/^static void yield_task_fair(struct rq *rq)$/;"	f	file:
yield_task_rt	sched/rt.c	/^static void yield_task_rt(struct rq *rq)$/;"	f	file:
yield_task_stop	sched/stop_task.c	/^static void yield_task_stop(struct rq *rq)$/;"	f	file:
yield_to	sched/core.c	/^EXPORT_SYMBOL_GPL(yield_to);$/;"	v
yield_to	sched/core.c	/^bool __sched yield_to(struct task_struct *p, bool preempt)$/;"	f
yield_to_task	sched/sched.h	/^	bool (*yield_to_task) (struct rq *rq, struct task_struct *p, bool preempt);$/;"	m	struct:sched_class
yield_to_task_fair	sched/fair.c	/^static bool yield_to_task_fair(struct rq *rq, struct task_struct *p, bool preempt)$/;"	f	file:
yld_count	sched/sched.h	/^	unsigned int yld_count;$/;"	m	struct:rq
zap_class	lockdep.c	/^static void zap_class(struct lock_class *class)$/;"	f	file:
zap_locks	printk.c	/^static void zap_locks(void)$/;"	f	file:
zap_other_threads	signal.c	/^int zap_other_threads(struct task_struct *p)$/;"	f
zap_pid_ns_processes	pid_namespace.c	/^void zap_pid_ns_processes(struct pid_namespace *pid_ns)$/;"	f
zero	pid_namespace.c	/^static int zero = 0;$/;"	v	file:
zero	sysctl.c	/^static int zero;$/;"	v	file:
zero_cpu_stall_ticks	rcutree_plugin.h	/^static void zero_cpu_stall_ticks(struct rcu_data *rdp)$/;"	f
